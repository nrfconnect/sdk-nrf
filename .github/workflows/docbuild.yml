name: Documentation Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - 'v*-branch'
  push:
    branches:
      - master
      - 'v*-branch'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          path: ncs/nrf
          fetch-depth: 0

      - name: cache-pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-doc-pip

      - name: Install packages
        run: |
          sudo apt-get install -y ninja-build doxygen mscgen plantuml

      - name: Install base dependencies
        working-directory: ncs
        run: |
          sudo pip3 install -U setuptools wheel pip
          pip3 install -r nrf/scripts/requirements-base.txt

      - name: West init and update
        working-directory: ncs
        run: |
          west init -l nrf
          west update
          west zephyr-export

      - name: Install documentation dependencies
        working-directory: ncs
        run: |
          pip3 install -r zephyr/scripts/requirements-doc.txt
          pip3 install -r nrf/scripts/requirements-doc.txt

      - name: Build documentation
        working-directory: ncs/nrf
        run: |
          cmake -GNinja -Bdoc/_build -Sdoc -DSPHINXOPTS_EXTRA="-W"
          ninja -C doc/_build

      - name: Build cache
        working-directory: ncs/nrf
        run: |
            python3 doc/_scripts/cache_create.py -b doc/_build -o cache

      - name: Prepare extra cache files
        working-directory: ncs/nrf/cache
        run: |
          mkdir extra && cd extra

          # Keep root HTML files
          cp ../../doc/_build/html/index.html .
          cp ../../doc/_build/html/versions.json .

          # Create documentation upload files
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "publish2 dev PR-${{ github.event.number }} $file" > monitor.txt
            echo "${{ github.event.number }}" > pr.txt
          else
            # basename will work for both branches and tags
            branch=$(basename "${{ github.ref }}")
            if [[ $branch == "master" ]]; then
              echo "publish2 main latest $file" > monitor.txt
            else
              echo "publish2 main ${branch} $file" > monitor.txt
            fi
          fi

      - name: Archive cache
        uses: actions/upload-artifact@v2
        with:
          name: cache
          path: ncs/nrf/cache
