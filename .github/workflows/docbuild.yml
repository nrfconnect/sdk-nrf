name: Documentation Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - 'v*-branch'
    paths:
      - '.github/workflows/docbuild.yml'
      - '**.rst'
      - '**/Kconfig'
      - 'doc/**'
      - 'include/**'
      - 'scripts/requirements-doc.txt'
      - 'scripts/tools-versions-*.txt'
      - 'west.yml'
  push:
    branches:
      - main
      - 'v*-branch'
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          path: ncs/nrf
          fetch-depth: 0
      - name: cache-pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-doc-pip
  # Doxygen >= 1.8.18 is required. This can be removed once ubuntu-latest ships
  # a compatible version. More details: https://github.com/doxygen/doxygen/issues/7411.
      - name: Install packages
        run: |
          sudo apt update
          sudo apt-get install -y ninja-build mscgen plantuml
          DOXYGEN_VERSION=$(cat ./ncs/nrf/scripts/tools-versions-linux.txt |grep 'doxygen' | sed 's/^.*=//')
          wget --no-verbose "https://github.com/doxygen/doxygen/releases/download/Release_${DOXYGEN_VERSION//./_}/doxygen-${DOXYGEN_VERSION}.linux.bin.tar.gz"
          tar xf doxygen-${DOXYGEN_VERSION}.linux.bin.tar.gz
          echo "${PWD}/doxygen-${DOXYGEN_VERSION}/bin" >> $GITHUB_PATH

      - name: Install base dependencies
        working-directory: ncs
        run: |
          sudo pip3 install -U setuptools wheel pip
          pip3 install -r nrf/scripts/requirements-base.txt

      - name: West init and update
        working-directory: ncs
        run: |
          west init -l nrf
          west update
          west zephyr-export

      - name: Install documentation dependencies
        working-directory: ncs
        run: |
          pip3 install -r zephyr/scripts/requirements-doc.txt -r nrf/scripts/requirements-doc.txt

      - name: Build documentation
        working-directory: ncs/nrf
        run: |
          cmake -GNinja -Bdoc/_build -Sdoc -DSPHINXOPTS_EXTRA="-W"
          ninja -C doc/_build

      - name: Build cache
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'external') }}
        working-directory: ncs/nrf
        run: |
            python3 doc/_scripts/cache_create.py -b doc/_build -o cache

      - name: Prepare extra cache files
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'external') }}
        working-directory: ncs/nrf/cache
        run: |
          mkdir extra && cd extra

          # Keep root HTML files
          cp ../../doc/_build/html/index.html .
          cp ../../doc/_build/html/versions.json .

          # Create documentation upload files
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "publish2 dev PR-${{ github.event.number }} __FILE__" > monitor.txt
            echo "${{ github.event.number }}" > pr.txt
          else
            VERSION_REGEX="^v([0-9a-z\.\-]+)$"
            if [[ ${GITHUB_REF#refs/tags/} =~ $VERSION_REGEX ]]; then
              VERSION=${BASH_REMATCH[1]}
            elif [[ ${GITHUB_REF#refs/heads/} == "main" ]]; then
              VERSION="latest"
            else
              echo "Not a release or latest, skipping publish"
              exit 0
            fi
            echo "publish2 main ${VERSION} __FILE__" > monitor.txt
          fi

      - name: Archive cache
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'external') }}
        uses: actions/upload-artifact@v2
        with:
          name: cache
          path: ncs/nrf/cache
