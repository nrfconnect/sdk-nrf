name: SLM / Nusim Build

on:
  workflow_dispatch:
#  schedule:
#    - cron: "0 0 * * *"

jobs:
  toolchain-check:
    runs-on: ubuntu-latest
    outputs:
      toolchain_id: ${{ steps.docker_image.outputs.TOOLCHAIN_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ncs/nrf
      - name: Docker image
        id: docker_image
        working-directory: ncs/nrf
        run: |
          TOOLCHAIN_ID=$(./scripts/print_toolchain_checksum.sh)
          echo $TOOLCHAIN_ID
          echo "TOOLCHAIN_ID=$TOOLCHAIN_ID" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nrfconnect/sdk-nrf-toolchain:${{ needs.toolchain-check.outputs.toolchain_id }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    needs: toolchain-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ncs/nrf
      - name: West
        working-directory: ncs/nrf
        run: |
          west init -l .
          west config manifest.group-filter +nusim
          west update
      - name: Build SLM nuSIM
        working-directory: ncs/nrf
        run: |
          cat << EOF > app.overlay

          /* Disable UART2 */
          &uart2 {
            status = "disabled";
          };

          &uart0 {
            status = "okay";
            current-speed = <1000000>;
            /delete-property/ hw-flow-control;
          };

          &pinctrl {
            uart0_default: uart0_default {
            group1 {
              psels = <NRF_PSEL(UART_TX, 0, 15)>;
            };
            group2 {
              psels = <NRF_PSEL(UART_RX, 0, 14)>;
            };
          };

          uart0_sleep: uart0_sleep {
            group1 {
              psels = <NRF_PSEL(UART_TX, 0, 15)>,
              <NRF_PSEL(UART_RX, 0, 14)>;
              };
            };
          };

          / {
            chosen {
              ncs,slm-uart = &uart0;
            };
          };

          /* Disable external flash */
          &gd25wb256 {
            status = "disabled";
          };
          EOF

          west build -b nrf9151dk/nrf9151/ns \
              --sysbuild -p  \
              -- -DEXTRA_CONF_FILE=../../../modules/lib/nusim/overlay-nusim.conf \
              -DEXTRA_DTC_OVERLAY_FILE=app.overlay \
              -Dmcuboot_CONFIG_BOOT_FIH_PROFILE_MEDIUM=y \
              -Dmcuboot_CONFIG_MCUBOOT_DOWNGRADE_PREVENTION=y \
              -Dmcuboot_CONFIG_BOOT_SIGNATURE_TYPE_ECDSA_P256=y \
              -Dmcuboot_CONFIG_BOOT_SIGNATURE_TYPE_RSA=n \
              -DCONFIG_LOG=n \
              -DCONFIG_USE_SEGGER_RTT=n \
              -DCONFIG_RTT_CONSOLE=n
