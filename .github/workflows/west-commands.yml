name: NCS west commands

on:
  pull_request:
    branches: [main]
    paths:
      - .github/workflows/west-commands.yml
      - scripts/west_commands/**
      - scripts/requirements-west-ncs-sbom.txt
      - scripts/requirements-extra.txt

permissions:
  contents: read

jobs:
  west_commands_job:
    runs-on: ubuntu-24.04
    name: Run Python checks for west commands on patch series (PR)
    steps:
      - name: Checkout the code
        uses: nrfconnect/action-checkout-west-update@main
        with:
          path: ncs/nrf
          git-fetch-depth: 0

      - name: Cache pip
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Install python dependencies
        working-directory: ncs/nrf
        run: |
          pip3 install -U mypy types-colorama types-editdistance types-PyYAML
          grep -E "west==" scripts/requirements-fixed.txt | cut -f1 -d"#" | cut -d ' ' -f '1'| xargs pip3 install -U
          pip3 show -f west
      - name: Run mypy
        working-directory: ncs/nrf/scripts/west_commands
        run: |
          python3 -m mypy --config-file mypy.ini ncs_west_helpers.py pygit2_helpers.py ncs_commands.py

  run-west-cmds:
    name: Run smoke tests for ncs west commands
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: '3.12'
      - name: Checkout sources
        uses: nrfconnect/action-checkout-west-update@main
        with:
          git-fetch-depth: 0
          path: nrf
      - name: Install requirements(bash)
        shell: bash
        run: |
          pip3 install -r nrf/scripts/requirements-fixed.txt
          pip3 install -r nrf/scripts/requirements-west-ncs-sbom.txt
          pip3 install -r nrf/scripts/requirements-extra.txt
      - name: Install requirements (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r nrf/scripts/requirements-fixed.txt
          python -m pip install -r nrf/scripts/requirements-west-ncs-sbom.txt
          python -m pip install -r nrf/scripts/requirements-extra.txt
      - name: Smoke test ncs-loot & ncs-compare
        shell: bash
        run: |
          west ncs-loot -h
          west ncs-compare -h
      - name: Smoke test ncs-sbom (Ubuntu)
        # macOS is not supported by scancode-toolkit(used in ncs-sbom)
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        shell: bash
        run: |
          west ncs-sbom -h

          # show what scancode-toolkit is default
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            scancode --version
          fi

          # create a dummy file
          echo "/* SPDX-License-Identifier: LicenseRef-Nordic-5-Clause */" > test_file.c

          # run ncs-sbom with scancode-toolkit
          west ncs-sbom \
            --input-files test_file.c \
            --license-detectors scancode-toolkit \
            --output-html scancode_report.html
      - name: Smoke test ncs-sbom (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          # --- show environment trees (Windows style) ---
          $envs = @(
            "pythonLocation",
            "PKG_CONFIG_PATH",
            "Python_ROOT_DIR",
            "Python2_ROOT_DIR",
            "Python3_ROOT_DIR"
          )

          foreach ($e in $envs) {
            $path = (Get-Item "Env:$e").Value
            Write-Host "`n=== $e ==="
            Write-Host $path
            if (Test-Path $path) {
              Write-Host "`n--- Directory tree for $e ---"
              tree $path /F | Out-String | Write-Host
            } else {
              Write-Host "Path not found: $path"
            }
          }

          west ncs-sbom -h

          # create a dummy file
          Set-Content -Path test_file.c -Value '/* SPDX-License-Identifier: LicenseRef-Nordic-5-Clause */'

          # run ncs-sbom with scancode-toolkit
          west ncs-sbom `
            --input-files test_file.c `
            --license-detectors scancode-toolkit `
            --output-html scancode_report.html
