#
# Copyright (c) 2021 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
#

# The Kconfig of the TF-M module in zephyr is split into several files.
# This is done to facilitate providing out-of-tree definitions of these
# symbols. This is typically done to modify what options are exposed, and their
# values. This repo (sdk-nrf) also includes TF-M as a module, and its
# module definition takes presedence over that of zephyr. If TFM_PROFILE_TYPE_MINIMAL
# is not set, we include the top level module Kconfig, which again includes
# all parts of the TF-M module kconfig. If, however, TFM_PROFILE_TYPE_MINIMAL is set,
# only a subset of these kconfig files will be included.

if BUILD_WITH_TFM

config TFM_ISOLATION_LEVEL
	default 1 if SOC_NRF5340_CPUAPP || SOC_SERIES_NRF91X

config TFM_BL2
	bool
	default n

config TFM_REGRESSION_NS
	bool
	select NRF_TIMER0_SECURE

config TFM_SECURE_UART
	bool "TF-M configure UART instance as secure peripheral"
	default y if !TFM_LOG_LEVEL_SILENCE
	help
	  Configure the UART instance as a secure peripheral for TF-M logging.
	  This makes the UART instance unavailable to the non-secure unless
	  TFM_SECURE_UART_SHARE_INSTANCE is enabled.
	  When this option is selected the device tree node for
	  the UART instance needs to be disabled for the non-secure application.

if TFM_SECURE_UART

config TFM_SECURE_UART_SHARE_INSTANCE
	bool
	prompt "Share TF-M's UART instance with the non-secure application"
	depends on !TFM_REGRESSION_S # Secure regressen tests require UART output after boot.
	help
	  Configure the UART instance in TF-M to be shared between TF-M secure
	  firmware and the non-secure application.
	  When enabled, TF-M's logging will be reduced to logging when booting
	  up, and when handling a fatal error.

choice TFM_SECURE_UART_INSTANCE
	prompt "TF-M logging UART instance"
	default TFM_SECURE_UART1

config TFM_SECURE_UART0
	bool "TF-M logging will use UART0 instance"
	select NRF_UARTE0_SECURE
	select TFM_SECURE_UART_SHARE_INSTANCE if NRFX_UARTE0 || HAS_HW_NRF_UARTE0

config TFM_SECURE_UART1
	bool "TF-M logging will use UART1 instance"
	select NRF_UARTE1_SECURE
	select TFM_SECURE_UART_SHARE_INSTANCE if NRFX_UARTE1 || HAS_HW_NRF_UARTE1

endchoice

endif # TFM_SECURE_UART

menu "TF-M UART pins"
	visible if BUILD_WITH_TFM

config TFM_UART0_TXD_PIN
	int "UART0 TXD pin"
	default 29 if BOARD_NRF9160DK_NRF9160_NS
	default 27 if BOARD_NRF9161DK_NRF9161_NS
	default 20 if BOARD_NRF5340DK_NRF5340_CPUAPP_NS
	default 18 if BOARD_THINGY91_NRF9160_NS
	default 4294967295 # 0xffffffff i.e. disconnected
	help
	  The GPIO pin the TFM build system will use for UART0 TXD pin.
	  UART0 is used by TF-M as the log output for the non-secure image.

	  Note: The non-secure image is only ever used when running the
	        TF-M regression tests.

config TFM_UART0_RXD_PIN
	int "UART0 RXD pin"
	default 28 if BOARD_NRF9160DK_NRF9160_NS
	default 26 if BOARD_NRF9161DK_NRF9161_NS
	default 22 if BOARD_NRF5340DK_NRF5340_CPUAPP_NS
	default 19 if BOARD_THINGY91_NRF9160_NS
	default 4294967295 # 0xffffffff i.e. disconnected
	help
	  The GPIO pin the TFM build system will use for UART0 RXD pin.
	  UART0 is used by TF-M as the log output for the non-secure image.

	  Note: The non-secure image is only ever used when running the
	        TF-M regression tests.

config TFM_UART0_RTS_PIN
	int "UART0 RTS pin"
	default 27 if BOARD_NRF9160DK_NRF9160_NS
	default 14 if BOARD_NRF9161DK_NRF9161_NS
	default 19 if BOARD_NRF5340DK_NRF5340_CPUAPP_NS
	default 20 if BOARD_THINGY91_NRF9160_NS
	default 4294967295 # 0xffffffff i.e. disconnected
	help
	  The GPIO pin the TFM build system will use for UART0 RTS pin.
	  UART0 is used by TF-M as the log output for the non-secure image.

	  Note: The non-secure image is only ever used when running the
	        TF-M regression tests.

config TFM_UART0_CTS_PIN
	int "UART0 CTS pin"
	default 26 if BOARD_NRF9160DK_NRF9160_NS
	default 15 if BOARD_NRF9161DK_NRF9161_NS
	default 21 if BOARD_NRF5340DK_NRF5340_CPUAPP_NS
	default 21 if BOARD_THINGY91_NRF9160_NS
	default 4294967295 # 0xffffffff i.e. disconnected
	help
	  The GPIO pin the TFM build system will use for UART0 CTS pin.
	  UART0 is used by TF-M as the log output for the non-secure image.

	  Note: The non-secure image is only ever used when running the
	        TF-M regression tests.

config TFM_UART0_HWFC_ENABLED
	bool "UART0 hardware flow control"
	help
	  Enable hardware flow control on UART0 in the TFM build system.

config TFM_UART1_TXD_PIN
	int "UART1 TXD pin"
	depends on TFM_SECURE_UART1
	default 1 if BOARD_NRF9160DK_NRF9160_NS
	default 29 if BOARD_NRF9161DK_NRF9161_NS
	default 25 if BOARD_NRF5340DK_NRF5340_CPUAPP_NS
	default 22 if BOARD_THINGY91_NRF9160_NS
	default 4294967295 # 0xffffffff i.e. disconnected
	help
	  The GPIO pin the TFM build system will use for UART1 TXD pin.
	  UART1 is used by TF-M as the log output for the secure image.

config TFM_UART1_RXD_PIN
	int "UART1 RXD pin"
	depends on TFM_SECURE_UART1
	default 0 if BOARD_NRF9160DK_NRF9160_NS
	default 28 if BOARD_NRF9161DK_NRF9161_NS
	default 26 if BOARD_NRF5340DK_NRF5340_CPUAPP_NS
	default 23 if BOARD_THINGY91_NRF9160_NS
	default 4294967295 # 0xffffffff i.e. disconnected
	help
	  The GPIO pin the TFM build system will use for UART1 RXD pin.
	  UART1 is used by TF-M as the log output for the secure image.

config TFM_UART1_RTS_PIN
	int "UART1 RTS pin"
	depends on TFM_SECURE_UART1
	default 14 if BOARD_NRF9160DK_NRF9160_NS
	default 16 if BOARD_NRF9161DK_NRF9161_NS
	default 5 if BOARD_NRF5340DK_NRF5340_CPUAPP_NS
	default 24 if BOARD_THINGY91_NRF9160_NS
	default 4294967295 # 0xffffffff i.e. disconnected
	help
	  The GPIO pin the TFM build system will use for UART1 RTS pin.
	  UART1 is used by TF-M as the log output for the secure image.

config TFM_UART1_CTS_PIN
	int "UART1 CTS pin"
	depends on TFM_SECURE_UART1
	default 15 if BOARD_NRF9160DK_NRF9160_NS
	default 17 if BOARD_NRF9161DK_NRF9161_NS
	default 6 if BOARD_NRF5340DK_NRF5340_CPUAPP_NS
	default 25 if BOARD_THINGY91_NRF9160_NS
	default 4294967295 # 0xffffffff i.e. disconnected
	help
	  The GPIO pin the TFM build system will use for UART1 CTS pin.
	  UART1 is used by TF-M as the log output for the secure image.

config TFM_UART1_HWFC_ENABLED
	bool "UART1 hardware flow control"
	help
	  Enable hardware flow control on UART1 in the TFM build system.

endmenu


choice TFM_PROFILE_TYPE
	default TFM_PROFILE_TYPE_MINIMAL

config TFM_PROFILE_TYPE_MINIMAL
	bool "Use minimal TF-M build"
	select PSA_DEFAULT_OFF
	imply TFM_LOG_LEVEL_SILENCE
	help
	  Use minimal TF-M build. This will make the TF-M image fit within 32kB.
	  No configuration of the size of the partition nor the features of the
	  TF-M image can be done when this option is selected. If your application
	  needs a different TF-M configuration you have to disable this option
	  and reproduce the desired configuration through kconfig fragments.
endchoice

config TFM_EXPERIMENTAL
	bool
	select EXPERIMENTAL
	default y if !TFM_PROFILE_TYPE_MINIMAL

config TFM_PARTITION_INITIAL_ATTESTATION
	bool
	default y if !TFM_PROFILE_TYPE_MINIMAL
	depends on TFM_NRF_PROVISIONING
	select PSA_WANT_ALG_SHA_256
	select PSA_WANT_KEY_TYPE_ECC_KEY_PAIR
	select PSA_WANT_ALG_ECDSA
	select PSA_WANT_ECC_SECP_R1_256
	help
	   We select "implementation ID" because it is a mandatory claim
	   in the IAT.
	   The initial attestation partition requires ECDSA algorithm with
	   SHA-256 and uses the Identity Key stored in the KMU.
	   The identity key is a secp256r1 key pair.

config TFM_QCBOR_PATH
	string
	default "$(ZEPHYR_TRUSTED_FIRMWARE_M_MODULE_DIR)/../qcbor"

config TFM_PARTITION_PROTECTED_STORAGE
	bool
	select HW_UNIQUE_KEY
	select PSA_WANT_ALG_HKDF
	select PSA_WANT_ALG_HMAC
	select PSA_WANT_ALG_SHA_256
	select PSA_WANT_KEY_TYPE_AES
	select PSA_WANT_ALG_CCM if SOC_SERIES_NRF91X
	select PSA_WANT_ALG_GCM if SOC_NRF5340_CPUAPP
	help
	  The encryption policy relies on a secret hardware unique key (HUK) per device.
	  The protected storage partition require HKDF with HMAC and SHA-256 to
	  derive the storage key and an AEAD encryption algorithm for storage
	  encryption.

if TFM_PARTITION_CRYPTO

config TFM_CRYPTO_BUILTIN_KEYS
	bool
	prompt "TF-M crypto builtin keys"
	default y
	depends on !TFM_PROFILE_TYPE_MINIMAL
	select PSA_WANT_ALG_HKDF
	select PSA_WANT_ALG_HMAC
	select PSA_WANT_ALG_SHA_256
	help
	  Whether to allow crypto service to store builtin keys.
	  Without this, ALL builtin keys must be stored in a platform-specific location.
	  Builtin keys require HKDF with HMAC and SHA-256 to derive sub-keys.

config TFM_CRYPTO_ENGINE_BUF_SIZE
	int
	prompt "TF-M Crypto - Engine buffer size" if !TFM_PROFILE_TYPE_MINIMAL
	default 1 if TFM_PROFILE_TYPE_MINIMAL
	default 12288 if PSA_NEED_CC3XX_RSA_OAEP || \
		PSA_NEED_CC3XX_RSA_PKCS1V15_CRYPT || \
		PSA_NEED_CC3XX_RSA_PKCS1V15_SIGN
	default 8320
	help
	  Buffer used by Mbed Crypto for its own allocations at runtime.
	  This is a buffer allocated in static memory.
	  To be configured based on the desired use case and application requirements.

config TFM_CRYPTO_CONC_OPER_NUM
	int
	prompt "TF-M Crypto - Number of concurrent operations" if !TFM_PROFILE_TYPE_MINIMAL
	default 1 if TFM_PROFILE_TYPE_MINIMAL
	default 8
	help
	  This parameter defines the maximum number of possible
	  concurrent operation contexts (cipher, MAC, hash and key derivation)
	  for multi-part operations, that can be allocated simultaneously
	  at any time. To be configured based on the desired use case and
	  application requirements.

config TFM_CRYPTO_IOVEC_BUFFER_SIZE
	int
	prompt "TF-M Crypto - PSA FF IO vector buffer size" if !TFM_PROFILE_TYPE_MINIMAL
	default 1024 if TFM_PROFILE_TYPE_MINIMAL
	default 16384 if TFM_REGRESSION_S || TFM_REGRESSION_NS
	default 5120
	help
	  This parameter applies only to IPC model builds. In IPC model,
	  during a Service call, input and outputs are allocated
	  temporarily in an internal scratch buffer whose size is
	  determined by this parameter. To be configured based on the
	  desired use case and application requirements.

config TFM_CRYPTO_PARTITION_STACK_SIZE
	hex
	prompt "TF-M Crypto Partition - Stack size" if !TFM_PROFILE_TYPE_MINIMAL
	default 0x800 if TFM_PROFILE_TYPE_MINIMAL
	default 0x2000
	help
	  The stack size of the Crypto Secure Partition

config TFM_CRYPTO_NV_SEED
	# Hidden option to set value based on TF-M minimal profile
	bool
	default y if !TFM_PROFILE_TYPE_MINIMAL
	help
	  Prompt-less configuration controlling NV Seed support.
	  Not set when TFM_PROFILE_TYPE_MINIMAL is used

endif # TFM_PARTITION_CRYPTO

config TFM_ITS_ENCRYPTED
	bool
	prompt "PSA Internal Trusted Storage with encryption"
	select PSA_ITS_ENCRYPTED
	help
	  Enables authenticated encryption for PSA Internal Trusted Storage files

config TFM_HW_INIT_RESET_ON_BOOT
	bool "Initialize internal architecture state at boot"
	depends on ARCH_SUPPORTS_ARCH_HW_INIT
	help
	  This option instructs TF-M to force the initialization
	  of the internal architectural state (for example ARCH-level
	  HW registers and system control blocks) during boot to
	  the reset values as specified by the corresponding
	  architecture manual. The option is useful when the TF-M
	  image is chain-loaded, for example, by a debugger
	  or a bootloader, and we need to guarantee that the internal
	  states of the architecture core blocks are restored to the
	  reset values (as specified by the architecture).

	  Note: This option is not needed when using an MCUBoot with the
	  CONFIG_MCUBOOT_CLEANUP_ARM_CORE configuration enabled.

config TFM_HW_INIT_NRF_PERIPHERALS
	bool "Initialize peripherals state at boot"
	depends on TFM_HW_INIT_RESET_ON_BOOT
	help
	  This options instructs TF-M to force the initializion of a select set
	  of nRF peripherals to the reset values as specified by the product
	  specification. The option is useful when the TF-M image is
	  chain-loaded, for example, by a debugger or a bootloader, and we need
	  to guarantee that the internal states of the peripheral blocks are
	  restored to the reset values.

	  The set of peripherals that are reset are:
	  - RTC instances 0..2
	  - UARTE instances 0..1
	  - PPI or DPPI
	  - CLOCK

	  Note: This option is not needed when using an MCUBoot with the
	  CONFIG_MCUBOOT_NRF_CLEANUP_PERIPHERAL configuration enabled.

config TFM_HALT_ON_CORE_PANIC
	bool "Halt TF-M on core panic"
	default y if !RESET_ON_FATAL_ERROR
	help
	  On fatal errors in the TF-m secure image, halt instead of rebooting.

config TFM_ALLOW_NON_SECURE_RESET
	bool "Allow system reset calls from Non-Secure"
	select TFM_PARTITION_PLATFORM_CUSTOM_REBOOT if TFM_PARTITION_PLATFORM
	default y
	help
	  This will allow the application running in Non-Secure from being able
	  to issue a system reset of the chip without going through a secure
	  service.

config TFM_S_CODE_VECTOR_TABLE_SIZE
	hex
	default 0x144 if SOC_SERIES_NRF91X
	default 0x154 if SOC_NRF5340_CPUAPP
	default 0xffffffff # Invalid value to discover missing SOC support.
	help
	  The TF-M interrupt vector table size.

config BOOTLOADER_MCUBOOT
	bool
	imply TFM_HW_INIT_RESET_ON_BOOT
	imply TFM_HW_INIT_NRF_PERIPHERALS

endif # BUILD_WITH_TFM

source "$(ZEPHYR_BASE)/modules/trusted-firmware-m/Kconfig.tfm"

if !TFM_PROFILE_TYPE_MINIMAL
# When enabling full TFM support, then partitions and crypto modules shall be available.
source "$(ZEPHYR_BASE)/modules/trusted-firmware-m/Kconfig.tfm.partitions"
source "$(ZEPHYR_BASE)/modules/trusted-firmware-m/Kconfig.tfm.crypto_modules"
endif

if BUILD_WITH_TFM

config PM_PARTITION_SIZE_TFM_SRAM
	hex
	prompt "Memory reserved for TFM_RAM" if !TFM_PROFILE_TYPE_MINIMAL
	default 0x8000 if TFM_PROFILE_TYPE_MINIMAL
	default 0x18000 if SOC_SERIES_NRF91X && TFM_REGRESSION_S
	default 0x16000 if SOC_SERIES_NRF91X
	default 0x40000 if SOC_NRF5340_CPUAPP
	help
	  Memory set aside for the TFM_SRAM partition.

config PM_PARTITION_SIZE_BL2
	hex "Memory reserved for BL2"
	default 0x8000 if TFM_BL2
	default 0
	help
	  Memory set aside for the BL2 partition.

config PM_PARTITION_SIZE_TFM
	hex
	prompt  "Memory reserved for TFM" if !TFM_PROFILE_TYPE_MINIMAL
	default 0xFE00 if TFM_PROFILE_TYPE_MINIMAL && TFM_CMAKE_BUILD_TYPE_DEBUG && \
		BOOTLOADER_MCUBOOT
	default 0x10000 if TFM_PROFILE_TYPE_MINIMAL && TFM_CMAKE_BUILD_TYPE_DEBUG
	default 0x7E00 if TFM_PROFILE_TYPE_MINIMAL && BOOTLOADER_MCUBOOT
	default 0x8000 if TFM_PROFILE_TYPE_MINIMAL
	# NCSDK-13503: Temporarily bump size while regressions are being fixed
	default 0x60000 if TFM_REGRESSION_S
	default 0x4FE00 if TFM_CMAKE_BUILD_TYPE_DEBUG && BOOTLOADER_MCUBOOT
	default 0x50000 if TFM_CMAKE_BUILD_TYPE_DEBUG
	default 0x3FE00 if BOOTLOADER_MCUBOOT
	default 0x40000
	help
	  Memory set aside for the TFM partition. This size is fixed if
	  TFM_PROFILE_TYPE_MINIMAL is set. This is because no modification of the features
	  supported by TF-M can be performed when TFM_PROFILE_TYPE_MINIMAL is enabled.

config PM_PARTITION_SIZE_TFM_PROTECTED_STORAGE
	hex "Memory reserved for TFM Protected Storage"
	default 0x4000 if TFM_PARTITION_PROTECTED_STORAGE
	default 0
	help
	  Memory set aside for the TFM Protected Storage (PS) partition.

config PM_PARTITION_SIZE_TFM_INTERNAL_TRUSTED_STORAGE
	hex "Memory reserved for TFM Internal Trusted Storage"
	default 0x2000 if TFM_PARTITION_INTERNAL_TRUSTED_STORAGE
	default 0
	help
	  Memory set aside for the TFM Internal Trusted Storage (ITS) partition

config PM_PARTITION_SIZE_TFM_OTP_NV_COUNTERS
	hex "Memory reserved for TFM OTP / Non-Volatile Counters"
	default 0x2000 if !TFM_PROFILE_TYPE_MINIMAL
	default 0
	help
	  Memory set aside for the OTP / Non-Volatile (NV) Counters partition

config TFM_STORAGE
	bool
	default y if PM_PARTITION_SIZE_TFM_PROTECTED_STORAGE != 0
	default y if PM_PARTITION_SIZE_TFM_INTERNAL_TRUSTED_STORAGE != 0
	default y if PM_PARTITION_SIZE_TFM_OTP_NV_COUNTERS != 0

config TFM_NRF_PROVISIONING
	bool "Provision the device"
	depends on !TFM_PROFILE_TYPE_MINIMAL
	help
	  Provision the TF-M image. When enabled, TF-M must be in the PSA
	  provisioning lifecycle state in order to boot. See provisioning
	  guide for more details.

endif # BUILD_WITH_TFM
