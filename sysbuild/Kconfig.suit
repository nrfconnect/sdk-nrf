#
# Copyright (c) 2024 Nordic Semiconductor
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
#

menu "SUIT"

menuconfig SUIT_ENVELOPE
	bool "Create SUIT envelope"
	default y if SOC_SERIES_NRF54HX
	help
	  Enable DFU SUIT envelope creation

if SUIT_ENVELOPE

config SUIT_ENVELOPE_SIGN
	bool "Sign created SUIT envelope"
	help
	  Sign created SUIT envelope by external script

config SUIT_ENVELOPE_ROOT_TEMPLATE_FILENAME
	string "Name of the default root envelope template"
	default "root_with_binary_nordic_top.yaml.jinja2"
	help
	  Name of the default root envelope template. The build system searches for a file with this
	  name in the suit/<soc> directory inside the application directory. If the file is not found
	  the default template from the base template directory is used.


config SUIT_ENVELOPE_SIGN_SCRIPT
	string "Location of SUIT sign script"
	depends on SUIT_ENVELOPE_SIGN
	help
	  Python script called to sign SUIT envelope.
	  You can use either absolute or relative path.
	  In case relative path is used, the build system uses NRF parent directory.
	  Script need to accept two arguments:
	  - --input-file <STRING> - location of unsigned envelope in the build system
	  - --output-file <STRING> - location of signed envelope to create by script
	default "modules/lib/suit-generator/ncs/sign_script.py"

config SUIT_ENVELOPE_ROOT_ARTIFACT_NAME
	string "Name of the root SUIT artifact."
	default "root"
	help
	  Name of the root SUIT artifact.

config SUIT_ENVELOPE_NORDIC_TOP_DIRECTORY
	string "Path to the folder with nordic top artifacts"
	default ""
	help
	  Path to the folder containing nordic-top.suit envelope.
	  nordic_top.suit won't be included in the root manifest if value is empty.

config SUIT_BASE_MANIFEST_TEMPLATE_DIR
	string "Base manifest directory"
	default "${ZEPHYR_NRF_MODULE_DIR}/config/suit/templates"
	help
	  Path to the base template directory.

config SUIT_BASE_MANIFEST_VARIANT
	string "Base manifest variant"
	default "default/v1"
	help
	  Base manifest variant used during the build.

config SUIT_MULTI_IMAGE_PACKAGE_BUILD
	bool "Create multi-image DFU for SUIT envelope and cache images"
	help
	  Build DFU Multi Image package that contains a manifest file followed by SUIT envelope
	  and selected cache image files.

endif # SUIT_ENVELOPE

config SUIT_BUILD_RECOVERY
	bool "Build SUIT recovery firmware"
	help
	  Build the recovery firmware, which allows to recover the main application
	  if the image on the board was damaged.

if SUIT_BUILD_RECOVERY

choice SUIT_RECOVERY_APPLICATION
	prompt "Select SUIT recovery application"
	default SUIT_RECOVERY_APPLICATION_DEFAULT

config SUIT_RECOVERY_APPLICATION_DEFAULT
	bool "Use the default recovery application"
	help
	  Use the default recovery application using BluetoothLE and SMP.

endchoice

choice SUIT_RECOVERY_APPLICATION_IMAGE_MANIFEST
	prompt "Select which manifest controls the recovery application FW image"
	default SUIT_RECOVERY_APPLICATION_IMAGE_MANIFEST_APP_LOCAL_3

config SUIT_RECOVERY_APPLICATION_IMAGE_MANIFEST_APP_LOCAL_3
	bool "The recovery application FW image is controlled by APP_LOCAL_3 manifest"

config SUIT_RECOVERY_APPLICATION_IMAGE_MANIFEST_APP_RECOVERY
	bool "The recovery application FW image is controlled directly by APP_RECOVERY manifest"

endchoice

config SUIT_RECOVERY_APPLICATION_PATH
	string
	default "${ZEPHYR_NRF_MODULE_DIR}/samples/suit/recovery" if SUIT_RECOVERY_APPLICATION_DEFAULT
	help
	  Source directory of the SUIT recovery application.

config SUIT_ENVELOPE_APP_RECOVERY_TEMPLATE_FILENAME
	string "Name of the default root envelope template"
	default "app_recovery_envelope_app_local.yaml.jinja2" if SUIT_RECOVERY_APPLICATION_IMAGE_MANIFEST_APP_LOCAL_3
	default "app_recovery_envelope_direct.yaml.jinja2" if SUIT_RECOVERY_APPLICATION_IMAGE_MANIFEST_APP_RECOVERY
	help
	  Name of the default application recovery envelope template. This also has a role of the
	  recovery firmware root envelope template.
	  The build system first searches for a file with this name in the suit/<soc> directory inside
	  the application directory, then in the recovery application suit/<soc> directory.
	  If the file is not found the default template from the base template directory is used.

config SUIT_ENVELOPE_APP_RECOVERY_ARTIFACT_NAME
	string "Name of the root recovery manifest SUIT artifact."
	default "app_recovery"
	help
	  Name of the root SUIT artifact.

endif # SUIT_BUILD_RECOVERY

config SUIT_BUILD_FLASH_COMPANION
	bool "Build SUIT flash companion firmware"
	help
	  Build the flash companion firmware, which acts as a proxy for the secure domain
	  firmware to read and write to the external memory.

if SUIT_BUILD_FLASH_COMPANION

config FLASH_COMPANION_TARGET_CPUCLUSTER
	string "Flash companion target cluster"
	default "cpuapp"  if SOC_SERIES_NRF54HX
	help
	  Set the target CPU cluster on which the companion firmware will run.

endif # SUIT_BUILD_FLASH_COMPANION

endmenu
