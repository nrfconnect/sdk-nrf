/*

{License}

*/

#ifndef NPM1300_H
#define NPM1300_H

#ifdef __cplusplus
    extern "C" {
#endif

/* ====================================================== Include types ====================================================== */
#include "npm1300_types.h"

/* ========================================= Start of section using anonymous unions ========================================= */

#include "compiler_abstraction.h"

#if defined (__CC_ARM)
  #pragma anon_unions
#elif defined (__ICCARM__)
  #pragma language=extended
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wc11-extensions"
  #pragma clang diagnostic ignored "-Wreserved-id-macro"
  #pragma clang diagnostic ignored "-Wgnu-anonymous-struct"
  #pragma clang diagnostic ignored "-Wnested-anon-types"
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning 586
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#else
  #warning Unsupported compiler type
#endif

/* =========================================================================================================================== */
/* ================                                    Peripherals Section                                    ================ */
/* =========================================================================================================================== */


/* =========================================================================================================================== */
/* ================                                       ABSMAXRATINGS                                       ================ */
/* =========================================================================================================================== */

/* ================================================== Struct ABSMAXRATINGS =================================================== */
/**
  * @brief abs_max_ratings
  */
typedef struct {                                     /*!< ABSMAXRATINGS Structure                                              */
  __IM  uint32_t  RESERVED;
} __PACKED NPM_ABSMAXRATINGS_Type;                   /*!< Size = 4 (0x004)                                                     */


/* =========================================================================================================================== */
/* ================                                           MAIN                                           ================ */
/* =========================================================================================================================== */

/* ======================================================= Struct MAIN ======================================================= */
/**
  * @brief Neutrino MAIN Registers
  */
typedef struct {                                     /*!< MAIN Structure                                                       */
  __IOM uint8_t   SWREADY;                           /*!< (@ 0x00000000) Software takes control                                */
  __OM  uint8_t   TASKSWRESET;                       /*!< (@ 0x00000001) Task Force a full reboot power-cycle                  */
  __IOM uint8_t   EVENTSADCSET;                      /*!< (@ 0x00000002) ADC Events Event Set                                  */
  __IOM uint8_t   EVENTSADCCLR;                      /*!< (@ 0x00000003) ADC Events Event Clear                                */
  __IOM uint8_t   INTENEVENTSADCSET;                 /*!< (@ 0x00000004) ADC Events Interrupt Enable Set                       */
  __IOM uint8_t   INTENEVENTSADCCLR;                 /*!< (@ 0x00000005) ADC Events Interrupt Enable Clear                     */
  __IOM uint8_t   EVENTSBCHARGER0SET;                /*!< (@ 0x00000006) Battery Charger Temperature Events Event Set          */
  __IOM uint8_t   EVENTSBCHARGER0CLR;                /*!< (@ 0x00000007) Battery Charger Temperature Events Event Clear        */
  __IOM uint8_t   INTENEVENTSBCHARGER0SET;           /*!< (@ 0x00000008) Battery Charger Temperature Events Interrupt Enable
                                                                         Set*/                                                    
  __IOM uint8_t   INTENEVENTSBCHARGER0CLR;           /*!< (@ 0x00000009) Battery Charger Temperature Events Interrupt Enable
                                                                         Clear*/                                                  
  __IOM uint8_t   EVENTSBCHARGER1SET;                /*!< (@ 0x0000000A) Battery Charger Status Events Event Set               */
  __IOM uint8_t   EVENTSBCHARGER1CLR;                /*!< (@ 0x0000000B) Battery Charger Status Events Event Clear             */
  __IOM uint8_t   INTENEVENTSBCHARGER1SET;           /*!< (@ 0x0000000C) Battery Charger Status Events Interrupt Enable Set    */
  __IOM uint8_t   INTENEVENTSBCHARGER1CLR;           /*!< (@ 0x0000000D) Battery Charger Status Events Interrupt Enable Clear  */
  __IOM uint8_t   EVENTSBCHARGER2SET;                /*!< (@ 0x0000000E) Battery Charger Battery Events Event Set              */
  __IOM uint8_t   EVENTSBCHARGER2CLR;                /*!< (@ 0x0000000F) Battery Charger Battery Events Event Clear            */
  __IOM uint8_t   INTENEVENTSBCHARGER2SET;           /*!< (@ 0x00000010) Battery Charger Battery Events Interrupt Enable Set   */
  __IOM uint8_t   INTENEVENTSBCHARGER2CLR;           /*!< (@ 0x00000011) Battery Charger Battery Events Interrupt Enable Clear */
  __IOM uint8_t   EVENTSSHPHLDSET;                   /*!< (@ 0x00000012) ShipHold pin Events Event Set                         */
  __IOM uint8_t   EVENTSSHPHLDCLR;                   /*!< (@ 0x00000013) ShipHold pin Events Event Clear                       */
  __IOM uint8_t   INTENEVENTSSHPHLDSET;              /*!< (@ 0x00000014) ShipHold pin Events Interrupt Enable Set              */
  __IOM uint8_t   INTENEVENTSSHPHLDCLR;              /*!< (@ 0x00000015) ShipHold pin Events Interrupt Enable Clear            */
  __IOM uint8_t   EVENTSVBUSIN0SET;                  /*!< (@ 0x00000016) VBUSIN Voltage Detection Events Event Set             */
  __IOM uint8_t   EVENTSVBUSIN0CLR;                  /*!< (@ 0x00000017) VBUSIN Voltage Detection Events Event Clear           */
  __IOM uint8_t   INTENEVENTSVBUSIN0SET;             /*!< (@ 0x00000018) VBUSIN Voltage Detection Events Interrupt Enable Set  */
  __IOM uint8_t   INTENEVENTSVBUSIN0CLR;             /*!< (@ 0x00000019) VBUSIN Voltage Detection Events Interrupt Enable Clear*/
  __IOM uint8_t   EVENTSVBUSIN1SET;                  /*!< (@ 0x0000001A) VBUSIN Thermal and USB Events Event Set               */
  __IOM uint8_t   EVENTSVBUSIN1CLR;                  /*!< (@ 0x0000001B) VBUSIN Thermal and USB Events Event Clear             */
  __IOM uint8_t   INTENEVENTSVBUSIN1SET;             /*!< (@ 0x0000001C) VBUSIN Thermal and USB Events Interrupt Enable Set    */
  __IOM uint8_t   INTENEVENTSVBUSIN1CLR;             /*!< (@ 0x0000001D) VBUSIN Thermal and USB Events Interrupt Enable Clear  */
  __IOM uint8_t   EVENTSUSBBSET;                     /*!< (@ 0x0000001E) USB-B Event Event Set                                 */
  __IOM uint8_t   EVENTSUSBBCLR;                     /*!< (@ 0x0000001F) USB-B Event Event Clear                               */
  __IOM uint8_t   INTENEVENTSUSBBSET;                /*!< (@ 0x00000020) USB-B Event Interrupt Enable Set                      */
  __IOM uint8_t   INTENEVENTSUSBBCLR;                /*!< (@ 0x00000021) USB-B Event Interrupt Enable Clear                    */
  __IM  uint8_t   VERSIONFULLMASK;                   /*!< (@ 0x00000022) IC Fullmask version word from layput                  */
  __IM  uint8_t   VERSIONMETALMASK;                  /*!< (@ 0x00000023) IC Metalmask version word from layput                 */
  __IOM uint8_t   SPARE0;                            /*!< (@ 0x00000024) spare                                                 */
} __PACKED NPM_MAIN_Type;                            /*!< Size = 40 (0x028)                                                    */

/* MAIN_SWREADY: Software takes control */
  #define MAIN_SWREADY_ResetValue (0x00UL)           /*!< Reset value of SWREADY register.                                     */

/* SWREADY @Bit 0 : Software enables/disables all low power features */
  #define MAIN_SWREADY_SWREADY_Pos (0UL)             /*!< Position of SWREADY field.                                           */
  #define MAIN_SWREADY_SWREADY_Msk (0x1UL << MAIN_SWREADY_SWREADY_Pos) /*!< Bit mask of SWREADY field.                         */
  #define MAIN_SWREADY_SWREADY_Min (0x0UL)           /*!< Min enumerator value of SWREADY field.                               */
  #define MAIN_SWREADY_SWREADY_Max (0x1UL)           /*!< Max enumerator value of SWREADY field.                               */
  #define MAIN_SWREADY_SWREADY_NOTREADY (0x0UL)      /*!< Software not ready                                                   */
  #define MAIN_SWREADY_SWREADY_READY (0x1UL)         /*!< Software ready                                                       */


/* MAIN_TASKSWRESET: Task Force a full reboot power-cycle */
  #define MAIN_TASKSWRESET_ResetValue (0x00UL)       /*!< Reset value of TASKSWRESET register.                                 */

/* TASKSWRESET @Bit 0 : Turn off all Supplies and apply internal reset */
  #define MAIN_TASKSWRESET_TASKSWRESET_Pos (0UL)     /*!< Position of TASKSWRESET field.                                       */
  #define MAIN_TASKSWRESET_TASKSWRESET_Msk (0x1UL << MAIN_TASKSWRESET_TASKSWRESET_Pos) /*!< Bit mask of TASKSWRESET field.     */
  #define MAIN_TASKSWRESET_TASKSWRESET_Min (0x0UL)   /*!< Min enumerator value of TASKSWRESET field.                           */
  #define MAIN_TASKSWRESET_TASKSWRESET_Max (0x1UL)   /*!< Max enumerator value of TASKSWRESET field.                           */
  #define MAIN_TASKSWRESET_TASKSWRESET_NOEFFECT (0x0UL) /*!< no effect                                                         */
  #define MAIN_TASKSWRESET_TASKSWRESET_TRIGGER (0x1UL) /*!< Trigger task                                                       */


/* MAIN_EVENTSADCSET: ADC Events Event Set */
  #define MAIN_EVENTSADCSET_ResetValue (0x00UL)      /*!< Reset value of EVENTSADCSET register.                                */

/* EVENTADCVBATRDY @Bit 0 : VBAT measurement finished. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSADCSET_EVENTADCVBATRDY_Pos (0UL) /*!< Position of EVENTADCVBATRDY field.                                  */
  #define MAIN_EVENTSADCSET_EVENTADCVBATRDY_Msk (0x1UL << MAIN_EVENTSADCSET_EVENTADCVBATRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVBATRDY field.*/                              
  #define MAIN_EVENTSADCSET_EVENTADCVBATRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVBATRDY field.                    */
  #define MAIN_EVENTSADCSET_EVENTADCVBATRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVBATRDY field.                    */
  #define MAIN_EVENTSADCSET_EVENTADCVBATRDY_LOW (0x0UL) /*!< low                                                               */
  #define MAIN_EVENTSADCSET_EVENTADCVBATRDY_HIGH (0x1UL) /*!< high                                                             */

/* EVENTADCNTCRDY @Bit 1 : Battery NTC measurement finished. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSADCSET_EVENTADCNTCRDY_Pos (1UL) /*!< Position of EVENTADCNTCRDY field.                                    */
  #define MAIN_EVENTSADCSET_EVENTADCNTCRDY_Msk (0x1UL << MAIN_EVENTSADCSET_EVENTADCNTCRDY_Pos) /*!< Bit mask of EVENTADCNTCRDY
                                                                            field.*/                                              
  #define MAIN_EVENTSADCSET_EVENTADCNTCRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCNTCRDY field.                      */
  #define MAIN_EVENTSADCSET_EVENTADCNTCRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCNTCRDY field.                      */
  #define MAIN_EVENTSADCSET_EVENTADCNTCRDY_LOW (0x0UL) /*!< low                                                                */
  #define MAIN_EVENTSADCSET_EVENTADCNTCRDY_HIGH (0x1UL) /*!< high                                                              */

/* EVENTADCTEMPRDY @Bit 2 : Internal Die Temperature measurement finished. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSADCSET_EVENTADCTEMPRDY_Pos (2UL) /*!< Position of EVENTADCTEMPRDY field.                                  */
  #define MAIN_EVENTSADCSET_EVENTADCTEMPRDY_Msk (0x1UL << MAIN_EVENTSADCSET_EVENTADCTEMPRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCTEMPRDY field.*/                              
  #define MAIN_EVENTSADCSET_EVENTADCTEMPRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCTEMPRDY field.                    */
  #define MAIN_EVENTSADCSET_EVENTADCTEMPRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCTEMPRDY field.                    */
  #define MAIN_EVENTSADCSET_EVENTADCTEMPRDY_LOW (0x0UL) /*!< low                                                               */
  #define MAIN_EVENTSADCSET_EVENTADCTEMPRDY_HIGH (0x1UL) /*!< high                                                             */

/* EVENTADCVSYSRDY @Bit 3 : VSYS Voltage measurement measurement finished. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSADCSET_EVENTADCVSYSRDY_Pos (3UL) /*!< Position of EVENTADCVSYSRDY field.                                  */
  #define MAIN_EVENTSADCSET_EVENTADCVSYSRDY_Msk (0x1UL << MAIN_EVENTSADCSET_EVENTADCVSYSRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSYSRDY field.*/                              
  #define MAIN_EVENTSADCSET_EVENTADCVSYSRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSYSRDY field.                    */
  #define MAIN_EVENTSADCSET_EVENTADCVSYSRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSYSRDY field.                    */
  #define MAIN_EVENTSADCSET_EVENTADCVSYSRDY_LOW (0x0UL) /*!< low                                                               */
  #define MAIN_EVENTSADCSET_EVENTADCVSYSRDY_HIGH (0x1UL) /*!< high                                                             */

/* EVENTADCVSET1RDY @Bit 4 : DCDC VSET1 pin measurement finished. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSADCSET_EVENTADCVSET1RDY_Pos (4UL) /*!< Position of EVENTADCVSET1RDY field.                                */
  #define MAIN_EVENTSADCSET_EVENTADCVSET1RDY_Msk (0x1UL << MAIN_EVENTSADCSET_EVENTADCVSET1RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSET1RDY field.*/                             
  #define MAIN_EVENTSADCSET_EVENTADCVSET1RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSET1RDY field.                  */
  #define MAIN_EVENTSADCSET_EVENTADCVSET1RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSET1RDY field.                  */
  #define MAIN_EVENTSADCSET_EVENTADCVSET1RDY_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSADCSET_EVENTADCVSET1RDY_HIGH (0x1UL) /*!< high                                                            */

/* EVENTADCVSET2RDY @Bit 5 : DCDC VSET2 pin measurement finished. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSADCSET_EVENTADCVSET2RDY_Pos (5UL) /*!< Position of EVENTADCVSET2RDY field.                                */
  #define MAIN_EVENTSADCSET_EVENTADCVSET2RDY_Msk (0x1UL << MAIN_EVENTSADCSET_EVENTADCVSET2RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSET2RDY field.*/                             
  #define MAIN_EVENTSADCSET_EVENTADCVSET2RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSET2RDY field.                  */
  #define MAIN_EVENTSADCSET_EVENTADCVSET2RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSET2RDY field.                  */
  #define MAIN_EVENTSADCSET_EVENTADCVSET2RDY_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSADCSET_EVENTADCVSET2RDY_HIGH (0x1UL) /*!< high                                                            */

/* EVENTADCIBATRDY @Bit 6 : IBAT measurement finished. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSADCSET_EVENTADCIBATRDY_Pos (6UL) /*!< Position of EVENTADCIBATRDY field.                                  */
  #define MAIN_EVENTSADCSET_EVENTADCIBATRDY_Msk (0x1UL << MAIN_EVENTSADCSET_EVENTADCIBATRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCIBATRDY field.*/                              
  #define MAIN_EVENTSADCSET_EVENTADCIBATRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCIBATRDY field.                    */
  #define MAIN_EVENTSADCSET_EVENTADCIBATRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCIBATRDY field.                    */
  #define MAIN_EVENTSADCSET_EVENTADCIBATRDY_LOW (0x0UL) /*!< low                                                               */
  #define MAIN_EVENTSADCSET_EVENTADCIBATRDY_HIGH (0x1UL) /*!< high                                                             */

/* EVENTADCVBUS7V0RDY @Bit 7 : VBUS (7Volt range) measurement finished. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSADCSET_EVENTADCVBUS7V0RDY_Pos (7UL) /*!< Position of EVENTADCVBUS7V0RDY field.                            */
  #define MAIN_EVENTSADCSET_EVENTADCVBUS7V0RDY_Msk (0x1UL << MAIN_EVENTSADCSET_EVENTADCVBUS7V0RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVBUS7V0RDY field.*/                           
  #define MAIN_EVENTSADCSET_EVENTADCVBUS7V0RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVBUS7V0RDY field.              */
  #define MAIN_EVENTSADCSET_EVENTADCVBUS7V0RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVBUS7V0RDY field.              */
  #define MAIN_EVENTSADCSET_EVENTADCVBUS7V0RDY_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSADCSET_EVENTADCVBUS7V0RDY_HIGH (0x1UL) /*!< high                                                          */


/* MAIN_EVENTSADCCLR: ADC Events Event Clear */
  #define MAIN_EVENTSADCCLR_ResetValue (0x00UL)      /*!< Reset value of EVENTSADCCLR register.                                */

/* EVENTADCVBATRDY @Bit 0 : VBAT measurement finished. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSADCCLR_EVENTADCVBATRDY_Pos (0UL) /*!< Position of EVENTADCVBATRDY field.                                  */
  #define MAIN_EVENTSADCCLR_EVENTADCVBATRDY_Msk (0x1UL << MAIN_EVENTSADCCLR_EVENTADCVBATRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVBATRDY field.*/                              
  #define MAIN_EVENTSADCCLR_EVENTADCVBATRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVBATRDY field.                    */
  #define MAIN_EVENTSADCCLR_EVENTADCVBATRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVBATRDY field.                    */
  #define MAIN_EVENTSADCCLR_EVENTADCVBATRDY_LOW (0x0UL) /*!< low                                                               */
  #define MAIN_EVENTSADCCLR_EVENTADCVBATRDY_HIGH (0x1UL) /*!< high                                                             */

/* EVENTADCNTCRDY @Bit 1 : Battery NTC measurement finished. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSADCCLR_EVENTADCNTCRDY_Pos (1UL) /*!< Position of EVENTADCNTCRDY field.                                    */
  #define MAIN_EVENTSADCCLR_EVENTADCNTCRDY_Msk (0x1UL << MAIN_EVENTSADCCLR_EVENTADCNTCRDY_Pos) /*!< Bit mask of EVENTADCNTCRDY
                                                                            field.*/                                              
  #define MAIN_EVENTSADCCLR_EVENTADCNTCRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCNTCRDY field.                      */
  #define MAIN_EVENTSADCCLR_EVENTADCNTCRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCNTCRDY field.                      */
  #define MAIN_EVENTSADCCLR_EVENTADCNTCRDY_LOW (0x0UL) /*!< low                                                                */
  #define MAIN_EVENTSADCCLR_EVENTADCNTCRDY_HIGH (0x1UL) /*!< high                                                              */

/* EVENTADCTEMPRDY @Bit 2 : Internal Die Temperature measurement finished. Writing 1 clears the event (e.g. to acknowledge an
                            interrupt). */                                                                                        
                                                                                                                                  
  #define MAIN_EVENTSADCCLR_EVENTADCTEMPRDY_Pos (2UL) /*!< Position of EVENTADCTEMPRDY field.                                  */
  #define MAIN_EVENTSADCCLR_EVENTADCTEMPRDY_Msk (0x1UL << MAIN_EVENTSADCCLR_EVENTADCTEMPRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCTEMPRDY field.*/                              
  #define MAIN_EVENTSADCCLR_EVENTADCTEMPRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCTEMPRDY field.                    */
  #define MAIN_EVENTSADCCLR_EVENTADCTEMPRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCTEMPRDY field.                    */
  #define MAIN_EVENTSADCCLR_EVENTADCTEMPRDY_LOW (0x0UL) /*!< low                                                               */
  #define MAIN_EVENTSADCCLR_EVENTADCTEMPRDY_HIGH (0x1UL) /*!< high                                                             */

/* EVENTADCVSYSRDY @Bit 3 : VSYS Voltage measurement measurement finished. Writing 1 clears the event (e.g. to acknowledge an
                            interrupt). */                                                                                        
                                                                                                                                  
  #define MAIN_EVENTSADCCLR_EVENTADCVSYSRDY_Pos (3UL) /*!< Position of EVENTADCVSYSRDY field.                                  */
  #define MAIN_EVENTSADCCLR_EVENTADCVSYSRDY_Msk (0x1UL << MAIN_EVENTSADCCLR_EVENTADCVSYSRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSYSRDY field.*/                              
  #define MAIN_EVENTSADCCLR_EVENTADCVSYSRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSYSRDY field.                    */
  #define MAIN_EVENTSADCCLR_EVENTADCVSYSRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSYSRDY field.                    */
  #define MAIN_EVENTSADCCLR_EVENTADCVSYSRDY_LOW (0x0UL) /*!< low                                                               */
  #define MAIN_EVENTSADCCLR_EVENTADCVSYSRDY_HIGH (0x1UL) /*!< high                                                             */

/* EVENTADCVSET1RDY @Bit 4 : DCDC VSET1 pin measurement finished. Writing 1 clears the event (e.g. to acknowledge an interrupt).
                             */                                                                                                   
                                                                                                                                  
  #define MAIN_EVENTSADCCLR_EVENTADCVSET1RDY_Pos (4UL) /*!< Position of EVENTADCVSET1RDY field.                                */
  #define MAIN_EVENTSADCCLR_EVENTADCVSET1RDY_Msk (0x1UL << MAIN_EVENTSADCCLR_EVENTADCVSET1RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSET1RDY field.*/                             
  #define MAIN_EVENTSADCCLR_EVENTADCVSET1RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSET1RDY field.                  */
  #define MAIN_EVENTSADCCLR_EVENTADCVSET1RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSET1RDY field.                  */
  #define MAIN_EVENTSADCCLR_EVENTADCVSET1RDY_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSADCCLR_EVENTADCVSET1RDY_HIGH (0x1UL) /*!< high                                                            */

/* EVENTADCVSET2RDY @Bit 5 : DCDC VSET2 pin measurement finished. Writing 1 clears the event (e.g. to acknowledge an interrupt).
                             */                                                                                                   
                                                                                                                                  
  #define MAIN_EVENTSADCCLR_EVENTADCVSET2RDY_Pos (5UL) /*!< Position of EVENTADCVSET2RDY field.                                */
  #define MAIN_EVENTSADCCLR_EVENTADCVSET2RDY_Msk (0x1UL << MAIN_EVENTSADCCLR_EVENTADCVSET2RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSET2RDY field.*/                             
  #define MAIN_EVENTSADCCLR_EVENTADCVSET2RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSET2RDY field.                  */
  #define MAIN_EVENTSADCCLR_EVENTADCVSET2RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSET2RDY field.                  */
  #define MAIN_EVENTSADCCLR_EVENTADCVSET2RDY_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSADCCLR_EVENTADCVSET2RDY_HIGH (0x1UL) /*!< high                                                            */

/* EVENTADCIBATRDY @Bit 6 : IBAT measurement finished. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSADCCLR_EVENTADCIBATRDY_Pos (6UL) /*!< Position of EVENTADCIBATRDY field.                                  */
  #define MAIN_EVENTSADCCLR_EVENTADCIBATRDY_Msk (0x1UL << MAIN_EVENTSADCCLR_EVENTADCIBATRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCIBATRDY field.*/                              
  #define MAIN_EVENTSADCCLR_EVENTADCIBATRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCIBATRDY field.                    */
  #define MAIN_EVENTSADCCLR_EVENTADCIBATRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCIBATRDY field.                    */
  #define MAIN_EVENTSADCCLR_EVENTADCIBATRDY_LOW (0x0UL) /*!< low                                                               */
  #define MAIN_EVENTSADCCLR_EVENTADCIBATRDY_HIGH (0x1UL) /*!< high                                                             */

/* EVENTADCVBUS7V0RDY @Bit 7 : VBUS (7Volt range) measurement finished. Writing 1 clears the event (e.g. to acknowledge an
                               interrupt). */                                                                                     
                                                                                                                                  
  #define MAIN_EVENTSADCCLR_EVENTADCVBUS7V0RDY_Pos (7UL) /*!< Position of EVENTADCVBUS7V0RDY field.                            */
  #define MAIN_EVENTSADCCLR_EVENTADCVBUS7V0RDY_Msk (0x1UL << MAIN_EVENTSADCCLR_EVENTADCVBUS7V0RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVBUS7V0RDY field.*/                           
  #define MAIN_EVENTSADCCLR_EVENTADCVBUS7V0RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVBUS7V0RDY field.              */
  #define MAIN_EVENTSADCCLR_EVENTADCVBUS7V0RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVBUS7V0RDY field.              */
  #define MAIN_EVENTSADCCLR_EVENTADCVBUS7V0RDY_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSADCCLR_EVENTADCVBUS7V0RDY_HIGH (0x1UL) /*!< high                                                          */


/* MAIN_INTENEVENTSADCSET: ADC Events Interrupt Enable Set */
  #define MAIN_INTENEVENTSADCSET_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSADCSET register.                           */

/* EVENTADCVBATRDY @Bit 0 : Writing 1 enables interrupts from EVENTADCVBATRDY */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBATRDY_Pos (0UL) /*!< Position of EVENTADCVBATRDY field.                             */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBATRDY_Msk (0x1UL << MAIN_INTENEVENTSADCSET_EVENTADCVBATRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVBATRDY field.*/                              
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBATRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVBATRDY field.               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBATRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVBATRDY field.               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBATRDY_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBATRDY_HIGH (0x1UL) /*!< high                                                        */

/* EVENTADCNTCRDY @Bit 1 : Writing 1 enables interrupts from EVENTADCNTCRDY */
  #define MAIN_INTENEVENTSADCSET_EVENTADCNTCRDY_Pos (1UL) /*!< Position of EVENTADCNTCRDY field.                               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCNTCRDY_Msk (0x1UL << MAIN_INTENEVENTSADCSET_EVENTADCNTCRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCNTCRDY field.*/                               
  #define MAIN_INTENEVENTSADCSET_EVENTADCNTCRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCNTCRDY field.                 */
  #define MAIN_INTENEVENTSADCSET_EVENTADCNTCRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCNTCRDY field.                 */
  #define MAIN_INTENEVENTSADCSET_EVENTADCNTCRDY_LOW (0x0UL) /*!< low                                                           */
  #define MAIN_INTENEVENTSADCSET_EVENTADCNTCRDY_HIGH (0x1UL) /*!< high                                                         */

/* EVENTADCTEMPRDY @Bit 2 : Writing 1 enables interrupts from EVENTADCTEMPRDY */
  #define MAIN_INTENEVENTSADCSET_EVENTADCTEMPRDY_Pos (2UL) /*!< Position of EVENTADCTEMPRDY field.                             */
  #define MAIN_INTENEVENTSADCSET_EVENTADCTEMPRDY_Msk (0x1UL << MAIN_INTENEVENTSADCSET_EVENTADCTEMPRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCTEMPRDY field.*/                              
  #define MAIN_INTENEVENTSADCSET_EVENTADCTEMPRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCTEMPRDY field.               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCTEMPRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCTEMPRDY field.               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCTEMPRDY_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_INTENEVENTSADCSET_EVENTADCTEMPRDY_HIGH (0x1UL) /*!< high                                                        */

/* EVENTADCVSYSRDY @Bit 3 : Writing 1 enables interrupts from EVENTADCVSYSRDY */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSYSRDY_Pos (3UL) /*!< Position of EVENTADCVSYSRDY field.                             */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSYSRDY_Msk (0x1UL << MAIN_INTENEVENTSADCSET_EVENTADCVSYSRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSYSRDY field.*/                              
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSYSRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSYSRDY field.               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSYSRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSYSRDY field.               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSYSRDY_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSYSRDY_HIGH (0x1UL) /*!< high                                                        */

/* EVENTADCVSET1RDY @Bit 4 : Writing 1 enables interrupts from EVENTADCVSET1RDY */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET1RDY_Pos (4UL) /*!< Position of EVENTADCVSET1RDY field.                           */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET1RDY_Msk (0x1UL << MAIN_INTENEVENTSADCSET_EVENTADCVSET1RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSET1RDY field.*/                             
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET1RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSET1RDY field.             */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET1RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSET1RDY field.             */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET1RDY_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET1RDY_HIGH (0x1UL) /*!< high                                                       */

/* EVENTADCVSET2RDY @Bit 5 : Writing 1 enables interrupts from EVENTADCVSET2RDY */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET2RDY_Pos (5UL) /*!< Position of EVENTADCVSET2RDY field.                           */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET2RDY_Msk (0x1UL << MAIN_INTENEVENTSADCSET_EVENTADCVSET2RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSET2RDY field.*/                             
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET2RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSET2RDY field.             */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET2RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSET2RDY field.             */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET2RDY_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVSET2RDY_HIGH (0x1UL) /*!< high                                                       */

/* EVENTADCIBATRDY @Bit 6 : Writing 1 enables interrupts from EVENTADCIBATRDY */
  #define MAIN_INTENEVENTSADCSET_EVENTADCIBATRDY_Pos (6UL) /*!< Position of EVENTADCIBATRDY field.                             */
  #define MAIN_INTENEVENTSADCSET_EVENTADCIBATRDY_Msk (0x1UL << MAIN_INTENEVENTSADCSET_EVENTADCIBATRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCIBATRDY field.*/                              
  #define MAIN_INTENEVENTSADCSET_EVENTADCIBATRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCIBATRDY field.               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCIBATRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCIBATRDY field.               */
  #define MAIN_INTENEVENTSADCSET_EVENTADCIBATRDY_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_INTENEVENTSADCSET_EVENTADCIBATRDY_HIGH (0x1UL) /*!< high                                                        */

/* EVENTADCVBUS7V0RDY @Bit 7 : Writing 1 enables interrupts from EVENTADCVBUS7V0RDY */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBUS7V0RDY_Pos (7UL) /*!< Position of EVENTADCVBUS7V0RDY field.                       */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBUS7V0RDY_Msk (0x1UL << MAIN_INTENEVENTSADCSET_EVENTADCVBUS7V0RDY_Pos) /*!< Bit mask
                                                                            of EVENTADCVBUS7V0RDY field.*/                        
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBUS7V0RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVBUS7V0RDY field.         */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBUS7V0RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVBUS7V0RDY field.         */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBUS7V0RDY_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSADCSET_EVENTADCVBUS7V0RDY_HIGH (0x1UL) /*!< high                                                     */


/* MAIN_INTENEVENTSADCCLR: ADC Events Interrupt Enable Clear */
  #define MAIN_INTENEVENTSADCCLR_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSADCCLR register.                           */

/* EVENTADCVBATRDY @Bit 0 : Writing 1 disables interrupts from EVENTADCVBATRDY */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBATRDY_Pos (0UL) /*!< Position of EVENTADCVBATRDY field.                             */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBATRDY_Msk (0x1UL << MAIN_INTENEVENTSADCCLR_EVENTADCVBATRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVBATRDY field.*/                              
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBATRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVBATRDY field.               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBATRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVBATRDY field.               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBATRDY_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBATRDY_HIGH (0x1UL) /*!< high                                                        */

/* EVENTADCNTCRDY @Bit 1 : Writing 1 disables interrupts from EVENTADCNTCRDY */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCNTCRDY_Pos (1UL) /*!< Position of EVENTADCNTCRDY field.                               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCNTCRDY_Msk (0x1UL << MAIN_INTENEVENTSADCCLR_EVENTADCNTCRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCNTCRDY field.*/                               
  #define MAIN_INTENEVENTSADCCLR_EVENTADCNTCRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCNTCRDY field.                 */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCNTCRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCNTCRDY field.                 */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCNTCRDY_LOW (0x0UL) /*!< low                                                           */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCNTCRDY_HIGH (0x1UL) /*!< high                                                         */

/* EVENTADCTEMPRDY @Bit 2 : Writing 1 disables interrupts from EVENTADCTEMPRDY */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCTEMPRDY_Pos (2UL) /*!< Position of EVENTADCTEMPRDY field.                             */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCTEMPRDY_Msk (0x1UL << MAIN_INTENEVENTSADCCLR_EVENTADCTEMPRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCTEMPRDY field.*/                              
  #define MAIN_INTENEVENTSADCCLR_EVENTADCTEMPRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCTEMPRDY field.               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCTEMPRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCTEMPRDY field.               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCTEMPRDY_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCTEMPRDY_HIGH (0x1UL) /*!< high                                                        */

/* EVENTADCVSYSRDY @Bit 3 : Writing 1 disables interrupts from EVENTADCVSYSRDY */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSYSRDY_Pos (3UL) /*!< Position of EVENTADCVSYSRDY field.                             */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSYSRDY_Msk (0x1UL << MAIN_INTENEVENTSADCCLR_EVENTADCVSYSRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSYSRDY field.*/                              
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSYSRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSYSRDY field.               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSYSRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSYSRDY field.               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSYSRDY_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSYSRDY_HIGH (0x1UL) /*!< high                                                        */

/* EVENTADCVSET1RDY @Bit 4 : Writing 1 disables interrupts from EVENTADCVSET1RDY */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET1RDY_Pos (4UL) /*!< Position of EVENTADCVSET1RDY field.                           */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET1RDY_Msk (0x1UL << MAIN_INTENEVENTSADCCLR_EVENTADCVSET1RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSET1RDY field.*/                             
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET1RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSET1RDY field.             */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET1RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSET1RDY field.             */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET1RDY_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET1RDY_HIGH (0x1UL) /*!< high                                                       */

/* EVENTADCVSET2RDY @Bit 5 : Writing 1 disables interrupts from EVENTADCVSET2RDY */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET2RDY_Pos (5UL) /*!< Position of EVENTADCVSET2RDY field.                           */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET2RDY_Msk (0x1UL << MAIN_INTENEVENTSADCCLR_EVENTADCVSET2RDY_Pos) /*!< Bit mask of
                                                                            EVENTADCVSET2RDY field.*/                             
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET2RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVSET2RDY field.             */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET2RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVSET2RDY field.             */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET2RDY_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVSET2RDY_HIGH (0x1UL) /*!< high                                                       */

/* EVENTADCIBATRDY @Bit 6 : Writing 1 disables interrupts from EVENTADCIBATRDY */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCIBATRDY_Pos (6UL) /*!< Position of EVENTADCIBATRDY field.                             */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCIBATRDY_Msk (0x1UL << MAIN_INTENEVENTSADCCLR_EVENTADCIBATRDY_Pos) /*!< Bit mask of
                                                                            EVENTADCIBATRDY field.*/                              
  #define MAIN_INTENEVENTSADCCLR_EVENTADCIBATRDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCIBATRDY field.               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCIBATRDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCIBATRDY field.               */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCIBATRDY_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCIBATRDY_HIGH (0x1UL) /*!< high                                                        */

/* EVENTADCVBUS7V0RDY @Bit 7 : Writing 1 disables interrupts from EVENTADCVBUS7V0RDY */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBUS7V0RDY_Pos (7UL) /*!< Position of EVENTADCVBUS7V0RDY field.                       */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBUS7V0RDY_Msk (0x1UL << MAIN_INTENEVENTSADCCLR_EVENTADCVBUS7V0RDY_Pos) /*!< Bit mask
                                                                            of EVENTADCVBUS7V0RDY field.*/                        
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBUS7V0RDY_Min (0x0UL) /*!< Min enumerator value of EVENTADCVBUS7V0RDY field.         */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBUS7V0RDY_Max (0x1UL) /*!< Max enumerator value of EVENTADCVBUS7V0RDY field.         */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBUS7V0RDY_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSADCCLR_EVENTADCVBUS7V0RDY_HIGH (0x1UL) /*!< high                                                     */


/* MAIN_EVENTSBCHARGER0SET: Battery Charger Temperature Events Event Set */
  #define MAIN_EVENTSBCHARGER0SET_ResetValue (0x00UL) /*!< Reset value of EVENTSBCHARGER0SET register.                         */

/* EVENTNTCCOLD @Bit 0 : Event when Cold Battery detected from NTC measure. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOLD_Pos (0UL) /*!< Position of EVENTNTCCOLD field.                                  */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOLD_Msk (0x1UL << MAIN_EVENTSBCHARGER0SET_EVENTNTCCOLD_Pos) /*!< Bit mask of
                                                                            EVENTNTCCOLD field.*/                                 
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOLD_Min (0x0UL) /*!< Min enumerator value of EVENTNTCCOLD field.                    */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOLD_Max (0x1UL) /*!< Max enumerator value of EVENTNTCCOLD field.                    */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOLD_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOLD_HIGH (0x1UL) /*!< high                                                          */

/* EVENTNTCCOOL @Bit 1 : Event when Cool Battery detected from NTC measure. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOOL_Pos (1UL) /*!< Position of EVENTNTCCOOL field.                                  */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOOL_Msk (0x1UL << MAIN_EVENTSBCHARGER0SET_EVENTNTCCOOL_Pos) /*!< Bit mask of
                                                                            EVENTNTCCOOL field.*/                                 
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOOL_Min (0x0UL) /*!< Min enumerator value of EVENTNTCCOOL field.                    */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOOL_Max (0x1UL) /*!< Max enumerator value of EVENTNTCCOOL field.                    */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOOL_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCCOOL_HIGH (0x1UL) /*!< high                                                          */

/* EVENTNTCWARM @Bit 2 : Event when Warm Battery detected from NTC measure. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCWARM_Pos (2UL) /*!< Position of EVENTNTCWARM field.                                  */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCWARM_Msk (0x1UL << MAIN_EVENTSBCHARGER0SET_EVENTNTCWARM_Pos) /*!< Bit mask of
                                                                            EVENTNTCWARM field.*/                                 
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCWARM_Min (0x0UL) /*!< Min enumerator value of EVENTNTCWARM field.                    */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCWARM_Max (0x1UL) /*!< Max enumerator value of EVENTNTCWARM field.                    */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCWARM_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCWARM_HIGH (0x1UL) /*!< high                                                          */

/* EVENTNTCHOT @Bit 3 : Event when Hot Battery detected from NTC measure. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCHOT_Pos (3UL) /*!< Position of EVENTNTCHOT field.                                    */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCHOT_Msk (0x1UL << MAIN_EVENTSBCHARGER0SET_EVENTNTCHOT_Pos) /*!< Bit mask of
                                                                            EVENTNTCHOT field.*/                                  
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCHOT_Min (0x0UL) /*!< Min enumerator value of EVENTNTCHOT field.                      */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCHOT_Max (0x1UL) /*!< Max enumerator value of EVENTNTCHOT field.                      */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCHOT_LOW (0x0UL) /*!< low                                                             */
  #define MAIN_EVENTSBCHARGER0SET_EVENTNTCHOT_HIGH (0x1UL) /*!< high                                                           */

/* EVENTDIETEMPHIGH @Bit 4 : Event when die high temperature detected from Die Temp measure. Writing 1 sets the event (for
                             debugging). */                                                                                       
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Pos (4UL) /*!< Position of EVENTDIETEMPHIGH field.                          */
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Msk (0x1UL << MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Pos) /*!< Bit mask of
                                                                            EVENTDIETEMPHIGH field.*/                             
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Min (0x0UL) /*!< Min enumerator value of EVENTDIETEMPHIGH field.            */
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Max (0x1UL) /*!< Max enumerator value of EVENTDIETEMPHIGH field.            */
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPHIGH_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPHIGH_HIGH (0x1UL) /*!< high                                                      */

/* EVENTDIETEMPRESUME @Bit 5 : Event when die resume temperature detected from Die Temp measure. Writing 1 sets the event (for
                               debugging). */                                                                                     
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Pos (5UL) /*!< Position of EVENTDIETEMPRESUME field.                      */
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Msk (0x1UL << MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Pos) /*!< Bit mask
                                                                            of EVENTDIETEMPRESUME field.*/                        
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Min (0x0UL) /*!< Min enumerator value of EVENTDIETEMPRESUME field.        */
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Max (0x1UL) /*!< Max enumerator value of EVENTDIETEMPRESUME field.        */
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPRESUME_LOW (0x0UL) /*!< low                                                      */
  #define MAIN_EVENTSBCHARGER0SET_EVENTDIETEMPRESUME_HIGH (0x1UL) /*!< high                                                    */


/* MAIN_EVENTSBCHARGER0CLR: Battery Charger Temperature Events Event Clear */
  #define MAIN_EVENTSBCHARGER0CLR_ResetValue (0x00UL) /*!< Reset value of EVENTSBCHARGER0CLR register.                         */

/* EVENTNTCCOLD @Bit 0 : Event when Cold Battery detected from NTC measure. Writing 1 clears the event (e.g. to acknowledge an
                         interrupt). */                                                                                           
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOLD_Pos (0UL) /*!< Position of EVENTNTCCOLD field.                                  */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOLD_Msk (0x1UL << MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOLD_Pos) /*!< Bit mask of
                                                                            EVENTNTCCOLD field.*/                                 
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOLD_Min (0x0UL) /*!< Min enumerator value of EVENTNTCCOLD field.                    */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOLD_Max (0x1UL) /*!< Max enumerator value of EVENTNTCCOLD field.                    */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOLD_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOLD_HIGH (0x1UL) /*!< high                                                          */

/* EVENTNTCCOOL @Bit 1 : Event when Cool Battery detected from NTC measure. Writing 1 clears the event (e.g. to acknowledge an
                         interrupt). */                                                                                           
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOOL_Pos (1UL) /*!< Position of EVENTNTCCOOL field.                                  */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOOL_Msk (0x1UL << MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOOL_Pos) /*!< Bit mask of
                                                                            EVENTNTCCOOL field.*/                                 
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOOL_Min (0x0UL) /*!< Min enumerator value of EVENTNTCCOOL field.                    */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOOL_Max (0x1UL) /*!< Max enumerator value of EVENTNTCCOOL field.                    */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOOL_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCCOOL_HIGH (0x1UL) /*!< high                                                          */

/* EVENTNTCWARM @Bit 2 : Event when Warm Battery detected from NTC measure. Writing 1 clears the event (e.g. to acknowledge an
                         interrupt). */                                                                                           
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCWARM_Pos (2UL) /*!< Position of EVENTNTCWARM field.                                  */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCWARM_Msk (0x1UL << MAIN_EVENTSBCHARGER0CLR_EVENTNTCWARM_Pos) /*!< Bit mask of
                                                                            EVENTNTCWARM field.*/                                 
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCWARM_Min (0x0UL) /*!< Min enumerator value of EVENTNTCWARM field.                    */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCWARM_Max (0x1UL) /*!< Max enumerator value of EVENTNTCWARM field.                    */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCWARM_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCWARM_HIGH (0x1UL) /*!< high                                                          */

/* EVENTNTCHOT @Bit 3 : Event when Hot Battery detected from NTC measure. Writing 1 clears the event (e.g. to acknowledge an
                        interrupt). */                                                                                            
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCHOT_Pos (3UL) /*!< Position of EVENTNTCHOT field.                                    */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCHOT_Msk (0x1UL << MAIN_EVENTSBCHARGER0CLR_EVENTNTCHOT_Pos) /*!< Bit mask of
                                                                            EVENTNTCHOT field.*/                                  
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCHOT_Min (0x0UL) /*!< Min enumerator value of EVENTNTCHOT field.                      */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCHOT_Max (0x1UL) /*!< Max enumerator value of EVENTNTCHOT field.                      */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCHOT_LOW (0x0UL) /*!< low                                                             */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTNTCHOT_HIGH (0x1UL) /*!< high                                                           */

/* EVENTDIETEMPHIGH @Bit 4 : Event when die high temperature detected from Die Temp measure. Writing 1 clears the event (e.g. to
                             acknowledge an interrupt). */                                                                        
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Pos (4UL) /*!< Position of EVENTDIETEMPHIGH field.                          */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Msk (0x1UL << MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Pos) /*!< Bit mask of
                                                                            EVENTDIETEMPHIGH field.*/                             
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Min (0x0UL) /*!< Min enumerator value of EVENTDIETEMPHIGH field.            */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Max (0x1UL) /*!< Max enumerator value of EVENTDIETEMPHIGH field.            */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_HIGH (0x1UL) /*!< high                                                      */

/* EVENTDIETEMPRESUME @Bit 5 : Event when die resume temperature detected from Die Temp measure. Writing 1 clears the event
                               (e.g. to acknowledge an interrupt). */                                                             
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Pos (5UL) /*!< Position of EVENTDIETEMPRESUME field.                      */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Msk (0x1UL << MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Pos) /*!< Bit mask
                                                                            of EVENTDIETEMPRESUME field.*/                        
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Min (0x0UL) /*!< Min enumerator value of EVENTDIETEMPRESUME field.        */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Max (0x1UL) /*!< Max enumerator value of EVENTDIETEMPRESUME field.        */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_LOW (0x0UL) /*!< low                                                      */
  #define MAIN_EVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_HIGH (0x1UL) /*!< high                                                    */


/* MAIN_INTENEVENTSBCHARGER0SET: Battery Charger Temperature Events Interrupt Enable Set */
  #define MAIN_INTENEVENTSBCHARGER0SET_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSBCHARGER0SET register.               */

/* EVENTNTCCOLD @Bit 0 : Writing 1 enables interrupts from EVENTNTCCOLD */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOLD_Pos (0UL) /*!< Position of EVENTNTCCOLD field.                             */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOLD_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOLD_Pos) /*!< Bit mask
                                                                            of EVENTNTCCOLD field.*/                              
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOLD_Min (0x0UL) /*!< Min enumerator value of EVENTNTCCOLD field.               */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOLD_Max (0x1UL) /*!< Max enumerator value of EVENTNTCCOLD field.               */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOLD_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOLD_HIGH (0x1UL) /*!< high                                                     */

/* EVENTNTCCOOL @Bit 1 : Writing 1 enables interrupts from EVENTNTCCOOL */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOOL_Pos (1UL) /*!< Position of EVENTNTCCOOL field.                             */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOOL_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOOL_Pos) /*!< Bit mask
                                                                            of EVENTNTCCOOL field.*/                              
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOOL_Min (0x0UL) /*!< Min enumerator value of EVENTNTCCOOL field.               */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOOL_Max (0x1UL) /*!< Max enumerator value of EVENTNTCCOOL field.               */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOOL_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCCOOL_HIGH (0x1UL) /*!< high                                                     */

/* EVENTNTCWARM @Bit 2 : Writing 1 enables interrupts from EVENTNTCWARM */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCWARM_Pos (2UL) /*!< Position of EVENTNTCWARM field.                             */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCWARM_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCWARM_Pos) /*!< Bit mask
                                                                            of EVENTNTCWARM field.*/                              
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCWARM_Min (0x0UL) /*!< Min enumerator value of EVENTNTCWARM field.               */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCWARM_Max (0x1UL) /*!< Max enumerator value of EVENTNTCWARM field.               */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCWARM_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCWARM_HIGH (0x1UL) /*!< high                                                     */

/* EVENTNTCHOT @Bit 3 : Writing 1 enables interrupts from EVENTNTCHOT */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCHOT_Pos (3UL) /*!< Position of EVENTNTCHOT field.                               */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCHOT_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCHOT_Pos) /*!< Bit mask of
                                                                            EVENTNTCHOT field.*/                                  
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCHOT_Min (0x0UL) /*!< Min enumerator value of EVENTNTCHOT field.                 */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCHOT_Max (0x1UL) /*!< Max enumerator value of EVENTNTCHOT field.                 */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCHOT_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTNTCHOT_HIGH (0x1UL) /*!< high                                                      */

/* EVENTDIETEMPHIGH @Bit 4 : Writing 1 enables interrupts from EVENTDIETEMPHIGH */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Pos (4UL) /*!< Position of EVENTDIETEMPHIGH field.                     */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Pos) /*!<
                                                                            Bit mask of EVENTDIETEMPHIGH field.*/                 
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Min (0x0UL) /*!< Min enumerator value of EVENTDIETEMPHIGH field.       */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPHIGH_Max (0x1UL) /*!< Max enumerator value of EVENTDIETEMPHIGH field.       */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPHIGH_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPHIGH_HIGH (0x1UL) /*!< high                                                 */

/* EVENTDIETEMPRESUME @Bit 5 : Writing 1 enables interrupts from EVENTDIETEMPRESUME */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Pos (5UL) /*!< Position of EVENTDIETEMPRESUME field.                 */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Pos)
                                                                            /*!< Bit mask of EVENTDIETEMPRESUME field.*/          
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Min (0x0UL) /*!< Min enumerator value of EVENTDIETEMPRESUME field.   */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPRESUME_Max (0x1UL) /*!< Max enumerator value of EVENTDIETEMPRESUME field.   */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPRESUME_LOW (0x0UL) /*!< low                                                 */
  #define MAIN_INTENEVENTSBCHARGER0SET_EVENTDIETEMPRESUME_HIGH (0x1UL) /*!< high                                               */


/* MAIN_INTENEVENTSBCHARGER0CLR: Battery Charger Temperature Events Interrupt Enable Clear */
  #define MAIN_INTENEVENTSBCHARGER0CLR_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSBCHARGER0CLR register.               */

/* EVENTNTCCOLD @Bit 0 : Writing 1 disables interrupts from EVENTNTCCOLD */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOLD_Pos (0UL) /*!< Position of EVENTNTCCOLD field.                             */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOLD_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOLD_Pos) /*!< Bit mask
                                                                            of EVENTNTCCOLD field.*/                              
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOLD_Min (0x0UL) /*!< Min enumerator value of EVENTNTCCOLD field.               */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOLD_Max (0x1UL) /*!< Max enumerator value of EVENTNTCCOLD field.               */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOLD_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOLD_HIGH (0x1UL) /*!< high                                                     */

/* EVENTNTCCOOL @Bit 1 : Writing 1 disables interrupts from EVENTNTCCOOL */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOOL_Pos (1UL) /*!< Position of EVENTNTCCOOL field.                             */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOOL_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOOL_Pos) /*!< Bit mask
                                                                            of EVENTNTCCOOL field.*/                              
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOOL_Min (0x0UL) /*!< Min enumerator value of EVENTNTCCOOL field.               */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOOL_Max (0x1UL) /*!< Max enumerator value of EVENTNTCCOOL field.               */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOOL_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCCOOL_HIGH (0x1UL) /*!< high                                                     */

/* EVENTNTCWARM @Bit 2 : Writing 1 disables interrupts from EVENTNTCWARM */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCWARM_Pos (2UL) /*!< Position of EVENTNTCWARM field.                             */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCWARM_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCWARM_Pos) /*!< Bit mask
                                                                            of EVENTNTCWARM field.*/                              
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCWARM_Min (0x0UL) /*!< Min enumerator value of EVENTNTCWARM field.               */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCWARM_Max (0x1UL) /*!< Max enumerator value of EVENTNTCWARM field.               */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCWARM_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCWARM_HIGH (0x1UL) /*!< high                                                     */

/* EVENTNTCHOT @Bit 3 : Writing 1 disables interrupts from EVENTNTCHOT */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCHOT_Pos (3UL) /*!< Position of EVENTNTCHOT field.                               */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCHOT_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCHOT_Pos) /*!< Bit mask of
                                                                            EVENTNTCHOT field.*/                                  
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCHOT_Min (0x0UL) /*!< Min enumerator value of EVENTNTCHOT field.                 */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCHOT_Max (0x1UL) /*!< Max enumerator value of EVENTNTCHOT field.                 */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCHOT_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTNTCHOT_HIGH (0x1UL) /*!< high                                                      */

/* EVENTDIETEMPHIGH @Bit 4 : Writing 1 disables interrupts from EVENTDIETEMPHIGH */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Pos (4UL) /*!< Position of EVENTDIETEMPHIGH field.                     */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Pos) /*!<
                                                                            Bit mask of EVENTDIETEMPHIGH field.*/                 
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Min (0x0UL) /*!< Min enumerator value of EVENTDIETEMPHIGH field.       */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_Max (0x1UL) /*!< Max enumerator value of EVENTDIETEMPHIGH field.       */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPHIGH_HIGH (0x1UL) /*!< high                                                 */

/* EVENTDIETEMPRESUME @Bit 5 : Writing 1 disables interrupts from EVENTDIETEMPRESUME */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Pos (5UL) /*!< Position of EVENTDIETEMPRESUME field.                 */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Pos)
                                                                            /*!< Bit mask of EVENTDIETEMPRESUME field.*/          
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Min (0x0UL) /*!< Min enumerator value of EVENTDIETEMPRESUME field.   */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_Max (0x1UL) /*!< Max enumerator value of EVENTDIETEMPRESUME field.   */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_LOW (0x0UL) /*!< low                                                 */
  #define MAIN_INTENEVENTSBCHARGER0CLR_EVENTDIETEMPRESUME_HIGH (0x1UL) /*!< high                                               */


/* MAIN_EVENTSBCHARGER1SET: Battery Charger Status Events Event Set */
  #define MAIN_EVENTSBCHARGER1SET_ResetValue (0x00UL) /*!< Reset value of EVENTSBCHARGER1SET register.                         */

/* EVENTSUPPLEMENT @Bit 0 : Event supplement mode activated. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER1SET_EVENTSUPPLEMENT_Pos (0UL) /*!< Position of EVENTSUPPLEMENT field.                            */
  #define MAIN_EVENTSBCHARGER1SET_EVENTSUPPLEMENT_Msk (0x1UL << MAIN_EVENTSBCHARGER1SET_EVENTSUPPLEMENT_Pos) /*!< Bit mask of
                                                                            EVENTSUPPLEMENT field.*/                              
  #define MAIN_EVENTSBCHARGER1SET_EVENTSUPPLEMENT_Min (0x0UL) /*!< Min enumerator value of EVENTSUPPLEMENT field.              */
  #define MAIN_EVENTSBCHARGER1SET_EVENTSUPPLEMENT_Max (0x1UL) /*!< Max enumerator value of EVENTSUPPLEMENT field.              */
  #define MAIN_EVENTSBCHARGER1SET_EVENTSUPPLEMENT_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_EVENTSBCHARGER1SET_EVENTSUPPLEMENT_HIGH (0x1UL) /*!< high                                                       */

/* EVENTCHGTRICKLE @Bit 1 : Event Trickle Charge started. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGTRICKLE_Pos (1UL) /*!< Position of EVENTCHGTRICKLE field.                            */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGTRICKLE_Msk (0x1UL << MAIN_EVENTSBCHARGER1SET_EVENTCHGTRICKLE_Pos) /*!< Bit mask of
                                                                            EVENTCHGTRICKLE field.*/                              
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGTRICKLE_Min (0x0UL) /*!< Min enumerator value of EVENTCHGTRICKLE field.              */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGTRICKLE_Max (0x1UL) /*!< Max enumerator value of EVENTCHGTRICKLE field.              */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGTRICKLE_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGTRICKLE_HIGH (0x1UL) /*!< high                                                       */

/* EVENTCHGCC @Bit 2 : Event Constant Current charging started. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCC_Pos (2UL) /*!< Position of EVENTCHGCC field.                                      */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCC_Msk (0x1UL << MAIN_EVENTSBCHARGER1SET_EVENTCHGCC_Pos) /*!< Bit mask of EVENTCHGCC
                                                                            field.*/                                              
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCC_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCC field.                        */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCC_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCC field.                        */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCC_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCC_HIGH (0x1UL) /*!< high                                                            */

/* EVENTCHGCV @Bit 3 : Event Constant Voltage charging started. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCV_Pos (3UL) /*!< Position of EVENTCHGCV field.                                      */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCV_Msk (0x1UL << MAIN_EVENTSBCHARGER1SET_EVENTCHGCV_Pos) /*!< Bit mask of EVENTCHGCV
                                                                            field.*/                                              
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCV_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCV field.                        */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCV_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCV field.                        */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCV_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCV_HIGH (0x1UL) /*!< high                                                            */

/* EVENTCHGCOMPLETED @Bit 4 : Event charging completed (Battery Full). Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Pos (4UL) /*!< Position of EVENTCHGCOMPLETED field.                        */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Msk (0x1UL << MAIN_EVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Pos) /*!< Bit mask
                                                                            of EVENTCHGCOMPLETED field.*/                         
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCOMPLETED field.          */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCOMPLETED field.          */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCOMPLETED_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGCOMPLETED_HIGH (0x1UL) /*!< high                                                     */

/* EVENTCHGERROR @Bit 5 : Event charging error. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGERROR_Pos (5UL) /*!< Position of EVENTCHGERROR field.                                */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGERROR_Msk (0x1UL << MAIN_EVENTSBCHARGER1SET_EVENTCHGERROR_Pos) /*!< Bit mask of
                                                                            EVENTCHGERROR field.*/                                
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGERROR_Min (0x0UL) /*!< Min enumerator value of EVENTCHGERROR field.                  */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGERROR_Max (0x1UL) /*!< Max enumerator value of EVENTCHGERROR field.                  */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGERROR_LOW (0x0UL) /*!< low                                                           */
  #define MAIN_EVENTSBCHARGER1SET_EVENTCHGERROR_HIGH (0x1UL) /*!< high                                                         */


/* MAIN_EVENTSBCHARGER1CLR: Battery Charger Status Events Event Clear */
  #define MAIN_EVENTSBCHARGER1CLR_ResetValue (0x00UL) /*!< Reset value of EVENTSBCHARGER1CLR register.                         */

/* EVENTSUPPLEMENT @Bit 0 : Event supplement mode activated. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Pos (0UL) /*!< Position of EVENTSUPPLEMENT field.                            */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Msk (0x1UL << MAIN_EVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Pos) /*!< Bit mask of
                                                                            EVENTSUPPLEMENT field.*/                              
  #define MAIN_EVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Min (0x0UL) /*!< Min enumerator value of EVENTSUPPLEMENT field.              */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Max (0x1UL) /*!< Max enumerator value of EVENTSUPPLEMENT field.              */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTSUPPLEMENT_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTSUPPLEMENT_HIGH (0x1UL) /*!< high                                                       */

/* EVENTCHGTRICKLE @Bit 1 : Event Trickle Charge started. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Pos (1UL) /*!< Position of EVENTCHGTRICKLE field.                            */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Msk (0x1UL << MAIN_EVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Pos) /*!< Bit mask of
                                                                            EVENTCHGTRICKLE field.*/                              
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Min (0x0UL) /*!< Min enumerator value of EVENTCHGTRICKLE field.              */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Max (0x1UL) /*!< Max enumerator value of EVENTCHGTRICKLE field.              */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGTRICKLE_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGTRICKLE_HIGH (0x1UL) /*!< high                                                       */

/* EVENTCHGCC @Bit 2 : Event Constant Current charging started. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCC_Pos (2UL) /*!< Position of EVENTCHGCC field.                                      */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCC_Msk (0x1UL << MAIN_EVENTSBCHARGER1CLR_EVENTCHGCC_Pos) /*!< Bit mask of EVENTCHGCC
                                                                            field.*/                                              
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCC_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCC field.                        */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCC_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCC field.                        */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCC_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCC_HIGH (0x1UL) /*!< high                                                            */

/* EVENTCHGCV @Bit 3 : Event Constant Voltage charging started. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCV_Pos (3UL) /*!< Position of EVENTCHGCV field.                                      */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCV_Msk (0x1UL << MAIN_EVENTSBCHARGER1CLR_EVENTCHGCV_Pos) /*!< Bit mask of EVENTCHGCV
                                                                            field.*/                                              
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCV_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCV field.                        */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCV_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCV field.                        */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCV_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCV_HIGH (0x1UL) /*!< high                                                            */

/* EVENTCHGCOMPLETED @Bit 4 : Event charging completed (Battery Full). Writing 1 clears the event (e.g. to acknowledge an
                              interrupt). */                                                                                      
                                                                                                                                  
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Pos (4UL) /*!< Position of EVENTCHGCOMPLETED field.                        */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Msk (0x1UL << MAIN_EVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Pos) /*!< Bit mask
                                                                            of EVENTCHGCOMPLETED field.*/                         
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCOMPLETED field.          */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCOMPLETED field.          */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_HIGH (0x1UL) /*!< high                                                     */

/* EVENTCHGERROR @Bit 5 : Event charging error. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGERROR_Pos (5UL) /*!< Position of EVENTCHGERROR field.                                */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGERROR_Msk (0x1UL << MAIN_EVENTSBCHARGER1CLR_EVENTCHGERROR_Pos) /*!< Bit mask of
                                                                            EVENTCHGERROR field.*/                                
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGERROR_Min (0x0UL) /*!< Min enumerator value of EVENTCHGERROR field.                  */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGERROR_Max (0x1UL) /*!< Max enumerator value of EVENTCHGERROR field.                  */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGERROR_LOW (0x0UL) /*!< low                                                           */
  #define MAIN_EVENTSBCHARGER1CLR_EVENTCHGERROR_HIGH (0x1UL) /*!< high                                                         */


/* MAIN_INTENEVENTSBCHARGER1SET: Battery Charger Status Events Interrupt Enable Set */
  #define MAIN_INTENEVENTSBCHARGER1SET_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSBCHARGER1SET register.               */

/* EVENTSUPPLEMENT @Bit 0 : Writing 1 enables interrupts from EVENTSUPPLEMENT */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTSUPPLEMENT_Pos (0UL) /*!< Position of EVENTSUPPLEMENT field.                       */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTSUPPLEMENT_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1SET_EVENTSUPPLEMENT_Pos) /*!< Bit
                                                                            mask of EVENTSUPPLEMENT field.*/                      
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTSUPPLEMENT_Min (0x0UL) /*!< Min enumerator value of EVENTSUPPLEMENT field.         */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTSUPPLEMENT_Max (0x1UL) /*!< Max enumerator value of EVENTSUPPLEMENT field.         */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTSUPPLEMENT_LOW (0x0UL) /*!< low                                                    */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTSUPPLEMENT_HIGH (0x1UL) /*!< high                                                  */

/* EVENTCHGTRICKLE @Bit 1 : Writing 1 enables interrupts from EVENTCHGTRICKLE */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGTRICKLE_Pos (1UL) /*!< Position of EVENTCHGTRICKLE field.                       */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGTRICKLE_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGTRICKLE_Pos) /*!< Bit
                                                                            mask of EVENTCHGTRICKLE field.*/                      
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGTRICKLE_Min (0x0UL) /*!< Min enumerator value of EVENTCHGTRICKLE field.         */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGTRICKLE_Max (0x1UL) /*!< Max enumerator value of EVENTCHGTRICKLE field.         */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGTRICKLE_LOW (0x0UL) /*!< low                                                    */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGTRICKLE_HIGH (0x1UL) /*!< high                                                  */

/* EVENTCHGCC @Bit 2 : Writing 1 enables interrupts from EVENTCHGCC */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCC_Pos (2UL) /*!< Position of EVENTCHGCC field.                                 */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCC_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCC_Pos) /*!< Bit mask of
                                                                            EVENTCHGCC field.*/                                   
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCC_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCC field.                   */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCC_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCC field.                   */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCC_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCC_HIGH (0x1UL) /*!< high                                                       */

/* EVENTCHGCV @Bit 3 : Writing 1 enables interrupts from EVENTCHGCV */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCV_Pos (3UL) /*!< Position of EVENTCHGCV field.                                 */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCV_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCV_Pos) /*!< Bit mask of
                                                                            EVENTCHGCV field.*/                                   
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCV_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCV field.                   */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCV_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCV field.                   */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCV_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCV_HIGH (0x1UL) /*!< high                                                       */

/* EVENTCHGCOMPLETED @Bit 4 : Writing 1 enables interrupts from EVENTCHGCOMPLETED */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Pos (4UL) /*!< Position of EVENTCHGCOMPLETED field.                   */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Pos) /*!<
                                                                            Bit mask of EVENTCHGCOMPLETED field.*/                
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCOMPLETED field.     */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCOMPLETED_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCOMPLETED field.     */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCOMPLETED_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGCOMPLETED_HIGH (0x1UL) /*!< high                                                */

/* EVENTCHGERROR @Bit 5 : Writing 1 enables interrupts from EVENTCHGERROR */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGERROR_Pos (5UL) /*!< Position of EVENTCHGERROR field.                           */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGERROR_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGERROR_Pos) /*!< Bit mask
                                                                            of EVENTCHGERROR field.*/                             
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGERROR_Min (0x0UL) /*!< Min enumerator value of EVENTCHGERROR field.             */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGERROR_Max (0x1UL) /*!< Max enumerator value of EVENTCHGERROR field.             */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGERROR_LOW (0x0UL) /*!< low                                                      */
  #define MAIN_INTENEVENTSBCHARGER1SET_EVENTCHGERROR_HIGH (0x1UL) /*!< high                                                    */


/* MAIN_INTENEVENTSBCHARGER1CLR: Battery Charger Status Events Interrupt Enable Clear */
  #define MAIN_INTENEVENTSBCHARGER1CLR_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSBCHARGER1CLR register.               */

/* EVENTSUPPLEMENT @Bit 0 : Writing 1 disables interrupts from EVENTSUPPLEMENT */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Pos (0UL) /*!< Position of EVENTSUPPLEMENT field.                       */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Pos) /*!< Bit
                                                                            mask of EVENTSUPPLEMENT field.*/                      
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Min (0x0UL) /*!< Min enumerator value of EVENTSUPPLEMENT field.         */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTSUPPLEMENT_Max (0x1UL) /*!< Max enumerator value of EVENTSUPPLEMENT field.         */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTSUPPLEMENT_LOW (0x0UL) /*!< low                                                    */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTSUPPLEMENT_HIGH (0x1UL) /*!< high                                                  */

/* EVENTCHGTRICKLE @Bit 1 : Writing 1 disables interrupts from EVENTCHGTRICKLE */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Pos (1UL) /*!< Position of EVENTCHGTRICKLE field.                       */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Pos) /*!< Bit
                                                                            mask of EVENTCHGTRICKLE field.*/                      
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Min (0x0UL) /*!< Min enumerator value of EVENTCHGTRICKLE field.         */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGTRICKLE_Max (0x1UL) /*!< Max enumerator value of EVENTCHGTRICKLE field.         */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGTRICKLE_LOW (0x0UL) /*!< low                                                    */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGTRICKLE_HIGH (0x1UL) /*!< high                                                  */

/* EVENTCHGCC @Bit 2 : Writing 1 disables interrupts from EVENTCHGCC */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCC_Pos (2UL) /*!< Position of EVENTCHGCC field.                                 */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCC_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCC_Pos) /*!< Bit mask of
                                                                            EVENTCHGCC field.*/                                   
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCC_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCC field.                   */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCC_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCC field.                   */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCC_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCC_HIGH (0x1UL) /*!< high                                                       */

/* EVENTCHGCV @Bit 3 : Writing 1 disables interrupts from EVENTCHGCV */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCV_Pos (3UL) /*!< Position of EVENTCHGCV field.                                 */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCV_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCV_Pos) /*!< Bit mask of
                                                                            EVENTCHGCV field.*/                                   
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCV_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCV field.                   */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCV_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCV field.                   */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCV_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCV_HIGH (0x1UL) /*!< high                                                       */

/* EVENTCHGCOMPLETED @Bit 4 : Writing 1 disables interrupts from EVENTCHGCOMPLETED */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Pos (4UL) /*!< Position of EVENTCHGCOMPLETED field.                   */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Pos) /*!<
                                                                            Bit mask of EVENTCHGCOMPLETED field.*/                
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Min (0x0UL) /*!< Min enumerator value of EVENTCHGCOMPLETED field.     */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_Max (0x1UL) /*!< Max enumerator value of EVENTCHGCOMPLETED field.     */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGCOMPLETED_HIGH (0x1UL) /*!< high                                                */

/* EVENTCHGERROR @Bit 5 : Writing 1 disables interrupts from EVENTCHGERROR */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGERROR_Pos (5UL) /*!< Position of EVENTCHGERROR field.                           */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGERROR_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGERROR_Pos) /*!< Bit mask
                                                                            of EVENTCHGERROR field.*/                             
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGERROR_Min (0x0UL) /*!< Min enumerator value of EVENTCHGERROR field.             */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGERROR_Max (0x1UL) /*!< Max enumerator value of EVENTCHGERROR field.             */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGERROR_LOW (0x0UL) /*!< low                                                      */
  #define MAIN_INTENEVENTSBCHARGER1CLR_EVENTCHGERROR_HIGH (0x1UL) /*!< high                                                    */


/* MAIN_EVENTSBCHARGER2SET: Battery Charger Battery Events Event Set */
  #define MAIN_EVENTSBCHARGER2SET_ResetValue (0x00UL) /*!< Reset value of EVENTSBCHARGER2SET register.                         */

/* EVENTBATDETECTED @Bit 0 : Event Battery Detected. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATDETECTED_Pos (0UL) /*!< Position of EVENTBATDETECTED field.                          */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATDETECTED_Msk (0x1UL << MAIN_EVENTSBCHARGER2SET_EVENTBATDETECTED_Pos) /*!< Bit mask of
                                                                            EVENTBATDETECTED field.*/                             
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTBATDETECTED field.            */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTBATDETECTED field.            */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATDETECTED_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATDETECTED_HIGH (0x1UL) /*!< high                                                      */

/* EVENTBATLOST @Bit 1 : Event Battery Lost. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATLOST_Pos (1UL) /*!< Position of EVENTBATLOST field.                                  */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATLOST_Msk (0x1UL << MAIN_EVENTSBCHARGER2SET_EVENTBATLOST_Pos) /*!< Bit mask of
                                                                            EVENTBATLOST field.*/                                 
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATLOST_Min (0x0UL) /*!< Min enumerator value of EVENTBATLOST field.                    */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATLOST_Max (0x1UL) /*!< Max enumerator value of EVENTBATLOST field.                    */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATLOST_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATLOST_HIGH (0x1UL) /*!< high                                                          */

/* EVENTBATRECHARGE @Bit 2 : Event Battery re-charge needed. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATRECHARGE_Pos (2UL) /*!< Position of EVENTBATRECHARGE field.                          */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATRECHARGE_Msk (0x1UL << MAIN_EVENTSBCHARGER2SET_EVENTBATRECHARGE_Pos) /*!< Bit mask of
                                                                            EVENTBATRECHARGE field.*/                             
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATRECHARGE_Min (0x0UL) /*!< Min enumerator value of EVENTBATRECHARGE field.            */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATRECHARGE_Max (0x1UL) /*!< Max enumerator value of EVENTBATRECHARGE field.            */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATRECHARGE_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_EVENTSBCHARGER2SET_EVENTBATRECHARGE_HIGH (0x1UL) /*!< high                                                      */


/* MAIN_EVENTSBCHARGER2CLR: Battery Charger Battery Events Event Clear */
  #define MAIN_EVENTSBCHARGER2CLR_ResetValue (0x00UL) /*!< Reset value of EVENTSBCHARGER2CLR register.                         */

/* EVENTBATDETECTED @Bit 0 : Event Battery Detected. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATDETECTED_Pos (0UL) /*!< Position of EVENTBATDETECTED field.                          */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATDETECTED_Msk (0x1UL << MAIN_EVENTSBCHARGER2CLR_EVENTBATDETECTED_Pos) /*!< Bit mask of
                                                                            EVENTBATDETECTED field.*/                             
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTBATDETECTED field.            */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTBATDETECTED field.            */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATDETECTED_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATDETECTED_HIGH (0x1UL) /*!< high                                                      */

/* EVENTBATLOST @Bit 1 : Event Battery Lost. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATLOST_Pos (1UL) /*!< Position of EVENTBATLOST field.                                  */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATLOST_Msk (0x1UL << MAIN_EVENTSBCHARGER2CLR_EVENTBATLOST_Pos) /*!< Bit mask of
                                                                            EVENTBATLOST field.*/                                 
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATLOST_Min (0x0UL) /*!< Min enumerator value of EVENTBATLOST field.                    */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATLOST_Max (0x1UL) /*!< Max enumerator value of EVENTBATLOST field.                    */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATLOST_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATLOST_HIGH (0x1UL) /*!< high                                                          */

/* EVENTBATRECHARGE @Bit 2 : Event Battery re-charge needed. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATRECHARGE_Pos (2UL) /*!< Position of EVENTBATRECHARGE field.                          */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATRECHARGE_Msk (0x1UL << MAIN_EVENTSBCHARGER2CLR_EVENTBATRECHARGE_Pos) /*!< Bit mask of
                                                                            EVENTBATRECHARGE field.*/                             
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATRECHARGE_Min (0x0UL) /*!< Min enumerator value of EVENTBATRECHARGE field.            */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATRECHARGE_Max (0x1UL) /*!< Max enumerator value of EVENTBATRECHARGE field.            */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATRECHARGE_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_EVENTSBCHARGER2CLR_EVENTBATRECHARGE_HIGH (0x1UL) /*!< high                                                      */


/* MAIN_INTENEVENTSBCHARGER2SET: Battery Charger Battery Events Interrupt Enable Set */
  #define MAIN_INTENEVENTSBCHARGER2SET_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSBCHARGER2SET register.               */

/* EVENTBATDETECTED @Bit 0 : Writing 1 enables interrupts from EVENTBATDETECTED */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATDETECTED_Pos (0UL) /*!< Position of EVENTBATDETECTED field.                     */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATDETECTED_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER2SET_EVENTBATDETECTED_Pos) /*!<
                                                                            Bit mask of EVENTBATDETECTED field.*/                 
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTBATDETECTED field.       */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTBATDETECTED field.       */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATDETECTED_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATDETECTED_HIGH (0x1UL) /*!< high                                                 */

/* EVENTBATLOST @Bit 1 : Writing 1 enables interrupts from EVENTBATLOST */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATLOST_Pos (1UL) /*!< Position of EVENTBATLOST field.                             */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATLOST_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER2SET_EVENTBATLOST_Pos) /*!< Bit mask
                                                                            of EVENTBATLOST field.*/                              
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATLOST_Min (0x0UL) /*!< Min enumerator value of EVENTBATLOST field.               */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATLOST_Max (0x1UL) /*!< Max enumerator value of EVENTBATLOST field.               */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATLOST_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATLOST_HIGH (0x1UL) /*!< high                                                     */

/* EVENTBATRECHARGE @Bit 2 : Writing 1 enables interrupts from EVENTBATRECHARGE */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATRECHARGE_Pos (2UL) /*!< Position of EVENTBATRECHARGE field.                     */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATRECHARGE_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER2SET_EVENTBATRECHARGE_Pos) /*!<
                                                                            Bit mask of EVENTBATRECHARGE field.*/                 
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATRECHARGE_Min (0x0UL) /*!< Min enumerator value of EVENTBATRECHARGE field.       */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATRECHARGE_Max (0x1UL) /*!< Max enumerator value of EVENTBATRECHARGE field.       */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATRECHARGE_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_INTENEVENTSBCHARGER2SET_EVENTBATRECHARGE_HIGH (0x1UL) /*!< high                                                 */


/* MAIN_INTENEVENTSBCHARGER2CLR: Battery Charger Battery Events Interrupt Enable Clear */
  #define MAIN_INTENEVENTSBCHARGER2CLR_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSBCHARGER2CLR register.               */

/* EVENTBATDETECTED @Bit 0 : Writing 1 disables interrupts from EVENTBATDETECTED */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATDETECTED_Pos (0UL) /*!< Position of EVENTBATDETECTED field.                     */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATDETECTED_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATDETECTED_Pos) /*!<
                                                                            Bit mask of EVENTBATDETECTED field.*/                 
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTBATDETECTED field.       */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTBATDETECTED field.       */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATDETECTED_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATDETECTED_HIGH (0x1UL) /*!< high                                                 */

/* EVENTBATLOST @Bit 1 : Writing 1 disables interrupts from EVENTBATLOST */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATLOST_Pos (1UL) /*!< Position of EVENTBATLOST field.                             */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATLOST_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATLOST_Pos) /*!< Bit mask
                                                                            of EVENTBATLOST field.*/                              
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATLOST_Min (0x0UL) /*!< Min enumerator value of EVENTBATLOST field.               */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATLOST_Max (0x1UL) /*!< Max enumerator value of EVENTBATLOST field.               */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATLOST_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATLOST_HIGH (0x1UL) /*!< high                                                     */

/* EVENTBATRECHARGE @Bit 2 : Writing 1 disables interrupts from EVENTBATRECHARGE */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATRECHARGE_Pos (2UL) /*!< Position of EVENTBATRECHARGE field.                     */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATRECHARGE_Msk (0x1UL << MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATRECHARGE_Pos) /*!<
                                                                            Bit mask of EVENTBATRECHARGE field.*/                 
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATRECHARGE_Min (0x0UL) /*!< Min enumerator value of EVENTBATRECHARGE field.       */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATRECHARGE_Max (0x1UL) /*!< Max enumerator value of EVENTBATRECHARGE field.       */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATRECHARGE_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_INTENEVENTSBCHARGER2CLR_EVENTBATRECHARGE_HIGH (0x1UL) /*!< high                                                 */


/* MAIN_EVENTSSHPHLDSET: ShipHold pin Events Event Set */
  #define MAIN_EVENTSSHPHLDSET_ResetValue (0x00UL)   /*!< Reset value of EVENTSSHPHLDSET register.                             */

/* EVENTSHPHLDBTNPRESS @Bit 0 : Event when Ship-Hold button is pressed. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Pos (0UL) /*!< Position of EVENTSHPHLDBTNPRESS field.                       */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Msk (0x1UL << MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Pos) /*!< Bit mask of
                                                                            EVENTSHPHLDBTNPRESS field.*/                          
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDBTNPRESS field.         */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDBTNPRESS field.         */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_HIGH (0x1UL) /*!< high                                                      */

/* EVENTSHPHLDBTNRELEASE @Bit 1 : Event when Ship-Hold button is Released. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Pos (1UL) /*!< Position of EVENTSHPHLDBTNRELEASE field.                   */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Msk (0x1UL << MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Pos) /*!< Bit mask
                                                                            of EVENTSHPHLDBTNRELEASE field.*/                     
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDBTNRELEASE field.     */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDBTNRELEASE field.     */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_LOW (0x0UL) /*!< low                                                      */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_HIGH (0x1UL) /*!< high                                                    */

/* EVENTSHPHLDEXIT @Bit 2 : Event when Ship-Hold button held to Exit. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDEXIT_Pos (2UL) /*!< Position of EVENTSHPHLDEXIT field.                               */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDEXIT_Msk (0x1UL << MAIN_EVENTSSHPHLDSET_EVENTSHPHLDEXIT_Pos) /*!< Bit mask of
                                                                            EVENTSHPHLDEXIT field.*/                              
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDEXIT_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDEXIT field.                 */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDEXIT_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDEXIT field.                 */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDEXIT_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSSHPHLDSET_EVENTSHPHLDEXIT_HIGH (0x1UL) /*!< high                                                          */

/* EVENTWATCHDOGWARN @Bit 3 : Event when Watchdog Timeout Warning detected. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSSHPHLDSET_EVENTWATCHDOGWARN_Pos (3UL) /*!< Position of EVENTWATCHDOGWARN field.                           */
  #define MAIN_EVENTSSHPHLDSET_EVENTWATCHDOGWARN_Msk (0x1UL << MAIN_EVENTSSHPHLDSET_EVENTWATCHDOGWARN_Pos) /*!< Bit mask of
                                                                            EVENTWATCHDOGWARN field.*/                            
  #define MAIN_EVENTSSHPHLDSET_EVENTWATCHDOGWARN_Min (0x0UL) /*!< Min enumerator value of EVENTWATCHDOGWARN field.             */
  #define MAIN_EVENTSSHPHLDSET_EVENTWATCHDOGWARN_Max (0x1UL) /*!< Max enumerator value of EVENTWATCHDOGWARN field.             */
  #define MAIN_EVENTSSHPHLDSET_EVENTWATCHDOGWARN_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_EVENTSSHPHLDSET_EVENTWATCHDOGWARN_HIGH (0x1UL) /*!< high                                                        */


/* MAIN_EVENTSSHPHLDCLR: ShipHold pin Events Event Clear */
  #define MAIN_EVENTSSHPHLDCLR_ResetValue (0x00UL)   /*!< Reset value of EVENTSSHPHLDCLR register.                             */

/* EVENTSHPHLDBTNPRESS @Bit 0 : Event when Ship-Hold button is pressed. Writing 1 clears the event (e.g. to acknowledge an
                                interrupt). */                                                                                    
                                                                                                                                  
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Pos (0UL) /*!< Position of EVENTSHPHLDBTNPRESS field.                       */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Msk (0x1UL << MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Pos) /*!< Bit mask of
                                                                            EVENTSHPHLDBTNPRESS field.*/                          
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDBTNPRESS field.         */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDBTNPRESS field.         */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_LOW (0x0UL) /*!< low                                                        */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_HIGH (0x1UL) /*!< high                                                      */

/* EVENTSHPHLDBTNRELEASE @Bit 1 : Event when Ship-Hold button is Released. Writing 1 clears the event (e.g. to acknowledge an
                                  interrupt). */                                                                                  
                                                                                                                                  
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Pos (1UL) /*!< Position of EVENTSHPHLDBTNRELEASE field.                   */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Msk (0x1UL << MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Pos) /*!< Bit mask
                                                                            of EVENTSHPHLDBTNRELEASE field.*/                     
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDBTNRELEASE field.     */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDBTNRELEASE field.     */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_LOW (0x0UL) /*!< low                                                      */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_HIGH (0x1UL) /*!< high                                                    */

/* EVENTSHPHLDEXIT @Bit 2 : Event when Ship-Hold button held to Exit. Writing 1 clears the event (e.g. to acknowledge an
                            interrupt). */                                                                                        
                                                                                                                                  
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Pos (2UL) /*!< Position of EVENTSHPHLDEXIT field.                               */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Msk (0x1UL << MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Pos) /*!< Bit mask of
                                                                            EVENTSHPHLDEXIT field.*/                              
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDEXIT field.                 */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDEXIT field.                 */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDEXIT_LOW (0x0UL) /*!< low                                                            */
  #define MAIN_EVENTSSHPHLDCLR_EVENTSHPHLDEXIT_HIGH (0x1UL) /*!< high                                                          */

/* EVENTWATCHDOGWARN @Bit 3 : Event when Watchdog Timeout Warning detected. Writing 1 clears the event (e.g. to acknowledge an
                              interrupt). */                                                                                      
                                                                                                                                  
  #define MAIN_EVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Pos (3UL) /*!< Position of EVENTWATCHDOGWARN field.                           */
  #define MAIN_EVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Msk (0x1UL << MAIN_EVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Pos) /*!< Bit mask of
                                                                            EVENTWATCHDOGWARN field.*/                            
  #define MAIN_EVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Min (0x0UL) /*!< Min enumerator value of EVENTWATCHDOGWARN field.             */
  #define MAIN_EVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Max (0x1UL) /*!< Max enumerator value of EVENTWATCHDOGWARN field.             */
  #define MAIN_EVENTSSHPHLDCLR_EVENTWATCHDOGWARN_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_EVENTSSHPHLDCLR_EVENTWATCHDOGWARN_HIGH (0x1UL) /*!< high                                                        */


/* MAIN_INTENEVENTSSHPHLDSET: ShipHold pin Events Interrupt Enable Set */
  #define MAIN_INTENEVENTSSHPHLDSET_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSSHPHLDSET register.                     */

/* EVENTSHPHLDBTNPRESS @Bit 0 : Writing 1 enables interrupts from EVENTSHPHLDBTNPRESS */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Pos (0UL) /*!< Position of EVENTSHPHLDBTNPRESS field.                  */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Msk (0x1UL << MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Pos) /*!<
                                                                            Bit mask of EVENTSHPHLDBTNPRESS field.*/              
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDBTNPRESS field.    */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDBTNPRESS field.    */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNPRESS_HIGH (0x1UL) /*!< high                                                 */

/* EVENTSHPHLDBTNRELEASE @Bit 1 : Writing 1 enables interrupts from EVENTSHPHLDBTNRELEASE */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Pos (1UL) /*!< Position of EVENTSHPHLDBTNRELEASE field.              */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Msk (0x1UL << MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Pos)
                                                                            /*!< Bit mask of EVENTSHPHLDBTNRELEASE field.*/       
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDBTNRELEASE field.*/
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDBTNRELEASE field.*/
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_LOW (0x0UL) /*!< low                                                 */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDBTNRELEASE_HIGH (0x1UL) /*!< high                                               */

/* EVENTSHPHLDEXIT @Bit 2 : Writing 1 enables interrupts from EVENTSHPHLDEXIT */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDEXIT_Pos (2UL) /*!< Position of EVENTSHPHLDEXIT field.                          */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDEXIT_Msk (0x1UL << MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDEXIT_Pos) /*!< Bit mask
                                                                            of EVENTSHPHLDEXIT field.*/                           
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDEXIT_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDEXIT field.            */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDEXIT_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDEXIT field.            */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDEXIT_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTSHPHLDEXIT_HIGH (0x1UL) /*!< high                                                     */

/* EVENTWATCHDOGWARN @Bit 3 : Writing 1 enables interrupts from EVENTWATCHDOGWARN */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTWATCHDOGWARN_Pos (3UL) /*!< Position of EVENTWATCHDOGWARN field.                      */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTWATCHDOGWARN_Msk (0x1UL << MAIN_INTENEVENTSSHPHLDSET_EVENTWATCHDOGWARN_Pos) /*!< Bit
                                                                            mask of EVENTWATCHDOGWARN field.*/                    
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTWATCHDOGWARN_Min (0x0UL) /*!< Min enumerator value of EVENTWATCHDOGWARN field.        */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTWATCHDOGWARN_Max (0x1UL) /*!< Max enumerator value of EVENTWATCHDOGWARN field.        */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTWATCHDOGWARN_LOW (0x0UL) /*!< low                                                     */
  #define MAIN_INTENEVENTSSHPHLDSET_EVENTWATCHDOGWARN_HIGH (0x1UL) /*!< high                                                   */


/* MAIN_INTENEVENTSSHPHLDCLR: ShipHold pin Events Interrupt Enable Clear */
  #define MAIN_INTENEVENTSSHPHLDCLR_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSSHPHLDCLR register.                     */

/* EVENTSHPHLDBTNPRESS @Bit 0 : Writing 1 disables interrupts from EVENTSHPHLDBTNPRESS */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Pos (0UL) /*!< Position of EVENTSHPHLDBTNPRESS field.                  */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Msk (0x1UL << MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Pos) /*!<
                                                                            Bit mask of EVENTSHPHLDBTNPRESS field.*/              
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDBTNPRESS field.    */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDBTNPRESS field.    */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNPRESS_HIGH (0x1UL) /*!< high                                                 */

/* EVENTSHPHLDBTNRELEASE @Bit 1 : Writing 1 disables interrupts from EVENTSHPHLDBTNRELEASE */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Pos (1UL) /*!< Position of EVENTSHPHLDBTNRELEASE field.              */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Msk (0x1UL << MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Pos)
                                                                            /*!< Bit mask of EVENTSHPHLDBTNRELEASE field.*/       
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDBTNRELEASE field.*/
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDBTNRELEASE field.*/
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_LOW (0x0UL) /*!< low                                                 */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDBTNRELEASE_HIGH (0x1UL) /*!< high                                               */

/* EVENTSHPHLDEXIT @Bit 2 : Writing 1 disables interrupts from EVENTSHPHLDEXIT */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Pos (2UL) /*!< Position of EVENTSHPHLDEXIT field.                          */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Msk (0x1UL << MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Pos) /*!< Bit mask
                                                                            of EVENTSHPHLDEXIT field.*/                           
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Min (0x0UL) /*!< Min enumerator value of EVENTSHPHLDEXIT field.            */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDEXIT_Max (0x1UL) /*!< Max enumerator value of EVENTSHPHLDEXIT field.            */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDEXIT_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTSHPHLDEXIT_HIGH (0x1UL) /*!< high                                                     */

/* EVENTWATCHDOGWARN @Bit 3 : Writing 1 disables interrupts from EVENTWATCHDOGWARN */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Pos (3UL) /*!< Position of EVENTWATCHDOGWARN field.                      */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Msk (0x1UL << MAIN_INTENEVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Pos) /*!< Bit
                                                                            mask of EVENTWATCHDOGWARN field.*/                    
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Min (0x0UL) /*!< Min enumerator value of EVENTWATCHDOGWARN field.        */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTWATCHDOGWARN_Max (0x1UL) /*!< Max enumerator value of EVENTWATCHDOGWARN field.        */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTWATCHDOGWARN_LOW (0x0UL) /*!< low                                                     */
  #define MAIN_INTENEVENTSSHPHLDCLR_EVENTWATCHDOGWARN_HIGH (0x1UL) /*!< high                                                   */


/* MAIN_EVENTSVBUSIN0SET: VBUSIN Voltage Detection Events Event Set */
  #define MAIN_EVENTSVBUSIN0SET_ResetValue (0x00UL)  /*!< Reset value of EVENTSVBUSIN0SET register.                            */

/* EVENTVBUSDETECTED @Bit 0 : Event VBUS input detected. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSDETECTED_Pos (0UL) /*!< Position of EVENTVBUSDETECTED field.                          */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN0SET_EVENTVBUSDETECTED_Pos) /*!< Bit mask of
                                                                            EVENTVBUSDETECTED field.*/                            
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSDETECTED field.            */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSDETECTED field.            */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSDETECTED_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSDETECTED_HIGH (0x1UL) /*!< high                                                       */

/* EVENTVBUSREMOVED @Bit 1 : Event VBUS input removed. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSREMOVED_Pos (1UL) /*!< Position of EVENTVBUSREMOVED field.                            */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN0SET_EVENTVBUSREMOVED_Pos) /*!< Bit mask of
                                                                            EVENTVBUSREMOVED field.*/                             
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSREMOVED field.              */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSREMOVED field.              */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSREMOVED_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSREMOVED_HIGH (0x1UL) /*!< high                                                        */

/* EVENTVBUSOVRVOLTDETECTED @Bit 2 : Event VBUS Over Voltage Detected. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Pos (2UL) /*!< Position of EVENTVBUSOVRVOLTDETECTED field.            */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Pos) /*!<
                                                                            Bit mask of EVENTVBUSOVRVOLTDETECTED field.*/         
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSOVRVOLTDETECTED
                                                                          field.*/                                                
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSOVRVOLTDETECTED
                                                                          field.*/                                                
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_HIGH (0x1UL) /*!< high                                                */

/* EVENTVBUSOVRVOLTREMOVED @Bit 3 : Event VBUS Over Removed. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Pos (3UL) /*!< Position of EVENTVBUSOVRVOLTREMOVED field.              */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Pos) /*!<
                                                                            Bit mask of EVENTVBUSOVRVOLTREMOVED field.*/          
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSOVRVOLTREMOVED field.*/
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSOVRVOLTREMOVED field.*/
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_EVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_HIGH (0x1UL) /*!< high                                                 */

/* EVENTUNDERVOLTDETECTED @Bit 4 : Event VBUS Under Voltage Detected. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Pos (4UL) /*!< Position of EVENTUNDERVOLTDETECTED field.                */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Pos) /*!< Bit
                                                                            mask of EVENTUNDERVOLTDETECTED field.*/               
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTUNDERVOLTDETECTED field.  */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTUNDERVOLTDETECTED field.  */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_LOW (0x0UL) /*!< low                                                    */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_HIGH (0x1UL) /*!< high                                                  */

/* EVENTUNDERVOLTREMOVED @Bit 5 : Event VBUS Under Removed. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Pos (5UL) /*!< Position of EVENTUNDERVOLTREMOVED field.                  */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Pos) /*!< Bit
                                                                            mask of EVENTUNDERVOLTREMOVED field.*/                
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTUNDERVOLTREMOVED field.    */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTUNDERVOLTREMOVED field.    */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_LOW (0x0UL) /*!< low                                                     */
  #define MAIN_EVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_HIGH (0x1UL) /*!< high                                                   */


/* MAIN_EVENTSVBUSIN0CLR: VBUSIN Voltage Detection Events Event Clear */
  #define MAIN_EVENTSVBUSIN0CLR_ResetValue (0x00UL)  /*!< Reset value of EVENTSVBUSIN0CLR register.                            */

/* EVENTVBUSDETECTED @Bit 0 : Event VBUS input detected. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Pos (0UL) /*!< Position of EVENTVBUSDETECTED field.                          */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Pos) /*!< Bit mask of
                                                                            EVENTVBUSDETECTED field.*/                            
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSDETECTED field.            */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSDETECTED field.            */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSDETECTED_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSDETECTED_HIGH (0x1UL) /*!< high                                                       */

/* EVENTVBUSREMOVED @Bit 1 : Event VBUS input removed. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Pos (1UL) /*!< Position of EVENTVBUSREMOVED field.                            */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Pos) /*!< Bit mask of
                                                                            EVENTVBUSREMOVED field.*/                             
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSREMOVED field.              */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSREMOVED field.              */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSREMOVED_LOW (0x0UL) /*!< low                                                          */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSREMOVED_HIGH (0x1UL) /*!< high                                                        */

/* EVENTVBUSOVRVOLTDETECTED @Bit 2 : Event VBUS Over Voltage Detected. Writing 1 clears the event (e.g. to acknowledge an
                                     interrupt). */                                                                               
                                                                                                                                  
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Pos (2UL) /*!< Position of EVENTVBUSOVRVOLTDETECTED field.            */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Pos) /*!<
                                                                            Bit mask of EVENTVBUSOVRVOLTDETECTED field.*/         
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSOVRVOLTDETECTED
                                                                          field.*/                                                
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSOVRVOLTDETECTED
                                                                          field.*/                                                
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_HIGH (0x1UL) /*!< high                                                */

/* EVENTVBUSOVRVOLTREMOVED @Bit 3 : Event VBUS Over Removed. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Pos (3UL) /*!< Position of EVENTVBUSOVRVOLTREMOVED field.              */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Pos) /*!<
                                                                            Bit mask of EVENTVBUSOVRVOLTREMOVED field.*/          
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSOVRVOLTREMOVED field.*/
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSOVRVOLTREMOVED field.*/
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_HIGH (0x1UL) /*!< high                                                 */

/* EVENTUNDERVOLTDETECTED @Bit 4 : Event VBUS Under Voltage Detected. Writing 1 clears the event (e.g. to acknowledge an
                                   interrupt). */                                                                                 
                                                                                                                                  
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Pos (4UL) /*!< Position of EVENTUNDERVOLTDETECTED field.                */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Pos) /*!< Bit
                                                                            mask of EVENTUNDERVOLTDETECTED field.*/               
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTUNDERVOLTDETECTED field.  */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTUNDERVOLTDETECTED field.  */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_LOW (0x0UL) /*!< low                                                    */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_HIGH (0x1UL) /*!< high                                                  */

/* EVENTUNDERVOLTREMOVED @Bit 5 : Event VBUS Under Removed. Writing 1 clears the event (e.g. to acknowledge an interrupt). */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Pos (5UL) /*!< Position of EVENTUNDERVOLTREMOVED field.                  */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Pos) /*!< Bit
                                                                            mask of EVENTUNDERVOLTREMOVED field.*/                
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTUNDERVOLTREMOVED field.    */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTUNDERVOLTREMOVED field.    */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_LOW (0x0UL) /*!< low                                                     */
  #define MAIN_EVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_HIGH (0x1UL) /*!< high                                                   */


/* MAIN_INTENEVENTSVBUSIN0SET: VBUSIN Voltage Detection Events Interrupt Enable Set */
  #define MAIN_INTENEVENTSVBUSIN0SET_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSVBUSIN0SET register.                   */

/* EVENTVBUSDETECTED @Bit 0 : Writing 1 enables interrupts from EVENTVBUSDETECTED */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSDETECTED_Pos (0UL) /*!< Position of EVENTVBUSDETECTED field.                     */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSDETECTED_Pos) /*!< Bit
                                                                            mask of EVENTVBUSDETECTED field.*/                    
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSDETECTED field.       */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSDETECTED field.       */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSDETECTED_LOW (0x0UL) /*!< low                                                    */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSDETECTED_HIGH (0x1UL) /*!< high                                                  */

/* EVENTVBUSREMOVED @Bit 1 : Writing 1 enables interrupts from EVENTVBUSREMOVED */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSREMOVED_Pos (1UL) /*!< Position of EVENTVBUSREMOVED field.                       */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSREMOVED_Pos) /*!< Bit
                                                                            mask of EVENTVBUSREMOVED field.*/                     
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSREMOVED field.         */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSREMOVED field.         */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSREMOVED_LOW (0x0UL) /*!< low                                                     */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSREMOVED_HIGH (0x1UL) /*!< high                                                   */

/* EVENTVBUSOVRVOLTDETECTED @Bit 2 : Writing 1 enables interrupts from EVENTVBUSOVRVOLTDETECTED */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Pos (2UL) /*!< Position of EVENTVBUSOVRVOLTDETECTED field.       */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTVBUSOVRVOLTDETECTED field.*/    
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSOVRVOLTDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSOVRVOLTDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_LOW (0x0UL) /*!< low                                             */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTDETECTED_HIGH (0x1UL) /*!< high                                           */

/* EVENTVBUSOVRVOLTREMOVED @Bit 3 : Writing 1 enables interrupts from EVENTVBUSOVRVOLTREMOVED */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Pos (3UL) /*!< Position of EVENTVBUSOVRVOLTREMOVED field.         */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTVBUSOVRVOLTREMOVED field.*/     
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSOVRVOLTREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSOVRVOLTREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_LOW (0x0UL) /*!< low                                              */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTVBUSOVRVOLTREMOVED_HIGH (0x1UL) /*!< high                                            */

/* EVENTUNDERVOLTDETECTED @Bit 4 : Writing 1 enables interrupts from EVENTUNDERVOLTDETECTED */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Pos (4UL) /*!< Position of EVENTUNDERVOLTDETECTED field.           */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTUNDERVOLTDETECTED field.*/      
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTUNDERVOLTDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTUNDERVOLTDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_LOW (0x0UL) /*!< low                                               */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTDETECTED_HIGH (0x1UL) /*!< high                                             */

/* EVENTUNDERVOLTREMOVED @Bit 5 : Writing 1 enables interrupts from EVENTUNDERVOLTREMOVED */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Pos (5UL) /*!< Position of EVENTUNDERVOLTREMOVED field.             */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTUNDERVOLTREMOVED field.*/       
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTUNDERVOLTREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTUNDERVOLTREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_LOW (0x0UL) /*!< low                                                */
  #define MAIN_INTENEVENTSVBUSIN0SET_EVENTUNDERVOLTREMOVED_HIGH (0x1UL) /*!< high                                              */


/* MAIN_INTENEVENTSVBUSIN0CLR: VBUSIN Voltage Detection Events Interrupt Enable Clear */
  #define MAIN_INTENEVENTSVBUSIN0CLR_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSVBUSIN0CLR register.                   */

/* EVENTVBUSDETECTED @Bit 0 : Writing 1 disables interrupts from EVENTVBUSDETECTED */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Pos (0UL) /*!< Position of EVENTVBUSDETECTED field.                     */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Pos) /*!< Bit
                                                                            mask of EVENTVBUSDETECTED field.*/                    
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSDETECTED field.       */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSDETECTED field.       */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSDETECTED_LOW (0x0UL) /*!< low                                                    */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSDETECTED_HIGH (0x1UL) /*!< high                                                  */

/* EVENTVBUSREMOVED @Bit 1 : Writing 1 disables interrupts from EVENTVBUSREMOVED */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Pos (1UL) /*!< Position of EVENTVBUSREMOVED field.                       */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Pos) /*!< Bit
                                                                            mask of EVENTVBUSREMOVED field.*/                     
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSREMOVED field.         */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSREMOVED field.         */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSREMOVED_LOW (0x0UL) /*!< low                                                     */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSREMOVED_HIGH (0x1UL) /*!< high                                                   */

/* EVENTVBUSOVRVOLTDETECTED @Bit 2 : Writing 1 disables interrupts from EVENTVBUSOVRVOLTDETECTED */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Pos (2UL) /*!< Position of EVENTVBUSOVRVOLTDETECTED field.       */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTVBUSOVRVOLTDETECTED field.*/    
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSOVRVOLTDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSOVRVOLTDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_LOW (0x0UL) /*!< low                                             */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTDETECTED_HIGH (0x1UL) /*!< high                                           */

/* EVENTVBUSOVRVOLTREMOVED @Bit 3 : Writing 1 disables interrupts from EVENTVBUSOVRVOLTREMOVED */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Pos (3UL) /*!< Position of EVENTVBUSOVRVOLTREMOVED field.         */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTVBUSOVRVOLTREMOVED field.*/     
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTVBUSOVRVOLTREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTVBUSOVRVOLTREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_LOW (0x0UL) /*!< low                                              */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTVBUSOVRVOLTREMOVED_HIGH (0x1UL) /*!< high                                            */

/* EVENTUNDERVOLTDETECTED @Bit 4 : Writing 1 disables interrupts from EVENTUNDERVOLTDETECTED */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Pos (4UL) /*!< Position of EVENTUNDERVOLTDETECTED field.           */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTUNDERVOLTDETECTED field.*/      
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTUNDERVOLTDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTUNDERVOLTDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_LOW (0x0UL) /*!< low                                               */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTDETECTED_HIGH (0x1UL) /*!< high                                             */

/* EVENTUNDERVOLTREMOVED @Bit 5 : Writing 1 disables interrupts from EVENTUNDERVOLTREMOVED */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Pos (5UL) /*!< Position of EVENTUNDERVOLTREMOVED field.             */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTUNDERVOLTREMOVED field.*/       
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTUNDERVOLTREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTUNDERVOLTREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_LOW (0x0UL) /*!< low                                                */
  #define MAIN_INTENEVENTSVBUSIN0CLR_EVENTUNDERVOLTREMOVED_HIGH (0x1UL) /*!< high                                              */


/* MAIN_EVENTSVBUSIN1SET: VBUSIN Thermal and USB Events Event Set */
  #define MAIN_EVENTSVBUSIN1SET_ResetValue (0x00UL)  /*!< Reset value of EVENTSVBUSIN1SET register.                            */

/* EVENTTHERMALWARNDETECTED @Bit 0 : Event Thermal Warning detected. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Pos (0UL) /*!< Position of EVENTTHERMALWARNDETECTED field.            */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Pos) /*!<
                                                                            Bit mask of EVENTTHERMALWARNDETECTED field.*/         
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALWARNDETECTED
                                                                          field.*/                                                
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALWARNDETECTED
                                                                          field.*/                                                
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_HIGH (0x1UL) /*!< high                                                */

/* EVENTTHERMALWARNREMOVED @Bit 1 : Event Thermal Warning removed. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Pos (1UL) /*!< Position of EVENTTHERMALWARNREMOVED field.              */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Pos) /*!<
                                                                            Bit mask of EVENTTHERMALWARNREMOVED field.*/          
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALWARNREMOVED field.*/
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALWARNREMOVED field.*/
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_HIGH (0x1UL) /*!< high                                                 */

/* EVENTTHERMALSHUTDOWNDETECTED @Bit 2 : Event Thermal Shutown detected. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Pos (2UL) /*!< Position of EVENTTHERMALSHUTDOWNDETECTED field.    */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALSHUTDOWNDETECTED
                                                                            field.*/                                              
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Min (0x0UL) /*!< Min enumerator value of
                                                                            EVENTTHERMALSHUTDOWNDETECTED field.*/                 
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Max (0x1UL) /*!< Max enumerator value of
                                                                            EVENTTHERMALSHUTDOWNDETECTED field.*/                 
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_LOW (0x0UL) /*!< low                                              */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_HIGH (0x1UL) /*!< high                                            */

/* EVENTTHERMALSHUTDOWNREMOVED @Bit 3 : Event Thermal Shutdown removed. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Pos (3UL) /*!< Position of EVENTTHERMALSHUTDOWNREMOVED field.      */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALSHUTDOWNREMOVED field.*/ 
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALSHUTDOWNREMOVED
                                                                            field.*/                                              
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALSHUTDOWNREMOVED
                                                                            field.*/                                              
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_LOW (0x0UL) /*!< low                                               */
  #define MAIN_EVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_HIGH (0x1UL) /*!< high                                             */

/* EVENTCC1STATECHANGE @Bit 4 : Event when Voltage on CC1 changes. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Pos (4UL) /*!< Position of EVENTCC1STATECHANGE field.                      */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Msk (0x1UL << MAIN_EVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Pos) /*!< Bit mask
                                                                            of EVENTCC1STATECHANGE field.*/                       
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Min (0x0UL) /*!< Min enumerator value of EVENTCC1STATECHANGE field.        */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Max (0x1UL) /*!< Max enumerator value of EVENTCC1STATECHANGE field.        */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC1STATECHANGE_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC1STATECHANGE_HIGH (0x1UL) /*!< high                                                     */

/* EVENTCC2STATECHANGE @Bit 5 : Event when Voltage on CC2 changes. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Pos (5UL) /*!< Position of EVENTCC2STATECHANGE field.                      */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Msk (0x1UL << MAIN_EVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Pos) /*!< Bit mask
                                                                            of EVENTCC2STATECHANGE field.*/                       
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Min (0x0UL) /*!< Min enumerator value of EVENTCC2STATECHANGE field.        */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Max (0x1UL) /*!< Max enumerator value of EVENTCC2STATECHANGE field.        */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC2STATECHANGE_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_EVENTSVBUSIN1SET_EVENTCC2STATECHANGE_HIGH (0x1UL) /*!< high                                                     */


/* MAIN_EVENTSVBUSIN1CLR: VBUSIN Thermal and USB Events Event Clear */
  #define MAIN_EVENTSVBUSIN1CLR_ResetValue (0x00UL)  /*!< Reset value of EVENTSVBUSIN1CLR register.                            */

/* EVENTTHERMALWARNDETECTED @Bit 0 : Event Thermal Warning detected. Writing 1 clears the event (e.g. to acknowledge an
                                     interrupt). */                                                                               
                                                                                                                                  
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Pos (0UL) /*!< Position of EVENTTHERMALWARNDETECTED field.            */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Pos) /*!<
                                                                            Bit mask of EVENTTHERMALWARNDETECTED field.*/         
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALWARNDETECTED
                                                                          field.*/                                                
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALWARNDETECTED
                                                                          field.*/                                                
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_HIGH (0x1UL) /*!< high                                                */

/* EVENTTHERMALWARNREMOVED @Bit 1 : Event Thermal Warning removed. Writing 1 clears the event (e.g. to acknowledge an
                                    interrupt). */                                                                                
                                                                                                                                  
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Pos (1UL) /*!< Position of EVENTTHERMALWARNREMOVED field.              */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Pos) /*!<
                                                                            Bit mask of EVENTTHERMALWARNREMOVED field.*/          
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALWARNREMOVED field.*/
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALWARNREMOVED field.*/
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_LOW (0x0UL) /*!< low                                                   */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_HIGH (0x1UL) /*!< high                                                 */

/* EVENTTHERMALSHUTDOWNDETECTED @Bit 2 : Event Thermal Shutown detected. Writing 1 clears the event (e.g. to acknowledge an
                                         interrupt). */                                                                           
                                                                                                                                  
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Pos (2UL) /*!< Position of EVENTTHERMALSHUTDOWNDETECTED field.    */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Msk (0x1UL << MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALSHUTDOWNDETECTED
                                                                            field.*/                                              
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Min (0x0UL) /*!< Min enumerator value of
                                                                            EVENTTHERMALSHUTDOWNDETECTED field.*/                 
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Max (0x1UL) /*!< Max enumerator value of
                                                                            EVENTTHERMALSHUTDOWNDETECTED field.*/                 
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_LOW (0x0UL) /*!< low                                              */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_HIGH (0x1UL) /*!< high                                            */

/* EVENTTHERMALSHUTDOWNREMOVED @Bit 3 : Event Thermal Shutdown removed. Writing 1 clears the event (e.g. to acknowledge an
                                        interrupt). */                                                                            
                                                                                                                                  
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Pos (3UL) /*!< Position of EVENTTHERMALSHUTDOWNREMOVED field.      */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Msk (0x1UL << MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALSHUTDOWNREMOVED field.*/ 
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALSHUTDOWNREMOVED
                                                                            field.*/                                              
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALSHUTDOWNREMOVED
                                                                            field.*/                                              
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_LOW (0x0UL) /*!< low                                               */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_HIGH (0x1UL) /*!< high                                             */

/* EVENTCC1STATECHANGE @Bit 4 : Event when Voltage on CC1 changes. Writing 1 clears the event (e.g. to acknowledge an
                                interrupt). */                                                                                    
                                                                                                                                  
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Pos (4UL) /*!< Position of EVENTCC1STATECHANGE field.                      */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Msk (0x1UL << MAIN_EVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Pos) /*!< Bit mask
                                                                            of EVENTCC1STATECHANGE field.*/                       
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Min (0x0UL) /*!< Min enumerator value of EVENTCC1STATECHANGE field.        */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Max (0x1UL) /*!< Max enumerator value of EVENTCC1STATECHANGE field.        */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_HIGH (0x1UL) /*!< high                                                     */

/* EVENTCC2STATECHANGE @Bit 5 : Event when Voltage on CC2 changes. Writing 1 clears the event (e.g. to acknowledge an
                                interrupt). */                                                                                    
                                                                                                                                  
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Pos (5UL) /*!< Position of EVENTCC2STATECHANGE field.                      */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Msk (0x1UL << MAIN_EVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Pos) /*!< Bit mask
                                                                            of EVENTCC2STATECHANGE field.*/                       
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Min (0x0UL) /*!< Min enumerator value of EVENTCC2STATECHANGE field.        */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Max (0x1UL) /*!< Max enumerator value of EVENTCC2STATECHANGE field.        */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_LOW (0x0UL) /*!< low                                                       */
  #define MAIN_EVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_HIGH (0x1UL) /*!< high                                                     */


/* MAIN_INTENEVENTSVBUSIN1SET: VBUSIN Thermal and USB Events Interrupt Enable Set */
  #define MAIN_INTENEVENTSVBUSIN1SET_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSVBUSIN1SET register.                   */

/* EVENTTHERMALWARNDETECTED @Bit 0 : Writing 1 enables interrupts from EVENTTHERMALWARNDETECTED */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Pos (0UL) /*!< Position of EVENTTHERMALWARNDETECTED field.       */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALWARNDETECTED field.*/    
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALWARNDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALWARNDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_LOW (0x0UL) /*!< low                                             */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNDETECTED_HIGH (0x1UL) /*!< high                                           */

/* EVENTTHERMALWARNREMOVED @Bit 1 : Writing 1 enables interrupts from EVENTTHERMALWARNREMOVED */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Pos (1UL) /*!< Position of EVENTTHERMALWARNREMOVED field.         */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALWARNREMOVED field.*/     
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALWARNREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALWARNREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_LOW (0x0UL) /*!< low                                              */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALWARNREMOVED_HIGH (0x1UL) /*!< high                                            */

/* EVENTTHERMALSHUTDOWNDETECTED @Bit 2 : Writing 1 enables interrupts from EVENTTHERMALSHUTDOWNDETECTED */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Pos (2UL) /*!< Position of EVENTTHERMALSHUTDOWNDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALSHUTDOWNDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Min (0x0UL) /*!< Min enumerator value of
                                                                            EVENTTHERMALSHUTDOWNDETECTED field.*/                 
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_Max (0x1UL) /*!< Max enumerator value of
                                                                            EVENTTHERMALSHUTDOWNDETECTED field.*/                 
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_LOW (0x0UL) /*!< low                                         */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNDETECTED_HIGH (0x1UL) /*!< high                                       */

/* EVENTTHERMALSHUTDOWNREMOVED @Bit 3 : Writing 1 enables interrupts from EVENTTHERMALSHUTDOWNREMOVED */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Pos (3UL) /*!< Position of EVENTTHERMALSHUTDOWNREMOVED field. */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALSHUTDOWNREMOVED field.*/ 
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Min (0x0UL) /*!< Min enumerator value of
                                                                            EVENTTHERMALSHUTDOWNREMOVED field.*/                  
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_Max (0x1UL) /*!< Max enumerator value of
                                                                            EVENTTHERMALSHUTDOWNREMOVED field.*/                  
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_LOW (0x0UL) /*!< low                                          */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTTHERMALSHUTDOWNREMOVED_HIGH (0x1UL) /*!< high                                        */

/* EVENTCC1STATECHANGE @Bit 4 : Writing 1 enables interrupts from EVENTCC1STATECHANGE */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Pos (4UL) /*!< Position of EVENTCC1STATECHANGE field.                 */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Pos) /*!<
                                                                            Bit mask of EVENTCC1STATECHANGE field.*/              
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Min (0x0UL) /*!< Min enumerator value of EVENTCC1STATECHANGE field.   */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC1STATECHANGE_Max (0x1UL) /*!< Max enumerator value of EVENTCC1STATECHANGE field.   */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC1STATECHANGE_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC1STATECHANGE_HIGH (0x1UL) /*!< high                                                */

/* EVENTCC2STATECHANGE @Bit 5 : Writing 1 enables interrupts from EVENTCC2STATECHANGE */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Pos (5UL) /*!< Position of EVENTCC2STATECHANGE field.                 */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Pos) /*!<
                                                                            Bit mask of EVENTCC2STATECHANGE field.*/              
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Min (0x0UL) /*!< Min enumerator value of EVENTCC2STATECHANGE field.   */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC2STATECHANGE_Max (0x1UL) /*!< Max enumerator value of EVENTCC2STATECHANGE field.   */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC2STATECHANGE_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_INTENEVENTSVBUSIN1SET_EVENTCC2STATECHANGE_HIGH (0x1UL) /*!< high                                                */


/* MAIN_INTENEVENTSVBUSIN1CLR: VBUSIN Thermal and USB Events Interrupt Enable Clear */
  #define MAIN_INTENEVENTSVBUSIN1CLR_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSVBUSIN1CLR register.                   */

/* EVENTTHERMALWARNDETECTED @Bit 0 : Writing 1 disables interrupts from EVENTTHERMALWARNDETECTED */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Pos (0UL) /*!< Position of EVENTTHERMALWARNDETECTED field.       */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALWARNDETECTED field.*/    
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALWARNDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALWARNDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_LOW (0x0UL) /*!< low                                             */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNDETECTED_HIGH (0x1UL) /*!< high                                           */

/* EVENTTHERMALWARNREMOVED @Bit 1 : Writing 1 disables interrupts from EVENTTHERMALWARNREMOVED */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Pos (1UL) /*!< Position of EVENTTHERMALWARNREMOVED field.         */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALWARNREMOVED field.*/     
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Min (0x0UL) /*!< Min enumerator value of EVENTTHERMALWARNREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_Max (0x1UL) /*!< Max enumerator value of EVENTTHERMALWARNREMOVED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_LOW (0x0UL) /*!< low                                              */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALWARNREMOVED_HIGH (0x1UL) /*!< high                                            */

/* EVENTTHERMALSHUTDOWNDETECTED @Bit 2 : Writing 1 disables interrupts from EVENTTHERMALSHUTDOWNDETECTED */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Pos (2UL) /*!< Position of EVENTTHERMALSHUTDOWNDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALSHUTDOWNDETECTED
                                                                            field.*/                                              
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Min (0x0UL) /*!< Min enumerator value of
                                                                            EVENTTHERMALSHUTDOWNDETECTED field.*/                 
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_Max (0x1UL) /*!< Max enumerator value of
                                                                            EVENTTHERMALSHUTDOWNDETECTED field.*/                 
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_LOW (0x0UL) /*!< low                                         */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNDETECTED_HIGH (0x1UL) /*!< high                                       */

/* EVENTTHERMALSHUTDOWNREMOVED @Bit 3 : Writing 1 disables interrupts from EVENTTHERMALSHUTDOWNREMOVED */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Pos (3UL) /*!< Position of EVENTTHERMALSHUTDOWNREMOVED field. */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Pos)
                                                                            /*!< Bit mask of EVENTTHERMALSHUTDOWNREMOVED field.*/ 
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Min (0x0UL) /*!< Min enumerator value of
                                                                            EVENTTHERMALSHUTDOWNREMOVED field.*/                  
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_Max (0x1UL) /*!< Max enumerator value of
                                                                            EVENTTHERMALSHUTDOWNREMOVED field.*/                  
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_LOW (0x0UL) /*!< low                                          */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTTHERMALSHUTDOWNREMOVED_HIGH (0x1UL) /*!< high                                        */

/* EVENTCC1STATECHANGE @Bit 4 : Writing 1 disables interrupts from EVENTCC1STATECHANGE */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Pos (4UL) /*!< Position of EVENTCC1STATECHANGE field.                 */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Pos) /*!<
                                                                            Bit mask of EVENTCC1STATECHANGE field.*/              
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Min (0x0UL) /*!< Min enumerator value of EVENTCC1STATECHANGE field.   */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_Max (0x1UL) /*!< Max enumerator value of EVENTCC1STATECHANGE field.   */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC1STATECHANGE_HIGH (0x1UL) /*!< high                                                */

/* EVENTCC2STATECHANGE @Bit 5 : Writing 1 disables interrupts from EVENTCC2STATECHANGE */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Pos (5UL) /*!< Position of EVENTCC2STATECHANGE field.                 */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Msk (0x1UL << MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Pos) /*!<
                                                                            Bit mask of EVENTCC2STATECHANGE field.*/              
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Min (0x0UL) /*!< Min enumerator value of EVENTCC2STATECHANGE field.   */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_Max (0x1UL) /*!< Max enumerator value of EVENTCC2STATECHANGE field.   */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_LOW (0x0UL) /*!< low                                                  */
  #define MAIN_INTENEVENTSVBUSIN1CLR_EVENTCC2STATECHANGE_HIGH (0x1UL) /*!< high                                                */


/* MAIN_EVENTSUSBBSET: USB-B Event Event Set */
  #define MAIN_EVENTSUSBBSET_ResetValue (0x00UL)     /*!< Reset value of EVENTSUSBBSET register.                               */

/* EVENTUSBBDETECT @Bit 0 : Event upon USB-B DP/DN detection complete. Writing 1 sets the event (for debugging). */
  #define MAIN_EVENTSUSBBSET_EVENTUSBBDETECT_Pos (0UL) /*!< Position of EVENTUSBBDETECT field.                                 */
  #define MAIN_EVENTSUSBBSET_EVENTUSBBDETECT_Msk (0x1UL << MAIN_EVENTSUSBBSET_EVENTUSBBDETECT_Pos) /*!< Bit mask of
                                                                            EVENTUSBBDETECT field.*/                              
  #define MAIN_EVENTSUSBBSET_EVENTUSBBDETECT_Min (0x0UL) /*!< Min enumerator value of EVENTUSBBDETECT field.                   */
  #define MAIN_EVENTSUSBBSET_EVENTUSBBDETECT_Max (0x1UL) /*!< Max enumerator value of EVENTUSBBDETECT field.                   */
  #define MAIN_EVENTSUSBBSET_EVENTUSBBDETECT_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSUSBBSET_EVENTUSBBDETECT_HIGH (0x1UL) /*!< high                                                            */


/* MAIN_EVENTSUSBBCLR: USB-B Event Event Clear */
  #define MAIN_EVENTSUSBBCLR_ResetValue (0x00UL)     /*!< Reset value of EVENTSUSBBCLR register.                               */

/* EVENTUSBBDETECT @Bit 0 : Event upon USB-B DP/DN detection complete. Writing 1 clears the event (e.g. to acknowledge an
                            interrupt). */                                                                                        
                                                                                                                                  
  #define MAIN_EVENTSUSBBCLR_EVENTUSBBDETECT_Pos (0UL) /*!< Position of EVENTUSBBDETECT field.                                 */
  #define MAIN_EVENTSUSBBCLR_EVENTUSBBDETECT_Msk (0x1UL << MAIN_EVENTSUSBBCLR_EVENTUSBBDETECT_Pos) /*!< Bit mask of
                                                                            EVENTUSBBDETECT field.*/                              
  #define MAIN_EVENTSUSBBCLR_EVENTUSBBDETECT_Min (0x0UL) /*!< Min enumerator value of EVENTUSBBDETECT field.                   */
  #define MAIN_EVENTSUSBBCLR_EVENTUSBBDETECT_Max (0x1UL) /*!< Max enumerator value of EVENTUSBBDETECT field.                   */
  #define MAIN_EVENTSUSBBCLR_EVENTUSBBDETECT_LOW (0x0UL) /*!< low                                                              */
  #define MAIN_EVENTSUSBBCLR_EVENTUSBBDETECT_HIGH (0x1UL) /*!< high                                                            */


/* MAIN_INTENEVENTSUSBBSET: USB-B Event Interrupt Enable Set */
  #define MAIN_INTENEVENTSUSBBSET_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSUSBBSET register.                         */

/* EVENTUSBBDETECT @Bit 0 : Writing 1 enables interrupts from EVENTUSBBDETECT */
  #define MAIN_INTENEVENTSUSBBSET_EVENTUSBBDETECT_Pos (0UL) /*!< Position of EVENTUSBBDETECT field.                            */
  #define MAIN_INTENEVENTSUSBBSET_EVENTUSBBDETECT_Msk (0x1UL << MAIN_INTENEVENTSUSBBSET_EVENTUSBBDETECT_Pos) /*!< Bit mask of
                                                                            EVENTUSBBDETECT field.*/                              
  #define MAIN_INTENEVENTSUSBBSET_EVENTUSBBDETECT_Min (0x0UL) /*!< Min enumerator value of EVENTUSBBDETECT field.              */
  #define MAIN_INTENEVENTSUSBBSET_EVENTUSBBDETECT_Max (0x1UL) /*!< Max enumerator value of EVENTUSBBDETECT field.              */
  #define MAIN_INTENEVENTSUSBBSET_EVENTUSBBDETECT_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSUSBBSET_EVENTUSBBDETECT_HIGH (0x1UL) /*!< high                                                       */


/* MAIN_INTENEVENTSUSBBCLR: USB-B Event Interrupt Enable Clear */
  #define MAIN_INTENEVENTSUSBBCLR_ResetValue (0x00UL) /*!< Reset value of INTENEVENTSUSBBCLR register.                         */

/* EVENTUSBBDETECT @Bit 0 : Writing 1 disables interrupts from EVENTUSBBDETECT */
  #define MAIN_INTENEVENTSUSBBCLR_EVENTUSBBDETECT_Pos (0UL) /*!< Position of EVENTUSBBDETECT field.                            */
  #define MAIN_INTENEVENTSUSBBCLR_EVENTUSBBDETECT_Msk (0x1UL << MAIN_INTENEVENTSUSBBCLR_EVENTUSBBDETECT_Pos) /*!< Bit mask of
                                                                            EVENTUSBBDETECT field.*/                              
  #define MAIN_INTENEVENTSUSBBCLR_EVENTUSBBDETECT_Min (0x0UL) /*!< Min enumerator value of EVENTUSBBDETECT field.              */
  #define MAIN_INTENEVENTSUSBBCLR_EVENTUSBBDETECT_Max (0x1UL) /*!< Max enumerator value of EVENTUSBBDETECT field.              */
  #define MAIN_INTENEVENTSUSBBCLR_EVENTUSBBDETECT_LOW (0x0UL) /*!< low                                                         */
  #define MAIN_INTENEVENTSUSBBCLR_EVENTUSBBDETECT_HIGH (0x1UL) /*!< high                                                       */


/* MAIN_VERSIONFULLMASK: IC Fullmask version word from layput */
  #define MAIN_VERSIONFULLMASK_ResetValue (0x00UL)   /*!< Reset value of VERSIONFULLMASK register.                             */

/* VERSIONFULLMASK @Bits 0..7 : IC Fullmask version word from layout */
  #define MAIN_VERSIONFULLMASK_VERSIONFULLMASK_Pos (0UL) /*!< Position of VERSIONFULLMASK field.                               */
  #define MAIN_VERSIONFULLMASK_VERSIONFULLMASK_Msk (0xFFUL << MAIN_VERSIONFULLMASK_VERSIONFULLMASK_Pos) /*!< Bit mask of
                                                                            VERSIONFULLMASK field.*/                              


/* MAIN_VERSIONMETALMASK: IC Metalmask version word from layput */
  #define MAIN_VERSIONMETALMASK_ResetValue (0x00UL)  /*!< Reset value of VERSIONMETALMASK register.                            */

/* VERSIONMETALMASK @Bits 0..7 : IC Metalmask version word from layout */
  #define MAIN_VERSIONMETALMASK_VERSIONMETALMASK_Pos (0UL) /*!< Position of VERSIONMETALMASK field.                            */
  #define MAIN_VERSIONMETALMASK_VERSIONMETALMASK_Msk (0xFFUL << MAIN_VERSIONMETALMASK_VERSIONMETALMASK_Pos) /*!< Bit mask of
                                                                            VERSIONMETALMASK field.*/                             


/* MAIN_SPARE0: spare */
  #define MAIN_SPARE0_ResetValue (0x00UL)            /*!< Reset value of SPARE0 register.                                      */

/* BGPPWRUPOVRDENA @Bit 0 : Bandgap Powerup Override Enable */
  #define MAIN_SPARE0_BGPPWRUPOVRDENA_Pos (0UL)      /*!< Position of BGPPWRUPOVRDENA field.                                   */
  #define MAIN_SPARE0_BGPPWRUPOVRDENA_Msk (0x1UL << MAIN_SPARE0_BGPPWRUPOVRDENA_Pos) /*!< Bit mask of BGPPWRUPOVRDENA field.   */
  #define MAIN_SPARE0_BGPPWRUPOVRDENA_Min (0x0UL)    /*!< Min enumerator value of BGPPWRUPOVRDENA field.                       */
  #define MAIN_SPARE0_BGPPWRUPOVRDENA_Max (0x1UL)    /*!< Max enumerator value of BGPPWRUPOVRDENA field.                       */
  #define MAIN_SPARE0_BGPPWRUPOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                           */
  #define MAIN_SPARE0_BGPPWRUPOVRDENA_ENABLED (0x1UL) /*!< Enabled                                                             */

/* BGPPWRUPOVRD @Bit 1 : Bandgap Powerup Override Value */
  #define MAIN_SPARE0_BGPPWRUPOVRD_Pos (1UL)         /*!< Position of BGPPWRUPOVRD field.                                      */
  #define MAIN_SPARE0_BGPPWRUPOVRD_Msk (0x1UL << MAIN_SPARE0_BGPPWRUPOVRD_Pos) /*!< Bit mask of BGPPWRUPOVRD field.            */
  #define MAIN_SPARE0_BGPPWRUPOVRD_Min (0x0UL)       /*!< Min enumerator value of BGPPWRUPOVRD field.                          */
  #define MAIN_SPARE0_BGPPWRUPOVRD_Max (0x1UL)       /*!< Max enumerator value of BGPPWRUPOVRD field.                          */
  #define MAIN_SPARE0_BGPPWRUPOVRD_LOW (0x0UL)       /*!< Low                                                                  */
  #define MAIN_SPARE0_BGPPWRUPOVRD_HIGH (0x1UL)      /*!< High                                                                 */

/* STARTUPFSMENAOVRDENA @Bit 2 : Startup FSM Enable Override Enable */
  #define MAIN_SPARE0_STARTUPFSMENAOVRDENA_Pos (2UL) /*!< Position of STARTUPFSMENAOVRDENA field.                              */
  #define MAIN_SPARE0_STARTUPFSMENAOVRDENA_Msk (0x1UL << MAIN_SPARE0_STARTUPFSMENAOVRDENA_Pos) /*!< Bit mask of
                                                                            STARTUPFSMENAOVRDENA field.*/                         
  #define MAIN_SPARE0_STARTUPFSMENAOVRDENA_Min (0x0UL) /*!< Min enumerator value of STARTUPFSMENAOVRDENA field.                */
  #define MAIN_SPARE0_STARTUPFSMENAOVRDENA_Max (0x1UL) /*!< Max enumerator value of STARTUPFSMENAOVRDENA field.                */
  #define MAIN_SPARE0_STARTUPFSMENAOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                      */
  #define MAIN_SPARE0_STARTUPFSMENAOVRDENA_ENABLED (0x1UL) /*!< Enabled                                                        */

/* STARTUPFSMENAOVRD @Bit 3 : Startup FSM Enable Override Value */
  #define MAIN_SPARE0_STARTUPFSMENAOVRD_Pos (3UL)    /*!< Position of STARTUPFSMENAOVRD field.                                 */
  #define MAIN_SPARE0_STARTUPFSMENAOVRD_Msk (0x1UL << MAIN_SPARE0_STARTUPFSMENAOVRD_Pos) /*!< Bit mask of STARTUPFSMENAOVRD
                                                                            field.*/                                              
  #define MAIN_SPARE0_STARTUPFSMENAOVRD_Min (0x0UL)  /*!< Min enumerator value of STARTUPFSMENAOVRD field.                     */
  #define MAIN_SPARE0_STARTUPFSMENAOVRD_Max (0x1UL)  /*!< Max enumerator value of STARTUPFSMENAOVRD field.                     */
  #define MAIN_SPARE0_STARTUPFSMENAOVRD_LOW (0x0UL)  /*!< Low                                                                  */
  #define MAIN_SPARE0_STARTUPFSMENAOVRD_HIGH (0x1UL) /*!< High                                                                 */

/* READYSTARTUPFSMOVRDENA @Bit 4 : readyStartupFsm Override Enable */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRDENA_Pos (4UL) /*!< Position of READYSTARTUPFSMOVRDENA field.                          */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRDENA_Msk (0x1UL << MAIN_SPARE0_READYSTARTUPFSMOVRDENA_Pos) /*!< Bit mask of
                                                                            READYSTARTUPFSMOVRDENA field.*/                       
  #define MAIN_SPARE0_READYSTARTUPFSMOVRDENA_Min (0x0UL) /*!< Min enumerator value of READYSTARTUPFSMOVRDENA field.            */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRDENA_Max (0x1UL) /*!< Max enumerator value of READYSTARTUPFSMOVRDENA field.            */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                    */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRDENA_ENABLED (0x1UL) /*!< Enabled                                                      */

/* READYSTARTUPFSMOVRD @Bit 5 : readyStartupFsm Override Value */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRD_Pos (5UL)  /*!< Position of READYSTARTUPFSMOVRD field.                               */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRD_Msk (0x1UL << MAIN_SPARE0_READYSTARTUPFSMOVRD_Pos) /*!< Bit mask of
                                                                            READYSTARTUPFSMOVRD field.*/                          
  #define MAIN_SPARE0_READYSTARTUPFSMOVRD_Min (0x0UL) /*!< Min enumerator value of READYSTARTUPFSMOVRD field.                  */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRD_Max (0x1UL) /*!< Max enumerator value of READYSTARTUPFSMOVRD field.                  */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRD_LOW (0x0UL) /*!< Low                                                                 */
  #define MAIN_SPARE0_READYSTARTUPFSMOVRD_HIGH (0x1UL) /*!< High                                                               */

/* SPAREBOVRDENA @Bit 6 : Spare B Override Enable */
  #define MAIN_SPARE0_SPAREBOVRDENA_Pos (6UL)        /*!< Position of SPAREBOVRDENA field.                                     */
  #define MAIN_SPARE0_SPAREBOVRDENA_Msk (0x1UL << MAIN_SPARE0_SPAREBOVRDENA_Pos) /*!< Bit mask of SPAREBOVRDENA field.         */
  #define MAIN_SPARE0_SPAREBOVRDENA_Min (0x0UL)      /*!< Min enumerator value of SPAREBOVRDENA field.                         */
  #define MAIN_SPARE0_SPAREBOVRDENA_Max (0x1UL)      /*!< Max enumerator value of SPAREBOVRDENA field.                         */
  #define MAIN_SPARE0_SPAREBOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                             */
  #define MAIN_SPARE0_SPAREBOVRDENA_ENABLED (0x1UL)  /*!< Enabled                                                              */

/* SPAREBOVRD @Bit 7 : Spare B Override Value */
  #define MAIN_SPARE0_SPAREBOVRD_Pos (7UL)           /*!< Position of SPAREBOVRD field.                                        */
  #define MAIN_SPARE0_SPAREBOVRD_Msk (0x1UL << MAIN_SPARE0_SPAREBOVRD_Pos) /*!< Bit mask of SPAREBOVRD field.                  */
  #define MAIN_SPARE0_SPAREBOVRD_Min (0x0UL)         /*!< Min enumerator value of SPAREBOVRD field.                            */
  #define MAIN_SPARE0_SPAREBOVRD_Max (0x1UL)         /*!< Max enumerator value of SPAREBOVRD field.                            */
  #define MAIN_SPARE0_SPAREBOVRD_LOW (0x0UL)         /*!< Low                                                                  */
  #define MAIN_SPARE0_SPAREBOVRD_HIGH (0x1UL)        /*!< High                                                                 */



/* =========================================================================================================================== */
/* ================                                          SYSTEM                                          ================ */
/* =========================================================================================================================== */

/* ====================================================== Struct SYSTEM ====================================================== */
/**
  * @brief Neutrino SYSTEM registers
  */
typedef struct {                                     /*!< SYSTEM Structure                                                     */
  __IM  uint8_t   SYSLABEL;                          /*!< (@ 0x00000000) Label Value                                           */
  __IOM uint8_t   VSYSTEMPCOMPOVERRIDE;              /*!< (@ 0x00000001) VsysComp TempComp Override                            */
  __IOM uint8_t   TEMPCOMPOVERRIDE;                  /*!< (@ 0x00000002) TSD and Temperature Comparator Override               */
  __IOM uint8_t   TEMPCOMPREGOVERRIDE;               /*!< (@ 0x00000003) TSD and Temperature Comparator Override               */
  __IOM uint8_t   USBBDETCKOVERRIDE;                 /*!< (@ 0x00000004) USB-B Detector and Clk Request Overrides              */
  __IOM uint8_t   HPBIASOVERRIDE;                    /*!< (@ 0x00000005) Override for HP Bias                                  */
  __IOM uint8_t   SYSHPREFOVERRIDE0;                 /*!< (@ 0x00000006) System HpRef Override 0                               */
  __IOM uint8_t   SYSHPREFOVERRIDE1;                 /*!< (@ 0x00000007) System HpRef Override 1                               */
  __IOM uint8_t   TESTBUSSELECT;                     /*!< (@ 0x00000008) Select for testbus readback                           */
  __IM  uint8_t   TESTBUSVALUE;                      /*!< (@ 0x00000009) Testbus readback data                                 */
  __IOM uint8_t   TESTBUSCTRL;                       /*!< (@ 0x0000000A) Testbus control                                       */
  __IOM uint8_t   ANACOREATE0;                       /*!< (@ 0x0000000B) Tempcomp Analog Testbus Enable                        */
  __IOM uint8_t   ANACOREATE1;                       /*!< (@ 0x0000000C) HPREF and ULPBias Analog Testbus Enable               */
  __IOM uint8_t   ANACOREATE2;                       /*!< (@ 0x0000000D) Porcomp and Vsyscomp Analog Testbus Enable            */
  __IOM uint8_t   ANACORETEST0;                      /*!< (@ 0x0000000E) Anacore test control                                  */
  __IOM uint8_t   ANACORETEST1;                      /*!< (@ 0x0000000F) Anacore test control 1                                */
  __IOM uint8_t   ANACORETEST2;                      /*!< (@ 0x00000010) Anacore test control 2                                */
  __IOM uint8_t   ANACORECTRL;                       /*!< (@ 0x00000011) Anacore ctrl                                          */
  __IM  uint8_t   ANACOREIN;                         /*!< (@ 0x00000012) Anacore spare status                                  */
  __IM  uint8_t   ANACOREDTB0;                       /*!< (@ 0x00000013) Anacore DTB data status                               */
  __IOM uint8_t   ATETOP0;                           /*!< (@ 0x00000014) Toplevel Analog Test Bus ATB0 control                 */
  __IOM uint8_t   ATETOP1;                           /*!< (@ 0x00000015) Toplevel Analog Test Bus ATB1 control                 */
  __IOM uint8_t   OTPATE;                            /*!< (@ 0x00000016) OTP Analog Test Bus Enable                            */
  __IOM uint8_t   VMAXATE;                           /*!< (@ 0x00000017) VMAX Analog Testbus Enable                            */
  __IOM uint8_t   USBBDETATE;                        /*!< (@ 0x00000018) USB-B Detection Test Control                          */
  __IOM uint8_t   USBBDETCTRL;                       /*!< (@ 0x00000019) USB-B Detection control                               */
  __IOM uint8_t   RCOSC1KTEST;                       /*!< (@ 0x0000001A) rcOsc1K (ckSlow) test control                         */
  __IOM uint8_t   OTPSELWRITE;                       /*!< (@ 0x0000001B) Select Write mode for OTP memory                      */
  __IOM uint8_t   OTPSEL;                            /*!< (@ 0x0000001C) OTP Selections and Overrides                          */
  __IOM uint8_t   OTPTRIGREAD;                       /*!< (@ 0x0000001D) Trigger manually OTP read                             */
  __IOM uint8_t   OTPDATA;                           /*!< (@ 0x0000001E) Set data to write in OTP-memory                       */
  __IOM uint8_t   OTPADDR;                           /*!< (@ 0x0000001F) Set address to write in OTP-memory                    */
  __IOM uint8_t   OTPTEST;                           /*!< (@ 0x00000020) Select testmode                                       */
  __IOM uint8_t   OTPEMULATE;                        /*!< (@ 0x00000021) Select OTP emulate                                    */
  __IOM uint8_t   OTPOVERRIDE;                       /*!< (@ 0x00000022) OTP FSM override                                      */
  __IOM uint8_t   TESTACCESS;                        /*!< (@ 0x00000023) Select testmode                                       */
  __IOM uint8_t   BGPOVERRIDE;                       /*!< (@ 0x00000024) BANDGAP Input overrides                               */
  __IM  uint8_t   BGPSTATUS;                         /*!< (@ 0x00000025) BANDGAP Status                                        */
  __IOM uint8_t   SYSTEMOVERRIDE;                    /*!< (@ 0x00000026) System Override                                       */
  __IOM uint8_t   USBCDETCKHPBOVERRIDE;              /*!< (@ 0x00000027) USB-C Detector Overrides                              */
  __IOM uint8_t   USBCDETATE;                        /*!< (@ 0x00000028) USB-C Detection Test Control                          */
  __IOM uint8_t   FTMEXTCLK;                         /*!< (@ 0x00000029) FTM Clk select                                        */
  __IOM uint8_t   SCANMODESEL;                       /*!< (@ 0x0000002A) scanMode select                                       */
  __IOM uint8_t   EXTCKSLOW;                         /*!< (@ 0x0000002B) selects External clock for ckSlow NOTE: Reset value
                                                                         from OTP, value listed in this table may not be
                                                                         correct.*/                                               
  __IOM uint8_t   ANACORETRIM0;                      /*!< (@ 0x0000002C) VSYS and POR Comp Trim NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   ANACORETRIM1;                      /*!< (@ 0x0000002D) TEMP Comp Trim NOTE: Reset value from OTP, value listed
                                                                         in this table may not be correct.*/                      
  __IOM uint8_t   ANACORETRIM2;                      /*!< (@ 0x0000002E) ULPBIAS and OSC4M Trim NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   ANACORETRIM3;                      /*!< (@ 0x0000002F) HPREF Trim NOTE: Reset value from OTP, value listed in
                                                                         this table may not be correct.*/                         
  __IOM uint8_t   ANACORETRIM4;                      /*!< (@ 0x00000030) Bandgap1V5 Trim NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   RCOSC1KTRIM;                       /*!< (@ 0x00000031) Rc Osc 1k Res Trim NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   SPARETRIM;                         /*!< (@ 0x00000032) Spare Trim NOTE: Reset value from OTP, value listed in
                                                                         this table may not be correct.*/                         
  __IOM uint8_t   SYSCONFIG;                         /*!< (@ 0x00000033) Generic Configuration NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   SYSDELAYSEL;                       /*!< (@ 0x00000034) Timer Delay Select NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   USBCDETRPDTRIM;                    /*!< (@ 0x00000035) USBC Detector RPD Trim NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   USBCDETIREFTRIM;                   /*!< (@ 0x00000036) USBC Detector IREF Trim NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   TWIFILTCONFIG;                     /*!< (@ 0x00000037) TWI Filter Configuration NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   SAMPLEDVREFCONFIG;                 /*!< (@ 0x00000038) Sampled VREF Configuration NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   HIDDENLABEL;                       /*!< (@ 0x00000039) Hidden Label NOTE: Reset value from OTP, value listed
                                                                         in this table may not be correct.*/                      
} __PACKED NPM_SYSTEM_Type;                          /*!< Size = 58 (0x03A)                                                    */

/* SYSTEM_SYSLABEL: Label Value */
  #define SYSTEM_SYSLABEL_ResetValue (0x00UL)        /*!< Reset value of SYSLABEL register.                                    */

/* SYSLABEL @Bits 0..7 : label word */
  #define SYSTEM_SYSLABEL_SYSLABEL_Pos (0UL)         /*!< Position of SYSLABEL field.                                          */
  #define SYSTEM_SYSLABEL_SYSLABEL_Msk (0xFFUL << SYSTEM_SYSLABEL_SYSLABEL_Pos) /*!< Bit mask of SYSLABEL field.               */


/* SYSTEM_VSYSTEMPCOMPOVERRIDE: VsysComp TempComp Override */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_ResetValue (0x00UL) /*!< Reset value of VSYSTEMPCOMPOVERRIDE register.                   */

/* PWRUPVSYSCOMPOVRDENA @Bit 0 : anacorePwrupVsysComp override enable */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPVSYSCOMPOVRDENA_Pos (0UL) /*!< Position of PWRUPVSYSCOMPOVRDENA field.              */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPVSYSCOMPOVRDENA_Msk (0x1UL << SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPVSYSCOMPOVRDENA_Pos)
                                                                            /*!< Bit mask of PWRUPVSYSCOMPOVRDENA field.*/        

/* PWRUPVSYSCOMPOVRD @Bit 1 : anacorePwrupVsysComp override value */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPVSYSCOMPOVRD_Pos (1UL) /*!< Position of PWRUPVSYSCOMPOVRD field.                    */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPVSYSCOMPOVRD_Msk (0x1UL << SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPVSYSCOMPOVRD_Pos) /*!<
                                                                            Bit mask of PWRUPVSYSCOMPOVRD field.*/                

/* PWRUPTEMPCOMPOVRDENA @Bit 2 : anacorePwrupTempComp override enable */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPTEMPCOMPOVRDENA_Pos (2UL) /*!< Position of PWRUPTEMPCOMPOVRDENA field.              */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPTEMPCOMPOVRDENA_Msk (0x1UL << SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPTEMPCOMPOVRDENA_Pos)
                                                                            /*!< Bit mask of PWRUPTEMPCOMPOVRDENA field.*/        

/* PWRUPTEMPCOMPOVRD @Bit 3 : anacorePwrupTempComp override value */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPTEMPCOMPOVRD_Pos (3UL) /*!< Position of PWRUPTEMPCOMPOVRD field.                    */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPTEMPCOMPOVRD_Msk (0x1UL << SYSTEM_VSYSTEMPCOMPOVERRIDE_PWRUPTEMPCOMPOVRD_Pos) /*!<
                                                                            Bit mask of PWRUPTEMPCOMPOVRD field.*/                

/* VSYSCOMPOVRDENA @Bit 4 : anacoreVsysComp override enable */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_VSYSCOMPOVRDENA_Pos (4UL) /*!< Position of VSYSCOMPOVRDENA field.                        */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_VSYSCOMPOVRDENA_Msk (0x1UL << SYSTEM_VSYSTEMPCOMPOVERRIDE_VSYSCOMPOVRDENA_Pos) /*!< Bit
                                                                            mask of VSYSCOMPOVRDENA field.*/                      

/* VSYSCOMPOVRD @Bit 5 : anacoreVsysComp override value */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_VSYSCOMPOVRD_Pos (5UL) /*!< Position of VSYSCOMPOVRD field.                              */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_VSYSCOMPOVRD_Msk (0x1UL << SYSTEM_VSYSTEMPCOMPOVERRIDE_VSYSCOMPOVRD_Pos) /*!< Bit mask of
                                                                            VSYSCOMPOVRD field.*/                                 

/* TWARNOVRDENA @Bit 6 : anacoreVsysComp override enable */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_TWARNOVRDENA_Pos (6UL) /*!< Position of TWARNOVRDENA field.                              */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_TWARNOVRDENA_Msk (0x1UL << SYSTEM_VSYSTEMPCOMPOVERRIDE_TWARNOVRDENA_Pos) /*!< Bit mask of
                                                                            TWARNOVRDENA field.*/                                 

/* TWARNOVRD @Bit 7 : anacoreVsysComp override value */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_TWARNOVRD_Pos (7UL) /*!< Position of TWARNOVRD field.                                    */
  #define SYSTEM_VSYSTEMPCOMPOVERRIDE_TWARNOVRD_Msk (0x1UL << SYSTEM_VSYSTEMPCOMPOVERRIDE_TWARNOVRD_Pos) /*!< Bit mask of
                                                                            TWARNOVRD field.*/                                    


/* SYSTEM_TEMPCOMPOVERRIDE: TSD and Temperature Comparator Override */
  #define SYSTEM_TEMPCOMPOVERRIDE_ResetValue (0x00UL) /*!< Reset value of TEMPCOMPOVERRIDE register.                           */

/* DISABLEMASKTSDOVRDENA @Bit 0 : override enable */
  #define SYSTEM_TEMPCOMPOVERRIDE_DISABLEMASKTSDOVRDENA_Pos (0UL) /*!< Position of DISABLEMASKTSDOVRDENA field.                */
  #define SYSTEM_TEMPCOMPOVERRIDE_DISABLEMASKTSDOVRDENA_Msk (0x1UL << SYSTEM_TEMPCOMPOVERRIDE_DISABLEMASKTSDOVRDENA_Pos) /*!<
                                                                            Bit mask of DISABLEMASKTSDOVRDENA field.*/            

/* DISABLEMASKTSDOVRD @Bit 1 : override value */
  #define SYSTEM_TEMPCOMPOVERRIDE_DISABLEMASKTSDOVRD_Pos (1UL) /*!< Position of DISABLEMASKTSDOVRD field.                      */
  #define SYSTEM_TEMPCOMPOVERRIDE_DISABLEMASKTSDOVRD_Msk (0x1UL << SYSTEM_TEMPCOMPOVERRIDE_DISABLEMASKTSDOVRD_Pos) /*!< Bit mask
                                                                            of DISABLEMASKTSDOVRD field.*/                        

/* TEMPCOMPACKOVRDENA @Bit 2 : override enable */
  #define SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPACKOVRDENA_Pos (2UL) /*!< Position of TEMPCOMPACKOVRDENA field.                      */
  #define SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPACKOVRDENA_Msk (0x1UL << SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPACKOVRDENA_Pos) /*!< Bit mask
                                                                            of TEMPCOMPACKOVRDENA field.*/                        

/* TEMPCOMPACKOVRD @Bit 3 : override value */
  #define SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPACKOVRD_Pos (3UL) /*!< Position of TEMPCOMPACKOVRD field.                            */
  #define SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPACKOVRD_Msk (0x1UL << SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPACKOVRD_Pos) /*!< Bit mask of
                                                                            TEMPCOMPACKOVRD field.*/                              

/* TEMPCOMPREQOVRDENA @Bit 4 : override enable */
  #define SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPREQOVRDENA_Pos (4UL) /*!< Position of TEMPCOMPREQOVRDENA field.                      */
  #define SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPREQOVRDENA_Msk (0x1UL << SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPREQOVRDENA_Pos) /*!< Bit mask
                                                                            of TEMPCOMPREQOVRDENA field.*/                        

/* TEMPCOMPREQOVRD @Bit 5 : override value */
  #define SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPREQOVRD_Pos (5UL) /*!< Position of TEMPCOMPREQOVRD field.                            */
  #define SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPREQOVRD_Msk (0x1UL << SYSTEM_TEMPCOMPOVERRIDE_TEMPCOMPREQOVRD_Pos) /*!< Bit mask of
                                                                            TEMPCOMPREQOVRD field.*/                              

/* SPAREAOVRDENA @Bit 6 : override enable */
  #define SYSTEM_TEMPCOMPOVERRIDE_SPAREAOVRDENA_Pos (6UL) /*!< Position of SPAREAOVRDENA field.                                */
  #define SYSTEM_TEMPCOMPOVERRIDE_SPAREAOVRDENA_Msk (0x1UL << SYSTEM_TEMPCOMPOVERRIDE_SPAREAOVRDENA_Pos) /*!< Bit mask of
                                                                            SPAREAOVRDENA field.*/                                

/* SPAREAOVRD @Bit 7 : override value */
  #define SYSTEM_TEMPCOMPOVERRIDE_SPAREAOVRD_Pos (7UL) /*!< Position of SPAREAOVRD field.                                      */
  #define SYSTEM_TEMPCOMPOVERRIDE_SPAREAOVRD_Msk (0x1UL << SYSTEM_TEMPCOMPOVERRIDE_SPAREAOVRD_Pos) /*!< Bit mask of SPAREAOVRD
                                                                            field.*/                                              


/* SYSTEM_TEMPCOMPREGOVERRIDE: TSD and Temperature Comparator Override */
  #define SYSTEM_TEMPCOMPREGOVERRIDE_ResetValue (0x00UL) /*!< Reset value of TEMPCOMPREGOVERRIDE register.                     */

/* TSDOVRDENA @Bit 0 : override enable */
  #define SYSTEM_TEMPCOMPREGOVERRIDE_TSDOVRDENA_Pos (0UL) /*!< Position of TSDOVRDENA field.                                   */
  #define SYSTEM_TEMPCOMPREGOVERRIDE_TSDOVRDENA_Msk (0x1UL << SYSTEM_TEMPCOMPREGOVERRIDE_TSDOVRDENA_Pos) /*!< Bit mask of
                                                                            TSDOVRDENA field.*/                                   

/* TSDOVRD @Bit 1 : override value */
  #define SYSTEM_TEMPCOMPREGOVERRIDE_TSDOVRD_Pos (1UL) /*!< Position of TSDOVRD field.                                         */
  #define SYSTEM_TEMPCOMPREGOVERRIDE_TSDOVRD_Msk (0x1UL << SYSTEM_TEMPCOMPREGOVERRIDE_TSDOVRD_Pos) /*!< Bit mask of TSDOVRD
                                                                            field.*/                                              


/* SYSTEM_USBBDETCKOVERRIDE: USB-B Detector and Clk Request Overrides */
  #define SYSTEM_USBBDETCKOVERRIDE_ResetValue (0x00UL) /*!< Reset value of USBBDETCKOVERRIDE register.                         */

/* USBBDETPWRUPOVRDENA @Bit 0 : override enable */
  #define SYSTEM_USBBDETCKOVERRIDE_USBBDETPWRUPOVRDENA_Pos (0UL) /*!< Position of USBBDETPWRUPOVRDENA field.                   */
  #define SYSTEM_USBBDETCKOVERRIDE_USBBDETPWRUPOVRDENA_Msk (0x1UL << SYSTEM_USBBDETCKOVERRIDE_USBBDETPWRUPOVRDENA_Pos) /*!< Bit
                                                                            mask of USBBDETPWRUPOVRDENA field.*/                  

/* USBBDETPWRUPOVRD @Bit 1 : override value */
  #define SYSTEM_USBBDETCKOVERRIDE_USBBDETPWRUPOVRD_Pos (1UL) /*!< Position of USBBDETPWRUPOVRD field.                         */
  #define SYSTEM_USBBDETCKOVERRIDE_USBBDETPWRUPOVRD_Msk (0x1UL << SYSTEM_USBBDETCKOVERRIDE_USBBDETPWRUPOVRD_Pos) /*!< Bit mask
                                                                            of USBBDETPWRUPOVRD field.*/                          

/* REQCKDIGFORCE @Bit 2 : This request is ORed with all other clock requests. This request is masked low if (FTMEN=0) and
                          (supply is below POR) */                                                                                
                                                                                                                                  
  #define SYSTEM_USBBDETCKOVERRIDE_REQCKDIGFORCE_Pos (2UL) /*!< Position of REQCKDIGFORCE field.                               */
  #define SYSTEM_USBBDETCKOVERRIDE_REQCKDIGFORCE_Msk (0x1UL << SYSTEM_USBBDETCKOVERRIDE_REQCKDIGFORCE_Pos) /*!< Bit mask of
                                                                            REQCKDIGFORCE field.*/                                

/* REQSLOWCKFORCE @Bit 3 : This request is ORed with all other requests for the slowClk. */
  #define SYSTEM_USBBDETCKOVERRIDE_REQSLOWCKFORCE_Pos (3UL) /*!< Position of REQSLOWCKFORCE field.                             */
  #define SYSTEM_USBBDETCKOVERRIDE_REQSLOWCKFORCE_Msk (0x1UL << SYSTEM_USBBDETCKOVERRIDE_REQSLOWCKFORCE_Pos) /*!< Bit mask of
                                                                            REQSLOWCKFORCE field.*/                               


/* SYSTEM_HPBIASOVERRIDE: Override for HP Bias */
  #define SYSTEM_HPBIASOVERRIDE_ResetValue (0x00UL)  /*!< Reset value of HPBIASOVERRIDE register.                              */

/* REQHPBIASOVRDENA @Bit 0 : override enable */
  #define SYSTEM_HPBIASOVERRIDE_REQHPBIASOVRDENA_Pos (0UL) /*!< Position of REQHPBIASOVRDENA field.                            */
  #define SYSTEM_HPBIASOVERRIDE_REQHPBIASOVRDENA_Msk (0x1UL << SYSTEM_HPBIASOVERRIDE_REQHPBIASOVRDENA_Pos) /*!< Bit mask of
                                                                            REQHPBIASOVRDENA field.*/                             

/* REQHPBIASOVRD @Bit 1 : override value */
  #define SYSTEM_HPBIASOVERRIDE_REQHPBIASOVRD_Pos (1UL) /*!< Position of REQHPBIASOVRD field.                                  */
  #define SYSTEM_HPBIASOVERRIDE_REQHPBIASOVRD_Msk (0x1UL << SYSTEM_HPBIASOVERRIDE_REQHPBIASOVRD_Pos) /*!< Bit mask of
                                                                            REQHPBIASOVRD field.*/                                


/* SYSTEM_SYSHPREFOVERRIDE0: System HpRef Override 0 */
  #define SYSTEM_SYSHPREFOVERRIDE0_ResetValue (0x00UL) /*!< Reset value of SYSHPREFOVERRIDE0 register.                         */

/* TSDCOMPREQHPREFOVRDENA @Bit 0 : tsdcompReqHpRef override enable */
  #define SYSTEM_SYSHPREFOVERRIDE0_TSDCOMPREQHPREFOVRDENA_Pos (0UL) /*!< Position of TSDCOMPREQHPREFOVRDENA field.             */
  #define SYSTEM_SYSHPREFOVERRIDE0_TSDCOMPREQHPREFOVRDENA_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE0_TSDCOMPREQHPREFOVRDENA_Pos)
                                                                            /*!< Bit mask of TSDCOMPREQHPREFOVRDENA field.*/      

/* TSDCOMPREQHPREFOVRD @Bit 1 : tsdcompReqHpRef override value */
  #define SYSTEM_SYSHPREFOVERRIDE0_TSDCOMPREQHPREFOVRD_Pos (1UL) /*!< Position of TSDCOMPREQHPREFOVRD field.                   */
  #define SYSTEM_SYSHPREFOVERRIDE0_TSDCOMPREQHPREFOVRD_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE0_TSDCOMPREQHPREFOVRD_Pos) /*!< Bit
                                                                            mask of TSDCOMPREQHPREFOVRD field.*/                  

/* SAMPLEDVREFRFSREQOVRDENA @Bit 2 : sampledVrefRfsReq override enable */
  #define SYSTEM_SYSHPREFOVERRIDE0_SAMPLEDVREFRFSREQOVRDENA_Pos (2UL) /*!< Position of SAMPLEDVREFRFSREQOVRDENA field.         */
  #define SYSTEM_SYSHPREFOVERRIDE0_SAMPLEDVREFRFSREQOVRDENA_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE0_SAMPLEDVREFRFSREQOVRDENA_Pos)
                                                                            /*!< Bit mask of SAMPLEDVREFRFSREQOVRDENA field.*/    

/* SAMPLEDVREFRFSREQOVRD @Bit 3 : sampledVrefRfsReq override value */
  #define SYSTEM_SYSHPREFOVERRIDE0_SAMPLEDVREFRFSREQOVRD_Pos (3UL) /*!< Position of SAMPLEDVREFRFSREQOVRD field.               */
  #define SYSTEM_SYSHPREFOVERRIDE0_SAMPLEDVREFRFSREQOVRD_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE0_SAMPLEDVREFRFSREQOVRD_Pos) /*!<
                                                                            Bit mask of SAMPLEDVREFRFSREQOVRD field.*/            

/* DCDC1HPREFREQENA @Bit 4 : dcdc1HpRefReq override enable */
  #define SYSTEM_SYSHPREFOVERRIDE0_DCDC1HPREFREQENA_Pos (4UL) /*!< Position of DCDC1HPREFREQENA field.                         */
  #define SYSTEM_SYSHPREFOVERRIDE0_DCDC1HPREFREQENA_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE0_DCDC1HPREFREQENA_Pos) /*!< Bit mask
                                                                            of DCDC1HPREFREQENA field.*/                          

/* DCDC1HPREFREQOVRD @Bit 5 : dcdc1HpRefReq override value */
  #define SYSTEM_SYSHPREFOVERRIDE0_DCDC1HPREFREQOVRD_Pos (5UL) /*!< Position of DCDC1HPREFREQOVRD field.                       */
  #define SYSTEM_SYSHPREFOVERRIDE0_DCDC1HPREFREQOVRD_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE0_DCDC1HPREFREQOVRD_Pos) /*!< Bit mask
                                                                            of DCDC1HPREFREQOVRD field.*/                         

/* DCDC2HPREFREQOVRDENA @Bit 6 : dcdc2HpRefReq override enable */
  #define SYSTEM_SYSHPREFOVERRIDE0_DCDC2HPREFREQOVRDENA_Pos (6UL) /*!< Position of DCDC2HPREFREQOVRDENA field.                 */
  #define SYSTEM_SYSHPREFOVERRIDE0_DCDC2HPREFREQOVRDENA_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE0_DCDC2HPREFREQOVRDENA_Pos) /*!<
                                                                            Bit mask of DCDC2HPREFREQOVRDENA field.*/             

/* DCDC2HPREFREQOVRD @Bit 7 : dcdc2HpRefReq override value */
  #define SYSTEM_SYSHPREFOVERRIDE0_DCDC2HPREFREQOVRD_Pos (7UL) /*!< Position of DCDC2HPREFREQOVRD field.                       */
  #define SYSTEM_SYSHPREFOVERRIDE0_DCDC2HPREFREQOVRD_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE0_DCDC2HPREFREQOVRD_Pos) /*!< Bit mask
                                                                            of DCDC2HPREFREQOVRD field.*/                         


/* SYSTEM_SYSHPREFOVERRIDE1: System HpRef Override 1 */
  #define SYSTEM_SYSHPREFOVERRIDE1_ResetValue (0x00UL) /*!< Reset value of SYSHPREFOVERRIDE1 register.                         */

/* DIGHPREFREQOVRDENA @Bit 0 : digHpRefReq override enable */
  #define SYSTEM_SYSHPREFOVERRIDE1_DIGHPREFREQOVRDENA_Pos (0UL) /*!< Position of DIGHPREFREQOVRDENA field.                     */
  #define SYSTEM_SYSHPREFOVERRIDE1_DIGHPREFREQOVRDENA_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE1_DIGHPREFREQOVRDENA_Pos) /*!< Bit
                                                                            mask of DIGHPREFREQOVRDENA field.*/                   

/* DIGHPREFREQOVRD @Bit 1 : digHpRefReq override value */
  #define SYSTEM_SYSHPREFOVERRIDE1_DIGHPREFREQOVRD_Pos (1UL) /*!< Position of DIGHPREFREQOVRD field.                           */
  #define SYSTEM_SYSHPREFOVERRIDE1_DIGHPREFREQOVRD_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE1_DIGHPREFREQOVRD_Pos) /*!< Bit mask of
                                                                            DIGHPREFREQOVRD field.*/                              

/* DCDC1SAMPLEVREFOVRDENA @Bit 2 : dcdc1SampleVref override enable */
  #define SYSTEM_SYSHPREFOVERRIDE1_DCDC1SAMPLEVREFOVRDENA_Pos (2UL) /*!< Position of DCDC1SAMPLEVREFOVRDENA field.             */
  #define SYSTEM_SYSHPREFOVERRIDE1_DCDC1SAMPLEVREFOVRDENA_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE1_DCDC1SAMPLEVREFOVRDENA_Pos)
                                                                            /*!< Bit mask of DCDC1SAMPLEVREFOVRDENA field.*/      

/* DCDC1SAMPLEVREFOVRD @Bit 3 : dcdc1SampleVref override value */
  #define SYSTEM_SYSHPREFOVERRIDE1_DCDC1SAMPLEVREFOVRD_Pos (3UL) /*!< Position of DCDC1SAMPLEVREFOVRD field.                   */
  #define SYSTEM_SYSHPREFOVERRIDE1_DCDC1SAMPLEVREFOVRD_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE1_DCDC1SAMPLEVREFOVRD_Pos) /*!< Bit
                                                                            mask of DCDC1SAMPLEVREFOVRD field.*/                  

/* DCDC2SAMPLEVREFENA @Bit 4 : dcdc2SampleVrefoverride enable */
  #define SYSTEM_SYSHPREFOVERRIDE1_DCDC2SAMPLEVREFENA_Pos (4UL) /*!< Position of DCDC2SAMPLEVREFENA field.                     */
  #define SYSTEM_SYSHPREFOVERRIDE1_DCDC2SAMPLEVREFENA_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE1_DCDC2SAMPLEVREFENA_Pos) /*!< Bit
                                                                            mask of DCDC2SAMPLEVREFENA field.*/                   

/* DCDC2SAMPLEVREFOVRD @Bit 5 : dcdc2SampleVrefoverride value */
  #define SYSTEM_SYSHPREFOVERRIDE1_DCDC2SAMPLEVREFOVRD_Pos (5UL) /*!< Position of DCDC2SAMPLEVREFOVRD field.                   */
  #define SYSTEM_SYSHPREFOVERRIDE1_DCDC2SAMPLEVREFOVRD_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE1_DCDC2SAMPLEVREFOVRD_Pos) /*!< Bit
                                                                            mask of DCDC2SAMPLEVREFOVRD field.*/                  

/* LDSWLDOREFRSHOVRDENA @Bit 6 : ldswLdoRefrsh override enable */
  #define SYSTEM_SYSHPREFOVERRIDE1_LDSWLDOREFRSHOVRDENA_Pos (6UL) /*!< Position of LDSWLDOREFRSHOVRDENA field.                 */
  #define SYSTEM_SYSHPREFOVERRIDE1_LDSWLDOREFRSHOVRDENA_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE1_LDSWLDOREFRSHOVRDENA_Pos) /*!<
                                                                            Bit mask of LDSWLDOREFRSHOVRDENA field.*/             

/* LDSWLDOREFRSHOVRD @Bit 7 : ldswLdoRefrsh override value */
  #define SYSTEM_SYSHPREFOVERRIDE1_LDSWLDOREFRSHOVRD_Pos (7UL) /*!< Position of LDSWLDOREFRSHOVRD field.                       */
  #define SYSTEM_SYSHPREFOVERRIDE1_LDSWLDOREFRSHOVRD_Msk (0x1UL << SYSTEM_SYSHPREFOVERRIDE1_LDSWLDOREFRSHOVRD_Pos) /*!< Bit mask
                                                                            of LDSWLDOREFRSHOVRD field.*/                         


/* SYSTEM_TESTBUSSELECT: Select for testbus readback */
  #define SYSTEM_TESTBUSSELECT_ResetValue (0x00UL)   /*!< Reset value of TESTBUSSELECT register.                               */

/* TESTBUSSELECT @Bits 0..5 : testbusSelect */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_Pos (0UL) /*!< Position of TESTBUSSELECT field.                                   */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_Msk (0x3FUL << SYSTEM_TESTBUSSELECT_TESTBUSSELECT_Pos) /*!< Bit mask of
                                                                            TESTBUSSELECT field.*/                                
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_Min (0x0UL) /*!< Min enumerator value of TESTBUSSELECT field.                     */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_Max (0x3FUL) /*!< Max enumerator value of TESTBUSSELECT field.                    */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL0H (0x00UL) /*!< Testbus[3:0] = otpDataFromMem[7:4]                            */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL1H (0x01UL) /*!< Testbus[3:0] = gpioInputs[4], vset2Ftrst, vset1Stmen, ntcFtmen*/
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL2H (0x02UL) /*!< Testbus[3:0] = gpioInputs[0], gpioInputs[1], gpioInputs[2],
                                                                 gpioInputs[3]*/                                                  
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL3H (0x03UL) /*!< Testbus[3:0] = dcdc2VoutUpdFsmState, dcdc1VoutUpdFsmState     */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL4H (0x04UL) /*!< Testbus[7:0] = All zeros                                      */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL5H (0x05UL) /*!< Testbus[2:0] = vmaxVsysAboveVbat, vmaxVconn[1:0]              */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL6H (0x06UL) /*!< Testbus[3:0] = ckDigDiv8, ckDigDiv4, ckDigDiv2, ckDig         */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL7H (0x07UL) /*!< Testbus[2:0] = hpRefGood, ulpbiasReady, porCompDtb            */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL8H (0x08UL) /*!< Testbus[1:0] = hprefHpbiasok, hprefPwrupok                    */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL9H (0x09UL) /*!< Testbus[3:0] = anacoreTempCompReq, anacoreTsd, anacoreTwarn,
                                                                 anacoreVsysComp*/                                                
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SELAH (0x0AUL) /*!< Testbus[2:0] = ilimh5V0VbusUndervoltage,
                                                                 ilimh5V0VbusOvervoltage, vbusConnected*/                         
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SELBH (0x0BUL) /*!< Testbus[4:0] = ilim5v0Ilimited, ilim5v0VbusHigh,
                                                                 ilim5v0VsysHigh, ilim5v0VbatHigh, vbusConnected*/                
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SELCH (0x0CUL) /*!< Testbus[4:0] = ilimh5V0SpareStatus, ilim5v0VbusPowered        */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SELDH (0x0DUL) /*!< Testbus[3:0] = ilimh5V0VbusPowered, bchargerBgpGood,
                                                                 bchargerBgpAccurate, vbusConnected*/                             
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SELEH (0x0EUL) /*!< Testbus[3:0] = usbCc2DetOut, usbCc1DetOut                     */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SELFH (0x0FUL) /*!< Testbus[3:0] = bchargerIcharging, bchargerVterm, bchargerIterm,
                                                                 bchargerDropout*/                                                
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL10H (0x10UL) /*!< Testbus[3:0] = ntcHot, ntcWarm, ntcCool, ntcCold             */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL11H (0x11UL) /*!< Testbus[3:0] = bchargerVterm, bchargerRecharge,
                                                                  bchargerVtrickle, bchargerVbatlow*/                             
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL12H (0x12UL) /*!< Testbus[3:0] = bchgDtb, bchgIlimbatActive, bchgVsysBelowVbat,
                                                                  bchgDropout bchargerVsysBelowVbat, bchargerDropout*/            
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL13H (0x13UL) /*!< Testbus[3:0] = dieTempHigh, bchargerVbatSensorValid,
                                                                  bchargerNtcSensorValid*/                                        
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL14H (0x14UL) /*!< Testbus[2:0] = dcdc1PwmOk, dcdc1Powergood, dcdc1Dtst         */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL15H (0x15UL) /*!< Testbus[4:0] = chargerFsmState[4:0]                          */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL16H (0x16UL) /*!< Testbus[4:0] = chargerFsmPreviousStates[0] [4:0]             */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL17H (0x17UL) /*!< Testbus[4:0] = chargerFsmPreviousStates[1] [4:0]             */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL18H (0x18UL) /*!< Testbus[4:0] = chargerFsmPreviousStates[2] [4:0]             */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL19H (0x19UL) /*!< Testbus[4:0] = chargerFsmPreviousStates[3] [4:0]             */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL1AH (0x1AUL) /*!< Testbus[3:0] = sdaiPreFilt, sdai, scliPreFilt, scli          */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL1BH (0x1BUL) /*!< Testbus[3:0] = reqCkSlow, ckSlow_postDftTestbusStop,
                                                                  rcOscSlowMute4K, rcOscSlow4K*/                                  
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL1CH (0x1CUL) /*!< Testbus[2:0] = reqCkDigOsc, hpRefGood, osc4M                 */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL1DH (0x1DUL) /*!< Testbus[1:0] = reqCkSlow, ckSlow                             */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL1EH (0x1EUL) /*!< Testbus[3:0] = twiCurrState[3:0]                             */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL1FH (0x1FUL) /*!< Testbus[3:0] = twiStartCond, twiStopCond, busREnableTwi,
                                                                  reqCkDigTwi*/                                                   
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL20H (0x20UL) /*!< Testbus[1:0] = miBusREnableTwi, miBusWEnableTwi              */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL21H (0x21UL) /*!< Testbus[4:0] = dcdc2SyncOut, dcdc1SyncOut, dcdc1State[2:0]   */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL22H (0x22UL) /*!< Testbus[3:0] = usbdetDout, usbDetFsmState[2:0]               */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL23H (0x23UL) /*!< Testbus[2:0] = pwmFsmState[2:0]                              */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL24H (0x24UL) /*!< Testbus[2:0] = ilim5v0FsmState[2:0]                          */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL25H (0x25UL) /*!< Testbus[3:0] = startupFsmState[3:0]                          */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL26H (0x26UL) /*!< Testbus[1:0] = tsdFsmState[1:0]                              */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL27H (0x27UL) /*!< Testbus[2:0] = otpControllerFsmState[2:0]                    */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL28H (0x28UL) /*!< Testbus[7:0] = otpDataFromMem[7:0]                           */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL29H (0x29UL) /*!< Testbus[3:0] = anacoreIn[3:0]                                */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL2AH (0x2AUL) /*!< Testbus[2:0] = dcdc2PwmOk, dcdc2Powergood, dcdc2Dtst         */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL2BH (0x2BUL) /*!< Testbus[2:0] = dcdc2State[2:0]                               */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL2CH (0x2CUL) /*!< Testbus[1:0] = usbcdetFsmState[1:0]                          */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL2DH (0x2DUL) /*!< Testbus[2:0] = dcdc2pwmFsmState[2:0]                         */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL2EH (0x2EUL) /*!< Testbus[3:0] = ldswDtb0, ldsw1FsmState[2:0]                  */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL2FH (0x2FUL) /*!< Testbus[3:0] = ldswDtb1, ldsw2FsmState[2:0]                  */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL30H (0x30UL) /*!< Testbus[3:0] = dcdc2HpRefReqOvr, dcdc1HpRefReqOvr,
                                                                  sampledVrefRfsReqOvr, tsdcompReqHpRefOvr*/                      
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL32H (0x32UL) /*!< Testbus[3:0] = hpRefGood, tsdcompSampleReq, hpRefReq,
                                                                  anaHpRefReqAsync*/                                              
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL33H (0x33UL) /*!< Testbus[3:0] = bgpGood, bgpPwrup, hpRefGood, hpRefReq        */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL34H (0x34UL) /*!< Testbus[2:0] = dcdc2SampleVref, dcdc1SampleVref,
                                                                  ldswLdoRefrsh*/                                                 
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL35H (0x35UL) /*!< Testbus[2:0] = dcdc1OvCurr, dcdc1HCompImeaHyst,
                                                                  dcdc1MagnetizeImeaHyst*/                                        
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL36H (0x36UL) /*!< Testbus[3:0] = dcdc1FsmState[3:0]                            */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL37H (0x37UL) /*!< Testbus[3:0] = dcdc2Dtst, dcdc2OvCurr, dcdc2HCompImeaHyst,
                                                                  dcdc2MagnetizeImeaHyst*/                                        
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL38H (0x38UL) /*!< Testbus[3:0] = dcdc2FsmState[3:0]                            */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL39H (0x39UL) /*!< Testbus[3:0] = shpHldTwoButtonEna, shphldDinStdThr, shipHold,
                                                                  shipMode*/                                                      
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL3AH (0x3AUL) /*!< Testbus[3:0] = bootMonitorElapsedAsync, watchdogElapsedAsync,
                                                                  watchdogWarningAsync, longPressElapsedAsync*/                   
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL3BH (0x3BUL) /*!< Testbus[4:0] = watchdogFsmState[2:0], slowDomainFsmState[1:0]*/
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL3CH (0x3CUL) /*!< Testbus[4:0] = slowDomainCounter[4:0]                        */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL3DH (0x3DUL) /*!< Testbus[3:0] = adcCompout, adcCompDone, adcCmpph1Cmp,
                                                                  adcCmpph0Rst*/                                                  
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL3EH (0x3EUL) /*!< Testbus[4:0] = slowDomainCounter[9:5]                        */
  #define SYSTEM_TESTBUSSELECT_TESTBUSSELECT_SEL3FH (0x3FUL) /*!< Testbus[3:0] = dcdc1SpareStatus                              */


/* SYSTEM_TESTBUSVALUE: Testbus readback data */
  #define SYSTEM_TESTBUSVALUE_ResetValue (0x00UL)    /*!< Reset value of TESTBUSVALUE register.                                */

/* TESTBUSREADDATA @Bits 0..7 : Data read back */
  #define SYSTEM_TESTBUSVALUE_TESTBUSREADDATA_Pos (0UL) /*!< Position of TESTBUSREADDATA field.                                */
  #define SYSTEM_TESTBUSVALUE_TESTBUSREADDATA_Msk (0xFFUL << SYSTEM_TESTBUSVALUE_TESTBUSREADDATA_Pos) /*!< Bit mask of
                                                                            TESTBUSREADDATA field.*/                              


/* SYSTEM_TESTBUSCTRL: Testbus control */
  #define SYSTEM_TESTBUSCTRL_ResetValue (0x00UL)     /*!< Reset value of TESTBUSCTRL register.                                 */

/* DTBOUTENA @Bits 0..3 : Each bit switches the corresponding GPIO to be a DTB output */
  #define SYSTEM_TESTBUSCTRL_DTBOUTENA_Pos (0UL)     /*!< Position of DTBOUTENA field.                                         */
  #define SYSTEM_TESTBUSCTRL_DTBOUTENA_Msk (0xFUL << SYSTEM_TESTBUSCTRL_DTBOUTENA_Pos) /*!< Bit mask of DTBOUTENA field.       */

/* DTBSHIFTRIGHT @Bit 4 : Shift the output of the TESTBUS_SELECT right one place */
  #define SYSTEM_TESTBUSCTRL_DTBSHIFTRIGHT_Pos (4UL) /*!< Position of DTBSHIFTRIGHT field.                                     */
  #define SYSTEM_TESTBUSCTRL_DTBSHIFTRIGHT_Msk (0x1UL << SYSTEM_TESTBUSCTRL_DTBSHIFTRIGHT_Pos) /*!< Bit mask of DTBSHIFTRIGHT
                                                                            field.*/                                              


/* SYSTEM_ANACOREATE0: Tempcomp Analog Testbus Enable */
  #define SYSTEM_ANACOREATE0_ResetValue (0x00UL)     /*!< Reset value of ANACOREATE0 register.                                 */

/* ATETEMPCOMP @Bits 0..7 : ateTempcomp */
  #define SYSTEM_ANACOREATE0_ATETEMPCOMP_Pos (0UL)   /*!< Position of ATETEMPCOMP field.                                       */
  #define SYSTEM_ANACOREATE0_ATETEMPCOMP_Msk (0xFFUL << SYSTEM_ANACOREATE0_ATETEMPCOMP_Pos) /*!< Bit mask of ATETEMPCOMP field.*/


/* SYSTEM_ANACOREATE1: HPREF and ULPBias Analog Testbus Enable */
  #define SYSTEM_ANACOREATE1_ResetValue (0x00UL)     /*!< Reset value of ANACOREATE1 register.                                 */

/* ATEHPREF @Bits 0..2 : ATE_HPREF */
  #define SYSTEM_ANACOREATE1_ATEHPREF_Pos (0UL)      /*!< Position of ATEHPREF field.                                          */
  #define SYSTEM_ANACOREATE1_ATEHPREF_Msk (0x7UL << SYSTEM_ANACOREATE1_ATEHPREF_Pos) /*!< Bit mask of ATEHPREF field.          */

/* ATEULPBIAS @Bit 3 : ATE_ULPBIAS */
  #define SYSTEM_ANACOREATE1_ATEULPBIAS_Pos (3UL)    /*!< Position of ATEULPBIAS field.                                        */
  #define SYSTEM_ANACOREATE1_ATEULPBIAS_Msk (0x1UL << SYSTEM_ANACOREATE1_ATEULPBIAS_Pos) /*!< Bit mask of ATEULPBIAS field.    */

/* ATESAMPLEDVREF @Bits 4..5 : ATE_SAMPLED_VREF */
  #define SYSTEM_ANACOREATE1_ATESAMPLEDVREF_Pos (4UL) /*!< Position of ATESAMPLEDVREF field.                                   */
  #define SYSTEM_ANACOREATE1_ATESAMPLEDVREF_Msk (0x3UL << SYSTEM_ANACOREATE1_ATESAMPLEDVREF_Pos) /*!< Bit mask of ATESAMPLEDVREF
                                                                            field.*/                                              

/* ATEBANDGAP @Bit 6 : ATE_BANDGAP1V5 */
  #define SYSTEM_ANACOREATE1_ATEBANDGAP_Pos (6UL)    /*!< Position of ATEBANDGAP field.                                        */
  #define SYSTEM_ANACOREATE1_ATEBANDGAP_Msk (0x1UL << SYSTEM_ANACOREATE1_ATEBANDGAP_Pos) /*!< Bit mask of ATEBANDGAP field.    */


/* SYSTEM_ANACOREATE2: Porcomp and Vsyscomp Analog Testbus Enable */
  #define SYSTEM_ANACOREATE2_ResetValue (0x00UL)     /*!< Reset value of ANACOREATE2 register.                                 */

/* ATEPORCOMPVSYSCOMP @Bits 0..1 : ATE_PORCOMP_VSYSCOMP */
  #define SYSTEM_ANACOREATE2_ATEPORCOMPVSYSCOMP_Pos (0UL) /*!< Position of ATEPORCOMPVSYSCOMP field.                           */
  #define SYSTEM_ANACOREATE2_ATEPORCOMPVSYSCOMP_Msk (0x3UL << SYSTEM_ANACOREATE2_ATEPORCOMPVSYSCOMP_Pos) /*!< Bit mask of
                                                                            ATEPORCOMPVSYSCOMP field.*/                           


/* SYSTEM_ANACORETEST0: Anacore test control */
  #define SYSTEM_ANACORETEST0_ResetValue (0x00UL)    /*!< Reset value of ANACORETEST0 register.                                */

/* TSDCOMPPWRUPCMP @Bit 0 : TSDCOMP_PWRUP_CMP */
  #define SYSTEM_ANACORETEST0_TSDCOMPPWRUPCMP_Pos (0UL) /*!< Position of TSDCOMPPWRUPCMP field.                                */
  #define SYSTEM_ANACORETEST0_TSDCOMPPWRUPCMP_Msk (0x1UL << SYSTEM_ANACORETEST0_TSDCOMPPWRUPCMP_Pos) /*!< Bit mask of
                                                                            TSDCOMPPWRUPCMP field.*/                              

/* TSDCOMPRESREF @Bit 1 : TSDCOMP_RES_REF */
  #define SYSTEM_ANACORETEST0_TSDCOMPRESREF_Pos (1UL) /*!< Position of TSDCOMPRESREF field.                                    */
  #define SYSTEM_ANACORETEST0_TSDCOMPRESREF_Msk (0x1UL << SYSTEM_ANACORETEST0_TSDCOMPRESREF_Pos) /*!< Bit mask of TSDCOMPRESREF
                                                                            field.*/                                              

/* TSDCOMPDIODEREF @Bit 2 : TSDCOMP_DIODE_REF */
  #define SYSTEM_ANACORETEST0_TSDCOMPDIODEREF_Pos (2UL) /*!< Position of TSDCOMPDIODEREF field.                                */
  #define SYSTEM_ANACORETEST0_TSDCOMPDIODEREF_Msk (0x1UL << SYSTEM_ANACORETEST0_TSDCOMPDIODEREF_Pos) /*!< Bit mask of
                                                                            TSDCOMPDIODEREF field.*/                              

/* TSDCOMPDISATEMPHYST @Bit 3 : TSDCOMP_DISA_TEMP_HYST */
  #define SYSTEM_ANACORETEST0_TSDCOMPDISATEMPHYST_Pos (3UL) /*!< Position of TSDCOMPDISATEMPHYST field.                        */
  #define SYSTEM_ANACORETEST0_TSDCOMPDISATEMPHYST_Msk (0x1UL << SYSTEM_ANACORETEST0_TSDCOMPDISATEMPHYST_Pos) /*!< Bit mask of
                                                                            TSDCOMPDISATEMPHYST field.*/                          

/* TSDCOMPFORCECMPRDY @Bit 4 : TSDCOMP_FORCE_CMP_RDY */
  #define SYSTEM_ANACORETEST0_TSDCOMPFORCECMPRDY_Pos (4UL) /*!< Position of TSDCOMPFORCECMPRDY field.                          */
  #define SYSTEM_ANACORETEST0_TSDCOMPFORCECMPRDY_Msk (0x1UL << SYSTEM_ANACORETEST0_TSDCOMPFORCECMPRDY_Pos) /*!< Bit mask of
                                                                            TSDCOMPFORCECMPRDY field.*/                           

/* TSDCOMPDISATEMPREF @Bit 5 : TSDCOMP_DISA_TEMP_REF */
  #define SYSTEM_ANACORETEST0_TSDCOMPDISATEMPREF_Pos (5UL) /*!< Position of TSDCOMPDISATEMPREF field.                          */
  #define SYSTEM_ANACORETEST0_TSDCOMPDISATEMPREF_Msk (0x1UL << SYSTEM_ANACORETEST0_TSDCOMPDISATEMPREF_Pos) /*!< Bit mask of
                                                                            TSDCOMPDISATEMPREF field.*/                           

/* TSDCOMPSPARE @Bits 6..7 : TSDCOMP_SPARE */
  #define SYSTEM_ANACORETEST0_TSDCOMPSPARE_Pos (6UL) /*!< Position of TSDCOMPSPARE field.                                      */
  #define SYSTEM_ANACORETEST0_TSDCOMPSPARE_Msk (0x3UL << SYSTEM_ANACORETEST0_TSDCOMPSPARE_Pos) /*!< Bit mask of TSDCOMPSPARE
                                                                            field.*/                                              


/* SYSTEM_ANACORETEST1: Anacore test control 1 */
  #define SYSTEM_ANACORETEST1_ResetValue (0x00UL)    /*!< Reset value of ANACORETEST1 register.                                */

/* ULPBIASFORCEULPREADYLOWTM @Bit 0 : Force ULPBIAS_READY low */
  #define SYSTEM_ANACORETEST1_ULPBIASFORCEULPREADYLOWTM_Pos (0UL) /*!< Position of ULPBIASFORCEULPREADYLOWTM field.            */
  #define SYSTEM_ANACORETEST1_ULPBIASFORCEULPREADYLOWTM_Msk (0x1UL << SYSTEM_ANACORETEST1_ULPBIASFORCEULPREADYLOWTM_Pos) /*!<
                                                                            Bit mask of ULPBIASFORCEULPREADYLOWTM field.*/        
  #define SYSTEM_ANACORETEST1_ULPBIASFORCEULPREADYLOWTM_Min (0x0UL) /*!< Min enumerator value of ULPBIASFORCEULPREADYLOWTM
                                                                         field.*/                                                 
  #define SYSTEM_ANACORETEST1_ULPBIASFORCEULPREADYLOWTM_Max (0x1UL) /*!< Max enumerator value of ULPBIASFORCEULPREADYLOWTM
                                                                         field.*/                                                 
  #define SYSTEM_ANACORETEST1_ULPBIASFORCEULPREADYLOWTM_NORMAL (0x0UL) /*!< normal operation                                   */
  #define SYSTEM_ANACORETEST1_ULPBIASFORCEULPREADYLOWTM_FORCELOW (0x1UL) /*!< ULPBIAS_READY forced low                         */

/* ULPBIASIBOOST @Bit 1 : bias boot boost to 5x */
  #define SYSTEM_ANACORETEST1_ULPBIASIBOOST_Pos (1UL) /*!< Position of ULPBIASIBOOST field.                                    */
  #define SYSTEM_ANACORETEST1_ULPBIASIBOOST_Msk (0x1UL << SYSTEM_ANACORETEST1_ULPBIASIBOOST_Pos) /*!< Bit mask of ULPBIASIBOOST
                                                                            field.*/                                              
  #define SYSTEM_ANACORETEST1_ULPBIASIBOOST_Min (0x0UL) /*!< Min enumerator value of ULPBIASIBOOST field.                      */
  #define SYSTEM_ANACORETEST1_ULPBIASIBOOST_Max (0x1UL) /*!< Max enumerator value of ULPBIASIBOOST field.                      */
  #define SYSTEM_ANACORETEST1_ULPBIASIBOOST_NORMAL (0x0UL) /*!< normal operation; current = 7.5nA, test current = 100nA        */
  #define SYSTEM_ANACORETEST1_ULPBIASIBOOST_FORCELOW (0x1UL) /*!< current = 37.5nA, test current = 500nA                       */

/* BANDGAP1V5RCON @Bit 2 : Enable RC filtering of ref voltage */
  #define SYSTEM_ANACORETEST1_BANDGAP1V5RCON_Pos (2UL) /*!< Position of BANDGAP1V5RCON field.                                  */
  #define SYSTEM_ANACORETEST1_BANDGAP1V5RCON_Msk (0x1UL << SYSTEM_ANACORETEST1_BANDGAP1V5RCON_Pos) /*!< Bit mask of
                                                                            BANDGAP1V5RCON field.*/                               
  #define SYSTEM_ANACORETEST1_BANDGAP1V5RCON_Min (0x0UL) /*!< Min enumerator value of BANDGAP1V5RCON field.                    */
  #define SYSTEM_ANACORETEST1_BANDGAP1V5RCON_Max (0x1UL) /*!< Max enumerator value of BANDGAP1V5RCON field.                    */
  #define SYSTEM_ANACORETEST1_BANDGAP1V5RCON_AUTO (0x0UL) /*!< autonomous, RC filtering enabled when BANDGSP1V5_GOOD=1         */
  #define SYSTEM_ANACORETEST1_BANDGAP1V5RCON_FORCEFILT (0x1UL) /*!< force RC filtering                                         */


/* SYSTEM_ANACORETEST2: Anacore test control 2 */
  #define SYSTEM_ANACORETEST2_ResetValue (0x00UL)    /*!< Reset value of ANACORETEST2 register.                                */

/* HPREFVREFSAMPLEINTM @Bit 0 : External sampling signal for sampled reference */
  #define SYSTEM_ANACORETEST2_HPREFVREFSAMPLEINTM_Pos (0UL) /*!< Position of HPREFVREFSAMPLEINTM field.                        */
  #define SYSTEM_ANACORETEST2_HPREFVREFSAMPLEINTM_Msk (0x1UL << SYSTEM_ANACORETEST2_HPREFVREFSAMPLEINTM_Pos) /*!< Bit mask of
                                                                            HPREFVREFSAMPLEINTM field.*/                          
  #define SYSTEM_ANACORETEST2_HPREFVREFSAMPLEINTM_Min (0x0UL) /*!< Min enumerator value of HPREFVREFSAMPLEINTM field.          */
  #define SYSTEM_ANACORETEST2_HPREFVREFSAMPLEINTM_Max (0x1UL) /*!< Max enumerator value of HPREFVREFSAMPLEINTM field.          */
  #define SYSTEM_ANACORETEST2_HPREFVREFSAMPLEINTM_NORMAL (0x0UL) /*!< Circuit controlled by POWER_UP and HPREF_EN              */
  #define SYSTEM_ANACORETEST2_HPREFVREFSAMPLEINTM_PWRUP (0x1UL) /*!< Powers up HPREF_CORE. Set SAMPLED_GOOD_O                  */

/* PORCOMPVSYSCOMPENACOMPSTM @Bit 1 : Test mode signal to enable comparators */
  #define SYSTEM_ANACORETEST2_PORCOMPVSYSCOMPENACOMPSTM_Pos (1UL) /*!< Position of PORCOMPVSYSCOMPENACOMPSTM field.            */
  #define SYSTEM_ANACORETEST2_PORCOMPVSYSCOMPENACOMPSTM_Msk (0x1UL << SYSTEM_ANACORETEST2_PORCOMPVSYSCOMPENACOMPSTM_Pos) /*!<
                                                                            Bit mask of PORCOMPVSYSCOMPENACOMPSTM field.*/        
  #define SYSTEM_ANACORETEST2_PORCOMPVSYSCOMPENACOMPSTM_Min (0x0UL) /*!< Min enumerator value of PORCOMPVSYSCOMPENACOMPSTM
                                                                         field.*/                                                 
  #define SYSTEM_ANACORETEST2_PORCOMPVSYSCOMPENACOMPSTM_Max (0x1UL) /*!< Max enumerator value of PORCOMPVSYSCOMPENACOMPSTM
                                                                         field.*/                                                 
  #define SYSTEM_ANACORETEST2_PORCOMPVSYSCOMPENACOMPSTM_NORMAL (0x0UL) /*!< Test mode disabled                                 */
  #define SYSTEM_ANACORETEST2_PORCOMPVSYSCOMPENACOMPSTM_TMENABLED (0x1UL) /*!< Allows to power up comparators even if
                                                                            ULPBIAS_READY low*/                                   

/* SAMPLEDVREFEXTSAMPLINGTM @Bit 2 : External sampling clock to the sampled reference */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFEXTSAMPLINGTM_Pos (2UL) /*!< Position of SAMPLEDVREFEXTSAMPLINGTM field.              */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFEXTSAMPLINGTM_Msk (0x1UL << SYSTEM_ANACORETEST2_SAMPLEDVREFEXTSAMPLINGTM_Pos) /*!< Bit
                                                                            mask of SAMPLEDVREFEXTSAMPLINGTM field.*/             
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFEXTSAMPLINGTM_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFEXTSAMPLINGTM field.*/
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFEXTSAMPLINGTM_Max (0x1UL) /*!< Max enumerator value of SAMPLEDVREFEXTSAMPLINGTM field.*/
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFEXTSAMPLINGTM_AUTO (0x0UL) /*!< Autonomous operation                                  */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFEXTSAMPLINGTM_FORCE (0x1UL) /*!< Forces the sampling                                  */

/* SAMPLEDVREFFORCECOMPOUTHIGHTM @Bit 3 : Forces the comparator negative input to high */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTHIGHTM_Pos (3UL) /*!< Position of SAMPLEDVREFFORCECOMPOUTHIGHTM field.    */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTHIGHTM_Msk (0x1UL << SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTHIGHTM_Pos)
                                                                            /*!< Bit mask of SAMPLEDVREFFORCECOMPOUTHIGHTM
                                                                            field.*/                                              
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTHIGHTM_Min (0x0UL) /*!< Min enumerator value of
                                                                            SAMPLEDVREFFORCECOMPOUTHIGHTM field.*/                
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTHIGHTM_Max (0x1UL) /*!< Max enumerator value of
                                                                            SAMPLEDVREFFORCECOMPOUTHIGHTM field.*/                
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTHIGHTM_NORMAL (0x0UL) /*!< no effect                                      */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTHIGHTM_FORCEHIGH (0x1UL) /*!< Forces compout high                         */

/* SAMPLEDVREFFORCECOMPOUTLOWTM @Bit 4 : Forces the comparator negative input to low */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTLOWTM_Pos (4UL) /*!< Position of SAMPLEDVREFFORCECOMPOUTLOWTM field.      */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTLOWTM_Msk (0x1UL << SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTLOWTM_Pos)
                                                                            /*!< Bit mask of SAMPLEDVREFFORCECOMPOUTLOWTM
                                                                            field.*/                                              
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTLOWTM_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFFORCECOMPOUTLOWTM
                                                                            field.*/                                              
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTLOWTM_Max (0x1UL) /*!< Max enumerator value of SAMPLEDVREFFORCECOMPOUTLOWTM
                                                                            field.*/                                              
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTLOWTM_NORMAL (0x0UL) /*!< no effect                                       */
  #define SYSTEM_ANACORETEST2_SAMPLEDVREFFORCECOMPOUTLOWTM_FORCELOW (0x1UL) /*!< Forces compout low                            */


/* SYSTEM_ANACORECTRL: Anacore ctrl */
  #define SYSTEM_ANACORECTRL_ResetValue (0x00UL)     /*!< Reset value of ANACORECTRL register.                                 */

/* SPARE @Bit 0 : Spare */
  #define SYSTEM_ANACORECTRL_SPARE_Pos (0UL)         /*!< Position of SPARE field.                                             */
  #define SYSTEM_ANACORECTRL_SPARE_Msk (0x1UL << SYSTEM_ANACORECTRL_SPARE_Pos) /*!< Bit mask of SPARE field.                   */

/* TEMPCOEF @Bit 1 : temp_coef */
  #define SYSTEM_ANACORECTRL_TEMPCOEF_Pos (1UL)      /*!< Position of TEMPCOEF field.                                          */
  #define SYSTEM_ANACORECTRL_TEMPCOEF_Msk (0x1UL << SYSTEM_ANACORECTRL_TEMPCOEF_Pos) /*!< Bit mask of TEMPCOEF field.          */

/* SELCOMPLEAK @Bits 2..3 : sel_comp_leak */
  #define SYSTEM_ANACORECTRL_SELCOMPLEAK_Pos (2UL)   /*!< Position of SELCOMPLEAK field.                                       */
  #define SYSTEM_ANACORECTRL_SELCOMPLEAK_Msk (0x3UL << SYSTEM_ANACORECTRL_SELCOMPLEAK_Pos) /*!< Bit mask of SELCOMPLEAK field. */


/* SYSTEM_ANACOREIN: Anacore spare status */
  #define SYSTEM_ANACOREIN_ResetValue (0x00UL)       /*!< Reset value of ANACOREIN register.                                   */

/* ANACORESPARESTATUS @Bits 0..3 : Sapre status bits from anacore */
  #define SYSTEM_ANACOREIN_ANACORESPARESTATUS_Pos (0UL) /*!< Position of ANACORESPARESTATUS field.                             */
  #define SYSTEM_ANACOREIN_ANACORESPARESTATUS_Msk (0xFUL << SYSTEM_ANACOREIN_ANACORESPARESTATUS_Pos) /*!< Bit mask of
                                                                            ANACORESPARESTATUS field.*/                           


/* SYSTEM_ANACOREDTB0: Anacore DTB data status */
  #define SYSTEM_ANACOREDTB0_ResetValue (0x00UL)     /*!< Reset value of ANACOREDTB0 register.                                 */

/* PORCOMP @Bit 0 : POR_COMP */
  #define SYSTEM_ANACOREDTB0_PORCOMP_Pos (0UL)       /*!< Position of PORCOMP field.                                           */
  #define SYSTEM_ANACOREDTB0_PORCOMP_Msk (0x1UL << SYSTEM_ANACOREDTB0_PORCOMP_Pos) /*!< Bit mask of PORCOMP field.             */

/* ULPBIASREADY @Bit 1 : ULPBIAS_READY */
  #define SYSTEM_ANACOREDTB0_ULPBIASREADY_Pos (1UL)  /*!< Position of ULPBIASREADY field.                                      */
  #define SYSTEM_ANACOREDTB0_ULPBIASREADY_Msk (0x1UL << SYSTEM_ANACOREDTB0_ULPBIASREADY_Pos) /*!< Bit mask of ULPBIASREADY
                                                                            field.*/                                              

/* HPREFVREFSAMPLEDGOOD @Bit 2 : HPREF_VREFSAMPLEDGOOD */
  #define SYSTEM_ANACOREDTB0_HPREFVREFSAMPLEDGOOD_Pos (2UL) /*!< Position of HPREFVREFSAMPLEDGOOD field.                       */
  #define SYSTEM_ANACOREDTB0_HPREFVREFSAMPLEDGOOD_Msk (0x1UL << SYSTEM_ANACOREDTB0_HPREFVREFSAMPLEDGOOD_Pos) /*!< Bit mask of
                                                                            HPREFVREFSAMPLEDGOOD field.*/                         

/* HPREFPWRUPO @Bit 3 : HPREF_PWRUPO */
  #define SYSTEM_ANACOREDTB0_HPREFPWRUPO_Pos (3UL)   /*!< Position of HPREFPWRUPO field.                                       */
  #define SYSTEM_ANACOREDTB0_HPREFPWRUPO_Msk (0x1UL << SYSTEM_ANACOREDTB0_HPREFPWRUPO_Pos) /*!< Bit mask of HPREFPWRUPO field. */

/* HPREFHPBIASOK @Bit 4 : HPREF_HPBIASOK */
  #define SYSTEM_ANACOREDTB0_HPREFHPBIASOK_Pos (4UL) /*!< Position of HPREFHPBIASOK field.                                     */
  #define SYSTEM_ANACOREDTB0_HPREFHPBIASOK_Msk (0x1UL << SYSTEM_ANACOREDTB0_HPREFHPBIASOK_Pos) /*!< Bit mask of HPREFHPBIASOK
                                                                            field.*/                                              


/* SYSTEM_ATETOP0: Toplevel Analog Test Bus ATB0 control */
  #define SYSTEM_ATETOP0_ResetValue (0x00UL)         /*!< Reset value of ATETOP0 register.                                     */

/* ATB0MODE @Bits 0..2 : ATB0_MODE */
  #define SYSTEM_ATETOP0_ATB0MODE_Pos (0UL)          /*!< Position of ATB0MODE field.                                          */
  #define SYSTEM_ATETOP0_ATB0MODE_Msk (0x7UL << SYSTEM_ATETOP0_ATB0MODE_Pos) /*!< Bit mask of ATB0MODE field.                  */

/* ATB0EN @Bit 3 : ATB0_EN */
  #define SYSTEM_ATETOP0_ATB0EN_Pos (3UL)            /*!< Position of ATB0EN field.                                            */
  #define SYSTEM_ATETOP0_ATB0EN_Msk (0x1UL << SYSTEM_ATETOP0_ATB0EN_Pos) /*!< Bit mask of ATB0EN field.                        */


/* SYSTEM_ATETOP1: Toplevel Analog Test Bus ATB1 control */
  #define SYSTEM_ATETOP1_ResetValue (0x00UL)         /*!< Reset value of ATETOP1 register.                                     */

/* ATB1MODE @Bits 0..2 : ATB1_MODE */
  #define SYSTEM_ATETOP1_ATB1MODE_Pos (0UL)          /*!< Position of ATB1MODE field.                                          */
  #define SYSTEM_ATETOP1_ATB1MODE_Msk (0x7UL << SYSTEM_ATETOP1_ATB1MODE_Pos) /*!< Bit mask of ATB1MODE field.                  */

/* ATB1EN @Bit 3 : ATB1_EN */
  #define SYSTEM_ATETOP1_ATB1EN_Pos (3UL)            /*!< Position of ATB1EN field.                                            */
  #define SYSTEM_ATETOP1_ATB1EN_Msk (0x1UL << SYSTEM_ATETOP1_ATB1EN_Pos) /*!< Bit mask of ATB1EN field.                        */


/* SYSTEM_OTPATE: OTP Analog Test Bus Enable */
  #define SYSTEM_OTPATE_ResetValue (0x00UL)          /*!< Reset value of OTPATE register.                                      */

/* OTPATE @Bit 0 : OTP_ATE */
  #define SYSTEM_OTPATE_OTPATE_Pos (0UL)             /*!< Position of OTPATE field.                                            */
  #define SYSTEM_OTPATE_OTPATE_Msk (0x1UL << SYSTEM_OTPATE_OTPATE_Pos) /*!< Bit mask of OTPATE field.                          */


/* SYSTEM_VMAXATE: VMAX Analog Testbus Enable */
  #define SYSTEM_VMAXATE_ResetValue (0x00UL)         /*!< Reset value of VMAXATE register.                                     */

/* VMAXATE @Bit 0 : VMAX_ATE */
  #define SYSTEM_VMAXATE_VMAXATE_Pos (0UL)           /*!< Position of VMAXATE field.                                           */
  #define SYSTEM_VMAXATE_VMAXATE_Msk (0x1UL << SYSTEM_VMAXATE_VMAXATE_Pos) /*!< Bit mask of VMAXATE field.                     */


/* SYSTEM_USBBDETATE: USB-B Detection Test Control */
  #define SYSTEM_USBBDETATE_ResetValue (0x00UL)      /*!< Reset value of USBBDETATE register.                                  */

/* ATEUSBBDET @Bit 0 : ATE_USBBDET_VAOD */
  #define SYSTEM_USBBDETATE_ATEUSBBDET_Pos (0UL)     /*!< Position of ATEUSBBDET field.                                        */
  #define SYSTEM_USBBDETATE_ATEUSBBDET_Msk (0x1UL << SYSTEM_USBBDETATE_ATEUSBBDET_Pos) /*!< Bit mask of ATEUSBBDET field.      */

/* USBBDETNOISINK @Bit 1 : USBBDET_NO_ISINK_VAOD */
  #define SYSTEM_USBBDETATE_USBBDETNOISINK_Pos (1UL) /*!< Position of USBBDETNOISINK field.                                    */
  #define SYSTEM_USBBDETATE_USBBDETNOISINK_Msk (0x1UL << SYSTEM_USBBDETATE_USBBDETNOISINK_Pos) /*!< Bit mask of USBBDETNOISINK
                                                                            field.*/                                              


/* SYSTEM_USBBDETCTRL: USB-B Detection control */
  #define SYSTEM_USBBDETCTRL_ResetValue (0x00UL)     /*!< Reset value of USBBDETCTRL register.                                 */

/* USBBDETECTIONCONTROL @Bits 0..3 : USB-B Detection control */
  #define SYSTEM_USBBDETCTRL_USBBDETECTIONCONTROL_Pos (0UL) /*!< Position of USBBDETECTIONCONTROL field.                       */
  #define SYSTEM_USBBDETCTRL_USBBDETECTIONCONTROL_Msk (0xFUL << SYSTEM_USBBDETCTRL_USBBDETECTIONCONTROL_Pos) /*!< Bit mask of
                                                                            USBBDETECTIONCONTROL field.*/                         


/* SYSTEM_RCOSC1KTEST: rcOsc1K (ckSlow) test control */
  #define SYSTEM_RCOSC1KTEST_ResetValue (0x00UL)     /*!< Reset value of RCOSC1KTEST register.                                 */

/* RCOSCSLOWMUTE4K @Bit 0 : Mute 4K output of RCOSC1K */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE4K_Pos (0UL) /*!< Position of RCOSCSLOWMUTE4K field.                                 */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE4K_Msk (0x1UL << SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE4K_Pos) /*!< Bit mask of
                                                                            RCOSCSLOWMUTE4K field.*/                              
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE4K_Min (0x0UL) /*!< Min enumerator value of RCOSCSLOWMUTE4K field.                   */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE4K_Max (0x1UL) /*!< Max enumerator value of RCOSCSLOWMUTE4K field.                   */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE4K_NORMAL (0x0UL) /*!< normal operation                                              */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE4K_MUTE (0x1UL) /*!< 4k output held low                                              */

/* RCOSCSLOWMUTE1K @Bit 1 : Mute 1K output of RCOSC1K */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE1K_Pos (1UL) /*!< Position of RCOSCSLOWMUTE1K field.                                 */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE1K_Msk (0x1UL << SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE1K_Pos) /*!< Bit mask of
                                                                            RCOSCSLOWMUTE1K field.*/                              
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE1K_Min (0x0UL) /*!< Min enumerator value of RCOSCSLOWMUTE1K field.                   */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE1K_Max (0x1UL) /*!< Max enumerator value of RCOSCSLOWMUTE1K field.                   */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE1K_NORMAL (0x0UL) /*!< normal operation                                              */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWMUTE1K_MUTE (0x1UL) /*!< 1k output held low                                              */

/* RCOSCSLOWCTRLSPARE @Bits 2..3 : Spare control bits for RCOSC1K */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWCTRLSPARE_Pos (2UL) /*!< Position of RCOSCSLOWCTRLSPARE field.                           */
  #define SYSTEM_RCOSC1KTEST_RCOSCSLOWCTRLSPARE_Msk (0x3UL << SYSTEM_RCOSC1KTEST_RCOSCSLOWCTRLSPARE_Pos) /*!< Bit mask of
                                                                            RCOSCSLOWCTRLSPARE field.*/                           


/* SYSTEM_OTPSELWRITE: Select Write mode for OTP memory */
  #define SYSTEM_OTPSELWRITE_ResetValue (0x00UL)     /*!< Reset value of OTPSELWRITE register.                                 */

/* WRITEMODE @Bit 0 : Set Writemode On */
  #define SYSTEM_OTPSELWRITE_WRITEMODE_Pos (0UL)     /*!< Position of WRITEMODE field.                                         */
  #define SYSTEM_OTPSELWRITE_WRITEMODE_Msk (0x1UL << SYSTEM_OTPSELWRITE_WRITEMODE_Pos) /*!< Bit mask of WRITEMODE field.       */


/* SYSTEM_OTPSEL: OTP Selections and Overrides */
  #define SYSTEM_OTPSEL_ResetValue (0x00UL)          /*!< Reset value of OTPSEL register.                                      */

/* ADDRESSSEL @Bit 0 : Select memory address source */
  #define SYSTEM_OTPSEL_ADDRESSSEL_Pos (0UL)         /*!< Position of ADDRESSSEL field.                                        */
  #define SYSTEM_OTPSEL_ADDRESSSEL_Msk (0x1UL << SYSTEM_OTPSEL_ADDRESSSEL_Pos) /*!< Bit mask of ADDRESSSEL field.              */
  #define SYSTEM_OTPSEL_ADDRESSSEL_Min (0x0UL)       /*!< Min enumerator value of ADDRESSSEL field.                            */
  #define SYSTEM_OTPSEL_ADDRESSSEL_Max (0x1UL)       /*!< Max enumerator value of ADDRESSSEL field.                            */
  #define SYSTEM_OTPSEL_ADDRESSSEL_FSM (0x0UL)       /*!< OTP Address from OTP controller (read)                               */
  #define SYSTEM_OTPSEL_ADDRESSSEL_REGISTER (0x1UL)  /*!< OTP address from register (read / write)                             */

/* SUPPLY @Bit 1 : Force supply switch ON */
  #define SYSTEM_OTPSEL_SUPPLY_Pos (1UL)             /*!< Position of SUPPLY field.                                            */
  #define SYSTEM_OTPSEL_SUPPLY_Msk (0x1UL << SYSTEM_OTPSEL_SUPPLY_Pos) /*!< Bit mask of SUPPLY field.                          */
  #define SYSTEM_OTPSEL_SUPPLY_Min (0x0UL)           /*!< Min enumerator value of SUPPLY field.                                */
  #define SYSTEM_OTPSEL_SUPPLY_Max (0x1UL)           /*!< Max enumerator value of SUPPLY field.                                */
  #define SYSTEM_OTPSEL_SUPPLY_FSM (0x0UL)           /*!< OTP Supply switch control from OTP FSM (read)                        */
  #define SYSTEM_OTPSEL_SUPPLY_FORCE (0x1UL)         /*!< Force OTP Supply switch ON (read / write)                            */

/* MANUAL @Bit 2 : Select operational mode */
  #define SYSTEM_OTPSEL_MANUAL_Pos (2UL)             /*!< Position of MANUAL field.                                            */
  #define SYSTEM_OTPSEL_MANUAL_Msk (0x1UL << SYSTEM_OTPSEL_MANUAL_Pos) /*!< Bit mask of MANUAL field.                          */
  #define SYSTEM_OTPSEL_MANUAL_Min (0x0UL)           /*!< Min enumerator value of MANUAL field.                                */
  #define SYSTEM_OTPSEL_MANUAL_Max (0x1UL)           /*!< Max enumerator value of MANUAL field.                                */
  #define SYSTEM_OTPSEL_MANUAL_FSM (0x0UL)           /*!< OTP read strobe signal from OTP FSM                                  */
  #define SYSTEM_OTPSEL_MANUAL_MANUAL (0x1UL)        /*!< OTP read strobe signal from VTERMSET pad. OTP Address from register  */

/* OTPSELOVERRIDE @Bit 3 : Enable supply switch override */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDE_Pos (3UL)     /*!< Position of OTPSELOVERRIDE field.                                    */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDE_Msk (0x1UL << SYSTEM_OTPSEL_OTPSELOVERRIDE_Pos) /*!< Bit mask of OTPSELOVERRIDE field.  */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDE_Min (0x0UL)   /*!< Min enumerator value of OTPSELOVERRIDE field.                        */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDE_Max (0x1UL)   /*!< Max enumerator value of OTPSELOVERRIDE field.                        */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDE_DISABLED (0x0UL) /*!< Disable override (OTP Supply switch control from FSM)             */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDE_ENABLED (0x1UL) /*!< Enable override                                                    */

/* OTPSELOVERRIDEVALUE @Bit 4 : supply switch override value */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDEVALUE_Pos (4UL) /*!< Position of OTPSELOVERRIDEVALUE field.                              */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDEVALUE_Msk (0x1UL << SYSTEM_OTPSEL_OTPSELOVERRIDEVALUE_Pos) /*!< Bit mask of
                                                                            OTPSELOVERRIDEVALUE field.*/                          
  #define SYSTEM_OTPSEL_OTPSELOVERRIDEVALUE_Min (0x0UL) /*!< Min enumerator value of OTPSELOVERRIDEVALUE field.                */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDEVALUE_Max (0x1UL) /*!< Max enumerator value of OTPSELOVERRIDEVALUE field.                */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDEVALUE_LOW (0x0UL) /*!< Force OTP Supply switch ctrl LOW                                  */
  #define SYSTEM_OTPSEL_OTPSELOVERRIDEVALUE_HIGH (0x1UL) /*!< Force OTP Supply switch ctrl HIGH                                */


/* SYSTEM_OTPTRIGREAD: Trigger manually OTP read */
  #define SYSTEM_OTPTRIGREAD_ResetValue (0x00UL)     /*!< Reset value of OTPTRIGREAD register.                                 */

/* OTPTRIGREAD @Bit 0 : Trigger */
  #define SYSTEM_OTPTRIGREAD_OTPTRIGREAD_Pos (0UL)   /*!< Position of OTPTRIGREAD field.                                       */
  #define SYSTEM_OTPTRIGREAD_OTPTRIGREAD_Msk (0x1UL << SYSTEM_OTPTRIGREAD_OTPTRIGREAD_Pos) /*!< Bit mask of OTPTRIGREAD field. */
  #define SYSTEM_OTPTRIGREAD_OTPTRIGREAD_Min (0x0UL) /*!< Min enumerator value of OTPTRIGREAD field.                           */
  #define SYSTEM_OTPTRIGREAD_OTPTRIGREAD_Max (0x1UL) /*!< Max enumerator value of OTPTRIGREAD field.                           */
  #define SYSTEM_OTPTRIGREAD_OTPTRIGREAD_OFF (0x0UL) /*!< Off                                                                  */
  #define SYSTEM_OTPTRIGREAD_OTPTRIGREAD_ON (0x1UL)  /*!< On                                                                   */


/* SYSTEM_OTPDATA: Set data to write in OTP-memory */
  #define SYSTEM_OTPDATA_ResetValue (0x00UL)         /*!< Reset value of OTPDATA register.                                     */

/* DATA @Bits 0..7 : 8-bit data to be written */
  #define SYSTEM_OTPDATA_DATA_Pos (0UL)              /*!< Position of DATA field.                                              */
  #define SYSTEM_OTPDATA_DATA_Msk (0xFFUL << SYSTEM_OTPDATA_DATA_Pos) /*!< Bit mask of DATA field.                             */


/* SYSTEM_OTPADDR: Set address to write in OTP-memory */
  #define SYSTEM_OTPADDR_ResetValue (0x00UL)         /*!< Reset value of OTPADDR register.                                     */

/* OTPADDRSEL @Bit 0 : Select memory address source */
  #define SYSTEM_OTPADDR_OTPADDRSEL_Pos (0UL)        /*!< Position of OTPADDRSEL field.                                        */
  #define SYSTEM_OTPADDR_OTPADDRSEL_Msk (0x1UL << SYSTEM_OTPADDR_OTPADDRSEL_Pos) /*!< Bit mask of OTPADDRSEL field.            */
  #define SYSTEM_OTPADDR_OTPADDRSEL_Min (0x0UL)      /*!< Min enumerator value of OTPADDRSEL field.                            */
  #define SYSTEM_OTPADDR_OTPADDRSEL_Max (0x1UL)      /*!< Max enumerator value of OTPADDRSEL field.                            */
  #define SYSTEM_OTPADDR_OTPADDRSEL_FSM (0x0UL)      /*!< OTP Address from OTP controller (read)                               */
  #define SYSTEM_OTPADDR_OTPADDRSEL_REGISTER (0x1UL) /*!< OTP address from register (read / write)                             */

/* OTPADDR @Bits 1..7 : 7-bit address to be written */
  #define SYSTEM_OTPADDR_OTPADDR_Pos (1UL)           /*!< Position of OTPADDR field.                                           */
  #define SYSTEM_OTPADDR_OTPADDR_Msk (0x7FUL << SYSTEM_OTPADDR_OTPADDR_Pos) /*!< Bit mask of OTPADDR field.                    */


/* SYSTEM_OTPTEST: Select testmode */
  #define SYSTEM_OTPTEST_ResetValue (0x00UL)         /*!< Reset value of OTPTEST register.                                     */

/* MODE @Bits 0..2 : Select testmode */
  #define SYSTEM_OTPTEST_MODE_Pos (0UL)              /*!< Position of MODE field.                                              */
  #define SYSTEM_OTPTEST_MODE_Msk (0x7UL << SYSTEM_OTPTEST_MODE_Pos) /*!< Bit mask of MODE field.                              */
  #define SYSTEM_OTPTEST_MODE_Min (0x0UL)            /*!< Min enumerator value of MODE field.                                  */
  #define SYSTEM_OTPTEST_MODE_Max (0x7UL)            /*!< Max enumerator value of MODE field.                                  */
  #define SYSTEM_OTPTEST_MODE_USERMODE (0x0UL)       /*!< User mode                                                            */
  #define SYSTEM_OTPTEST_MODE_OFFSTATEMARGINREAD (0x5UL) /*!< Off State Margin Read Mode                                       */
  #define SYSTEM_OTPTEST_MODE_MARGIN1READ (0x6UL)    /*!< Margin 1 Read Mode                                                   */
  #define SYSTEM_OTPTEST_MODE_MARGIN2READ (0x7UL)    /*!< Margin 2 Read Mode                                                   */


/* SYSTEM_OTPEMULATE: Select OTP emulate */
  #define SYSTEM_OTPEMULATE_ResetValue (0x00UL)      /*!< Reset value of OTPEMULATE register.                                  */

/* OTPEMULATE @Bit 0 : Emulate read from OTP Memory */
  #define SYSTEM_OTPEMULATE_OTPEMULATE_Pos (0UL)     /*!< Position of OTPEMULATE field.                                        */
  #define SYSTEM_OTPEMULATE_OTPEMULATE_Msk (0x1UL << SYSTEM_OTPEMULATE_OTPEMULATE_Pos) /*!< Bit mask of OTPEMULATE field.      */
  #define SYSTEM_OTPEMULATE_OTPEMULATE_Min (0x0UL)   /*!< Min enumerator value of OTPEMULATE field.                            */
  #define SYSTEM_OTPEMULATE_OTPEMULATE_Max (0x1UL)   /*!< Max enumerator value of OTPEMULATE field.                            */
  #define SYSTEM_OTPEMULATE_OTPEMULATE_NORMAL (0x0UL) /*!< Data goes to memOtpDataInv                                          */
  #define SYSTEM_OTPEMULATE_OTPEMULATE_EMULATE (0x1UL) /*!< Date goes directly to Shadow register                              */


/* SYSTEM_OTPOVERRIDE: OTP FSM override */
  #define SYSTEM_OTPOVERRIDE_ResetValue (0x00UL)     /*!< Reset value of OTPOVERRIDE register.                                 */

/* OTPREADOVRDENA @Bit 0 : otpReadOvrdEna */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRDENA_Pos (0UL) /*!< Position of OTPREADOVRDENA field.                                   */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRDENA_Msk (0x1UL << SYSTEM_OTPOVERRIDE_OTPREADOVRDENA_Pos) /*!< Bit mask of OTPREADOVRDENA
                                                                            field.*/                                              
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRDENA_Min (0x0UL) /*!< Min enumerator value of OTPREADOVRDENA field.                     */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRDENA_Max (0x1UL) /*!< Max enumerator value of OTPREADOVRDENA field.                     */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                     */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRDENA_ENABLED (0x1UL) /*!< Enabled                                                       */

/* OTPREADOVRD @Bit 1 : otpReadOvrd */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRD_Pos (1UL)   /*!< Position of OTPREADOVRD field.                                       */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRD_Msk (0x1UL << SYSTEM_OTPOVERRIDE_OTPREADOVRD_Pos) /*!< Bit mask of OTPREADOVRD field. */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRD_Min (0x0UL) /*!< Min enumerator value of OTPREADOVRD field.                           */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRD_Max (0x1UL) /*!< Max enumerator value of OTPREADOVRD field.                           */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRD_LOW (0x0UL) /*!< Low                                                                  */
  #define SYSTEM_OTPOVERRIDE_OTPREADOVRD_HIGH (0x1UL) /*!< High                                                                */

/* OTPSWITCHOVRDENA @Bit 2 : otpSwitchOvrdEna */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRDENA_Pos (2UL) /*!< Position of OTPSWITCHOVRDENA field.                               */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRDENA_Msk (0x1UL << SYSTEM_OTPOVERRIDE_OTPSWITCHOVRDENA_Pos) /*!< Bit mask of
                                                                            OTPSWITCHOVRDENA field.*/                             
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRDENA_Min (0x0UL) /*!< Min enumerator value of OTPSWITCHOVRDENA field.                 */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRDENA_Max (0x1UL) /*!< Max enumerator value of OTPSWITCHOVRDENA field.                 */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                   */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRDENA_ENABLED (0x1UL) /*!< Enabled                                                     */

/* OTPSWITCHOVRD @Bit 3 : otpSwitchOvrd */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRD_Pos (3UL) /*!< Position of OTPSWITCHOVRD field.                                     */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRD_Msk (0x1UL << SYSTEM_OTPOVERRIDE_OTPSWITCHOVRD_Pos) /*!< Bit mask of OTPSWITCHOVRD
                                                                            field.*/                                              
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRD_Min (0x0UL) /*!< Min enumerator value of OTPSWITCHOVRD field.                       */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRD_Max (0x1UL) /*!< Max enumerator value of OTPSWITCHOVRD field.                       */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRD_LOW (0x0UL) /*!< Force OTP Supply switch ctrl LOW                                   */
  #define SYSTEM_OTPOVERRIDE_OTPSWITCHOVRD_HIGH (0x1UL) /*!< Force OTP Supply switch ctrl HIGH                                 */

/* OTPOUTENAOVRDENA @Bit 4 : otpOutEnaOvrdEna */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRDENA_Pos (4UL) /*!< Position of OTPOUTENAOVRDENA field.                               */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRDENA_Msk (0x1UL << SYSTEM_OTPOVERRIDE_OTPOUTENAOVRDENA_Pos) /*!< Bit mask of
                                                                            OTPOUTENAOVRDENA field.*/                             
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRDENA_Min (0x0UL) /*!< Min enumerator value of OTPOUTENAOVRDENA field.                 */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRDENA_Max (0x1UL) /*!< Max enumerator value of OTPOUTENAOVRDENA field.                 */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                   */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRDENA_ENABLED (0x1UL) /*!< Enabled                                                     */

/* OTPOUTENAOVRD @Bit 5 : otpOutEnaOvrd */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRD_Pos (5UL) /*!< Position of OTPOUTENAOVRD field.                                     */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRD_Msk (0x1UL << SYSTEM_OTPOVERRIDE_OTPOUTENAOVRD_Pos) /*!< Bit mask of OTPOUTENAOVRD
                                                                            field.*/                                              
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRD_Min (0x0UL) /*!< Min enumerator value of OTPOUTENAOVRD field.                       */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRD_Max (0x1UL) /*!< Max enumerator value of OTPOUTENAOVRD field.                       */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRD_LOW (0x0UL) /*!< Low                                                                */
  #define SYSTEM_OTPOVERRIDE_OTPOUTENAOVRD_HIGH (0x1UL) /*!< High                                                              */

/* OTPINENAOVRDENA @Bit 6 : otpInEnaOvrdEna */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRDENA_Pos (6UL) /*!< Position of OTPINENAOVRDENA field.                                 */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRDENA_Msk (0x1UL << SYSTEM_OTPOVERRIDE_OTPINENAOVRDENA_Pos) /*!< Bit mask of
                                                                            OTPINENAOVRDENA field.*/                              
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRDENA_Min (0x0UL) /*!< Min enumerator value of OTPINENAOVRDENA field.                   */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRDENA_Max (0x1UL) /*!< Max enumerator value of OTPINENAOVRDENA field.                   */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                    */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRDENA_ENABLED (0x1UL) /*!< Enabled                                                      */

/* OTPINENAOVRD @Bit 7 : otpInEnaOvrd */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRD_Pos (7UL)  /*!< Position of OTPINENAOVRD field.                                      */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRD_Msk (0x1UL << SYSTEM_OTPOVERRIDE_OTPINENAOVRD_Pos) /*!< Bit mask of OTPINENAOVRD
                                                                            field.*/                                              
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRD_Min (0x0UL) /*!< Min enumerator value of OTPINENAOVRD field.                         */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRD_Max (0x1UL) /*!< Max enumerator value of OTPINENAOVRD field.                         */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRD_LOW (0x0UL) /*!< Low                                                                 */
  #define SYSTEM_OTPOVERRIDE_OTPINENAOVRD_HIGH (0x1UL) /*!< High                                                               */


/* SYSTEM_TESTACCESS: Select testmode */
  #define SYSTEM_TESTACCESS_ResetValue (0x00UL)      /*!< Reset value of TESTACCESS register.                                  */

/* TESTACCESS @Bits 0..7 : Register KEY_ACCESS in the MAIN register bank is used to unlock the locked registers. The SW must
                           write the following 4 data words to the KEY_ACCESS register in the order given. 0x44 0x90 0xFA 0xCE */ 
                                                                                                                                  
  #define SYSTEM_TESTACCESS_TESTACCESS_Pos (0UL)     /*!< Position of TESTACCESS field.                                        */
  #define SYSTEM_TESTACCESS_TESTACCESS_Msk (0xFFUL << SYSTEM_TESTACCESS_TESTACCESS_Pos) /*!< Bit mask of TESTACCESS field.     */


/* SYSTEM_BGPOVERRIDE: BANDGAP Input overrides */
  #define SYSTEM_BGPOVERRIDE_ResetValue (0x00UL)     /*!< Reset value of BGPOVERRIDE register.                                 */

/* BGPGOODOVRDENA @Bit 0 : Enable for Bandgap Good Override */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRDENA_Pos (0UL) /*!< Position of BGPGOODOVRDENA field.                                   */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRDENA_Msk (0x1UL << SYSTEM_BGPOVERRIDE_BGPGOODOVRDENA_Pos) /*!< Bit mask of BGPGOODOVRDENA
                                                                            field.*/                                              
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRDENA_Min (0x0UL) /*!< Min enumerator value of BGPGOODOVRDENA field.                     */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRDENA_Max (0x1UL) /*!< Max enumerator value of BGPGOODOVRDENA field.                     */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRDENA_NOEFFECT (0x0UL) /*!< no effect                                                    */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRDENA_ENABLEOVERRIDE (0x1UL) /*!< use bgpGoodOvrd                                        */

/* BGPGOODOVRD @Bit 1 : Bandgap Good Override Value */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRD_Pos (1UL)   /*!< Position of BGPGOODOVRD field.                                       */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRD_Msk (0x1UL << SYSTEM_BGPOVERRIDE_BGPGOODOVRD_Pos) /*!< Bit mask of BGPGOODOVRD field. */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRD_Min (0x0UL) /*!< Min enumerator value of BGPGOODOVRD field.                           */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRD_Max (0x1UL) /*!< Max enumerator value of BGPGOODOVRD field.                           */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRD_0 (0x0UL)   /*!< force bgpGood to 0                                                   */
  #define SYSTEM_BGPOVERRIDE_BGPGOODOVRD_1 (0x1UL)   /*!< force bgpGood to 1                                                   */


/* SYSTEM_BGPSTATUS: BANDGAP Status */
  #define SYSTEM_BGPSTATUS_ResetValue (0x00UL)       /*!< Reset value of BGPSTATUS register.                                   */

/* BGPGOOD @Bits 0..3 : BGP_GOOD */
  #define SYSTEM_BGPSTATUS_BGPGOOD_Pos (0UL)         /*!< Position of BGPGOOD field.                                           */
  #define SYSTEM_BGPSTATUS_BGPGOOD_Msk (0xFUL << SYSTEM_BGPSTATUS_BGPGOOD_Pos) /*!< Bit mask of BGPGOOD field.                 */


/* SYSTEM_SYSTEMOVERRIDE: System Override */
  #define SYSTEM_SYSTEMOVERRIDE_ResetValue (0x00UL)  /*!< Reset value of SYSTEMOVERRIDE register.                              */

/* NTCENINPOVRDENA @Bit 0 : NTC Enalbe Input Override Enable */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRDENA_Pos (0UL) /*!< Position of NTCENINPOVRDENA field.                              */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRDENA_Msk (0x1UL << SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRDENA_Pos) /*!< Bit mask of
                                                                            NTCENINPOVRDENA field.*/                              
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRDENA_Min (0x0UL) /*!< Min enumerator value of NTCENINPOVRDENA field.                */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRDENA_Max (0x1UL) /*!< Max enumerator value of NTCENINPOVRDENA field.                */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRDENA_DISABLED (0x0UL) /*!< Disabled                                                 */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRDENA_ENABLED (0x1UL) /*!< Enabled                                                   */

/* NTCENINPOVRD @Bit 1 : NTC Enalbe Input Override Value */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRD_Pos (1UL) /*!< Position of NTCENINPOVRD field.                                    */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRD_Msk (0x1UL << SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRD_Pos) /*!< Bit mask of NTCENINPOVRD
                                                                            field.*/                                              
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRD_Min (0x0UL) /*!< Min enumerator value of NTCENINPOVRD field.                      */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRD_Max (0x1UL) /*!< Max enumerator value of NTCENINPOVRD field.                      */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRD_LOW (0x0UL) /*!< Low                                                              */
  #define SYSTEM_SYSTEMOVERRIDE_NTCENINPOVRD_HIGH (0x1UL) /*!< High                                                            */


/* SYSTEM_USBCDETCKHPBOVERRIDE: USB-C Detector Overrides */
  #define SYSTEM_USBCDETCKHPBOVERRIDE_ResetValue (0x00UL) /*!< Reset value of USBCDETCKHPBOVERRIDE register.                   */

/* USBCDETPWRUPOVRDENA @Bit 0 : override enable */
  #define SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRDENA_Pos (0UL) /*!< Position of USBCDETPWRUPOVRDENA field.                */
  #define SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRDENA_Msk (0x1UL << SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRDENA_Pos)
                                                                            /*!< Bit mask of USBCDETPWRUPOVRDENA field.*/         
  #define SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRDENA_Min (0x0UL) /*!< Min enumerator value of USBCDETPWRUPOVRDENA field.  */
  #define SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRDENA_Max (0x1UL) /*!< Max enumerator value of USBCDETPWRUPOVRDENA field.  */
  #define SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRDENA_DISABLED (0x0UL) /*!< (unspecified)                                  */
  #define SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRDENA_ENABLED (0x1UL) /*!< (unspecified)                                   */

/* USBCDETPWRUPOVRD @Bit 1 : override value */
  #define SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRD_Pos (1UL) /*!< Position of USBCDETPWRUPOVRD field.                      */
  #define SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRD_Msk (0x1UL << SYSTEM_USBCDETCKHPBOVERRIDE_USBCDETPWRUPOVRD_Pos) /*!< Bit
                                                                            mask of USBCDETPWRUPOVRD field.*/                     


/* SYSTEM_USBCDETATE: USB-C Detection Test Control */
  #define SYSTEM_USBCDETATE_ResetValue (0x00UL)      /*!< Reset value of USBCDETATE register.                                  */

/* ATEUSBCDET @Bits 0..1 : ATE_USBCDET_VAOD */
  #define SYSTEM_USBCDETATE_ATEUSBCDET_Pos (0UL)     /*!< Position of ATEUSBCDET field.                                        */
  #define SYSTEM_USBCDETATE_ATEUSBCDET_Msk (0x3UL << SYSTEM_USBCDETATE_ATEUSBCDET_Pos) /*!< Bit mask of ATEUSBCDET field.      */


/* SYSTEM_FTMEXTCLK: FTM Clk select */
  #define SYSTEM_FTMEXTCLK_ResetValue (0x00UL)       /*!< Reset value of FTMEXTCLK register.                                   */

/* FTMEXTCLK @Bit 0 : FTM clock selection */
  #define SYSTEM_FTMEXTCLK_FTMEXTCLK_Pos (0UL)       /*!< Position of FTMEXTCLK field.                                         */
  #define SYSTEM_FTMEXTCLK_FTMEXTCLK_Msk (0x1UL << SYSTEM_FTMEXTCLK_FTMEXTCLK_Pos) /*!< Bit mask of FTMEXTCLK field.           */
  #define SYSTEM_FTMEXTCLK_FTMEXTCLK_Min (0x0UL)     /*!< Min enumerator value of FTMEXTCLK field.                             */
  #define SYSTEM_FTMEXTCLK_FTMEXTCLK_Max (0x1UL)     /*!< Max enumerator value of FTMEXTCLK field.                             */
  #define SYSTEM_FTMEXTCLK_FTMEXTCLK_INTERNALCLK (0x0UL) /*!< selects internal oscillator clock for FTM1                       */
  #define SYSTEM_FTMEXTCLK_FTMEXTCLK_EXTCLK (0x1UL)  /*!< selects external clock on SHPHLD pad for FTM2                        */


/* SYSTEM_SCANMODESEL: scanMode select */
  #define SYSTEM_SCANMODESEL_ResetValue (0x00UL)     /*!< Reset value of SCANMODESEL register.                                 */

/* SCANMODESEL @Bit 0 : ScanMode select */
  #define SYSTEM_SCANMODESEL_SCANMODESEL_Pos (0UL)   /*!< Position of SCANMODESEL field.                                       */
  #define SYSTEM_SCANMODESEL_SCANMODESEL_Msk (0x1UL << SYSTEM_SCANMODESEL_SCANMODESEL_Pos) /*!< Bit mask of SCANMODESEL field. */
  #define SYSTEM_SCANMODESEL_SCANMODESEL_Min (0x0UL) /*!< Min enumerator value of SCANMODESEL field.                           */
  #define SYSTEM_SCANMODESEL_SCANMODESEL_Max (0x1UL) /*!< Max enumerator value of SCANMODESEL field.                           */
  #define SYSTEM_SCANMODESEL_SCANMODESEL_NOEFFECT (0x0UL) /*!< no effect                                                       */
  #define SYSTEM_SCANMODESEL_SCANMODESEL_ENABLESCANMODE (0x1UL) /*!< set this, to allow rising edge on VSET1 to enable SCANMODE*/


/* SYSTEM_EXTCKSLOW: selects External clock for ckSlow NOTE: Reset value from OTP, value listed in this table may not be
                      correct. */                                                                                                 
                                                                                                                                  
  #define SYSTEM_EXTCKSLOW_ResetValue (0x00UL)       /*!< Reset value of EXTCKSLOW register.                                   */

/* EXTCKSLOWSEL @Bit 0 : selects external pin as source for ckSlow */
  #define SYSTEM_EXTCKSLOW_EXTCKSLOWSEL_Pos (0UL)    /*!< Position of EXTCKSLOWSEL field.                                      */
  #define SYSTEM_EXTCKSLOW_EXTCKSLOWSEL_Msk (0x1UL << SYSTEM_EXTCKSLOW_EXTCKSLOWSEL_Pos) /*!< Bit mask of EXTCKSLOWSEL field.  */
  #define SYSTEM_EXTCKSLOW_EXTCKSLOWSEL_Min (0x0UL)  /*!< Min enumerator value of EXTCKSLOWSEL field.                          */
  #define SYSTEM_EXTCKSLOW_EXTCKSLOWSEL_Max (0x1UL)  /*!< Max enumerator value of EXTCKSLOWSEL field.                          */
  #define SYSTEM_EXTCKSLOW_EXTCKSLOWSEL_INTERNALCLK (0x0UL) /*!< selects internal 1K oscillator for ckSlow                     */
  #define SYSTEM_EXTCKSLOW_EXTCKSLOWSEL_EXTCLK (0x1UL) /*!< selects external clock on GPIO[4] pad for ckSlow                   */


/* SYSTEM_ANACORETRIM0: VSYS and POR Comp Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_ANACORETRIM0_ResetValue (0x00UL)    /*!< Reset value of ANACORETRIM0 register.                                */

/* VSYSCOMPTRIM @Bits 0..3 : VSYSCOMP_TRIM */
  #define SYSTEM_ANACORETRIM0_VSYSCOMPTRIM_Pos (0UL) /*!< Position of VSYSCOMPTRIM field.                                      */
  #define SYSTEM_ANACORETRIM0_VSYSCOMPTRIM_Msk (0xFUL << SYSTEM_ANACORETRIM0_VSYSCOMPTRIM_Pos) /*!< Bit mask of VSYSCOMPTRIM
                                                                            field.*/                                              

/* PORCOMPTRIM @Bits 4..7 : PORCOMP_TRIM */
  #define SYSTEM_ANACORETRIM0_PORCOMPTRIM_Pos (4UL)  /*!< Position of PORCOMPTRIM field.                                       */
  #define SYSTEM_ANACORETRIM0_PORCOMPTRIM_Msk (0xFUL << SYSTEM_ANACORETRIM0_PORCOMPTRIM_Pos) /*!< Bit mask of PORCOMPTRIM
                                                                            field.*/                                              


/* SYSTEM_ANACORETRIM1: TEMP Comp Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_ANACORETRIM1_ResetValue (0x00UL)    /*!< Reset value of ANACORETRIM1 register.                                */

/* TSDCOMPTRIM @Bits 0..5 : TSDPCOMP_TRIM */
  #define SYSTEM_ANACORETRIM1_TSDCOMPTRIM_Pos (0UL)  /*!< Position of TSDCOMPTRIM field.                                       */
  #define SYSTEM_ANACORETRIM1_TSDCOMPTRIM_Msk (0x3FUL << SYSTEM_ANACORETRIM1_TSDCOMPTRIM_Pos) /*!< Bit mask of TSDCOMPTRIM
                                                                            field.*/                                              


/* SYSTEM_ANACORETRIM2: ULPBIAS and OSC4M Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_ANACORETRIM2_ResetValue (0x00UL)    /*!< Reset value of ANACORETRIM2 register.                                */

/* ULPBIASTRIM @Bits 0..2 : ULPBIAS_TRIM */
  #define SYSTEM_ANACORETRIM2_ULPBIASTRIM_Pos (0UL)  /*!< Position of ULPBIASTRIM field.                                       */
  #define SYSTEM_ANACORETRIM2_ULPBIASTRIM_Msk (0x7UL << SYSTEM_ANACORETRIM2_ULPBIASTRIM_Pos) /*!< Bit mask of ULPBIASTRIM
                                                                            field.*/                                              

/* OSC4MTRIM @Bits 3..7 : OSC4M_TRIM */
  #define SYSTEM_ANACORETRIM2_OSC4MTRIM_Pos (3UL)    /*!< Position of OSC4MTRIM field.                                         */
  #define SYSTEM_ANACORETRIM2_OSC4MTRIM_Msk (0x1FUL << SYSTEM_ANACORETRIM2_OSC4MTRIM_Pos) /*!< Bit mask of OSC4MTRIM field.    */


/* SYSTEM_ANACORETRIM3: HPREF Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_ANACORETRIM3_ResetValue (0x00UL)    /*!< Reset value of ANACORETRIM3 register.                                */

/* HPREFTRIM @Bits 0..3 : HPREF Trim */
  #define SYSTEM_ANACORETRIM3_HPREFTRIM_Pos (0UL)    /*!< Position of HPREFTRIM field.                                         */
  #define SYSTEM_ANACORETRIM3_HPREFTRIM_Msk (0xFUL << SYSTEM_ANACORETRIM3_HPREFTRIM_Pos) /*!< Bit mask of HPREFTRIM field.     */


/* SYSTEM_ANACORETRIM4: Bandgap1V5 Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_ANACORETRIM4_ResetValue (0x00UL)    /*!< Reset value of ANACORETRIM4 register.                                */

/* BGPTRIM @Bits 0..4 : BGP Trim */
  #define SYSTEM_ANACORETRIM4_BGPTRIM_Pos (0UL)      /*!< Position of BGPTRIM field.                                           */
  #define SYSTEM_ANACORETRIM4_BGPTRIM_Msk (0x1FUL << SYSTEM_ANACORETRIM4_BGPTRIM_Pos) /*!< Bit mask of BGPTRIM field.          */


/* SYSTEM_RCOSC1KTRIM: Rc Osc 1k Res Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_RCOSC1KTRIM_ResetValue (0x00UL)     /*!< Reset value of RCOSC1KTRIM register.                                 */

/* RCOSCSLOWTRIMRES @Bits 0..6 : RCOSC1K Res Trim */
  #define SYSTEM_RCOSC1KTRIM_RCOSCSLOWTRIMRES_Pos (0UL) /*!< Position of RCOSCSLOWTRIMRES field.                               */
  #define SYSTEM_RCOSC1KTRIM_RCOSCSLOWTRIMRES_Msk (0x7FUL << SYSTEM_RCOSC1KTRIM_RCOSCSLOWTRIMRES_Pos) /*!< Bit mask of
                                                                            RCOSCSLOWTRIMRES field.*/                             


/* SYSTEM_SPARETRIM: Spare Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_SPARETRIM_ResetValue (0x00UL)       /*!< Reset value of SPARETRIM register.                                   */

/* SPARETRIMOTP @Bits 0..3 : SPARE_TRIM_OTP */
  #define SYSTEM_SPARETRIM_SPARETRIMOTP_Pos (0UL)    /*!< Position of SPARETRIMOTP field.                                      */
  #define SYSTEM_SPARETRIM_SPARETRIMOTP_Msk (0xFUL << SYSTEM_SPARETRIM_SPARETRIMOTP_Pos) /*!< Bit mask of SPARETRIMOTP field.  */


/* SYSTEM_SYSCONFIG: Generic Configuration NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_SYSCONFIG_ResetValue (0x00UL)       /*!< Reset value of SYSCONFIG register.                                   */

/* DISABLETSDCOMPDATA @Bit 0 : Force IC temperature comparator values to zero */
  #define SYSTEM_SYSCONFIG_DISABLETSDCOMPDATA_Pos (0UL) /*!< Position of DISABLETSDCOMPDATA field.                             */
  #define SYSTEM_SYSCONFIG_DISABLETSDCOMPDATA_Msk (0x1UL << SYSTEM_SYSCONFIG_DISABLETSDCOMPDATA_Pos) /*!< Bit mask of
                                                                            DISABLETSDCOMPDATA field.*/                           
  #define SYSTEM_SYSCONFIG_DISABLETSDCOMPDATA_Min (0x0UL) /*!< Min enumerator value of DISABLETSDCOMPDATA field.               */
  #define SYSTEM_SYSCONFIG_DISABLETSDCOMPDATA_Max (0x1UL) /*!< Max enumerator value of DISABLETSDCOMPDATA field.               */
  #define SYSTEM_SYSCONFIG_DISABLETSDCOMPDATA_NORMAL (0x0UL) /*!< IC thermal comparators operate normally                      */
  #define SYSTEM_SYSCONFIG_DISABLETSDCOMPDATA_FORCE_ZERO (0x1UL) /*!< IC thermal comparator outputs forced low                 */

/* DISABLETSDPWM @Bit 1 : Disable TSD-FSM request while in PWM mode */
  #define SYSTEM_SYSCONFIG_DISABLETSDPWM_Pos (1UL)   /*!< Position of DISABLETSDPWM field.                                     */
  #define SYSTEM_SYSCONFIG_DISABLETSDPWM_Msk (0x1UL << SYSTEM_SYSCONFIG_DISABLETSDPWM_Pos) /*!< Bit mask of DISABLETSDPWM
                                                                            field.*/                                              
  #define SYSTEM_SYSCONFIG_DISABLETSDPWM_Min (0x0UL) /*!< Min enumerator value of DISABLETSDPWM field.                         */
  #define SYSTEM_SYSCONFIG_DISABLETSDPWM_Max (0x1UL) /*!< Max enumerator value of DISABLETSDPWM field.                         */
  #define SYSTEM_SYSCONFIG_DISABLETSDPWM_NORMAL (0x0UL) /*!< TSD-FSM is requested ON in PWM mode                               */
  #define SYSTEM_SYSCONFIG_DISABLETSDPWM_NOREQUEST (0x1UL) /*!< TSD-FSM is not requested ON in PWM mode                        */

/* DISABLETSDILIM @Bit 2 : Disable TSD-FSM request by charger ilim active */
  #define SYSTEM_SYSCONFIG_DISABLETSDILIM_Pos (2UL)  /*!< Position of DISABLETSDILIM field.                                    */
  #define SYSTEM_SYSCONFIG_DISABLETSDILIM_Msk (0x1UL << SYSTEM_SYSCONFIG_DISABLETSDILIM_Pos) /*!< Bit mask of DISABLETSDILIM
                                                                            field.*/                                              
  #define SYSTEM_SYSCONFIG_DISABLETSDILIM_Min (0x0UL) /*!< Min enumerator value of DISABLETSDILIM field.                       */
  #define SYSTEM_SYSCONFIG_DISABLETSDILIM_Max (0x1UL) /*!< Max enumerator value of DISABLETSDILIM field.                       */
  #define SYSTEM_SYSCONFIG_DISABLETSDILIM_NORMAL (0x0UL) /*!< TSD-FSM is requested ON by charger ilim active                   */
  #define SYSTEM_SYSCONFIG_DISABLETSDILIM_NOREQUEST (0x1UL) /*!< TSD-FSM is not requested ON by chargewr ilim active           */

/* TSDCOMPDISASAMPLEDMODE @Bit 3 : TSDCOMP sampled mode config (HTOL) */
  #define SYSTEM_SYSCONFIG_TSDCOMPDISASAMPLEDMODE_Pos (3UL) /*!< Position of TSDCOMPDISASAMPLEDMODE field.                     */
  #define SYSTEM_SYSCONFIG_TSDCOMPDISASAMPLEDMODE_Msk (0x1UL << SYSTEM_SYSCONFIG_TSDCOMPDISASAMPLEDMODE_Pos) /*!< Bit mask of
                                                                            TSDCOMPDISASAMPLEDMODE field.*/                       
  #define SYSTEM_SYSCONFIG_TSDCOMPDISASAMPLEDMODE_Min (0x0UL) /*!< Min enumerator value of TSDCOMPDISASAMPLEDMODE field.       */
  #define SYSTEM_SYSCONFIG_TSDCOMPDISASAMPLEDMODE_Max (0x1UL) /*!< Max enumerator value of TSDCOMPDISASAMPLEDMODE field.       */
  #define SYSTEM_SYSCONFIG_TSDCOMPDISASAMPLEDMODE_ENABLED (0x0UL) /*!< TSD sampled mode enabled                                */
  #define SYSTEM_SYSCONFIG_TSDCOMPDISASAMPLEDMODE_DISABLED (0x1UL) /*!< TSD sampled mode disabled                              */

/* HPREFPRGTC @Bits 4..5 : HPREF temperature coefficent programming */
  #define SYSTEM_SYSCONFIG_HPREFPRGTC_Pos (4UL)      /*!< Position of HPREFPRGTC field.                                        */
  #define SYSTEM_SYSCONFIG_HPREFPRGTC_Msk (0x3UL << SYSTEM_SYSCONFIG_HPREFPRGTC_Pos) /*!< Bit mask of HPREFPRGTC field.        */
  #define SYSTEM_SYSCONFIG_HPREFPRGTC_Min (0x0UL)    /*!< Min enumerator value of HPREFPRGTC field.                            */
  #define SYSTEM_SYSCONFIG_HPREFPRGTC_Max (0x1UL)    /*!< Max enumerator value of HPREFPRGTC field.                            */
  #define SYSTEM_SYSCONFIG_HPREFPRGTC_NORMAL (0x0UL) /*!< default                                                              */
  #define SYSTEM_SYSCONFIG_HPREFPRGTC_TCPLUS (0x1UL) /*!< increasing PTAT behavior                                             */
  #define SYSTEM_SYSCONFIG_HPREFPRGTC_TCPLUSPLUS (0x1UL) /*!< increasing PTAT behavior                                         */
  #define SYSTEM_SYSCONFIG_HPREFPRGTC_TCPLUSPLUSPLUS (0x1UL) /*!< increasing PTAT behavior                                     */


/* SYSTEM_SYSDELAYSEL: Timer Delay Select NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_SYSDELAYSEL_ResetValue (0x00UL)     /*!< Reset value of SYSDELAYSEL register.                                 */

/* USBDETTSEL @Bit 0 : USBDET_TSEL */
  #define SYSTEM_SYSDELAYSEL_USBDETTSEL_Pos (0UL)    /*!< Position of USBDETTSEL field.                                        */
  #define SYSTEM_SYSDELAYSEL_USBDETTSEL_Msk (0x1UL << SYSTEM_SYSDELAYSEL_USBDETTSEL_Pos) /*!< Bit mask of USBDETTSEL field.    */
  #define SYSTEM_SYSDELAYSEL_USBDETTSEL_Min (0x0UL)  /*!< Min enumerator value of USBDETTSEL field.                            */
  #define SYSTEM_SYSDELAYSEL_USBDETTSEL_Max (0x1UL)  /*!< Max enumerator value of USBDETTSEL field.                            */
  #define SYSTEM_SYSDELAYSEL_USBDETTSEL_NORMAL (0x0UL) /*!< Select Normal 600ms USB-B timer, USB-C debounce 15ms               */
  #define SYSTEM_SYSDELAYSEL_USBDETTSEL_FAST (0x1UL) /*!< Select 7.5ms USB-B timer, USB-C debounce 2ms                         */

/* STARTUPTSEL @Bit 1 : STARTUP_TSEL */
  #define SYSTEM_SYSDELAYSEL_STARTUPTSEL_Pos (1UL)   /*!< Position of STARTUPTSEL field.                                       */
  #define SYSTEM_SYSDELAYSEL_STARTUPTSEL_Msk (0x1UL << SYSTEM_SYSDELAYSEL_STARTUPTSEL_Pos) /*!< Bit mask of STARTUPTSEL field. */
  #define SYSTEM_SYSDELAYSEL_STARTUPTSEL_Min (0x0UL) /*!< Min enumerator value of STARTUPTSEL field.                           */
  #define SYSTEM_SYSDELAYSEL_STARTUPTSEL_Max (0x1UL) /*!< Max enumerator value of STARTUPTSEL field.                           */
  #define SYSTEM_SYSDELAYSEL_STARTUPTSEL_NORMAL (0x0UL) /*!< Select Normal 2ms startup wait delay                              */
  #define SYSTEM_SYSDELAYSEL_STARTUPTSEL_FAST (0x1UL) /*!< Select 47us startup wait delay                                      */

/* VBUSPOWEREDTSEL @Bit 2 : VBUSPOWERED_TSEL */
  #define SYSTEM_SYSDELAYSEL_VBUSPOWEREDTSEL_Pos (2UL) /*!< Position of VBUSPOWEREDTSEL field.                                 */
  #define SYSTEM_SYSDELAYSEL_VBUSPOWEREDTSEL_Msk (0x1UL << SYSTEM_SYSDELAYSEL_VBUSPOWEREDTSEL_Pos) /*!< Bit mask of
                                                                            VBUSPOWEREDTSEL field.*/                              
  #define SYSTEM_SYSDELAYSEL_VBUSPOWEREDTSEL_Min (0x0UL) /*!< Min enumerator value of VBUSPOWEREDTSEL field.                   */
  #define SYSTEM_SYSDELAYSEL_VBUSPOWEREDTSEL_Max (0x1UL) /*!< Max enumerator value of VBUSPOWEREDTSEL field.                   */
  #define SYSTEM_SYSDELAYSEL_VBUSPOWEREDTSEL_NORMAL (0x0UL) /*!< Select Normal 1ms settling debounce                           */
  #define SYSTEM_SYSDELAYSEL_VBUSPOWEREDTSEL_FAST (0x1UL) /*!< Select 20us settling debounce                                   */

/* GPIOTSEL @Bit 3 : GPIO_TSEL */
  #define SYSTEM_SYSDELAYSEL_GPIOTSEL_Pos (3UL)      /*!< Position of GPIOTSEL field.                                          */
  #define SYSTEM_SYSDELAYSEL_GPIOTSEL_Msk (0x1UL << SYSTEM_SYSDELAYSEL_GPIOTSEL_Pos) /*!< Bit mask of GPIOTSEL field.          */
  #define SYSTEM_SYSDELAYSEL_GPIOTSEL_Min (0x0UL)    /*!< Min enumerator value of GPIOTSEL field.                              */
  #define SYSTEM_SYSDELAYSEL_GPIOTSEL_Max (0x1UL)    /*!< Max enumerator value of GPIOTSEL field.                              */
  #define SYSTEM_SYSDELAYSEL_GPIOTSEL_NORMAL (0x0UL) /*!< Select Normal 10ms settling debounce                                 */
  #define SYSTEM_SYSDELAYSEL_GPIOTSEL_FAST (0x1UL)   /*!< Select 2ms settling debounce                                         */


/* SYSTEM_USBCDETRPDTRIM: USBC Detector RPD Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_USBCDETRPDTRIM_ResetValue (0x00UL)  /*!< Reset value of USBCDETRPDTRIM register.                              */

/* USBCDETRPDTRIM @Bits 0..2 : USBCDETECT_RPD_TRIM */
  #define SYSTEM_USBCDETRPDTRIM_USBCDETRPDTRIM_Pos (0UL) /*!< Position of USBCDETRPDTRIM field.                                */
  #define SYSTEM_USBCDETRPDTRIM_USBCDETRPDTRIM_Msk (0x7UL << SYSTEM_USBCDETRPDTRIM_USBCDETRPDTRIM_Pos) /*!< Bit mask of
                                                                            USBCDETRPDTRIM field.*/                               


/* SYSTEM_USBCDETIREFTRIM: USBC Detector IREF Trim NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_USBCDETIREFTRIM_ResetValue (0x00UL) /*!< Reset value of USBCDETIREFTRIM register.                             */

/* USBCDETIREFTRIM @Bits 0..2 : USBCDETECT_IREF_TRIM */
  #define SYSTEM_USBCDETIREFTRIM_USBCDETIREFTRIM_Pos (0UL) /*!< Position of USBCDETIREFTRIM field.                             */
  #define SYSTEM_USBCDETIREFTRIM_USBCDETIREFTRIM_Msk (0x7UL << SYSTEM_USBCDETIREFTRIM_USBCDETIREFTRIM_Pos) /*!< Bit mask of
                                                                            USBCDETIREFTRIM field.*/                              


/* SYSTEM_TWIFILTCONFIG: TWI Filter Configuration NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_TWIFILTCONFIG_ResetValue (0x00UL)   /*!< Reset value of TWIFILTCONFIG register.                               */

/* TWIFILTSHORTDLY @Bit 0 : delay adjustment */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTSHORTDLY_Pos (0UL) /*!< Position of TWIFILTSHORTDLY field.                               */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTSHORTDLY_Msk (0x1UL << SYSTEM_TWIFILTCONFIG_TWIFILTSHORTDLY_Pos) /*!< Bit mask of
                                                                            TWIFILTSHORTDLY field.*/                              
  #define SYSTEM_TWIFILTCONFIG_TWIFILTSHORTDLY_Min (0x0UL) /*!< Min enumerator value of TWIFILTSHORTDLY field.                 */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTSHORTDLY_Max (0x1UL) /*!< Max enumerator value of TWIFILTSHORTDLY field.                 */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTSHORTDLY_LONGDLY (0x0UL) /*!< 50ns delay (default)                                       */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTSHORTDLY_SHORTDLY (0x1UL) /*!< 10ns delay                                                */

/* TWIFILTBYPASS @Bit 1 : Filter bypass */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTBYPASS_Pos (1UL) /*!< Position of TWIFILTBYPASS field.                                   */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTBYPASS_Msk (0x1UL << SYSTEM_TWIFILTCONFIG_TWIFILTBYPASS_Pos) /*!< Bit mask of
                                                                            TWIFILTBYPASS field.*/                                
  #define SYSTEM_TWIFILTCONFIG_TWIFILTBYPASS_Min (0x0UL) /*!< Min enumerator value of TWIFILTBYPASS field.                     */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTBYPASS_Max (0x1UL) /*!< Max enumerator value of TWIFILTBYPASS field.                     */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTBYPASS_NOBYPASS (0x0UL) /*!< De-glitch function is enabled (default)                     */
  #define SYSTEM_TWIFILTCONFIG_TWIFILTBYPASS_BYPASS (0x1UL) /*!< Bypass de-glitch function                                     */


/* SYSTEM_SAMPLEDVREFCONFIG: Sampled VREF Configuration NOTE: Reset value from OTP, value listed in this table may not be
                              correct. */                                                                                         
                                                                                                                                  
  #define SYSTEM_SAMPLEDVREFCONFIG_ResetValue (0x00UL) /*!< Reset value of SAMPLEDVREFCONFIG register.                         */

/* SAMPLEDVREFENHP @Bit 0 : Allow IBN_5U to bias comparator in HP mode */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFENHP_Pos (0UL) /*!< Position of SAMPLEDVREFENHP field.                           */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFENHP_Msk (0x1UL << SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFENHP_Pos) /*!< Bit mask of
                                                                            SAMPLEDVREFENHP field.*/                              
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFENHP_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFENHP field.             */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFENHP_Max (0x1UL) /*!< Max enumerator value of SAMPLEDVREFENHP field.             */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFENHP_NORMAL (0x0UL) /*!< Even in HP mode only 7.5nA bias                         */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFENHP_HP (0x1UL) /*!< Both 7.5nA + 5uA bias comparator in HP mode                 */

/* SAMPLEDVREFULPCOMPTM @Bit 1 : Increase comparator bias current */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFULPCOMPTM_Pos (1UL) /*!< Position of SAMPLEDVREFULPCOMPTM field.                 */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFULPCOMPTM_Msk (0x1UL << SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFULPCOMPTM_Pos) /*!<
                                                                            Bit mask of SAMPLEDVREFULPCOMPTM field.*/             
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFULPCOMPTM_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFULPCOMPTM field.   */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFULPCOMPTM_Max (0x1UL) /*!< Max enumerator value of SAMPLEDVREFULPCOMPTM field.   */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFULPCOMPTM_NORMAL (0x0UL) /*!< Normal comparator bias current                     */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFULPCOMPTM_INCREASED (0x1UL) /*!< Comparator bias current 1.5x                    */

/* SAMPLEDVREFLOADVRFSRTM @Bits 2..3 : Add additional leakage to high voltage reference */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_Pos (2UL) /*!< Position of SAMPLEDVREFLOADVRFSRTM field.             */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_Msk (0x3UL << SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_Pos)
                                                                            /*!< Bit mask of SAMPLEDVREFLOADVRFSRTM field.*/      
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFLOADVRFSRTM
                                                                           field.*/                                               
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_Max (0x3UL) /*!< Max enumerator value of SAMPLEDVREFLOADVRFSRTM
                                                                           field.*/                                               
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_NORMAL0 (0x0UL) /*!< 1x NMOS leaking path                            */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_DOUBLE (0x1UL) /*!< 2x NMOS leaking path                             */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_NONE (0x2UL) /*!< no leaking path                                    */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFLOADVRFSRTM_NORMAL3 (0x3UL) /*!< 1x NMOS leaking path                            */

/* SAMPLEDVREFPRGREFRCAP @Bits 4..5 : Change the capacitance in the high voltage reference */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_Pos (4UL) /*!< Position of SAMPLEDVREFPRGREFRCAP field.               */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_Msk (0x3UL << SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_Pos) /*!<
                                                                            Bit mask of SAMPLEDVREFPRGREFRCAP field.*/            
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFPRGREFRCAP field. */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_Max (0x3UL) /*!< Max enumerator value of SAMPLEDVREFPRGREFRCAP field. */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_TREBLE (0x0UL) /*!< 3x 200fF                                          */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_QUAD (0x1UL) /*!< 4x 200fF                                            */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_SINGLE (0x2UL) /*!< 1x 200fF                                          */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFPRGREFRCAP_DOUBLE (0x3UL) /*!< 2x 200fF                                          */

/* SAMPLEDVREFVREFHCTRL @Bits 6..7 : Change the voltage level of the high leakage node */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_Pos (6UL) /*!< Position of SAMPLEDVREFVREFHCTRL field.                 */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_Msk (0x3UL << SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_Pos) /*!<
                                                                            Bit mask of SAMPLEDVREFVREFHCTRL field.*/             
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFVREFHCTRL field.   */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_Max (0x3UL) /*!< Max enumerator value of SAMPLEDVREFVREFHCTRL field.   */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_NOMINAL (0x0UL) /*!< 750mV                                             */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_MIN (0x1UL) /*!< 700mV                                                 */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_MAX (0x2UL) /*!< 850mV                                                 */
  #define SYSTEM_SAMPLEDVREFCONFIG_SAMPLEDVREFVREFHCTRL_HI (0x3UL) /*!< 800mV                                                  */


/* SYSTEM_HIDDENLABEL: Hidden Label NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define SYSTEM_HIDDENLABEL_ResetValue (0x00UL)     /*!< Reset value of HIDDENLABEL register.                                 */

/* HIDDENLABEL @Bits 0..7 : 8 bit field to be used as label (potential OTP revision), read via vsysLabel register */
  #define SYSTEM_HIDDENLABEL_HIDDENLABEL_Pos (0UL)   /*!< Position of HIDDENLABEL field.                                       */
  #define SYSTEM_HIDDENLABEL_HIDDENLABEL_Msk (0xFFUL << SYSTEM_HIDDENLABEL_HIDDENLABEL_Pos) /*!< Bit mask of HIDDENLABEL field.*/



/* =========================================================================================================================== */
/* ================                                          VBUSIN                                          ================ */
/* =========================================================================================================================== */

/* ====================================================== Struct VBUSIN ====================================================== */
/**
  * @brief Neutrino VBUSIN registers
  */
typedef struct {                                     /*!< VBUSIN Structure                                                     */
  __OM  uint8_t   TASKUPDATEILIMSW;                  /*!< (@ 0x00000000) Select Input Current limit for VBUS                   */
  __IOM uint8_t   VBUSINILIM0;                       /*!< (@ 0x00000001) Select Input Current limit for VBUS NOTE: Reset value
                                                                         from OTP, value listed in this table may not be
                                                                         correct.*/                                               
  __IOM uint8_t   VBUSINILIMSTARTUP;                 /*!< (@ 0x00000002) Select input Current limit for VBUS at Startup NOTE:
                                                                         Reset value from OTP, value listed in this table may
                                                                         not be correct.*/                                        
  __IOM uint8_t   VBUSSUSPEND;                       /*!< (@ 0x00000003) Suspend mode enable                                   */
  __IOM uint8_t   VBUSOUTDISABLE;                    /*!< (@ 0x00000004) Disable VBUS OUT                                      */
  __IM  uint8_t   USBCDETECTSTATUS;                  /*!< (@ 0x00000005) VBUS CC comparator status flags                       */
  __IM  uint8_t   USBBDETECTSTATUS;                  /*!< (@ 0x00000006) VBUS DP/DM comparator status flags                    */
  __IM  uint8_t   VBUSINSTATUS;                      /*!< (@ 0x00000007) VBUS status flags                                     */
  __IOM uint8_t   VBUSINCFG;                         /*!< (@ 0x00000008) ilim5v0 configuration                                 */
  __IOM uint8_t   VBUSINADJUSTILIM;                  /*!< (@ 0x00000009) ILIM adjustments NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IM  uint8_t   ILIM5V0SPARESTATUS;                /*!< (@ 0x0000000A) Ilim5V0 Spare Status Flags                            */
  __IOM uint8_t   ILIM5V0TESTCFG;                    /*!< (@ 0x0000000B) Ilim5V0 Test Configuration                            */
  __IOM uint8_t   ILIM5V0CALOTA1;                    /*!< (@ 0x0000000C) Ilim5V0 OTA1 Calibration Enable                       */
  __IOM uint8_t   ILIMH5V0OVERRIDE0;                 /*!< (@ 0x0000000D) ilimh5v0 Overrides 0                                  */
  __IOM uint8_t   ILIMH5V0OVERRIDE1;                 /*!< (@ 0x0000000E) ilimh5v0 Overrides 1                                  */
  __IOM uint8_t   ILIMH5V0OVERRIDE2;                 /*!< (@ 0x0000000F) ilimh5v0 Overrides 2                                  */
  __IOM uint8_t   ILIMH5V0ATE;                       /*!< (@ 0x00000010) ILIMH5V0 Analog Testbus Enable                        */
  __IOM uint8_t   ILIMH5V0ILIMTRIM0;                 /*!< (@ 0x00000011) Ilimh5V0 ILIM Trim0 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   ILIMH5V0ILIMTRIM1;                 /*!< (@ 0x00000012) Ilimh5V0 ILIM Trim1 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   ILIMH5V0ILIMTRIM2;                 /*!< (@ 0x00000013) Ilimh5V0 ILIM Trim2 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   VSYSVBATHIGHTRIM;                  /*!< (@ 0x00000014) VSYS_HIGH and VBAT_HIGH Trim NOTE: Reset value from
                                                                         OTP, value listed in this table may not be correct.*/    
  __IOM uint8_t   ILIMH5V0OVERVOLTAGETRIM;           /*!< (@ 0x00000015) Ilimh5V0 overvoltage theshold Trim NOTE: Reset value
                                                                         from OTP, value listed in this table may not be
                                                                         correct.*/                                               
  __IOM uint8_t   ILIMH5V0OTA1OFFSETTRIM;            /*!< (@ 0x00000016) Ilimh5V0 ota1 offset Trim NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   ILIMH5V0CONFIG0;                   /*!< (@ 0x00000017) Ilimh5V0 configuration 0 NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   ILIMH5V0CONFIG1;                   /*!< (@ 0x00000018) Ilim5V0 Configuration 1 NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   ILIMH5V0CTRL;                      /*!< (@ 0x00000019) Ilim5V0 Control NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
} __PACKED NPM_VBUSIN_Type;                          /*!< Size = 26 (0x01A)                                                    */

/* VBUSIN_TASKUPDATEILIMSW: Select Input Current limit for VBUS */
  #define VBUSIN_TASKUPDATEILIMSW_ResetValue (0x00UL) /*!< Reset value of TASKUPDATEILIMSW register.                           */

/* TASKUPDATEILIM @Bit 0 : Set to switch from vbusinIlimStartup to vbusinIlim0 */
  #define VBUSIN_TASKUPDATEILIMSW_TASKUPDATEILIM_Pos (0UL) /*!< Position of TASKUPDATEILIM field.                              */
  #define VBUSIN_TASKUPDATEILIMSW_TASKUPDATEILIM_Msk (0x1UL << VBUSIN_TASKUPDATEILIMSW_TASKUPDATEILIM_Pos) /*!< Bit mask of
                                                                            TASKUPDATEILIM field.*/                               
  #define VBUSIN_TASKUPDATEILIMSW_TASKUPDATEILIM_Min (0x0UL) /*!< Min enumerator value of TASKUPDATEILIM field.                */
  #define VBUSIN_TASKUPDATEILIMSW_TASKUPDATEILIM_Max (0x1UL) /*!< Max enumerator value of TASKUPDATEILIM field.                */
  #define VBUSIN_TASKUPDATEILIMSW_TASKUPDATEILIM_NOEFFECT (0x0UL) /*!< No effect                                               */
  #define VBUSIN_TASKUPDATEILIMSW_TASKUPDATEILIM_SELVBUSILIM0 (0x1UL) /*!< Set to use vbusinilim0. Vbus removal results in
                                                                           switch back to vbusinIlimStartup*/                     


/* VBUSIN_VBUSINILIM0: Select Input Current limit for VBUS NOTE: Reset value from OTP, value listed in this table may not be
                        correct. */                                                                                               
                                                                                                                                  
  #define VBUSIN_VBUSINILIM0_ResetValue (0x00UL)     /*!< Reset value of VBUSINILIM0 register.                                 */

/* VBUSINILIM0 @Bits 0..3 : Input current limit for VBUS selected by Host */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_Pos (0UL)   /*!< Position of VBUSINILIM0 field.                                       */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_Msk (0xFUL << VBUSIN_VBUSINILIM0_VBUSINILIM0_Pos) /*!< Bit mask of VBUSINILIM0 field. */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_Min (0x0UL) /*!< Min enumerator value of VBUSINILIM0 field.                           */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_Max (0xFUL) /*!< Max enumerator value of VBUSINILIM0 field.                           */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_500MA (0x0UL) /*!< 500mA                                                              */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_100MA (0x1UL) /*!< 100mA                                                              */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_NOTUSED2 (0x2UL) /*!< 100mA (Not used)                                                */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_NOTUSED3 (0x3UL) /*!< 100mA (Not used)                                                */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_NOTUSED4 (0x4UL) /*!< 100mA (Not used)                                                */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_DEFAULT500MA (0x5UL) /*!< 500mA (default)                                             */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_600MA (0x6UL) /*!< 600mA                                                              */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_700MA (0x7UL) /*!< 700mA                                                              */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_800MA (0x8UL) /*!< 800mA                                                              */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_900MA (0x9UL) /*!< 900mA                                                              */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_1000MA (0xAUL) /*!< 1000mA                                                            */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_1100MA (0xBUL) /*!< 1100mA                                                            */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_1200MA (0xCUL) /*!< 1200mA                                                            */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_1300MA (0xDUL) /*!< 1300mA                                                            */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_1400MA (0xEUL) /*!< 1400mA                                                            */
  #define VBUSIN_VBUSINILIM0_VBUSINILIM0_1500MA (0xFUL) /*!< 1500mA                                                            */


/* VBUSIN_VBUSINILIMSTARTUP: Select input Current limit for VBUS at Startup NOTE: Reset value from OTP, value listed in this
                              table may not be correct. */                                                                        
                                                                                                                                  
  #define VBUSIN_VBUSINILIMSTARTUP_ResetValue (0x00UL) /*!< Reset value of VBUSINILIMSTARTUP register.                         */

/* VBUSINILIMSTARTUP @Bits 0..3 : Input current selection before negotiation */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_Pos (0UL) /*!< Position of VBUSINILIMSTARTUP field.                       */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_Msk (0xFUL << VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_Pos) /*!< Bit mask
                                                                            of VBUSINILIMSTARTUP field.*/                         
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_Min (0x0UL) /*!< Min enumerator value of VBUSINILIMSTARTUP field.         */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_Max (0xFUL) /*!< Max enumerator value of VBUSINILIMSTARTUP field.         */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_500MA (0x0UL) /*!< 500mA                                                  */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_100MA (0x1UL) /*!< 100mA                                                  */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_NOTUSED2 (0x2UL) /*!< 100mA (Not used)                                    */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_NOTUSED3 (0x3UL) /*!< 100mA (Not used)                                    */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_NOTUSED4 (0x4UL) /*!< 100mA (Not used)                                    */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_DEFAULT500MA (0x5UL) /*!< 500mA (default)                                 */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_600MA (0x6UL) /*!< 600mA                                                  */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_700MA (0x7UL) /*!< 700mA                                                  */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_800MA (0x8UL) /*!< 800mA                                                  */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_900MA (0x9UL) /*!< 900mA                                                  */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_1000MA (0xAUL) /*!< 1000mA                                                */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_1100MA (0xBUL) /*!< 1100mA                                                */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_1200MA (0xCUL) /*!< 1200mA                                                */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_1300MA (0xDUL) /*!< 1300mA                                                */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_1400MA (0xEUL) /*!< 1400mA                                                */
  #define VBUSIN_VBUSINILIMSTARTUP_VBUSINILIMSTARTUP_1500MA (0xFUL) /*!< 1500mA                                                */


/* VBUSIN_VBUSSUSPEND: Suspend mode enable */
  #define VBUSIN_VBUSSUSPEND_ResetValue (0x00UL)     /*!< Reset value of VBUSSUSPEND register.                                 */

/* VBUSSUSPENDENA @Bit 0 : VBUS suspend control bit */
  #define VBUSIN_VBUSSUSPEND_VBUSSUSPENDENA_Pos (0UL) /*!< Position of VBUSSUSPENDENA field.                                   */
  #define VBUSIN_VBUSSUSPEND_VBUSSUSPENDENA_Msk (0x1UL << VBUSIN_VBUSSUSPEND_VBUSSUSPENDENA_Pos) /*!< Bit mask of VBUSSUSPENDENA
                                                                            field.*/                                              
  #define VBUSIN_VBUSSUSPEND_VBUSSUSPENDENA_Min (0x0UL) /*!< Min enumerator value of VBUSSUSPENDENA field.                     */
  #define VBUSIN_VBUSSUSPEND_VBUSSUSPENDENA_Max (0x1UL) /*!< Max enumerator value of VBUSSUSPENDENA field.                     */
  #define VBUSIN_VBUSSUSPEND_VBUSSUSPENDENA_NORMAL (0x0UL) /*!< Normal mode                                                    */
  #define VBUSIN_VBUSSUSPEND_VBUSSUSPENDENA_SUSPENDMODE (0x1UL) /*!< Suspend Mode                                              */


/* VBUSIN_VBUSOUTDISABLE: Disable VBUS OUT */
  #define VBUSIN_VBUSOUTDISABLE_ResetValue (0x00UL)     /*!< Reset value of VBUSOUTDISABLE register.                            */

/* VBUSOUTDISABLEENA @Bit 0 : VBUS OUT disable control bit */
  #define VBUSIN_VBUSOUTDISABLE_VBUSOUTDISABLE_Pos (0UL) /*!< Position of VBUSOUTDISABLE field.                                 */
  #define VBUSIN_VBUSOUTDISABLE_VBUSOUTDISABLE_Msk (0x1UL << VBUSIN_VBUSOUTDISABLE_VBUSOUTDISABLE_Pos) /*!< Bit mask of VBUSOUTDISABLE
                                                                            field.*/                                            
  #define VBUSIN_VBUSOUTDISABLE_VBUSOUTDISABLE_Min (0x0UL) /*!< Min enumerator value of VBUSOUTDISABLE field.                   */
  #define VBUSIN_VBUSOUTDISABLE_VBUSOUTDISABLE_Max (0x1UL) /*!< Max enumerator value of VBUSOUTDISABLE field.                   */
  #define VBUSIN_VBUSOUTDISABLE_VBUSOUTDISABLE_NORMAL (0x0UL) /*!< Normal mode                                                  */
  #define VBUSIN_VBUSOUTDISABLE_VBUSOUTDISABLE_VBUSOUTDISABLED (0x1UL) /*!< Vbus out disabled                                   */


/* VBUSIN_USBCDETECTSTATUS: VBUS CC comparator status flags */
  #define VBUSIN_USBCDETECTSTATUS_ResetValue (0x00UL) /*!< Reset value of USBCDETECTSTATUS register.                           */

/* VBUSINCC1CMP @Bits 0..1 : CC1 Charger detection comparator output */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_Pos (0UL) /*!< Position of VBUSINCC1CMP field.                                  */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_Msk (0x3UL << VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_Pos) /*!< Bit mask of
                                                                            VBUSINCC1CMP field.*/                                 
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_Min (0x0UL) /*!< Min enumerator value of VBUSINCC1CMP field.                    */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_Max (0x3UL) /*!< Max enumerator value of VBUSINCC1CMP field.                    */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_NOCONNECTION (0x0UL) /*!< no connection                                         */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_DEFAULTUSB (0x1UL) /*!< Default USB 100/500mA                                   */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_1A5HIGHPOWER (0x2UL) /*!< 1.5A High Power                                       */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC1CMP_3AHIGHPOWER (0x3UL) /*!< 3A High Power                                          */

/* VBUSINCC2CMP @Bits 2..3 : CC2 Charger detection comparator output */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_Pos (2UL) /*!< Position of VBUSINCC2CMP field.                                  */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_Msk (0x3UL << VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_Pos) /*!< Bit mask of
                                                                            VBUSINCC2CMP field.*/                                 
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_Min (0x0UL) /*!< Min enumerator value of VBUSINCC2CMP field.                    */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_Max (0x3UL) /*!< Max enumerator value of VBUSINCC2CMP field.                    */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_NOCONNECTION (0x0UL) /*!< no connection                                         */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_DEFAULTUSB (0x1UL) /*!< Default USB 100/500mA                                   */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_1A5HIGHPOWER (0x2UL) /*!< 1.5A High Power                                       */
  #define VBUSIN_USBCDETECTSTATUS_VBUSINCC2CMP_3AHIGHPOWER (0x3UL) /*!< 3A High Power                                          */


/* VBUSIN_USBBDETECTSTATUS: VBUS DP/DM comparator status flags */
  #define VBUSIN_USBBDETECTSTATUS_ResetValue (0x00UL) /*!< Reset value of USBBDETECTSTATUS register.                           */

/* VBUSINDPCMP @Bit 0 : Legacy Charger detection */
  #define VBUSIN_USBBDETECTSTATUS_VBUSINDPCMP_Pos (0UL) /*!< Position of VBUSINDPCMP field.                                    */
  #define VBUSIN_USBBDETECTSTATUS_VBUSINDPCMP_Msk (0x1UL << VBUSIN_USBBDETECTSTATUS_VBUSINDPCMP_Pos) /*!< Bit mask of
                                                                            VBUSINDPCMP field.*/                                  
  #define VBUSIN_USBBDETECTSTATUS_VBUSINDPCMP_Min (0x0UL) /*!< Min enumerator value of VBUSINDPCMP field.                      */
  #define VBUSIN_USBBDETECTSTATUS_VBUSINDPCMP_Max (0x1UL) /*!< Max enumerator value of VBUSINDPCMP field.                      */
  #define VBUSIN_USBBDETECTSTATUS_VBUSINDPCMP_100MA (0x0UL) /*!< 100mA                                                         */
  #define VBUSIN_USBBDETECTSTATUS_VBUSINDPCMP_500MA (0x1UL) /*!< 500mA                                                         */


/* VBUSIN_VBUSINSTATUS: VBUS status flags */
  #define VBUSIN_VBUSINSTATUS_ResetValue (0x00UL)    /*!< Reset value of VBUSINSTATUS register.                                */

/* VBUSINPRESENT @Bit 0 : Vbus has been detected */
  #define VBUSIN_VBUSINSTATUS_VBUSINPRESENT_Pos (0UL) /*!< Position of VBUSINPRESENT field.                                    */
  #define VBUSIN_VBUSINSTATUS_VBUSINPRESENT_Msk (0x1UL << VBUSIN_VBUSINSTATUS_VBUSINPRESENT_Pos) /*!< Bit mask of VBUSINPRESENT
                                                                            field.*/                                              
  #define VBUSIN_VBUSINSTATUS_VBUSINPRESENT_Min (0x0UL) /*!< Min enumerator value of VBUSINPRESENT field.                      */
  #define VBUSIN_VBUSINSTATUS_VBUSINPRESENT_Max (0x1UL) /*!< Max enumerator value of VBUSINPRESENT field.                      */
  #define VBUSIN_VBUSINSTATUS_VBUSINPRESENT_NOTDETECTED (0x0UL) /*!< NotDetected                                               */
  #define VBUSIN_VBUSINSTATUS_VBUSINPRESENT_DETECTED (0x1UL) /*!< Detected                                                     */

/* VBUSINCURRLIMACTIVE @Bit 1 : VBUS Current limit detected */
  #define VBUSIN_VBUSINSTATUS_VBUSINCURRLIMACTIVE_Pos (1UL) /*!< Position of VBUSINCURRLIMACTIVE field.                        */
  #define VBUSIN_VBUSINSTATUS_VBUSINCURRLIMACTIVE_Msk (0x1UL << VBUSIN_VBUSINSTATUS_VBUSINCURRLIMACTIVE_Pos) /*!< Bit mask of
                                                                            VBUSINCURRLIMACTIVE field.*/                          
  #define VBUSIN_VBUSINSTATUS_VBUSINCURRLIMACTIVE_Min (0x0UL) /*!< Min enumerator value of VBUSINCURRLIMACTIVE field.          */
  #define VBUSIN_VBUSINSTATUS_VBUSINCURRLIMACTIVE_Max (0x1UL) /*!< Max enumerator value of VBUSINCURRLIMACTIVE field.          */
  #define VBUSIN_VBUSINSTATUS_VBUSINCURRLIMACTIVE_NOTDETECTED (0x0UL) /*!< NotDetected                                         */
  #define VBUSIN_VBUSINSTATUS_VBUSINCURRLIMACTIVE_DETECTED (0x1UL) /*!< Detected                                               */

/* VBUSINOVRPROTACTIVE @Bit 2 : VBUS Over voltage protection Active */
  #define VBUSIN_VBUSINSTATUS_VBUSINOVRPROTACTIVE_Pos (2UL) /*!< Position of VBUSINOVRPROTACTIVE field.                        */
  #define VBUSIN_VBUSINSTATUS_VBUSINOVRPROTACTIVE_Msk (0x1UL << VBUSIN_VBUSINSTATUS_VBUSINOVRPROTACTIVE_Pos) /*!< Bit mask of
                                                                            VBUSINOVRPROTACTIVE field.*/                          
  #define VBUSIN_VBUSINSTATUS_VBUSINOVRPROTACTIVE_Min (0x0UL) /*!< Min enumerator value of VBUSINOVRPROTACTIVE field.          */
  #define VBUSIN_VBUSINSTATUS_VBUSINOVRPROTACTIVE_Max (0x1UL) /*!< Max enumerator value of VBUSINOVRPROTACTIVE field.          */
  #define VBUSIN_VBUSINSTATUS_VBUSINOVRPROTACTIVE_NOTACTIVE (0x0UL) /*!< NotActive                                             */
  #define VBUSIN_VBUSINSTATUS_VBUSINOVRPROTACTIVE_ACTIVE (0x1UL) /*!< Active                                                   */

/* VBUSINUNDERVOLTAGE @Bit 3 : VBUS Under voltage detected */
  #define VBUSIN_VBUSINSTATUS_VBUSINUNDERVOLTAGE_Pos (3UL) /*!< Position of VBUSINUNDERVOLTAGE field.                          */
  #define VBUSIN_VBUSINSTATUS_VBUSINUNDERVOLTAGE_Msk (0x1UL << VBUSIN_VBUSINSTATUS_VBUSINUNDERVOLTAGE_Pos) /*!< Bit mask of
                                                                            VBUSINUNDERVOLTAGE field.*/                           
  #define VBUSIN_VBUSINSTATUS_VBUSINUNDERVOLTAGE_Min (0x0UL) /*!< Min enumerator value of VBUSINUNDERVOLTAGE field.            */
  #define VBUSIN_VBUSINSTATUS_VBUSINUNDERVOLTAGE_Max (0x1UL) /*!< Max enumerator value of VBUSINUNDERVOLTAGE field.            */
  #define VBUSIN_VBUSINSTATUS_VBUSINUNDERVOLTAGE_NOTDETECTED (0x0UL) /*!< NotDetected                                          */
  #define VBUSIN_VBUSINSTATUS_VBUSINUNDERVOLTAGE_DETECTED (0x1UL) /*!< Detected                                                */

/* VBUSINSUSPENDMODEACTIVE @Bit 4 : VBUS suspended */
  #define VBUSIN_VBUSINSTATUS_VBUSINSUSPENDMODEACTIVE_Pos (4UL) /*!< Position of VBUSINSUSPENDMODEACTIVE field.                */
  #define VBUSIN_VBUSINSTATUS_VBUSINSUSPENDMODEACTIVE_Msk (0x1UL << VBUSIN_VBUSINSTATUS_VBUSINSUSPENDMODEACTIVE_Pos) /*!< Bit
                                                                            mask of VBUSINSUSPENDMODEACTIVE field.*/              
  #define VBUSIN_VBUSINSTATUS_VBUSINSUSPENDMODEACTIVE_Min (0x0UL) /*!< Min enumerator value of VBUSINSUSPENDMODEACTIVE field.  */
  #define VBUSIN_VBUSINSTATUS_VBUSINSUSPENDMODEACTIVE_Max (0x1UL) /*!< Max enumerator value of VBUSINSUSPENDMODEACTIVE field.  */
  #define VBUSIN_VBUSINSTATUS_VBUSINSUSPENDMODEACTIVE_NORMAL (0x0UL) /*!< Normal                                               */
  #define VBUSIN_VBUSINSTATUS_VBUSINSUSPENDMODEACTIVE_SUSPEND (0x1UL) /*!< Suspended                                           */

/* VBUSINVBUSOUTACTIVE @Bit 5 : VBUS Out is Active */
  #define VBUSIN_VBUSINSTATUS_VBUSINVBUSOUTACTIVE_Pos (5UL) /*!< Position of VBUSINVBUSOUTACTIVE field.                        */
  #define VBUSIN_VBUSINSTATUS_VBUSINVBUSOUTACTIVE_Msk (0x1UL << VBUSIN_VBUSINSTATUS_VBUSINVBUSOUTACTIVE_Pos) /*!< Bit mask of
                                                                            VBUSINVBUSOUTACTIVE field.*/                          
  #define VBUSIN_VBUSINSTATUS_VBUSINVBUSOUTACTIVE_Min (0x0UL) /*!< Min enumerator value of VBUSINVBUSOUTACTIVE field.          */
  #define VBUSIN_VBUSINSTATUS_VBUSINVBUSOUTACTIVE_Max (0x1UL) /*!< Max enumerator value of VBUSINVBUSOUTACTIVE field.          */
  #define VBUSIN_VBUSINSTATUS_VBUSINVBUSOUTACTIVE_NOTACTIVE (0x0UL) /*!< NotActive                                             */
  #define VBUSIN_VBUSINSTATUS_VBUSINVBUSOUTACTIVE_ACTIVE (0x1UL) /*!< Active                                                   */


/* VBUSIN_VBUSINCFG: ilim5v0 configuration */
  #define VBUSIN_VBUSINCFG_ResetValue (0x00UL)       /*!< Reset value of VBUSINCFG register.                                   */

/* ILIMH5V0EXTRALEAKAGE @Bit 0 : Apply extra leakage forVbus Capacitor */
  #define VBUSIN_VBUSINCFG_ILIMH5V0EXTRALEAKAGE_Pos (0UL) /*!< Position of ILIMH5V0EXTRALEAKAGE field.                         */
  #define VBUSIN_VBUSINCFG_ILIMH5V0EXTRALEAKAGE_Msk (0x1UL << VBUSIN_VBUSINCFG_ILIMH5V0EXTRALEAKAGE_Pos) /*!< Bit mask of
                                                                            ILIMH5V0EXTRALEAKAGE field.*/                         
  #define VBUSIN_VBUSINCFG_ILIMH5V0EXTRALEAKAGE_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0EXTRALEAKAGE field.           */
  #define VBUSIN_VBUSINCFG_ILIMH5V0EXTRALEAKAGE_Max (0x1UL) /*!< Max enumerator value of ILIMH5V0EXTRALEAKAGE field.           */
  #define VBUSIN_VBUSINCFG_ILIMH5V0EXTRALEAKAGE_NORMAL (0x0UL) /*!< Normal leakage                                             */
  #define VBUSIN_VBUSINCFG_ILIMH5V0EXTRALEAKAGE_EXTRALEAKAGE (0x1UL) /*!< Extra leakage                                        */

/* ILIMH5V0HIGHCAPENA @Bit 1 : High Capacitance Enable */
  #define VBUSIN_VBUSINCFG_ILIMH5V0HIGHCAPENA_Pos (1UL) /*!< Position of ILIMH5V0HIGHCAPENA field.                             */
  #define VBUSIN_VBUSINCFG_ILIMH5V0HIGHCAPENA_Msk (0x1UL << VBUSIN_VBUSINCFG_ILIMH5V0HIGHCAPENA_Pos) /*!< Bit mask of
                                                                            ILIMH5V0HIGHCAPENA field.*/                           
  #define VBUSIN_VBUSINCFG_ILIMH5V0HIGHCAPENA_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0HIGHCAPENA field.               */
  #define VBUSIN_VBUSINCFG_ILIMH5V0HIGHCAPENA_Max (0x1UL) /*!< Max enumerator value of ILIMH5V0HIGHCAPENA field.               */
  #define VBUSIN_VBUSINCFG_ILIMH5V0HIGHCAPENA_NORMAL (0x0UL) /*!< Normal                                                       */
  #define VBUSIN_VBUSINCFG_ILIMH5V0HIGHCAPENA_HIGHCAP (0x1UL) /*!< Extra leakage only when undervoltage                        */


/* VBUSIN_VBUSINADJUSTILIM: ILIM adjustments NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define VBUSIN_VBUSINADJUSTILIM_ResetValue (0x00UL) /*!< Reset value of VBUSINADJUSTILIM register.                           */

/* VBUSINADJUSTILIM @Bits 0..4 : fine adjustment of ilim */
  #define VBUSIN_VBUSINADJUSTILIM_VBUSINADJUSTILIM_Pos (0UL) /*!< Position of VBUSINADJUSTILIM field.                          */
  #define VBUSIN_VBUSINADJUSTILIM_VBUSINADJUSTILIM_Msk (0x1FUL << VBUSIN_VBUSINADJUSTILIM_VBUSINADJUSTILIM_Pos) /*!< Bit mask of
                                                                            VBUSINADJUSTILIM field.*/                             

/* ILIMOVERRIDEMAPSEL @Bits 5..6 : selects between override remaps of ILIM */
  #define VBUSIN_VBUSINADJUSTILIM_ILIMOVERRIDEMAPSEL_Pos (5UL) /*!< Position of ILIMOVERRIDEMAPSEL field.                      */
  #define VBUSIN_VBUSINADJUSTILIM_ILIMOVERRIDEMAPSEL_Msk (0x3UL << VBUSIN_VBUSINADJUSTILIM_ILIMOVERRIDEMAPSEL_Pos) /*!< Bit mask
                                                                            of ILIMOVERRIDEMAPSEL field.*/                        


/* VBUSIN_ILIM5V0SPARESTATUS: Ilim5V0 Spare Status Flags */
  #define VBUSIN_ILIM5V0SPARESTATUS_ResetValue (0x00UL) /*!< Reset value of ILIM5V0SPARESTATUS register.                       */

/* ILIM5V0SPARESTATUS @Bits 0..3 : spare ilim5v0 status flags */
  #define VBUSIN_ILIM5V0SPARESTATUS_ILIM5V0SPARESTATUS_Pos (0UL) /*!< Position of ILIM5V0SPARESTATUS field.                    */
  #define VBUSIN_ILIM5V0SPARESTATUS_ILIM5V0SPARESTATUS_Msk (0xFUL << VBUSIN_ILIM5V0SPARESTATUS_ILIM5V0SPARESTATUS_Pos) /*!< Bit
                                                                            mask of ILIM5V0SPARESTATUS field.*/                   


/* VBUSIN_ILIM5V0TESTCFG: Ilim5V0 Test Configuration */
  #define VBUSIN_ILIM5V0TESTCFG_ResetValue (0x00UL)  /*!< Reset value of ILIM5V0TESTCFG register.                              */

/* ILIM5V0TSTCFG @Bits 0..1 : ilim5v0 test configuration */
  #define VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_Pos (0UL) /*!< Position of ILIM5V0TSTCFG field.                                  */
  #define VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_Msk (0x3UL << VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_Pos) /*!< Bit mask of
                                                                            ILIM5V0TSTCFG field.*/                                
  #define VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_Min (0x0UL) /*!< Min enumerator value of ILIM5V0TSTCFG field.                    */
  #define VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_Max (0x3UL) /*!< Max enumerator value of ILIM5V0TSTCFG field.                    */
  #define VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_FULLSIZE (0x0UL) /*!< full device size                                           */
  #define VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_FIFTH (0x1UL) /*!< one fifth of the devices                                      */
  #define VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_TENTH (0x2UL) /*!< one tenth of device size                                      */
  #define VBUSIN_ILIM5V0TESTCFG_ILIM5V0TSTCFG_NOTUSED (0x3UL) /*!< not used                                                    */


/* VBUSIN_ILIM5V0CALOTA1: Ilim5V0 OTA1 Calibration Enable */
  #define VBUSIN_ILIM5V0CALOTA1_ResetValue (0x00UL)  /*!< Reset value of ILIM5V0CALOTA1 register.                              */

/* ILIM5V0CALOTA1 @Bit 0 : ilim5v0 OTA1 Calibration Enable */
  #define VBUSIN_ILIM5V0CALOTA1_ILIM5V0CALOTA1_Pos (0UL) /*!< Position of ILIM5V0CALOTA1 field.                                */
  #define VBUSIN_ILIM5V0CALOTA1_ILIM5V0CALOTA1_Msk (0x1UL << VBUSIN_ILIM5V0CALOTA1_ILIM5V0CALOTA1_Pos) /*!< Bit mask of
                                                                            ILIM5V0CALOTA1 field.*/                               
  #define VBUSIN_ILIM5V0CALOTA1_ILIM5V0CALOTA1_Min (0x0UL) /*!< Min enumerator value of ILIM5V0CALOTA1 field.                  */
  #define VBUSIN_ILIM5V0CALOTA1_ILIM5V0CALOTA1_Max (0x1UL) /*!< Max enumerator value of ILIM5V0CALOTA1 field.                  */
  #define VBUSIN_ILIM5V0CALOTA1_ILIM5V0CALOTA1_NOTACTIVE (0x0UL) /*!< OTA1 not enabled                                         */
  #define VBUSIN_ILIM5V0CALOTA1_ILIM5V0CALOTA1_ACTIVE (0x1UL) /*!< OTA1 enabled                                                */


/* VBUSIN_ILIMH5V0OVERRIDE0: ilimh5v0 Overrides 0 */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0OVERRIDE0 register.                         */

/* ILIMH5V0PWRUPOVRDENA @Bit 0 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0PWRUPOVRDENA_Pos (0UL) /*!< Position of ILIMH5V0PWRUPOVRDENA field.                 */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0PWRUPOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0PWRUPOVRDENA_Pos) /*!<
                                                                            Bit mask of ILIMH5V0PWRUPOVRDENA field.*/             

/* ILIMH5V0PWRUPOVRD @Bit 1 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0PWRUPOVRD_Pos (1UL) /*!< Position of ILIMH5V0PWRUPOVRD field.                       */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0PWRUPOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0PWRUPOVRD_Pos) /*!< Bit mask
                                                                            of ILIMH5V0PWRUPOVRD field.*/                         

/* ILIMH5V0CONNECTOVRDENA @Bit 2 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0CONNECTOVRDENA_Pos (2UL) /*!< Position of ILIMH5V0CONNECTOVRDENA field.             */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0CONNECTOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0CONNECTOVRDENA_Pos)
                                                                            /*!< Bit mask of ILIMH5V0CONNECTOVRDENA field.*/      

/* ILIMH5V0CONNECTOVRD @Bit 3 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0CONNECTOVRD_Pos (3UL) /*!< Position of ILIMH5V0CONNECTOVRD field.                   */
  #define VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0CONNECTOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE0_ILIMH5V0CONNECTOVRD_Pos) /*!< Bit
                                                                            mask of ILIMH5V0CONNECTOVRD field.*/                  

/* SPAREBOVRDENA @Bit 4 : override enable for VBUSOUT_CONNECT */
  #define VBUSIN_ILIMH5V0OVERRIDE0_SPAREBOVRDENA_Pos (4UL) /*!< Position of SPAREBOVRDENA field.                               */
  #define VBUSIN_ILIMH5V0OVERRIDE0_SPAREBOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE0_SPAREBOVRDENA_Pos) /*!< Bit mask of
                                                                            SPAREBOVRDENA field.*/                                

/* SPAREBOVROVRD @Bit 5 : override value for VBUSOUT_CONNECT */
  #define VBUSIN_ILIMH5V0OVERRIDE0_SPAREBOVROVRD_Pos (5UL) /*!< Position of SPAREBOVROVRD field.                               */
  #define VBUSIN_ILIMH5V0OVERRIDE0_SPAREBOVROVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE0_SPAREBOVROVRD_Pos) /*!< Bit mask of
                                                                            SPAREBOVROVRD field.*/                                


/* VBUSIN_ILIMH5V0OVERRIDE1: ilimh5v0 Overrides 1 */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0OVERRIDE1 register.                         */

/* ILIMH5V0ILIMOVRDENA @Bit 0 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0ILIMOVRDENA_Pos (0UL) /*!< Position of ILIMH5V0ILIMOVRDENA field.                   */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0ILIMOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0ILIMOVRDENA_Pos) /*!< Bit
                                                                            mask of ILIMH5V0ILIMOVRDENA field.*/                  

/* ILIMH5V0ILIMOVRD @Bit 1 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0ILIMOVRD_Pos (1UL) /*!< Position of ILIMH5V0ILIMOVRD field.                         */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0ILIMOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0ILIMOVRD_Pos) /*!< Bit mask
                                                                            of ILIMH5V0ILIMOVRD field.*/                          

/* ILIMH5V0VBUSPOWEREDOVRDENA @Bit 2 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSPOWEREDOVRDENA_Pos (2UL) /*!< Position of ILIMH5V0VBUSPOWEREDOVRDENA field.     */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSPOWEREDOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSPOWEREDOVRDENA_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBUSPOWEREDOVRDENA field.*/  

/* ILIMH5V0VBUSPOWEREDOVRD @Bit 3 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSPOWEREDOVRD_Pos (3UL) /*!< Position of ILIMH5V0VBUSPOWEREDOVRD field.           */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSPOWEREDOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSPOWEREDOVRD_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBUSPOWEREDOVRD field.*/     

/* ILIMH5V0VBUSOVERVOLTAGEOVRDENA @Bit 4 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSOVERVOLTAGEOVRDENA_Pos (4UL) /*!< Position of ILIMH5V0VBUSOVERVOLTAGEOVRDENA
                                                                            field.*/                                              
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSOVERVOLTAGEOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSOVERVOLTAGEOVRDENA_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBUSOVERVOLTAGEOVRDENA
                                                                            field.*/                                              

/* ILIMH5V0VBUSOVERVOLTAGEOVRD @Bit 5 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSOVERVOLTAGEOVRD_Pos (5UL) /*!< Position of ILIMH5V0VBUSOVERVOLTAGEOVRD field.   */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSOVERVOLTAGEOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSOVERVOLTAGEOVRD_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBUSOVERVOLTAGEOVRD field.*/ 

/* ILIMH5V0VBUSUNDERVOLTAGEOVRDENA @Bit 6 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSUNDERVOLTAGEOVRDENA_Pos (6UL) /*!< Position of ILIMH5V0VBUSUNDERVOLTAGEOVRDENA
                                                                            field.*/                                              
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSUNDERVOLTAGEOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSUNDERVOLTAGEOVRDENA_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBUSUNDERVOLTAGEOVRDENA
                                                                            field.*/                                              

/* ILIMH5V0VBUSUNDERVOLTAGEOVRD @Bit 7 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSUNDERVOLTAGEOVRD_Pos (7UL) /*!< Position of ILIMH5V0VBUSUNDERVOLTAGEOVRD field. */
  #define VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSUNDERVOLTAGEOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE1_ILIMH5V0VBUSUNDERVOLTAGEOVRD_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBUSUNDERVOLTAGEOVRD
                                                                            field.*/                                              


/* VBUSIN_ILIMH5V0OVERRIDE2: ilimh5v0 Overrides 2 */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0OVERRIDE2 register.                         */

/* ILIMH5V0VBATHIGHOVRDENA @Bit 0 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBATHIGHOVRDENA_Pos (0UL) /*!< Position of ILIMH5V0VBATHIGHOVRDENA field.           */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBATHIGHOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBATHIGHOVRDENA_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBATHIGHOVRDENA field.*/     

/* ILIMH5V0VBATHIGHOVRD @Bit 1 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBATHIGHOVRD_Pos (1UL) /*!< Position of ILIMH5V0VBATHIGHOVRD field.                 */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBATHIGHOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBATHIGHOVRD_Pos) /*!<
                                                                            Bit mask of ILIMH5V0VBATHIGHOVRD field.*/             

/* ILIMH5V0VSYSHIGHOVRDENA @Bit 2 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VSYSHIGHOVRDENA_Pos (2UL) /*!< Position of ILIMH5V0VSYSHIGHOVRDENA field.           */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VSYSHIGHOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VSYSHIGHOVRDENA_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VSYSHIGHOVRDENA field.*/     

/* ILIMH5V0VSYSHIGHOVRD @Bit 3 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VSYSHIGHOVRD_Pos (3UL) /*!< Position of ILIMH5V0VSYSHIGHOVRD field.                 */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VSYSHIGHOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VSYSHIGHOVRD_Pos) /*!<
                                                                            Bit mask of ILIMH5V0VSYSHIGHOVRD field.*/             

/* ILIMH5V0VBUSHIGHOVRDENA @Bit 4 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBUSHIGHOVRDENA_Pos (4UL) /*!< Position of ILIMH5V0VBUSHIGHOVRDENA field.           */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBUSHIGHOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBUSHIGHOVRDENA_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBUSHIGHOVRDENA field.*/     

/* ILIMH5V0VBUSHIGHOVRD @Bit 5 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBUSHIGHOVRD_Pos (5UL) /*!< Position of ILIMH5V0VBUSHIGHOVRD field.                 */
  #define VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBUSHIGHOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE2_ILIMH5V0VBUSHIGHOVRD_Pos) /*!<
                                                                            Bit mask of ILIMH5V0VBUSHIGHOVRD field.*/             

/* SPARECOVRDENA @Bit 6 : override enable */
  #define VBUSIN_ILIMH5V0OVERRIDE2_SPARECOVRDENA_Pos (6UL) /*!< Position of SPARECOVRDENA field.                               */
  #define VBUSIN_ILIMH5V0OVERRIDE2_SPARECOVRDENA_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE2_SPARECOVRDENA_Pos) /*!< Bit mask of
                                                                            SPARECOVRDENA field.*/                                

/* SPARECOOVRD @Bit 7 : override value */
  #define VBUSIN_ILIMH5V0OVERRIDE2_SPARECOOVRD_Pos (7UL) /*!< Position of SPARECOOVRD field.                                   */
  #define VBUSIN_ILIMH5V0OVERRIDE2_SPARECOOVRD_Msk (0x1UL << VBUSIN_ILIMH5V0OVERRIDE2_SPARECOOVRD_Pos) /*!< Bit mask of
                                                                            SPARECOOVRD field.*/                                  


/* VBUSIN_ILIMH5V0ATE: ILIMH5V0 Analog Testbus Enable */
  #define VBUSIN_ILIMH5V0ATE_ResetValue (0x00UL)     /*!< Reset value of ILIMH5V0ATE register.                                 */

/* ILIMH5ATE @Bits 0..1 : ILIMH5_ATE */
  #define VBUSIN_ILIMH5V0ATE_ILIMH5ATE_Pos (0UL)     /*!< Position of ILIMH5ATE field.                                         */
  #define VBUSIN_ILIMH5V0ATE_ILIMH5ATE_Msk (0x3UL << VBUSIN_ILIMH5V0ATE_ILIMH5ATE_Pos) /*!< Bit mask of ILIMH5ATE field.       */
  #define VBUSIN_ILIMH5V0ATE_ILIMH5ATE_Min (0x0UL)   /*!< Min enumerator value of ILIMH5ATE field.                             */
  #define VBUSIN_ILIMH5V0ATE_ILIMH5ATE_Max (0x2UL)   /*!< Max enumerator value of ILIMH5ATE field.                             */
  #define VBUSIN_ILIMH5V0ATE_ILIMH5ATE_SEL0 (0x0UL)  /*!< Select 0                                                             */
  #define VBUSIN_ILIMH5V0ATE_ILIMH5ATE_SEL1 (0x1UL)  /*!< Select 1                                                             */
  #define VBUSIN_ILIMH5V0ATE_ILIMH5ATE_SEL2 (0x2UL)  /*!< Select 2                                                             */


/* VBUSIN_ILIMH5V0ILIMTRIM0: Ilimh5V0 ILIM Trim0 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define VBUSIN_ILIMH5V0ILIMTRIM0_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0ILIMTRIM0 register.                         */

/* ILIMTRIM0 @Bits 0..4 : Ilimh5V0 ILIM Trim0 for (100mA) */
  #define VBUSIN_ILIMH5V0ILIMTRIM0_ILIMTRIM0_Pos (0UL) /*!< Position of ILIMTRIM0 field.                                       */
  #define VBUSIN_ILIMH5V0ILIMTRIM0_ILIMTRIM0_Msk (0x1FUL << VBUSIN_ILIMH5V0ILIMTRIM0_ILIMTRIM0_Pos) /*!< Bit mask of ILIMTRIM0
                                                                            field.*/                                              


/* VBUSIN_ILIMH5V0ILIMTRIM1: Ilimh5V0 ILIM Trim1 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define VBUSIN_ILIMH5V0ILIMTRIM1_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0ILIMTRIM1 register.                         */

/* ILIMTRIM1 @Bits 0..4 : Ilimh5V0 ILIM Trim for (500mA) */
  #define VBUSIN_ILIMH5V0ILIMTRIM1_ILIMTRIM1_Pos (0UL) /*!< Position of ILIMTRIM1 field.                                       */
  #define VBUSIN_ILIMH5V0ILIMTRIM1_ILIMTRIM1_Msk (0x1FUL << VBUSIN_ILIMH5V0ILIMTRIM1_ILIMTRIM1_Pos) /*!< Bit mask of ILIMTRIM1
                                                                            field.*/                                              


/* VBUSIN_ILIMH5V0ILIMTRIM2: Ilimh5V0 ILIM Trim2 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define VBUSIN_ILIMH5V0ILIMTRIM2_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0ILIMTRIM2 register.                         */

/* ILIMTRIM2 @Bits 0..4 : Ilimh5V0 ILIM Trim for (600-1500mA) */
  #define VBUSIN_ILIMH5V0ILIMTRIM2_ILIMTRIM2_Pos (0UL) /*!< Position of ILIMTRIM2 field.                                       */
  #define VBUSIN_ILIMH5V0ILIMTRIM2_ILIMTRIM2_Msk (0x1FUL << VBUSIN_ILIMH5V0ILIMTRIM2_ILIMTRIM2_Pos) /*!< Bit mask of ILIMTRIM2
                                                                            field.*/                                              


/* VBUSIN_VSYSVBATHIGHTRIM: VSYS_HIGH and VBAT_HIGH Trim NOTE: Reset value from OTP, value listed in this table may not be
                             correct. */                                                                                          
                                                                                                                                  
  #define VBUSIN_VSYSVBATHIGHTRIM_ResetValue (0x00UL) /*!< Reset value of VSYSVBATHIGHTRIM register.                           */

/* ILIMH5V0VSYSHIGHTRIM @Bits 0..3 : Ilimh5V0 VSYS_HIGH Trim */
  #define VBUSIN_VSYSVBATHIGHTRIM_ILIMH5V0VSYSHIGHTRIM_Pos (0UL) /*!< Position of ILIMH5V0VSYSHIGHTRIM field.                  */
  #define VBUSIN_VSYSVBATHIGHTRIM_ILIMH5V0VSYSHIGHTRIM_Msk (0xFUL << VBUSIN_VSYSVBATHIGHTRIM_ILIMH5V0VSYSHIGHTRIM_Pos) /*!< Bit
                                                                            mask of ILIMH5V0VSYSHIGHTRIM field.*/                 

/* ILIMH5V0VBATHIGHTRIM @Bits 4..7 : Ilimh5V0 VBAT_HIGH Trim */
  #define VBUSIN_VSYSVBATHIGHTRIM_ILIMH5V0VBATHIGHTRIM_Pos (4UL) /*!< Position of ILIMH5V0VBATHIGHTRIM field.                  */
  #define VBUSIN_VSYSVBATHIGHTRIM_ILIMH5V0VBATHIGHTRIM_Msk (0xFUL << VBUSIN_VSYSVBATHIGHTRIM_ILIMH5V0VBATHIGHTRIM_Pos) /*!< Bit
                                                                            mask of ILIMH5V0VBATHIGHTRIM field.*/                 


/* VBUSIN_ILIMH5V0OVERVOLTAGETRIM: Ilimh5V0 overvoltage theshold Trim NOTE: Reset value from OTP, value listed in this table may
                                    not be correct. */                                                                            
                                                                                                                                  
  #define VBUSIN_ILIMH5V0OVERVOLTAGETRIM_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0OVERVOLTAGETRIM register.             */

/* OVERVOLTAGETRIM @Bits 0..4 : Ilimh5V0 Overvoltage threshold Trim */
  #define VBUSIN_ILIMH5V0OVERVOLTAGETRIM_OVERVOLTAGETRIM_Pos (0UL) /*!< Position of OVERVOLTAGETRIM field.                     */
  #define VBUSIN_ILIMH5V0OVERVOLTAGETRIM_OVERVOLTAGETRIM_Msk (0x1FUL << VBUSIN_ILIMH5V0OVERVOLTAGETRIM_OVERVOLTAGETRIM_Pos) /*!<
                                                                            Bit mask of OVERVOLTAGETRIM field.*/                  


/* VBUSIN_ILIMH5V0OTA1OFFSETTRIM: Ilimh5V0 ota1 offset Trim NOTE: Reset value from OTP, value listed in this table may not be
                                   correct. */                                                                                    
                                                                                                                                  
  #define VBUSIN_ILIMH5V0OTA1OFFSETTRIM_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0OTA1OFFSETTRIM register.               */

/* OTA1OFFSETTRIM @Bits 0..5 : Ilimh5V0 ota offset trim */
  #define VBUSIN_ILIMH5V0OTA1OFFSETTRIM_OTA1OFFSETTRIM_Pos (0UL) /*!< Position of OTA1OFFSETTRIM field.                        */
  #define VBUSIN_ILIMH5V0OTA1OFFSETTRIM_OTA1OFFSETTRIM_Msk (0x3FUL << VBUSIN_ILIMH5V0OTA1OFFSETTRIM_OTA1OFFSETTRIM_Pos) /*!< Bit
                                                                            mask of OTA1OFFSETTRIM field.*/                       


/* VBUSIN_ILIMH5V0CONFIG0: Ilimh5V0 configuration 0 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define VBUSIN_ILIMH5V0CONFIG0_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0CONFIG0 register.                             */

/* ILIMH5V0AUTODISABLE @Bits 0..1 : ILIMH5V0_AUTO_DISABLE */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_Pos (0UL) /*!< Position of ILIMH5V0AUTODISABLE field.                     */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_Msk (0x3UL << VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_Pos) /*!< Bit mask
                                                                            of ILIMH5V0AUTODISABLE field.*/                       
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0AUTODISABLE field.       */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0AUTODISABLE field.       */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_SEL0 (0x0UL) /*!< Overvoltage or undervoltage                             */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_SEL1 (0x1UL) /*!< Overvoltage                                             */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_SEL2 (0x2UL) /*!< Overvoltage, undervoltage, vbat_high, vsys_high         */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0AUTODISABLE_SEL3 (0x3UL) /*!< None                                                    */

/* ILIMH5V0HYSTCTRL @Bits 2..3 : ILIMH5V0_HYST_CTRL */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_Pos (2UL) /*!< Position of ILIMH5V0HYSTCTRL field.                           */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_Msk (0x3UL << VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_Pos) /*!< Bit mask of
                                                                            ILIMH5V0HYSTCTRL field.*/                             
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0HYSTCTRL field.             */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0HYSTCTRL field.             */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_SEL0 (0x0UL) /*!< Hysteresis active                                          */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_SEL1 (0x1UL) /*!< Comparators use lower threshold only                       */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_SEL2 (0x2UL) /*!< Comparators use higher threshold only                      */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0HYSTCTRL_SEL3 (0x3UL) /*!< Comparators use higher threshold only                      */

/* ILIMH5V0UNDERVOLTAGESEL @Bits 4..5 : ILIMH5V0_UNDERVOLTAGE_SEL */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_Pos (4UL) /*!< Position of ILIMH5V0UNDERVOLTAGESEL field.             */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_Msk (0x3UL << VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_Pos) /*!<
                                                                            Bit mask of ILIMH5V0UNDERVOLTAGESEL field.*/          
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0UNDERVOLTAGESEL
                                                                          field.*/                                                
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0UNDERVOLTAGESEL
                                                                          field.*/                                                
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_SEL0 (0x0UL) /*!< Select 3.57V                                        */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_SEL1 (0x1UL) /*!< Select 3.49V                                        */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_SEL2 (0x2UL) /*!< Select 3.65V                                        */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0UNDERVOLTAGESEL_SEL3 (0x3UL) /*!< Select 3.75V                                        */

/* ILIMH5V0VBUSHIGHSEL @Bits 6..7 : ILIMH5V0_VBUS_HIGH_SEL */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_Pos (6UL) /*!< Position of ILIMH5V0VBUSHIGHSEL field.                     */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_Msk (0x3UL << VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_Pos) /*!< Bit mask
                                                                            of ILIMH5V0VBUSHIGHSEL field.*/                       
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0VBUSHIGHSEL field.       */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0VBUSHIGHSEL field.       */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_SEL0 (0x0UL) /*!< Select 4.50V                                            */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_SEL1 (0x1UL) /*!< Select 4.45V                                            */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_SEL2 (0x2UL) /*!< Select 4.40V                                            */
  #define VBUSIN_ILIMH5V0CONFIG0_ILIMH5V0VBUSHIGHSEL_SEL3 (0x3UL) /*!< Select 4.35V                                            */


/* VBUSIN_ILIMH5V0CONFIG1: Ilim5V0 Configuration 1 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define VBUSIN_ILIMH5V0CONFIG1_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0CONFIG1 register.                             */

/* ILIMH5V0ILIMENA @Bit 0 : ILIMH5V0_ILIM_ENA */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0ILIMENA_Pos (0UL) /*!< Position of ILIMH5V0ILIMENA field.                             */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0ILIMENA_Msk (0x1UL << VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0ILIMENA_Pos) /*!< Bit mask of
                                                                            ILIMH5V0ILIMENA field.*/                              
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0ILIMENA_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0ILIMENA field.               */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0ILIMENA_Max (0x1UL) /*!< Max enumerator value of ILIMH5V0ILIMENA field.               */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0ILIMENA_SEL0 (0x0UL) /*!< ILIM control enabled                                        */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0ILIMENA_SEL1 (0x1UL) /*!< ILIM control disabled                                       */

/* ILIMH5V0OVERVOLTAGESEL @Bits 1..2 : ILIMH5V0_OVERVOLTAGE_SEL */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_Pos (1UL) /*!< Position of ILIMH5V0OVERVOLTAGESEL field.               */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_Msk (0x3UL << VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_Pos) /*!<
                                                                            Bit mask of ILIMH5V0OVERVOLTAGESEL field.*/           
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0OVERVOLTAGESEL field. */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0OVERVOLTAGESEL field. */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_SEL0 (0x0UL) /*!< Select 5.5V                                          */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_SEL1 (0x1UL) /*!< Select 5.3V                                          */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_SEL2 (0x2UL) /*!< Select 5.4V                                          */
  #define VBUSIN_ILIMH5V0CONFIG1_ILIMH5V0OVERVOLTAGESEL_SEL3 (0x3UL) /*!< Select 7.0V (for voltage regulation enabled mode)    */


/* VBUSIN_ILIMH5V0CTRL: Ilim5V0 Control NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define VBUSIN_ILIMH5V0CTRL_ResetValue (0x00UL)    /*!< Reset value of ILIMH5V0CTRL register.                                */

/* ILIMH5V0CTRL @Bits 0..7 : ILIMH5V0_CTRL_VAOD[7:0] */
  #define VBUSIN_ILIMH5V0CTRL_ILIMH5V0CTRL_Pos (0UL) /*!< Position of ILIMH5V0CTRL field.                                      */
  #define VBUSIN_ILIMH5V0CTRL_ILIMH5V0CTRL_Msk (0xFFUL << VBUSIN_ILIMH5V0CTRL_ILIMH5V0CTRL_Pos) /*!< Bit mask of ILIMH5V0CTRL
                                                                            field.*/                                              



/* =========================================================================================================================== */
/* ================                                         BCHARGER                                         ================ */
/* =========================================================================================================================== */

/* ===================================================== Struct BCHARGER ===================================================== */
/**
  * @brief Neutrino BCHARGER registers
  */
typedef struct {                                     /*!< BCHARGER Structure                                                   */
  __OM  uint8_t   TASKRELEASEERR;                    /*!< (@ 0x00000000) Release Charger from Error                            */
  __OM  uint8_t   TASKCLEARCHGERR;                   /*!< (@ 0x00000001) Clear error registers                                 */
  __OM  uint8_t   TASKCLEARSAFETYTIMER;              /*!< (@ 0x00000002) Clear safety timers                                   */
  __OM  uint8_t   TASKRESETCHGFSM;                   /*!< (@ 0x00000003) Reset Charger-FSM state                               */
  __IOM uint8_t   BCHGENABLESET;                     /*!< (@ 0x00000004) Charger Enable Set                                    */
  __IOM uint8_t   BCHGENABLECLR;                     /*!< (@ 0x00000005) Charger Enable Clear                                  */
  __IOM uint8_t   BCHGDISABLESET;                    /*!< (@ 0x00000006) Charger Disable Set                                   */
  __IOM uint8_t   BCHGDISABLECLR;                    /*!< (@ 0x00000007) Charger Disable Clear                                 */
  __IOM uint8_t   BCHGISETMSB;                       /*!< (@ 0x00000008) Battery Charger Current Configuration                 */
  __IOM uint8_t   BCHGISETLSB;                       /*!< (@ 0x00000009) Battery Charger Current Configuration                 */
  __IOM uint8_t   BCHGISETDISCHARGEMSB;              /*!< (@ 0x0000000A) Battery Charger Discharge Configuration               */
  __IOM uint8_t   BCHGISETDISCHARGELSB;              /*!< (@ 0x0000000B) Battery Charger Discharge Configuration               */
  __IOM uint8_t   BCHGVTERM;                         /*!< (@ 0x0000000C) Battery Charger Termination Voltage Normal temp       */
  __IOM uint8_t   BCHGVTERMR;                        /*!< (@ 0x0000000D) Battery Charger Termination Voltage Warm temp         */
  __IOM uint8_t   BCHGVTRICKLESEL;                   /*!< (@ 0x0000000E) Battery Charger Trickle Level Select                  */
  __IOM uint8_t   BCHGITERMSEL;                      /*!< (@ 0x0000000F) Battery Charger ITERM Level Select                    */
  __IOM uint8_t   NTCCOLD;                           /*!< (@ 0x00000010) NTC threshold for COLD temperature region             */
  __IOM uint8_t   NTCCOLDLSB;                        /*!< (@ 0x00000011) NTC threshold for COLD temperature region             */
  __IOM uint8_t   NTCCOOL;                           /*!< (@ 0x00000012) NTC threshold for COOL temperature region             */
  __IOM uint8_t   NTCCOOLLSB;                        /*!< (@ 0x00000013) NTC threshold for COOL temperature region             */
  __IOM uint8_t   NTCWARM;                           /*!< (@ 0x00000014) NTC threshold for WARM temperature region             */
  __IOM uint8_t   NTCWARMLSB;                        /*!< (@ 0x00000015) NTC threshold for WARM temperature region             */
  __IOM uint8_t   NTCHOT;                            /*!< (@ 0x00000016) NTC threshold for HOT temperature region              */
  __IOM uint8_t   NTCHOTLSB;                         /*!< (@ 0x00000017) NTC threshold for HOT temperature region              */
  __IOM uint8_t   DIETEMPSTOP;                       /*!< (@ 0x00000018) DIE TEMP threshold for stop charging                  */
  __IOM uint8_t   DIETEMPRESUME;                     /*!< (@ 0x00000019) DIE TEMP threshold for resuming charging              */
  __IOM uint8_t   BCHGILIM;                          /*!< (@ 0x0000001A) BCHARGER Ilim                                         */
  __IOM uint8_t   BCHGOVERRIDE0;                     /*!< (@ 0x0000001B) Charger Output overrides                              */
  __IOM uint8_t   BCHGOVERRIDE1;                     /*!< (@ 0x0000001C) Charger Output overrides                              */
  __IOM uint8_t   BCHGOVERRIDE2;                     /*!< (@ 0x0000001D) Charger Input overrides                               */
  __IOM uint8_t   BCHGOVERRIDE3;                     /*!< (@ 0x0000001E) Charger Input overrides                               */
  __IOM uint8_t   BCHGOVERRIDE4;                     /*!< (@ 0x0000001F) Charger Input overrides                               */
  __IOM uint8_t   BCHGOVERRIDE5;                     /*!< (@ 0x00000020) Charger digital overrides                             */
  __IOM uint8_t   BCHGOVERRIDEIDAC0;                 /*!< (@ 0x00000021) Digital IDAC control overrides                        */
  __IOM uint8_t   BCHGOVERRIDEIDAC1;                 /*!< (@ 0x00000022) Digital IDAC control overrides                        */
  __IOM uint8_t   BCHGOVERRIDEIDAC2;                 /*!< (@ 0x00000023) Digital IDAC control overrides                        */
  __IOM uint8_t   NTCOVERRIDE;                       /*!< (@ 0x00000024) Ntc comparator output overrides                       */
  __IOM uint8_t   DIETEMPOVERRIDE;                   /*!< (@ 0x00000025) DieTemp comparator output override                    */
  __IOM uint8_t   MEASOVERRIDE;                      /*!< (@ 0x00000026) Single measurement ack override                       */
  __IOM uint8_t   BCHGATE;                           /*!< (@ 0x00000027) BCHARGER Analog Testbus Enable                        */
  __IOM uint8_t   BCHGDTE;                           /*!< (@ 0x00000028) BCHARGER Digital Testbus Enable                       */
  __IM  uint8_t   BCHGDTB;                           /*!< (@ 0x00000029) BCHARGER Digital Testbus                              */
  __IM  uint8_t   BCHGSTATUS;                        /*!< (@ 0x0000002A) BCHARGER Status                                       */
  __IM  uint8_t   BCHGILIMSTATUS;                    /*!< (@ 0x0000002B) BCHARGER Ilim Status                                  */
  __IM  uint8_t   BCHGSPARESTATUS;                   /*!< (@ 0x0000002C) BCHARGER Spare Status                                 */
  __IM  uint8_t   BCHGIDACCTRLSTATUS0;               /*!< (@ 0x0000002D) Digital IDAC control Status                           */
  __IM  uint8_t   BCHGIDACCTRLSTATUS1;               /*!< (@ 0x0000002E) Digital IDAC control Status                           */
  __IM  uint8_t   BCHGIDACCTRLSTATUS2;               /*!< (@ 0x0000002F) Digital IDAC control Status                           */
  __IM  uint8_t   NTCSTATUS;                         /*!< (@ 0x00000030) Ntc Comparator Status                                 */
  __IM  uint8_t   DIETEMPSTATUS;                     /*!< (@ 0x00000031) DieTemp Comparator Status                             */
  __IM  uint8_t   BCHGCHARGESTATUS;                  /*!< (@ 0x00000032) Charging Status                                       */
  __IM  uint8_t   BCHGDBGSTATUS;                     /*!< (@ 0x00000033) Charger-FSM current state                             */
  __IM  uint8_t   BCHGERRREASON;                     /*!< (@ 0x00000034) Charger-FSM Error. Latched error reasons. Cleared with
                                                                         TASKS_CLEAR_CHG_ERR*/                                    
  __IM  uint8_t   BCHGERRSENSOR;                     /*!< (@ 0x00000035) Charger-FSM Error. Latched sensor values. Cleared with
                                                                         TASKS_CLEAR_CHG_ERR*/                                    
  __IM  uint8_t   BCHGERRPREVSTATES0;                /*!< (@ 0x00000036) Charger-FSM Error. Latched previous state values.
                                                                         Cleared by TASKS_CLEAR_CHG_ERR*/                         
  __IM  uint8_t   BCHGERRPREVSTATES1;                /*!< (@ 0x00000037) Charger-FSM Error. Latched previous state values.
                                                                         Cleared by TASKS_CLEAR_CHG_ERR*/                         
  __IM  uint8_t   BCHGERRPREVSTATES2;                /*!< (@ 0x00000038) Charger-FSM Error. Latched previous state values.
                                                                         Cleared by TASKS_CLEAR_CHG_ERR*/                         
  __IM  uint8_t   BCHGERRPREVSTATES3;                /*!< (@ 0x00000039) Charger-FSM Error. Latched previous state values.
                                                                         Cleared by TASKS_CLEAR_CHG_ERR*/                         
  __IOM uint8_t   BCHGCONFIG;                        /*!< (@ 0x0000003A) Charger configuration                                 */
  __IOM uint8_t   BCHGHYSSEL;                        /*!< (@ 0x0000003B) VSYSVBAT hysteresis select NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   BCHGTRIM0;                         /*!< (@ 0x0000003C) VTERM_TRIM NOTE: Reset value from OTP, value listed in
                                                                         this table may not be correct.*/                         
  __IOM uint8_t   BCHGTRIM1;                         /*!< (@ 0x0000003D) ILIMBATVOS_TRIM NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   BCHGTRIM2;                         /*!< (@ 0x0000003E) ILIMBATREF_TRIM NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   BCHGTRIM3;                         /*!< (@ 0x0000003F) BCHARGER_DROPOUT_TRIM NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   BCHGTRIM4;                         /*!< (@ 0x00000040) BCHARGER_ICHARGING_TRIM NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   BCHGTRIM5;                         /*!< (@ 0x00000041) VSYSVBAT_TRIM NOTE: Reset value from OTP, value listed
                                                                         in this table may not be correct.*/                      
  __IOM uint8_t   BCHGSPARECTRL;                     /*!< (@ 0x00000042) BCHARGER _SPARE NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   BCHGISETBATSOURCE;                 /*!< (@ 0x00000043) Bcharger Iset Battery Source NOTE: Reset value from
                                                                         OTP, value listed in this table may not be correct.*/    
  __IOM uint8_t   BCHGDEBUG;                         /*!< (@ 0x00000044) Charger-FSM debug NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   BCHGDELAYSEL;                      /*!< (@ 0x00000045) Charger-FSM Delay Select NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   BCHGSUPPLEMENTDELAY;               /*!< (@ 0x00000046) Charger-FSM supplement delay select NOTE: Reset value
                                                                         from OTP, value listed in this table may not be
                                                                         correct.*/                                               
  __IOM uint8_t   BCHGFGCONFIG;                      /*!< (@ 0x00000047) FUEL GAUGE configuration                              */
  __IOM uint8_t   BCHGFGDIVSEL;                      /*!< (@ 0x00000048) FUEL GAUGE divider selection                          */
  __IOM uint8_t   BCHGFGTRIM0;                       /*!< (@ 0x00000049) FUEL GAUGE TRIM0 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   BCHGFGTRIM1;                       /*!< (@ 0x0000004A) FUEL GAUGE TRIM1 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   BCHGFGTRIM2;                       /*!< (@ 0x0000004B) FUEL GAUGE TRIM2 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IM  uint8_t   BCHGFGCOUNTERMSB;                  /*!< (@ 0x0000004C) FUEL GAUGE counter MSB part                           */
  __IM  uint8_t   BCHGFGCOUNTERLSB;                  /*!< (@ 0x0000004D) FUEL GAUGE counter LSB part                           */
} __PACKED NPM_BCHARGER_Type;                        /*!< Size = 78 (0x04E)                                                    */

/* BCHARGER_TASKRELEASEERR: Release Charger from Error */
  #define BCHARGER_TASKRELEASEERR_ResetValue (0x00UL) /*!< Reset value of TASKRELEASEERR register.                             */

/* TASKRELEASEERROR @Bit 0 : SW release from Charger Error state */
  #define BCHARGER_TASKRELEASEERR_TASKRELEASEERROR_Pos (0UL) /*!< Position of TASKRELEASEERROR field.                          */
  #define BCHARGER_TASKRELEASEERR_TASKRELEASEERROR_Msk (0x1UL << BCHARGER_TASKRELEASEERR_TASKRELEASEERROR_Pos) /*!< Bit mask of
                                                                            TASKRELEASEERROR field.*/                             
  #define BCHARGER_TASKRELEASEERR_TASKRELEASEERROR_Min (0x0UL) /*!< Min enumerator value of TASKRELEASEERROR field.            */
  #define BCHARGER_TASKRELEASEERR_TASKRELEASEERROR_Max (0x1UL) /*!< Max enumerator value of TASKRELEASEERROR field.            */
  #define BCHARGER_TASKRELEASEERR_TASKRELEASEERROR_NOEFFECT (0x0UL) /*!< No effect                                             */
  #define BCHARGER_TASKRELEASEERR_TASKRELEASEERROR_TRIGGER (0x1UL) /*!< Trigger task                                           */


/* BCHARGER_TASKCLEARCHGERR: Clear error registers */
  #define BCHARGER_TASKCLEARCHGERR_ResetValue (0x00UL) /*!< Reset value of TASKCLEARCHGERR register.                           */

/* TASKCLEARCHGERR @Bit 0 : Clear registers BCHGERRREASON and BCHGERRSENSOR */
  #define BCHARGER_TASKCLEARCHGERR_TASKCLEARCHGERR_Pos (0UL) /*!< Position of TASKCLEARCHGERR field.                           */
  #define BCHARGER_TASKCLEARCHGERR_TASKCLEARCHGERR_Msk (0x1UL << BCHARGER_TASKCLEARCHGERR_TASKCLEARCHGERR_Pos) /*!< Bit mask of
                                                                            TASKCLEARCHGERR field.*/                              
  #define BCHARGER_TASKCLEARCHGERR_TASKCLEARCHGERR_Min (0x0UL) /*!< Min enumerator value of TASKCLEARCHGERR field.             */
  #define BCHARGER_TASKCLEARCHGERR_TASKCLEARCHGERR_Max (0x1UL) /*!< Max enumerator value of TASKCLEARCHGERR field.             */
  #define BCHARGER_TASKCLEARCHGERR_TASKCLEARCHGERR_NOEFFECT (0x0UL) /*!< No effect                                             */
  #define BCHARGER_TASKCLEARCHGERR_TASKCLEARCHGERR_TRIGGER (0x1UL) /*!< Trigger task                                           */


/* BCHARGER_TASKCLEARSAFETYTIMER: Clear safety timers */
  #define BCHARGER_TASKCLEARSAFETYTIMER_ResetValue (0x00UL) /*!< Reset value of TASKCLEARSAFETYTIMER register.                 */

/* TASKCLEARSAFETYTIMER @Bit 0 : Clear TRICKLE and CHARGE safety timers */
  #define BCHARGER_TASKCLEARSAFETYTIMER_TASKCLEARSAFETYTIMER_Pos (0UL) /*!< Position of TASKCLEARSAFETYTIMER field.            */
  #define BCHARGER_TASKCLEARSAFETYTIMER_TASKCLEARSAFETYTIMER_Msk (0x1UL << BCHARGER_TASKCLEARSAFETYTIMER_TASKCLEARSAFETYTIMER_Pos)
                                                                            /*!< Bit mask of TASKCLEARSAFETYTIMER field.*/        
  #define BCHARGER_TASKCLEARSAFETYTIMER_TASKCLEARSAFETYTIMER_Min (0x0UL) /*!< Min enumerator value of TASKCLEARSAFETYTIMER
                                                                            field.*/                                              
  #define BCHARGER_TASKCLEARSAFETYTIMER_TASKCLEARSAFETYTIMER_Max (0x1UL) /*!< Max enumerator value of TASKCLEARSAFETYTIMER
                                                                            field.*/                                              
  #define BCHARGER_TASKCLEARSAFETYTIMER_TASKCLEARSAFETYTIMER_NOEFFECT (0x0UL) /*!< No effect                                   */
  #define BCHARGER_TASKCLEARSAFETYTIMER_TASKCLEARSAFETYTIMER_TRIGGER (0x1UL) /*!< Trigger task                                 */


/* BCHARGER_TASKRESETCHGFSM: Reset Charger-FSM state */
  #define BCHARGER_TASKRESETCHGFSM_ResetValue (0x00UL) /*!< Reset value of TASKRESETCHGFSM register.                           */

/* TASKRESETCHGFSM @Bit 0 : Reset Charger-FSM state to CHARGER_RESET_ST */
  #define BCHARGER_TASKRESETCHGFSM_TASKRESETCHGFSM_Pos (0UL) /*!< Position of TASKRESETCHGFSM field.                           */
  #define BCHARGER_TASKRESETCHGFSM_TASKRESETCHGFSM_Msk (0x1UL << BCHARGER_TASKRESETCHGFSM_TASKRESETCHGFSM_Pos) /*!< Bit mask of
                                                                            TASKRESETCHGFSM field.*/                              
  #define BCHARGER_TASKRESETCHGFSM_TASKRESETCHGFSM_Min (0x0UL) /*!< Min enumerator value of TASKRESETCHGFSM field.             */
  #define BCHARGER_TASKRESETCHGFSM_TASKRESETCHGFSM_Max (0x1UL) /*!< Max enumerator value of TASKRESETCHGFSM field.             */
  #define BCHARGER_TASKRESETCHGFSM_TASKRESETCHGFSM_NOEFFECT (0x0UL) /*!< No effect                                             */
  #define BCHARGER_TASKRESETCHGFSM_TASKRESETCHGFSM_TRIGGER (0x1UL) /*!< Trigger task                                           */


/* BCHARGER_BCHGENABLESET: Charger Enable Set */
  #define BCHARGER_BCHGENABLESET_ResetValue (0x00UL) /*!< Reset value of BCHGENABLESET register.                               */

/* ENABLECHARGING @Bit 0 : Battery Charger Enable SET. (Read 0: Charging disabled). (Read 1: Charging enabled). */
  #define BCHARGER_BCHGENABLESET_ENABLECHARGING_Pos (0UL) /*!< Position of ENABLECHARGING field.                               */
  #define BCHARGER_BCHGENABLESET_ENABLECHARGING_Msk (0x1UL << BCHARGER_BCHGENABLESET_ENABLECHARGING_Pos) /*!< Bit mask of
                                                                            ENABLECHARGING field.*/                               
  #define BCHARGER_BCHGENABLESET_ENABLECHARGING_Min (0x0UL) /*!< Min enumerator value of ENABLECHARGING field.                 */
  #define BCHARGER_BCHGENABLESET_ENABLECHARGING_Max (0x1UL) /*!< Max enumerator value of ENABLECHARGING field.                 */
  #define BCHARGER_BCHGENABLESET_ENABLECHARGING_NOEFFECT (0x0UL) /*!< No effect                                                */
  #define BCHARGER_BCHGENABLESET_ENABLECHARGING_SET (0x1UL) /*!< Set                                                           */

/* ENABLEFULLCHGCOOL @Bit 1 : Battery Charger Enable Full Charge in Cool temp SET. (Read 0: 50 percent charge current value of
                              BCHGISETMSB and BCHGISETLSB registers). (Read 1: 100 percent charge current value of BCHGISETMSB
                              and BCHGISETLSB registers). */                                                                      
                                                                                                                                  
  #define BCHARGER_BCHGENABLESET_ENABLEFULLCHGCOOL_Pos (1UL) /*!< Position of ENABLEFULLCHGCOOL field.                         */
  #define BCHARGER_BCHGENABLESET_ENABLEFULLCHGCOOL_Msk (0x1UL << BCHARGER_BCHGENABLESET_ENABLEFULLCHGCOOL_Pos) /*!< Bit mask of
                                                                            ENABLEFULLCHGCOOL field.*/                            
  #define BCHARGER_BCHGENABLESET_ENABLEFULLCHGCOOL_Min (0x0UL) /*!< Min enumerator value of ENABLEFULLCHGCOOL field.           */
  #define BCHARGER_BCHGENABLESET_ENABLEFULLCHGCOOL_Max (0x1UL) /*!< Max enumerator value of ENABLEFULLCHGCOOL field.           */
  #define BCHARGER_BCHGENABLESET_ENABLEFULLCHGCOOL_NOEFFECT (0x0UL) /*!< No effect                                             */
  #define BCHARGER_BCHGENABLESET_ENABLEFULLCHGCOOL_SET (0x1UL) /*!< Set                                                        */


/* BCHARGER_BCHGENABLECLR: Charger Enable Clear */
  #define BCHARGER_BCHGENABLECLR_ResetValue (0x00UL) /*!< Reset value of BCHGENABLECLR register.                               */

/* ENABLECHARGING @Bit 0 : Battery Charger Enable CLEAR. (Read 0: Charging disabled). (Read 1: Charging enabled). */
  #define BCHARGER_BCHGENABLECLR_ENABLECHARGING_Pos (0UL) /*!< Position of ENABLECHARGING field.                               */
  #define BCHARGER_BCHGENABLECLR_ENABLECHARGING_Msk (0x1UL << BCHARGER_BCHGENABLECLR_ENABLECHARGING_Pos) /*!< Bit mask of
                                                                            ENABLECHARGING field.*/                               
  #define BCHARGER_BCHGENABLECLR_ENABLECHARGING_Min (0x0UL) /*!< Min enumerator value of ENABLECHARGING field.                 */
  #define BCHARGER_BCHGENABLECLR_ENABLECHARGING_Max (0x1UL) /*!< Max enumerator value of ENABLECHARGING field.                 */
  #define BCHARGER_BCHGENABLECLR_ENABLECHARGING_NOEFFECT (0x0UL) /*!< No effect                                                */
  #define BCHARGER_BCHGENABLECLR_ENABLECHARGING_CLR (0x1UL) /*!< Clear                                                         */

/* ENABLEFULLCHGCOOL @Bit 1 : Battery Charger Enable Full Charge in Cool temp CLEAR. (Read 0: 50 percent charge current value of
                              BCHGISETMSB and BCHGISETLSB registers). (Read 1: 100 percent charge current value of BCHGISETMSB
                              and BCHGISETLSB registers). */                                                                      
                                                                                                                                  
  #define BCHARGER_BCHGENABLECLR_ENABLEFULLCHGCOOL_Pos (1UL) /*!< Position of ENABLEFULLCHGCOOL field.                         */
  #define BCHARGER_BCHGENABLECLR_ENABLEFULLCHGCOOL_Msk (0x1UL << BCHARGER_BCHGENABLECLR_ENABLEFULLCHGCOOL_Pos) /*!< Bit mask of
                                                                            ENABLEFULLCHGCOOL field.*/                            
  #define BCHARGER_BCHGENABLECLR_ENABLEFULLCHGCOOL_Min (0x0UL) /*!< Min enumerator value of ENABLEFULLCHGCOOL field.           */
  #define BCHARGER_BCHGENABLECLR_ENABLEFULLCHGCOOL_Max (0x1UL) /*!< Max enumerator value of ENABLEFULLCHGCOOL field.           */
  #define BCHARGER_BCHGENABLECLR_ENABLEFULLCHGCOOL_NOEFFECT (0x0UL) /*!< No effect                                             */
  #define BCHARGER_BCHGENABLECLR_ENABLEFULLCHGCOOL_CLR (0x1UL) /*!< Clear                                                      */


/* BCHARGER_BCHGDISABLESET: Charger Disable Set */
  #define BCHARGER_BCHGDISABLESET_ResetValue (0x00UL) /*!< Reset value of BCHGDISABLESET register.                             */

/* DISABLERECHARGE @Bit 0 : Battery Charger Disable Recharge SET. (Read 0: Recharge enabled). (Read 1: Recharge disabled). */
  #define BCHARGER_BCHGDISABLESET_DISABLERECHARGE_Pos (0UL) /*!< Position of DISABLERECHARGE field.                            */
  #define BCHARGER_BCHGDISABLESET_DISABLERECHARGE_Msk (0x1UL << BCHARGER_BCHGDISABLESET_DISABLERECHARGE_Pos) /*!< Bit mask of
                                                                            DISABLERECHARGE field.*/                              
  #define BCHARGER_BCHGDISABLESET_DISABLERECHARGE_Min (0x0UL) /*!< Min enumerator value of DISABLERECHARGE field.              */
  #define BCHARGER_BCHGDISABLESET_DISABLERECHARGE_Max (0x1UL) /*!< Max enumerator value of DISABLERECHARGE field.              */
  #define BCHARGER_BCHGDISABLESET_DISABLERECHARGE_NOEFFECT (0x0UL) /*!< No effect                                              */
  #define BCHARGER_BCHGDISABLESET_DISABLERECHARGE_SET (0x1UL) /*!< Set                                                         */

/* DISABLENTC @Bit 1 : Battery Charger ignore NTC temperature limits SET. (Read 0: NTC values enabled) (Read 1: NTC values
                       ignored) */                                                                                                
                                                                                                                                  
  #define BCHARGER_BCHGDISABLESET_DISABLENTC_Pos (1UL) /*!< Position of DISABLENTC field.                                      */
  #define BCHARGER_BCHGDISABLESET_DISABLENTC_Msk (0x1UL << BCHARGER_BCHGDISABLESET_DISABLENTC_Pos) /*!< Bit mask of DISABLENTC
                                                                            field.*/                                              
  #define BCHARGER_BCHGDISABLESET_DISABLENTC_Min (0x0UL) /*!< Min enumerator value of DISABLENTC field.                        */
  #define BCHARGER_BCHGDISABLESET_DISABLENTC_Max (0x1UL) /*!< Max enumerator value of DISABLENTC field.                        */
  #define BCHARGER_BCHGDISABLESET_DISABLENTC_NOEFFECT (0x0UL) /*!< No effect                                                   */
  #define BCHARGER_BCHGDISABLESET_DISABLENTC_SET (0x1UL) /*!< Set                                                              */


/* BCHARGER_BCHGDISABLECLR: Charger Disable Clear */
  #define BCHARGER_BCHGDISABLECLR_ResetValue (0x00UL) /*!< Reset value of BCHGDISABLECLR register.                             */

/* DISABLERECHARGE @Bit 0 : Battery Charger Disable Recharge CLEAR. (Read 0: Recharge enabled). (Read 1: Recharge disabled). */
  #define BCHARGER_BCHGDISABLECLR_DISABLERECHARGE_Pos (0UL) /*!< Position of DISABLERECHARGE field.                            */
  #define BCHARGER_BCHGDISABLECLR_DISABLERECHARGE_Msk (0x1UL << BCHARGER_BCHGDISABLECLR_DISABLERECHARGE_Pos) /*!< Bit mask of
                                                                            DISABLERECHARGE field.*/                              
  #define BCHARGER_BCHGDISABLECLR_DISABLERECHARGE_Min (0x0UL) /*!< Min enumerator value of DISABLERECHARGE field.              */
  #define BCHARGER_BCHGDISABLECLR_DISABLERECHARGE_Max (0x1UL) /*!< Max enumerator value of DISABLERECHARGE field.              */
  #define BCHARGER_BCHGDISABLECLR_DISABLERECHARGE_NOEFFECT (0x0UL) /*!< No effect                                              */
  #define BCHARGER_BCHGDISABLECLR_DISABLERECHARGE_CLR (0x1UL) /*!< Clear                                                       */

/* DISABLENTC @Bit 1 : Battery Charger ignore NTC temperature limits CLEAR. (Read 0: NTC values enabled). (Read 1: NTC values
                       ignored). */                                                                                               
                                                                                                                                  
  #define BCHARGER_BCHGDISABLECLR_DISABLENTC_Pos (1UL) /*!< Position of DISABLENTC field.                                      */
  #define BCHARGER_BCHGDISABLECLR_DISABLENTC_Msk (0x1UL << BCHARGER_BCHGDISABLECLR_DISABLENTC_Pos) /*!< Bit mask of DISABLENTC
                                                                            field.*/                                              
  #define BCHARGER_BCHGDISABLECLR_DISABLENTC_Min (0x0UL) /*!< Min enumerator value of DISABLENTC field.                        */
  #define BCHARGER_BCHGDISABLECLR_DISABLENTC_Max (0x1UL) /*!< Max enumerator value of DISABLENTC field.                        */
  #define BCHARGER_BCHGDISABLECLR_DISABLENTC_NOEFFECT (0x0UL) /*!< No effect                                                   */
  #define BCHARGER_BCHGDISABLECLR_DISABLENTC_CLR (0x1UL) /*!< Clear                                                            */


/* BCHARGER_BCHGISETMSB: Battery Charger Current Configuration */
  #define BCHARGER_BCHGISETMSB_ResetValue (0x08UL)   /*!< Reset value of BCHGISETMSB register.                                 */

/* BCHGISETCHARGEMSB @Bits 0..7 : Battery Charger current setting (BCHG_ISET_CHARGE MSB bits [8:1]) default 32mA. See more from
                                  Charging Current chapter. */                                                                    
                                                                                                                                  
  #define BCHARGER_BCHGISETMSB_BCHGISETCHARGEMSB_Pos (0UL) /*!< Position of BCHGISETCHARGEMSB field.                           */
  #define BCHARGER_BCHGISETMSB_BCHGISETCHARGEMSB_Msk (0xFFUL << BCHARGER_BCHGISETMSB_BCHGISETCHARGEMSB_Pos) /*!< Bit mask of
                                                                            BCHGISETCHARGEMSB field.*/                            


/* BCHARGER_BCHGISETLSB: Battery Charger Current Configuration */
  #define BCHARGER_BCHGISETLSB_ResetValue (0x00UL)   /*!< Reset value of BCHGISETLSB register.                                 */

/* BCHGISETCHARGELSB @Bit 0 : Battery Charger current fine tune by 2mA (BCHG_ISET_CHARGE LSB bit [0]). See more from Charging
                              Current chapter. */                                                                                 
                                                                                                                                  
  #define BCHARGER_BCHGISETLSB_BCHGISETCHARGELSB_Pos (0UL) /*!< Position of BCHGISETCHARGELSB field.                           */
  #define BCHARGER_BCHGISETLSB_BCHGISETCHARGELSB_Msk (0x1UL << BCHARGER_BCHGISETLSB_BCHGISETCHARGELSB_Pos) /*!< Bit mask of
                                                                            BCHGISETCHARGELSB field.*/                            


/* BCHARGER_BCHGISETDISCHARGEMSB: Battery Charger Discharge Configuration */
  #define BCHARGER_BCHGISETDISCHARGEMSB_ResetValue (0xCFUL) /*!< Reset value of BCHGISETDISCHARGEMSB register.                 */

/* BCHGISETDISCHARGEMSB @Bits 0..7 : Battery Charger discharge current limiter (BCHG_ISET_DISCHARGE MSB bits [8:1]) default 1A
                                     limitation. See more from Discharge Current Limiter chapter. */                              
                                                                                                                                  
  #define BCHARGER_BCHGISETDISCHARGEMSB_BCHGISETDISCHARGEMSB_Pos (0UL) /*!< Position of BCHGISETDISCHARGEMSB field.            */
  #define BCHARGER_BCHGISETDISCHARGEMSB_BCHGISETDISCHARGEMSB_Msk (0xFFUL << BCHARGER_BCHGISETDISCHARGEMSB_BCHGISETDISCHARGEMSB_Pos)
                                                                            /*!< Bit mask of BCHGISETDISCHARGEMSB field.*/        


/* BCHARGER_BCHGISETDISCHARGELSB: Battery Charger Discharge Configuration */
  #define BCHARGER_BCHGISETDISCHARGELSB_ResetValue (0x01UL) /*!< Reset value of BCHGISETDISCHARGELSB register.                 */

/* BCHGISETDISCHARGELSB @Bit 0 : Battery Charger discharge current limiter fine tune (BCHG_ISET_DISCHARGE LSB bit [0]). See more
                                 from Discharge Current Limiter chapter. */                                                       
                                                                                                                                  
  #define BCHARGER_BCHGISETDISCHARGELSB_BCHGISETDISCHARGELSB_Pos (0UL) /*!< Position of BCHGISETDISCHARGELSB field.            */
  #define BCHARGER_BCHGISETDISCHARGELSB_BCHGISETDISCHARGELSB_Msk (0x1UL << BCHARGER_BCHGISETDISCHARGELSB_BCHGISETDISCHARGELSB_Pos)
                                                                            /*!< Bit mask of BCHGISETDISCHARGELSB field.*/        


/* BCHARGER_BCHGVTERM: Battery Charger Termination Voltage Normal temp */
  #define BCHARGER_BCHGVTERM_ResetValue (0x02UL)     /*!< Reset value of BCHGVTERM register.                                   */

/* BCHGVTERMNORM @Bits 0..3 : Battery Charger Normal termination voltage. Values 14-15 are equals with default value(3V60). */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_Pos (0UL) /*!< Position of BCHGVTERMNORM field.                                     */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_Msk (0xFUL << BCHARGER_BCHGVTERM_BCHGVTERMNORM_Pos) /*!< Bit mask of BCHGVTERMNORM
                                                                            field.*/                                              
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_Min (0x0UL) /*!< Min enumerator value of BCHGVTERMNORM field.                       */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_Max (0xDUL) /*!< Max enumerator value of BCHGVTERMNORM field.                       */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_3V50 (0x0UL) /*!< 3.50V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_3V55 (0x1UL) /*!< 3.55V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_3V60 (0x2UL) /*!< 3.60V(default)                                                    */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_3V65 (0x3UL) /*!< 3.65V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V00 (0x4UL) /*!< 4.00V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V05 (0x5UL) /*!< 4.05V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V10 (0x6UL) /*!< 4.10V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V15 (0x7UL) /*!< 4.15V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V20 (0x8UL) /*!< 4.20V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V25 (0x9UL) /*!< 4.25V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V30 (0xAUL) /*!< 4.30V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V35 (0xBUL) /*!< 4.35V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V40 (0xCUL) /*!< 4.40V                                                             */
  #define BCHARGER_BCHGVTERM_BCHGVTERMNORM_4V45 (0xDUL) /*!< 4.45V                                                             */


/* BCHARGER_BCHGVTERMR: Battery Charger Termination Voltage Warm temp */
  #define BCHARGER_BCHGVTERMR_ResetValue (0x02UL)    /*!< Reset value of BCHGVTERMR register.                                  */

/* BCHGVTERMREDUCED @Bits 0..3 : Battery Charger Warm termination voltage. Values 14-15 are equals with default value(3V60). */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_Pos (0UL) /*!< Position of BCHGVTERMREDUCED field.                              */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_Msk (0xFUL << BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_Pos) /*!< Bit mask of
                                                                            BCHGVTERMREDUCED field.*/                             
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_Min (0x0UL) /*!< Min enumerator value of BCHGVTERMREDUCED field.                */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_Max (0xDUL) /*!< Max enumerator value of BCHGVTERMREDUCED field.                */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_3V50 (0x0UL) /*!< 3.50V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_3V55 (0x1UL) /*!< 3.55V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_3V60 (0x2UL) /*!< 3.60V(default)                                                */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_3V65 (0x3UL) /*!< 3.65V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V00 (0x4UL) /*!< 4.00V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V05 (0x5UL) /*!< 4.05V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V10 (0x6UL) /*!< 4.10V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V15 (0x7UL) /*!< 4.15V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V20 (0x8UL) /*!< 4.20V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V25 (0x9UL) /*!< 4.25V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V30 (0xAUL) /*!< 4.30V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V35 (0xBUL) /*!< 4.35V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V40 (0xCUL) /*!< 4.40V                                                         */
  #define BCHARGER_BCHGVTERMR_BCHGVTERMREDUCED_4V45 (0xDUL) /*!< 4.45V                                                         */


/* BCHARGER_BCHGVTRICKLESEL: Battery Charger Trickle Level Select */
  #define BCHARGER_BCHGVTRICKLESEL_ResetValue (0x00UL) /*!< Reset value of BCHGVTRICKLESEL register.                           */

/* BCHGVTRICKLESEL @Bit 0 : Battery Charger Vtrickle select */
  #define BCHARGER_BCHGVTRICKLESEL_BCHGVTRICKLESEL_Pos (0UL) /*!< Position of BCHGVTRICKLESEL field.                           */
  #define BCHARGER_BCHGVTRICKLESEL_BCHGVTRICKLESEL_Msk (0x1UL << BCHARGER_BCHGVTRICKLESEL_BCHGVTRICKLESEL_Pos) /*!< Bit mask of
                                                                            BCHGVTRICKLESEL field.*/                              
  #define BCHARGER_BCHGVTRICKLESEL_BCHGVTRICKLESEL_Min (0x0UL) /*!< Min enumerator value of BCHGVTRICKLESEL field.             */
  #define BCHARGER_BCHGVTRICKLESEL_BCHGVTRICKLESEL_Max (0x1UL) /*!< Max enumerator value of BCHGVTRICKLESEL field.             */
  #define BCHARGER_BCHGVTRICKLESEL_BCHGVTRICKLESEL_2V9 (0x0UL) /*!< 2.9V(default)                                              */
  #define BCHARGER_BCHGVTRICKLESEL_BCHGVTRICKLESEL_2V5 (0x1UL) /*!< 2.5V                                                       */


/* BCHARGER_BCHGITERMSEL: Battery Charger ITERM Level Select */
  #define BCHARGER_BCHGITERMSEL_ResetValue (0x00UL)  /*!< Reset value of BCHGITERMSEL register.                                */

/* BCHGITERMSEL @Bit 0 : Battery Charger ITERM select */
  #define BCHARGER_BCHGITERMSEL_BCHGITERMSEL_Pos (0UL) /*!< Position of BCHGITERMSEL field.                                    */
  #define BCHARGER_BCHGITERMSEL_BCHGITERMSEL_Msk (0x1UL << BCHARGER_BCHGITERMSEL_BCHGITERMSEL_Pos) /*!< Bit mask of BCHGITERMSEL
                                                                            field.*/                                              
  #define BCHARGER_BCHGITERMSEL_BCHGITERMSEL_Min (0x0UL) /*!< Min enumerator value of BCHGITERMSEL field.                      */
  #define BCHARGER_BCHGITERMSEL_BCHGITERMSEL_Max (0x1UL) /*!< Max enumerator value of BCHGITERMSEL field.                      */
  #define BCHARGER_BCHGITERMSEL_BCHGITERMSEL_SEL10 (0x0UL) /*!< 10 percent(default)                                            */
  #define BCHARGER_BCHGITERMSEL_BCHGITERMSEL_SEL20 (0x1UL) /*!< 20 percent                                                     */


/* BCHARGER_NTCCOLD: NTC threshold for COLD temperature region */
  #define BCHARGER_NTCCOLD_ResetValue (0xBBUL)       /*!< Reset value of NTCCOLD register.                                     */

/* NTCCOLDLVLMSB @Bits 0..7 : NTC COLD level MSB bits */
  #define BCHARGER_NTCCOLD_NTCCOLDLVLMSB_Pos (0UL)   /*!< Position of NTCCOLDLVLMSB field.                                     */
  #define BCHARGER_NTCCOLD_NTCCOLDLVLMSB_Msk (0xFFUL << BCHARGER_NTCCOLD_NTCCOLDLVLMSB_Pos) /*!< Bit mask of NTCCOLDLVLMSB
                                                                            field.*/                                              


/* BCHARGER_NTCCOLDLSB: NTC threshold for COLD temperature region */
  #define BCHARGER_NTCCOLDLSB_ResetValue (0x01UL)    /*!< Reset value of NTCCOLDLSB register.                                  */

/* NTCCOLDLVLLSB @Bits 0..1 : NTC COLD level LSB bits */
  #define BCHARGER_NTCCOLDLSB_NTCCOLDLVLLSB_Pos (0UL) /*!< Position of NTCCOLDLVLLSB field.                                    */
  #define BCHARGER_NTCCOLDLSB_NTCCOLDLVLLSB_Msk (0x3UL << BCHARGER_NTCCOLDLSB_NTCCOLDLVLLSB_Pos) /*!< Bit mask of NTCCOLDLVLLSB
                                                                            field.*/                                              


/* BCHARGER_NTCCOOL: NTC threshold for COOL temperature region */
  #define BCHARGER_NTCCOOL_ResetValue (0xA4UL)       /*!< Reset value of NTCCOOL register.                                     */

/* NTCCOOLLVLMSB @Bits 0..7 : NTC COOL level MSB bits */
  #define BCHARGER_NTCCOOL_NTCCOOLLVLMSB_Pos (0UL)   /*!< Position of NTCCOOLLVLMSB field.                                     */
  #define BCHARGER_NTCCOOL_NTCCOOLLVLMSB_Msk (0xFFUL << BCHARGER_NTCCOOL_NTCCOOLLVLMSB_Pos) /*!< Bit mask of NTCCOOLLVLMSB
                                                                            field.*/                                              


/* BCHARGER_NTCCOOLLSB: NTC threshold for COOL temperature region */
  #define BCHARGER_NTCCOOLLSB_ResetValue (0x02UL)    /*!< Reset value of NTCCOOLLSB register.                                  */

/* NTCCOOLLVLLSB @Bits 0..1 : NTC COOL level LSB bits */
  #define BCHARGER_NTCCOOLLSB_NTCCOOLLVLLSB_Pos (0UL) /*!< Position of NTCCOOLLVLLSB field.                                    */
  #define BCHARGER_NTCCOOLLSB_NTCCOOLLVLLSB_Msk (0x3UL << BCHARGER_NTCCOOLLSB_NTCCOOLLVLLSB_Pos) /*!< Bit mask of NTCCOOLLVLLSB
                                                                            field.*/                                              


/* BCHARGER_NTCWARM: NTC threshold for WARM temperature region */
  #define BCHARGER_NTCWARM_ResetValue (0x54UL)       /*!< Reset value of NTCWARM register.                                     */

/* NTCWARMLVLMSB @Bits 0..7 : NTC WARM level MSB bits */
  #define BCHARGER_NTCWARM_NTCWARMLVLMSB_Pos (0UL)   /*!< Position of NTCWARMLVLMSB field.                                     */
  #define BCHARGER_NTCWARM_NTCWARMLVLMSB_Msk (0xFFUL << BCHARGER_NTCWARM_NTCWARMLVLMSB_Pos) /*!< Bit mask of NTCWARMLVLMSB
                                                                            field.*/                                              


/* BCHARGER_NTCWARMLSB: NTC threshold for WARM temperature region */
  #define BCHARGER_NTCWARMLSB_ResetValue (0x01UL)    /*!< Reset value of NTCWARMLSB register.                                  */

/* NTCWARMLVLLSB @Bits 0..1 : NTC WARM level LSB bits */
  #define BCHARGER_NTCWARMLSB_NTCWARMLVLLSB_Pos (0UL) /*!< Position of NTCWARMLVLLSB field.                                    */
  #define BCHARGER_NTCWARMLSB_NTCWARMLVLLSB_Msk (0x3UL << BCHARGER_NTCWARMLSB_NTCWARMLVLLSB_Pos) /*!< Bit mask of NTCWARMLVLLSB
                                                                            field.*/                                              


/* BCHARGER_NTCHOT: NTC threshold for HOT temperature region */
  #define BCHARGER_NTCHOT_ResetValue (0x3BUL)        /*!< Reset value of NTCHOT register.                                      */

/* NTCHOTLVLMSB @Bits 0..7 : NTC HOT level MSB bits */
  #define BCHARGER_NTCHOT_NTCHOTLVLMSB_Pos (0UL)     /*!< Position of NTCHOTLVLMSB field.                                      */
  #define BCHARGER_NTCHOT_NTCHOTLVLMSB_Msk (0xFFUL << BCHARGER_NTCHOT_NTCHOTLVLMSB_Pos) /*!< Bit mask of NTCHOTLVLMSB field.   */


/* BCHARGER_NTCHOTLSB: NTC threshold for HOT temperature region */
  #define BCHARGER_NTCHOTLSB_ResetValue (0x01UL)     /*!< Reset value of NTCHOTLSB register.                                   */

/* NTCHOTLVLLSB @Bits 0..1 : NTC HOT level LSB bits */
  #define BCHARGER_NTCHOTLSB_NTCHOTLVLLSB_Pos (0UL)  /*!< Position of NTCHOTLVLLSB field.                                      */
  #define BCHARGER_NTCHOTLSB_NTCHOTLVLLSB_Msk (0x3UL << BCHARGER_NTCHOTLSB_NTCHOTLVLLSB_Pos) /*!< Bit mask of NTCHOTLVLLSB
                                                                            field.*/                                              


/* BCHARGER_DIETEMPSTOP: DIE TEMP threshold for stop charging */
  #define BCHARGER_DIETEMPSTOP_ResetValue (0x5AUL)   /*!< Reset value of DIETEMPSTOP register.                                 */

/* DIETEMPSTOPCHG @Bits 0..7 : DIE TEMP STOP charging level */
  #define BCHARGER_DIETEMPSTOP_DIETEMPSTOPCHG_Pos (0UL) /*!< Position of DIETEMPSTOPCHG field.                                 */
  #define BCHARGER_DIETEMPSTOP_DIETEMPSTOPCHG_Msk (0xFFUL << BCHARGER_DIETEMPSTOP_DIETEMPSTOPCHG_Pos) /*!< Bit mask of
                                                                            DIETEMPSTOPCHG field.*/                               


/* BCHARGER_DIETEMPRESUME: DIE TEMP threshold for resuming charging */
  #define BCHARGER_DIETEMPRESUME_ResetValue (0x5DUL) /*!< Reset value of DIETEMPRESUME register.                               */

/* DIETEMPRESUMECHG @Bits 0..7 : DIE TEMP RESUME charging level */
  #define BCHARGER_DIETEMPRESUME_DIETEMPRESUMECHG_Pos (0UL) /*!< Position of DIETEMPRESUMECHG field.                           */
  #define BCHARGER_DIETEMPRESUME_DIETEMPRESUMECHG_Msk (0xFFUL << BCHARGER_DIETEMPRESUME_DIETEMPRESUMECHG_Pos) /*!< Bit mask of
                                                                            DIETEMPRESUMECHG field.*/                             


/* BCHARGER_BCHGILIM: BCHARGER Ilim */
  #define BCHARGER_BCHGILIM_ResetValue (0x00UL)      /*!< Reset value of BCHGILIM register.                                    */

/* BCHGDISABLEILIMBAT @Bit 0 : Battery Charger disable ILIM BCHARGER_DISABLE_ILIMBAT */
  #define BCHARGER_BCHGILIM_BCHGDISABLEILIMBAT_Pos (0UL) /*!< Position of BCHGDISABLEILIMBAT field.                            */
  #define BCHARGER_BCHGILIM_BCHGDISABLEILIMBAT_Msk (0x1UL << BCHARGER_BCHGILIM_BCHGDISABLEILIMBAT_Pos) /*!< Bit mask of
                                                                            BCHGDISABLEILIMBAT field.*/                           
  #define BCHARGER_BCHGILIM_BCHGDISABLEILIMBAT_Min (0x0UL) /*!< Min enumerator value of BCHGDISABLEILIMBAT field.              */
  #define BCHARGER_BCHGILIM_BCHGDISABLEILIMBAT_Max (0x1UL) /*!< Max enumerator value of BCHGDISABLEILIMBAT field.              */
  #define BCHARGER_BCHGILIM_BCHGDISABLEILIMBAT_ENABLED (0x0UL) /*!< Enabled Ilimbat                                            */
  #define BCHARGER_BCHGILIM_BCHGDISABLEILIMBAT_DISABLED (0x1UL) /*!< Disabled Ilimbat                                          */


/* BCHARGER_BCHGOVERRIDE0: Charger Output overrides */
  #define BCHARGER_BCHGOVERRIDE0_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDE0 register.                               */

/* BCHGMODEOVRDENA @Bit 0 : Enable for Bcharger Mode Override */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRDENA_Pos (0UL) /*!< Position of BCHGMODEOVRDENA field.                             */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRDENA_Pos) /*!< Bit mask of
                                                                            BCHGMODEOVRDENA field.*/                              
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGMODEOVRDENA field.               */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGMODEOVRDENA field.               */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                               */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRDENA_ENABLE (0x1UL) /*!< Use modeOvrd                                              */

/* BCHGMODEOVRD @Bits 1..2 : Bcharger Mode Override value */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_Pos (1UL) /*!< Position of BCHGMODEOVRD field.                                   */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_Msk (0x3UL << BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_Pos) /*!< Bit mask of
                                                                            BCHGMODEOVRD field.*/                                 
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGMODEOVRD field.                     */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_Max (0x3UL) /*!< Max enumerator value of BCHGMODEOVRD field.                     */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_00 (0x0UL) /*!< Discharge, low current                                           */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_01 (0x1UL) /*!< Discharge, full current                                          */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_10 (0x2UL) /*!< No charging, All comparators enabled                             */
  #define BCHARGER_BCHGOVERRIDE0_BCHGMODEOVRD_11 (0x3UL) /*!< Charging allowed, All comparators enabled                        */

/* BCHGPWRUPOVRDENA @Bit 3 : Enable for Bcharger PWRUP Override */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRDENA_Pos (3UL) /*!< Position of BCHGPWRUPOVRDENA field.                           */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRDENA_Pos) /*!< Bit mask of
                                                                            BCHGPWRUPOVRDENA field.*/                             
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGPWRUPOVRDENA field.             */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGPWRUPOVRDENA field.             */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                              */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRDENA_ENABLE (0x1UL) /*!< Use bchgPwrupOvrd                                        */

/* BCHGPWRUPOVRD @Bit 4 : Bcharger PWRUP Override value */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRD_Pos (4UL) /*!< Position of BCHGPWRUPOVRD field.                                 */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRD_Pos) /*!< Bit mask of
                                                                            BCHGPWRUPOVRD field.*/                                
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGPWRUPOVRD field.                   */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGPWRUPOVRD field.                   */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRD_0 (0x0UL) /*!< Force bchgPwrup to 0                                             */
  #define BCHARGER_BCHGOVERRIDE0_BCHGPWRUPOVRD_1 (0x1UL) /*!< Force bchgPwrup to 1                                             */

/* BCHGICHARGEOVRDENA @Bit 5 : Enable for Bcharger Icharge Override */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRDENA_Pos (5UL) /*!< Position of BCHGICHARGEOVRDENA field.                       */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRDENA_Pos) /*!< Bit mask
                                                                            of BCHGICHARGEOVRDENA field.*/                        
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGICHARGEOVRDENA field.         */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGICHARGEOVRDENA field.         */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                            */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRDENA_ENABLE (0x1UL) /*!< Use bchgIchargeOvrd                                    */

/* BCHGICHARGEOVRD @Bits 6..7 : Bcharger Icharge Override value */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_Pos (6UL) /*!< Position of BCHGICHARGEOVRD field.                             */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_Msk (0x3UL << BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_Pos) /*!< Bit mask of
                                                                            BCHGICHARGEOVRD field.*/                              
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGICHARGEOVRD field.               */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_Max (0x3UL) /*!< Max enumerator value of BCHGICHARGEOVRD field.               */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_00 (0x0UL) /*!< 10 percent charge (Trickle)                                   */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_01 (0x1UL) /*!< 50 percent charge                                             */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_10 (0x2UL) /*!< RFU (default 10 percent charge)                               */
  #define BCHARGER_BCHGOVERRIDE0_BCHGICHARGEOVRD_11 (0x3UL) /*!< 100 percent charge (Fast)                                     */


/* BCHARGER_BCHGOVERRIDE1: Charger Output overrides */
  #define BCHARGER_BCHGOVERRIDE1_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDE1 register.                               */

/* BCHGCOMPOVRDENA @Bit 0 : Enable for Bcharger Comparator Enables Override */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRDENA_Pos (0UL) /*!< Position of BCHGCOMPOVRDENA field.                             */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRDENA_Pos) /*!< Bit mask of
                                                                            BCHGCOMPOVRDENA field.*/                              
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGCOMPOVRDENA field.               */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGCOMPOVRDENA field.               */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                               */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRDENA_ENABLE (0x1UL) /*!< Use bchgComp                                              */

/* BCHGCOMPOVRD @Bit 1 : Bcharger Comparator Enables Override Value */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRD_Pos (1UL) /*!< Position of BCHGCOMPOVRD field.                                   */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRD_Pos) /*!< Bit mask of
                                                                            BCHGCOMPOVRD field.*/                                 
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGCOMPOVRD field.                     */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGCOMPOVRD field.                     */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRD_0 (0x0UL) /*!< Force Comparator enables to 0                                     */
  #define BCHARGER_BCHGOVERRIDE1_BCHGCOMPOVRD_1 (0x1UL) /*!< Force bchgComp to 1                                               */

/* BCHGISINKOVRDENA @Bit 2 : Enable for Bcharger Isink Override */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRDENA_Pos (2UL) /*!< Position of BCHGISINKOVRDENA field.                           */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRDENA_Pos) /*!< Bit mask of
                                                                            BCHGISINKOVRDENA field.*/                             
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGISINKOVRDENA field.             */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGISINKOVRDENA field.             */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                              */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRDENA_ENABLE (0x1UL) /*!< Use bchgIsinkOvrd                                        */

/* BCHGISINKOVRD @Bit 3 : Bcharger Isink Override Value */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRD_Pos (3UL) /*!< Position of BCHGISINKOVRD field.                                 */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRD_Pos) /*!< Bit mask of
                                                                            BCHGISINKOVRD field.*/                                
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGISINKOVRD field.                   */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGISINKOVRD field.                   */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRD_0 (0x0UL) /*!< Force bchgIsink to 0                                             */
  #define BCHARGER_BCHGOVERRIDE1_BCHGISINKOVRD_1 (0x1UL) /*!< Force bchgIsink to 1                                             */


/* BCHARGER_BCHGOVERRIDE2: Charger Input overrides */
  #define BCHARGER_BCHGOVERRIDE2_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDE2 register.                               */

/* BCHGVBATLOWOVRDENA @Bit 0 : Enable for Bcharger Vbatlow Override */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRDENA_Pos (0UL) /*!< Position of BCHGVBATLOWOVRDENA field.                       */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRDENA_Pos) /*!< Bit mask
                                                                            of BCHGVBATLOWOVRDENA field.*/                        
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGVBATLOWOVRDENA field.         */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGVBATLOWOVRDENA field.         */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                            */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRDENA_ENABLE (0x1UL) /*!< Use bchgVbatLowOvrd                                    */

/* BCHGVBATLOWOVRD @Bit 1 : Bcharger Vbatlow Override Value */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRD_Pos (1UL) /*!< Position of BCHGVBATLOWOVRD field.                             */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRD_Pos) /*!< Bit mask of
                                                                            BCHGVBATLOWOVRD field.*/                              
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGVBATLOWOVRD field.               */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGVBATLOWOVRD field.               */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRD_0 (0x0UL) /*!< Force bchgVbatLow to 0                                         */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVBATLOWOVRD_1 (0x1UL) /*!< Force bchgVbatLow to 1                                         */

/* BCHGDROPOUTOVRDENA @Bit 2 : Enable for Bharger Dropout Override */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRDENA_Pos (2UL) /*!< Position of BCHGDROPOUTOVRDENA field.                       */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRDENA_Pos) /*!< Bit mask
                                                                            of BCHGDROPOUTOVRDENA field.*/                        
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGDROPOUTOVRDENA field.         */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGDROPOUTOVRDENA field.         */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                            */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRDENA_ENABLE (0x1UL) /*!< Use bchgDropoutOvrd                                    */

/* BCHGDROPOUTOVRD @Bit 3 : Bcharger Dropout Override Value */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRD_Pos (3UL) /*!< Position of BCHGDROPOUTOVRD field.                             */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRD_Pos) /*!< Bit mask of
                                                                            BCHGDROPOUTOVRD field.*/                              
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGDROPOUTOVRD field.               */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGDROPOUTOVRD field.               */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRD_0 (0x0UL) /*!< Force bchgDropout to 0                                         */
  #define BCHARGER_BCHGOVERRIDE2_BCHGDROPOUTOVRD_1 (0x1UL) /*!< Force bchgDropout to 1                                         */

/* BCHGVTRICKLEOVRDENA @Bit 4 : Enable for Bcharger Vtrickle Override */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRDENA_Pos (4UL) /*!< Position of BCHGVTRICKLEOVRDENA field.                     */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRDENA_Pos) /*!< Bit mask
                                                                            of BCHGVTRICKLEOVRDENA field.*/                       
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGVTRICKLEOVRDENA field.       */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGVTRICKLEOVRDENA field.       */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                           */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRDENA_ENABLE (0x1UL) /*!< Use bchgVtrickleOvrd                                  */

/* BCHGVTRICKLEOVRD @Bit 5 : Bcharger Vtrickle Override Value */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRD_Pos (5UL) /*!< Position of BCHGVTRICKLEOVRD field.                           */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRD_Pos) /*!< Bit mask of
                                                                            BCHGVTRICKLEOVRD field.*/                             
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGVTRICKLEOVRD field.             */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGVTRICKLEOVRD field.             */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRD_0 (0x0UL) /*!< Force bchgVtrickle to 0                                       */
  #define BCHARGER_BCHGOVERRIDE2_BCHGVTRICKLEOVRD_1 (0x1UL) /*!< Force bchgVtrickle to 1                                       */

/* BCHGRECHARGEOVRDENA @Bit 6 : Enable for Bcharger Recharge Override */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRDENA_Pos (6UL) /*!< Position of BCHGRECHARGEOVRDENA field.                     */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRDENA_Pos) /*!< Bit mask
                                                                            of BCHGRECHARGEOVRDENA field.*/                       
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGRECHARGEOVRDENA field.       */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGRECHARGEOVRDENA field.       */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                           */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRDENA_ENABLE (0x1UL) /*!< Use bchgRechargeOvrd                                  */

/* BCHGRECHARGEOVRD @Bit 7 : Bcharger Recharge Override Value */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRD_Pos (7UL) /*!< Position of BCHGRECHARGEOVRD field.                           */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRD_Pos) /*!< Bit mask of
                                                                            BCHGRECHARGEOVRD field.*/                             
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGRECHARGEOVRD field.             */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGRECHARGEOVRD field.             */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRD_0 (0x0UL) /*!< Force bchgRecharge to 0                                       */
  #define BCHARGER_BCHGOVERRIDE2_BCHGRECHARGEOVRD_1 (0x1UL) /*!< Force bchgRecharge to 1                                       */


/* BCHARGER_BCHGOVERRIDE3: Charger Input overrides */
  #define BCHARGER_BCHGOVERRIDE3_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDE3 register.                               */

/* BCHGVTERMOVRDENA @Bit 0 : Enable for Bcharger Vterm Override */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRDENA_Pos (0UL) /*!< Position of BCHGVTERMOVRDENA field.                           */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRDENA_Pos) /*!< Bit mask of
                                                                            BCHGVTERMOVRDENA field.*/                             
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGVTERMOVRDENA field.             */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGVTERMOVRDENA field.             */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                              */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRDENA_ENABLE (0x1UL) /*!< Use bchgVtermOvrd                                        */

/* BCHGVTERMOVRD @Bit 1 : Bcharger Vterm Override Value */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRD_Pos (1UL) /*!< Position of BCHGVTERMOVRD field.                                 */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRD_Pos) /*!< Bit mask of
                                                                            BCHGVTERMOVRD field.*/                                
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGVTERMOVRD field.                   */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGVTERMOVRD field.                   */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRD_0 (0x0UL) /*!< Force bchgVterm to 0                                             */
  #define BCHARGER_BCHGOVERRIDE3_BCHGVTERMOVRD_1 (0x1UL) /*!< Force bchgVterm to 1                                             */

/* BCHGITERMOVRDENA @Bit 2 : Enable for Bcharger Iterm Override */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRDENA_Pos (2UL) /*!< Position of BCHGITERMOVRDENA field.                           */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRDENA_Pos) /*!< Bit mask of
                                                                            BCHGITERMOVRDENA field.*/                             
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGITERMOVRDENA field.             */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGITERMOVRDENA field.             */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                              */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRDENA_ENABLE (0x1UL) /*!< Use bchgItermOvrd                                        */

/* BCHGITERMOVRD @Bit 3 : Bcharger Iterm Override Value */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRD_Pos (3UL) /*!< Position of BCHGITERMOVRD field.                                 */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRD_Pos) /*!< Bit mask of
                                                                            BCHGITERMOVRD field.*/                                
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGITERMOVRD field.                   */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGITERMOVRD field.                   */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRD_0 (0x0UL) /*!< Force bchgIterm to 0                                             */
  #define BCHARGER_BCHGOVERRIDE3_BCHGITERMOVRD_1 (0x1UL) /*!< Force bchgIterm to 1                                             */


/* BCHARGER_BCHGOVERRIDE4: Charger Input overrides */
  #define BCHARGER_BCHGOVERRIDE4_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDE4 register.                               */

/* BCHGILIMBATACTIVEOVRDENA @Bit 0 : Enable for Bcharger IlimbatActive Override */
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRDENA_Pos (0UL) /*!< Position of BCHGILIMBATACTIVEOVRDENA field.           */
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRDENA_Pos)
                                                                            /*!< Bit mask of BCHGILIMBATACTIVEOVRDENA field.*/    
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGILIMBATACTIVEOVRDENA
                                                                           field.*/                                               
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGILIMBATACTIVEOVRDENA
                                                                           field.*/                                               
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                      */
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRDENA_ENABLE (0x1UL) /*!< Use bchgIlimbatActiveOvrd                        */

/* BCHGILIMBATACTIVEOVRD @Bit 1 : Bcharger IlimbatActive Override Value */
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRD_Pos (1UL) /*!< Position of BCHGILIMBATACTIVEOVRD field.                 */
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRD_Pos) /*!< Bit
                                                                            mask of BCHGILIMBATACTIVEOVRD field.*/                
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGILIMBATACTIVEOVRD field.   */
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGILIMBATACTIVEOVRD field.   */
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRD_0 (0x0UL) /*!< Force bchgIlimbatActive to 0                             */
  #define BCHARGER_BCHGOVERRIDE4_BCHGILIMBATACTIVEOVRD_1 (0x1UL) /*!< Force bchgIlimbatActive to 1                             */

/* BCHGVSYSBELOWVBATOVRDENA @Bit 2 : Enable for Bcharger VsysBelowVbat Override */
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRDENA_Pos (2UL) /*!< Position of BCHGVSYSBELOWVBATOVRDENA field.           */
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRDENA_Pos)
                                                                            /*!< Bit mask of BCHGVSYSBELOWVBATOVRDENA field.*/    
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGVSYSBELOWVBATOVRDENA
                                                                           field.*/                                               
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGVSYSBELOWVBATOVRDENA
                                                                           field.*/                                               
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                      */
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRDENA_ENABLE (0x1UL) /*!< Use bgRechargeOvrd                               */

/* BCHGVSYSBELOWVBATOVRD @Bit 3 : Bcharger VsysBelowVbat Override Value */
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRD_Pos (3UL) /*!< Position of BCHGVSYSBELOWVBATOVRD field.                 */
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRD_Pos) /*!< Bit
                                                                            mask of BCHGVSYSBELOWVBATOVRD field.*/                
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRD_Min (0x0UL) /*!< Min enumerator value of BCHGVSYSBELOWVBATOVRD field.   */
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRD_Max (0x1UL) /*!< Max enumerator value of BCHGVSYSBELOWVBATOVRD field.   */
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRD_0 (0x0UL) /*!< Force bchgVsysBelowVbat to 0                             */
  #define BCHARGER_BCHGOVERRIDE4_BCHGVSYSBELOWVBATOVRD_1 (0x1UL) /*!< Force bchgVsysBelowVbat to 1                             */


/* BCHARGER_BCHGOVERRIDE5: Charger digital overrides */
  #define BCHARGER_BCHGOVERRIDE5_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDE5 register.                               */

/* CHARGERFSMENAOVRDENA @Bit 0 : Enable for Charger FSM enable Override */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRDENA_Pos (0UL) /*!< Position of CHARGERFSMENAOVRDENA field.                   */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRDENA_Pos) /*!< Bit
                                                                            mask of CHARGERFSMENAOVRDENA field.*/                 
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRDENA_Min (0x0UL) /*!< Min enumerator value of CHARGERFSMENAOVRDENA field.     */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRDENA_Max (0x1UL) /*!< Max enumerator value of CHARGERFSMENAOVRDENA field.     */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                          */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRDENA_ENABLE (0x1UL) /*!< Use chargerFsmEnaOvrd                                */

/* CHARGERFSMENAOVRD @Bit 1 : Charger FSM enable Override Value */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRD_Pos (1UL) /*!< Position of CHARGERFSMENAOVRD field.                         */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRD_Pos) /*!< Bit mask of
                                                                            CHARGERFSMENAOVRD field.*/                            
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRD_Min (0x0UL) /*!< Min enumerator value of CHARGERFSMENAOVRD field.           */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRD_Max (0x1UL) /*!< Max enumerator value of CHARGERFSMENAOVRD field.           */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRD_0 (0x0UL) /*!< Force chargerFsmEna to 0                                     */
  #define BCHARGER_BCHGOVERRIDE5_CHARGERFSMENAOVRD_1 (0x1UL) /*!< Force chargerFsmEna to 1                                     */

/* VSYSCOMPCHGOVRDENA @Bit 2 : Enable VsysComp to Charger Override */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRDENA_Pos (2UL) /*!< Position of VSYSCOMPCHGOVRDENA field.                       */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRDENA_Pos) /*!< Bit mask
                                                                            of VSYSCOMPCHGOVRDENA field.*/                        
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRDENA_Min (0x0UL) /*!< Min enumerator value of VSYSCOMPCHGOVRDENA field.         */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRDENA_Max (0x1UL) /*!< Max enumerator value of VSYSCOMPCHGOVRDENA field.         */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                            */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRDENA_ENABLE (0x1UL) /*!< Use vsysCompChgOvrd                                    */

/* VSYSCOMPCHGOVRD @Bit 3 : VsysComp to Charger Override Value */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRD_Pos (3UL) /*!< Position of VSYSCOMPCHGOVRD field.                             */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRD_Msk (0x1UL << BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRD_Pos) /*!< Bit mask of
                                                                            VSYSCOMPCHGOVRD field.*/                              
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRD_Min (0x0UL) /*!< Min enumerator value of VSYSCOMPCHGOVRD field.               */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRD_Max (0x1UL) /*!< Max enumerator value of VSYSCOMPCHGOVRD field.               */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRD_0 (0x0UL) /*!< Force vsysCompChg to 0                                         */
  #define BCHARGER_BCHGOVERRIDE5_VSYSCOMPCHGOVRD_1 (0x1UL) /*!< Force vsysCompChg to 1                                         */


/* BCHARGER_BCHGOVERRIDEIDAC0: Digital IDAC control overrides */
  #define BCHARGER_BCHGOVERRIDEIDAC0_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDEIDAC0 register.                       */

/* BCHGIDACCTRLBINOVRD @Bits 0..4 : Digital IDAC bchgIdacCtrlBin Override value */
  #define BCHARGER_BCHGOVERRIDEIDAC0_BCHGIDACCTRLBINOVRD_Pos (0UL) /*!< Position of BCHGIDACCTRLBINOVRD field.                 */
  #define BCHARGER_BCHGOVERRIDEIDAC0_BCHGIDACCTRLBINOVRD_Msk (0x1FUL << BCHARGER_BCHGOVERRIDEIDAC0_BCHGIDACCTRLBINOVRD_Pos) /*!<
                                                                            Bit mask of BCHGIDACCTRLBINOVRD field.*/              


/* BCHARGER_BCHGOVERRIDEIDAC1: Digital IDAC control overrides */
  #define BCHARGER_BCHGOVERRIDEIDAC1_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDEIDAC1 register.                       */

/* BCHGIDACCTRLTHERMOLSBOVRD @Bits 0..7 : Digital IDAC bchgIdacCtrlThermoLsb Override value */
  #define BCHARGER_BCHGOVERRIDEIDAC1_BCHGIDACCTRLTHERMOLSBOVRD_Pos (0UL) /*!< Position of BCHGIDACCTRLTHERMOLSBOVRD field.     */
  #define BCHARGER_BCHGOVERRIDEIDAC1_BCHGIDACCTRLTHERMOLSBOVRD_Msk (0xFFUL << BCHARGER_BCHGOVERRIDEIDAC1_BCHGIDACCTRLTHERMOLSBOVRD_Pos)
                                                                            /*!< Bit mask of BCHGIDACCTRLTHERMOLSBOVRD field.*/   


/* BCHARGER_BCHGOVERRIDEIDAC2: Digital IDAC control overrides */
  #define BCHARGER_BCHGOVERRIDEIDAC2_ResetValue (0x00UL) /*!< Reset value of BCHGOVERRIDEIDAC2 register.                       */

/* BCHGIDACCTRLTHERMOMSBOVRD @Bits 0..3 : Digital IDAC bchgIdacCtrlThermoMsb Override value */
  #define BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLTHERMOMSBOVRD_Pos (0UL) /*!< Position of BCHGIDACCTRLTHERMOMSBOVRD field.     */
  #define BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLTHERMOMSBOVRD_Msk (0xFUL << BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLTHERMOMSBOVRD_Pos)
                                                                            /*!< Bit mask of BCHGIDACCTRLTHERMOMSBOVRD field.*/   

/* BCHGIDACCTRLOVRDENA @Bit 4 : Digital IDAC Override. BCHG_OVERRIDE_IDAC0 and BCHG_OVERRIDE_IDAC1 should be define before
                                enabling override. */                                                                             
                                                                                                                                  
  #define BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLOVRDENA_Pos (4UL) /*!< Position of BCHGIDACCTRLOVRDENA field.                 */
  #define BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLOVRDENA_Msk (0x1UL << BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLOVRDENA_Pos) /*!<
                                                                            Bit mask of BCHGIDACCTRLOVRDENA field.*/              
  #define BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLOVRDENA_Min (0x0UL) /*!< Min enumerator value of BCHGIDACCTRLOVRDENA field.   */
  #define BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLOVRDENA_Max (0x1UL) /*!< Max enumerator value of BCHGIDACCTRLOVRDENA field.   */
  #define BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                       */
  #define BCHARGER_BCHGOVERRIDEIDAC2_BCHGIDACCTRLOVRDENA_ENABLE (0x1UL) /*!< Use bchgIdacCtrl override values                  */


/* BCHARGER_NTCOVERRIDE: Ntc comparator output overrides */
  #define BCHARGER_NTCOVERRIDE_ResetValue (0x00UL)   /*!< Reset value of NTCOVERRIDE register.                                 */

/* NTCCOLDOVRDENA @Bit 0 : Enable for Ntc Cold Override */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRDENA_Pos (0UL) /*!< Position of NTCCOLDOVRDENA field.                                 */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRDENA_Msk (0x1UL << BCHARGER_NTCOVERRIDE_NTCCOLDOVRDENA_Pos) /*!< Bit mask of
                                                                            NTCCOLDOVRDENA field.*/                               
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRDENA_Min (0x0UL) /*!< Min enumerator value of NTCCOLDOVRDENA field.                   */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRDENA_Max (0x1UL) /*!< Max enumerator value of NTCCOLDOVRDENA field.                   */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                                  */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRDENA_ENABLE (0x1UL) /*!< Use ntcColdOvrd                                              */

/* NTCCOLDOVRD @Bit 1 : Ntc Cold Override Value */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRD_Pos (1UL) /*!< Position of NTCCOLDOVRD field.                                       */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRD_Msk (0x1UL << BCHARGER_NTCOVERRIDE_NTCCOLDOVRD_Pos) /*!< Bit mask of NTCCOLDOVRD
                                                                            field.*/                                              
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRD_Min (0x0UL) /*!< Min enumerator value of NTCCOLDOVRD field.                         */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRD_Max (0x1UL) /*!< Max enumerator value of NTCCOLDOVRD field.                         */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRD_0 (0x0UL) /*!< Force ntcCold to 0                                                   */
  #define BCHARGER_NTCOVERRIDE_NTCCOLDOVRD_1 (0x1UL) /*!< Force ntcCold to 1                                                   */

/* NTCCOOLOVRDENA @Bit 2 : Enable for Ntc Cool Override */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRDENA_Pos (2UL) /*!< Position of NTCCOOLOVRDENA field.                                 */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRDENA_Msk (0x1UL << BCHARGER_NTCOVERRIDE_NTCCOOLOVRDENA_Pos) /*!< Bit mask of
                                                                            NTCCOOLOVRDENA field.*/                               
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRDENA_Min (0x0UL) /*!< Min enumerator value of NTCCOOLOVRDENA field.                   */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRDENA_Max (0x1UL) /*!< Max enumerator value of NTCCOOLOVRDENA field.                   */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                                  */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRDENA_ENABLE (0x1UL) /*!< Use ntcCoolOvrd                                              */

/* NTCCOOLOVRD @Bit 3 : Ntc Cold Override Value */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRD_Pos (3UL) /*!< Position of NTCCOOLOVRD field.                                       */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRD_Msk (0x1UL << BCHARGER_NTCOVERRIDE_NTCCOOLOVRD_Pos) /*!< Bit mask of NTCCOOLOVRD
                                                                            field.*/                                              
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRD_Min (0x0UL) /*!< Min enumerator value of NTCCOOLOVRD field.                         */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRD_Max (0x1UL) /*!< Max enumerator value of NTCCOOLOVRD field.                         */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRD_0 (0x0UL) /*!< Force ntcCool to 0                                                   */
  #define BCHARGER_NTCOVERRIDE_NTCCOOLOVRD_1 (0x1UL) /*!< Force ntcCool to 1                                                   */

/* NTCWARMOVRDENA @Bit 4 : Enable for Ntc Warm Override */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRDENA_Pos (4UL) /*!< Position of NTCWARMOVRDENA field.                                 */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRDENA_Msk (0x1UL << BCHARGER_NTCOVERRIDE_NTCWARMOVRDENA_Pos) /*!< Bit mask of
                                                                            NTCWARMOVRDENA field.*/                               
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRDENA_Min (0x0UL) /*!< Min enumerator value of NTCWARMOVRDENA field.                   */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRDENA_Max (0x1UL) /*!< Max enumerator value of NTCWARMOVRDENA field.                   */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                                  */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRDENA_ENABLE (0x1UL) /*!< Use ntcWarmOvrd                                              */

/* NTCWARMOVRD @Bit 5 : Ntc Hot Override Value */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRD_Pos (5UL) /*!< Position of NTCWARMOVRD field.                                       */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRD_Msk (0x1UL << BCHARGER_NTCOVERRIDE_NTCWARMOVRD_Pos) /*!< Bit mask of NTCWARMOVRD
                                                                            field.*/                                              
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRD_Min (0x0UL) /*!< Min enumerator value of NTCWARMOVRD field.                         */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRD_Max (0x1UL) /*!< Max enumerator value of NTCWARMOVRD field.                         */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRD_0 (0x0UL) /*!< Force ntcWarm to 0                                                   */
  #define BCHARGER_NTCOVERRIDE_NTCWARMOVRD_1 (0x1UL) /*!< Force ntcWarm to 1                                                   */

/* NTCHOTOVRDENA @Bit 6 : Enable for Ntc Hot Override */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRDENA_Pos (6UL) /*!< Position of NTCHOTOVRDENA field.                                   */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRDENA_Msk (0x1UL << BCHARGER_NTCOVERRIDE_NTCHOTOVRDENA_Pos) /*!< Bit mask of
                                                                            NTCHOTOVRDENA field.*/                                
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRDENA_Min (0x0UL) /*!< Min enumerator value of NTCHOTOVRDENA field.                     */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRDENA_Max (0x1UL) /*!< Max enumerator value of NTCHOTOVRDENA field.                     */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                                   */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRDENA_ENABLE (0x1UL) /*!< Use ntcHotOvrd                                                */

/* NTCHOTOVRD @Bit 7 : Ntc Hot Override Value */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRD_Pos (7UL)  /*!< Position of NTCHOTOVRD field.                                        */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRD_Msk (0x1UL << BCHARGER_NTCOVERRIDE_NTCHOTOVRD_Pos) /*!< Bit mask of NTCHOTOVRD field.*/
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRD_Min (0x0UL) /*!< Min enumerator value of NTCHOTOVRD field.                           */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRD_Max (0x1UL) /*!< Max enumerator value of NTCHOTOVRD field.                           */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRD_0 (0x0UL)  /*!< Force ntcHot to 0                                                    */
  #define BCHARGER_NTCOVERRIDE_NTCHOTOVRD_1 (0x1UL)  /*!< Force ntcHot to 1                                                    */


/* BCHARGER_DIETEMPOVERRIDE: DieTemp comparator output override */
  #define BCHARGER_DIETEMPOVERRIDE_ResetValue (0x00UL) /*!< Reset value of DIETEMPOVERRIDE register.                           */

/* DIETEMPHIGHOVRDENA @Bit 0 : Enable for Die Temp High Override */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRDENA_Pos (0UL) /*!< Position of DIETEMPHIGHOVRDENA field.                     */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRDENA_Msk (0x1UL << BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRDENA_Pos) /*!< Bit
                                                                            mask of DIETEMPHIGHOVRDENA field.*/                   
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRDENA_Min (0x0UL) /*!< Min enumerator value of DIETEMPHIGHOVRDENA field.       */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRDENA_Max (0x1UL) /*!< Max enumerator value of DIETEMPHIGHOVRDENA field.       */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                          */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRDENA_ENABLE (0x1UL) /*!< Use dieTempHighOvrd                                  */

/* DIETEMPHIGHOVRD @Bit 1 : Die Temp High Override Value */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRD_Pos (1UL) /*!< Position of DIETEMPHIGHOVRD field.                           */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRD_Msk (0x1UL << BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRD_Pos) /*!< Bit mask of
                                                                            DIETEMPHIGHOVRD field.*/                              
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRD_Min (0x0UL) /*!< Min enumerator value of DIETEMPHIGHOVRD field.             */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRD_Max (0x1UL) /*!< Max enumerator value of DIETEMPHIGHOVRD field.             */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRD_0 (0x0UL) /*!< Force dieTempHigh to 0                                       */
  #define BCHARGER_DIETEMPOVERRIDE_DIETEMPHIGHOVRD_1 (0x1UL) /*!< Force dieTempHigh to 1                                       */


/* BCHARGER_MEASOVERRIDE: Single measurement ack override */
  #define BCHARGER_MEASOVERRIDE_ResetValue (0x00UL)  /*!< Reset value of MEASOVERRIDE register.                                */

/* ACKNTCMEASOVRDENA @Bit 0 : Enable for Ntc acknowledge Override */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRDENA_Pos (0UL) /*!< Position of ACKNTCMEASOVRDENA field.                          */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRDENA_Msk (0x1UL << BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRDENA_Pos) /*!< Bit mask of
                                                                            ACKNTCMEASOVRDENA field.*/                            
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRDENA_Min (0x0UL) /*!< Min enumerator value of ACKNTCMEASOVRDENA field.            */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRDENA_Max (0x1UL) /*!< Max enumerator value of ACKNTCMEASOVRDENA field.            */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                              */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRDENA_ENABLE (0x1UL) /*!< Use ackNtcMeasOvrd                                       */

/* ACKNTCMEASOVRD @Bit 1 : Ntc acknowledge Override Value */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRD_Pos (1UL) /*!< Position of ACKNTCMEASOVRD field.                                */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRD_Msk (0x1UL << BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRD_Pos) /*!< Bit mask of
                                                                            ACKNTCMEASOVRD field.*/                               
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRD_Min (0x0UL) /*!< Min enumerator value of ACKNTCMEASOVRD field.                  */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRD_Max (0x1UL) /*!< Max enumerator value of ACKNTCMEASOVRD field.                  */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRD_0 (0x0UL) /*!< Force ackNtcMeas to 0                                            */
  #define BCHARGER_MEASOVERRIDE_ACKNTCMEASOVRD_1 (0x1UL) /*!< Force ackNtcMeas to 1                                            */

/* ACKDIEMEASOVRDENA @Bit 2 : Enable for DieTemp acknowledge Override */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRDENA_Pos (2UL) /*!< Position of ACKDIEMEASOVRDENA field.                          */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRDENA_Msk (0x1UL << BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRDENA_Pos) /*!< Bit mask of
                                                                            ACKDIEMEASOVRDENA field.*/                            
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRDENA_Min (0x0UL) /*!< Min enumerator value of ACKDIEMEASOVRDENA field.            */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRDENA_Max (0x1UL) /*!< Max enumerator value of ACKDIEMEASOVRDENA field.            */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRDENA_NOEFFECT (0x0UL) /*!< No effect                                              */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRDENA_ENABLE (0x1UL) /*!< Use ackDieMeasOvrd                                       */

/* ACKDIEMEASOVRD @Bit 3 : DieTemp acknowledge Override Value */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRD_Pos (3UL) /*!< Position of ACKDIEMEASOVRD field.                                */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRD_Msk (0x1UL << BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRD_Pos) /*!< Bit mask of
                                                                            ACKDIEMEASOVRD field.*/                               
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRD_Min (0x0UL) /*!< Min enumerator value of ACKDIEMEASOVRD field.                  */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRD_Max (0x1UL) /*!< Max enumerator value of ACKDIEMEASOVRD field.                  */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRD_0 (0x0UL) /*!< Force ackDieMeas to 0                                            */
  #define BCHARGER_MEASOVERRIDE_ACKDIEMEASOVRD_1 (0x1UL) /*!< Force ackDieMeas to 1                                            */


/* BCHARGER_BCHGATE: BCHARGER Analog Testbus Enable */
  #define BCHARGER_BCHGATE_ResetValue (0x00UL)       /*!< Reset value of BCHGATE register.                                     */

/* BCHGATE @Bits 0..4 : ATE_BCHARGER_VAOD */
  #define BCHARGER_BCHGATE_BCHGATE_Pos (0UL)         /*!< Position of BCHGATE field.                                           */
  #define BCHARGER_BCHGATE_BCHGATE_Msk (0x1FUL << BCHARGER_BCHGATE_BCHGATE_Pos) /*!< Bit mask of BCHGATE field.                */
  #define BCHARGER_BCHGATE_BCHGATE_Min (0x0UL)       /*!< Min enumerator value of BCHGATE field.                               */
  #define BCHARGER_BCHGATE_BCHGATE_Max (0xFUL)       /*!< Max enumerator value of BCHGATE field.                               */
  #define BCHARGER_BCHGATE_BCHGATE_SEL0 (0x00UL)     /*!< (ATB0, ATB1) = ( HiZ, HiZ )                                          */
  #define BCHARGER_BCHGATE_BCHGATE_SEL1 (0x01UL)     /*!< (ATB0, ATB1) = ( DROPOUT_SNS, VBAT_INT )                             */
  #define BCHARGER_BCHGATE_BCHGATE_SEL2 (0x02UL)     /*!< (ATB0, ATB1) = ( VICHG, VREF_1V5_VAOA )                              */
  #define BCHARGER_BCHGATE_BCHGATE_SEL3 (0x03UL)     /*!< (ATB0, ATB1) = ( BCHARGER_ICOPIER_VFB, VBAT )                        */
  #define BCHARGER_BCHGATE_BCHGATE_SEL4 (0x04UL)     /*!< (ATB0, ATB1) = ( BCHARGER_IGAUGE_OUT, N.C )                          */
  #define BCHARGER_BCHGATE_BCHGATE_SEL5 (0x05UL)     /*!< (ATB0, ATB1) = ( Gate of M1, HiZ )                                   */
  #define BCHARGER_BCHGATE_BCHGATE_SEL6 (0x06UL)     /*!< (ATB0, ATB1) = ( 5uA P-type, HiZ )                                   */
  #define BCHARGER_BCHGATE_BCHGATE_SEL7 (0x07UL)     /*!< (ATB0, ATB1) = ( VTRICKLE_REF, VBGAP )                               */
  #define BCHARGER_BCHGATE_BCHGATE_SEL8 (0x08UL)     /*!< (ATB0, ATB1) = ( N.C , N.C)                                          */
  #define BCHARGER_BCHGATE_BCHGATE_SEL9 (0x09UL)     /*!< (ATB0, ATB1) = ( RECHARGE_REF, VBGAP)                                */
  #define BCHARGER_BCHGATE_BCHGATE_SEL10 (0x0AUL)    /*!< (ATB0, ATB1) = ( VICHG, ITERM_REF)                                   */
  #define BCHARGER_BCHGATE_BCHGATE_SEL11 (0x0BUL)    /*!< (ATB0, ATB1) = ( VTERM_TRIM, VTERM_REF)                              */
  #define BCHARGER_BCHGATE_BCHGATE_SEL12 (0x0CUL)    /*!< (ATB0, ATB1) = ( N.C , N.C)                                          */
  #define BCHARGER_BCHGATE_BCHGATE_SEL13 (0x0DUL)    /*!< (ATB0, ATB1) = ( N.C , N.C)                                          */
  #define BCHARGER_BCHGATE_BCHGATE_SEL14 (0x0EUL)    /*!< (ATB0, ATB1) = ( VSYS_INT, VBAT_INT)                                 */
  #define BCHARGER_BCHGATE_BCHGATE_SEL15 (0x0FUL)    /*!< (ATB0, ATB1) = ( N.C , N.C)                                          */


/* BCHARGER_BCHGDTE: BCHARGER Digital Testbus Enable */
  #define BCHARGER_BCHGDTE_ResetValue (0x00UL)       /*!< Reset value of BCHGDTE register.                                     */

/* BCHGDTE @Bit 0 : DTE_BCHARGER_VAOD */
  #define BCHARGER_BCHGDTE_BCHGDTE_Pos (0UL)         /*!< Position of BCHGDTE field.                                           */
  #define BCHARGER_BCHGDTE_BCHGDTE_Msk (0x1UL << BCHARGER_BCHGDTE_BCHGDTE_Pos) /*!< Bit mask of BCHGDTE field.                 */
  #define BCHARGER_BCHGDTE_BCHGDTE_Min (0x0UL)       /*!< Min enumerator value of BCHGDTE field.                               */
  #define BCHARGER_BCHGDTE_BCHGDTE_Max (0x1UL)       /*!< Max enumerator value of BCHGDTE field.                               */
  #define BCHARGER_BCHGDTE_BCHGDTE_SEL0 (0x0UL)      /*!< disabled(DTB = 0)                                                    */
  #define BCHARGER_BCHGDTE_BCHGDTE_SEL1 (0x1UL)      /*!< FG counter input                                                     */


/* BCHARGER_BCHGDTB: BCHARGER Digital Testbus */
  #define BCHARGER_BCHGDTB_ResetValue (0x00UL)       /*!< Reset value of BCHGDTB register.                                     */

/* BCHGDTB @Bit 0 : DTB_BCHARGER_VAOD */
  #define BCHARGER_BCHGDTB_BCHGDTB_Pos (0UL)         /*!< Position of BCHGDTB field.                                           */
  #define BCHARGER_BCHGDTB_BCHGDTB_Msk (0x1UL << BCHARGER_BCHGDTB_BCHGDTB_Pos) /*!< Bit mask of BCHGDTB field.                 */


/* BCHARGER_BCHGSTATUS: BCHARGER Status */
  #define BCHARGER_BCHGSTATUS_ResetValue (0x00UL)    /*!< Reset value of BCHGSTATUS register.                                  */

/* BCHGVBATLOW @Bit 0 : Battery voltage. BCHARGER_VBATLOW_VAOD 0: VBAT higher than Vbatlow threshold 1: VBAT lower than Vbatlow
                        threshold */                                                                                              
                                                                                                                                  
  #define BCHARGER_BCHGSTATUS_BCHGVBATLOW_Pos (0UL)  /*!< Position of BCHGVBATLOW field.                                       */
  #define BCHARGER_BCHGSTATUS_BCHGVBATLOW_Msk (0x1UL << BCHARGER_BCHGSTATUS_BCHGVBATLOW_Pos) /*!< Bit mask of BCHGVBATLOW
                                                                            field.*/                                              

/* BCHGVTRICKLE @Bit 1 : Battery voltage. BCHARGER_VTRICKLE_VAOD 0: VBAT higher than Vtrickle threshold 1: VBAT lower than
                         Vtrickle threshold */                                                                                    
                                                                                                                                  
  #define BCHARGER_BCHGSTATUS_BCHGVTRICKLE_Pos (1UL) /*!< Position of BCHGVTRICKLE field.                                      */
  #define BCHARGER_BCHGSTATUS_BCHGVTRICKLE_Msk (0x1UL << BCHARGER_BCHGSTATUS_BCHGVTRICKLE_Pos) /*!< Bit mask of BCHGVTRICKLE
                                                                            field.*/                                              

/* BCHGRECHARGE @Bit 2 : Battery voltage. BCHARGER_RECHARGE_VAOD 0: VBAT higher than Recharge threshold 1: VBAT lower than
                         Recharge threshold */                                                                                    
                                                                                                                                  
  #define BCHARGER_BCHGSTATUS_BCHGRECHARGE_Pos (2UL) /*!< Position of BCHGRECHARGE field.                                      */
  #define BCHARGER_BCHGSTATUS_BCHGRECHARGE_Msk (0x1UL << BCHARGER_BCHGSTATUS_BCHGRECHARGE_Pos) /*!< Bit mask of BCHGRECHARGE
                                                                            field.*/                                              

/* BCHGVTERM @Bit 3 : Charger status. BCHARGER_VTERM_VAOD 0: VBAT lower than Vterm threshold (Constant Current) 1: VBAT equal
                      with Vterm threshold (Constant Voltage) */                                                                  
                                                                                                                                  
  #define BCHARGER_BCHGSTATUS_BCHGVTERM_Pos (3UL)    /*!< Position of BCHGVTERM field.                                         */
  #define BCHARGER_BCHGSTATUS_BCHGVTERM_Msk (0x1UL << BCHARGER_BCHGSTATUS_BCHGVTERM_Pos) /*!< Bit mask of BCHGVTERM field.     */

/* BCHGDROPOUT @Bit 4 : Charger status. BCHARGER_DROPOUT_VAOD 0: (VSYS-VBAT) higher than 100mV 1: (VSYS-VBAT) lower than 100mV */
  #define BCHARGER_BCHGSTATUS_BCHGDROPOUT_Pos (4UL)  /*!< Position of BCHGDROPOUT field.                                       */
  #define BCHARGER_BCHGSTATUS_BCHGDROPOUT_Msk (0x1UL << BCHARGER_BCHGSTATUS_BCHGDROPOUT_Pos) /*!< Bit mask of BCHGDROPOUT
                                                                            field.*/                                              

/* BCHGVSYSBELOWVBAT @Bit 5 : Charger status. BCHARGER_VSYS_BELOW_VBAT_VAOD 0: VBAT higher than VSYS 1: VBAT lower than VSYS */
  #define BCHARGER_BCHGSTATUS_BCHGVSYSBELOWVBAT_Pos (5UL) /*!< Position of BCHGVSYSBELOWVBAT field.                            */
  #define BCHARGER_BCHGSTATUS_BCHGVSYSBELOWVBAT_Msk (0x1UL << BCHARGER_BCHGSTATUS_BCHGVSYSBELOWVBAT_Pos) /*!< Bit mask of
                                                                            BCHGVSYSBELOWVBAT field.*/                            

/* BCHGICHARGING @Bit 6 : Charger status. BCHARGER_ICHARGING_VAOD 0: Other mode 1: Current mode, trickle or fast */
  #define BCHARGER_BCHGSTATUS_BCHGICHARGING_Pos (6UL) /*!< Position of BCHGICHARGING field.                                    */
  #define BCHARGER_BCHGSTATUS_BCHGICHARGING_Msk (0x1UL << BCHARGER_BCHGSTATUS_BCHGICHARGING_Pos) /*!< Bit mask of BCHGICHARGING
                                                                            field.*/                                              

/* BCHGITERM @Bit 7 : Charger status. BCHARGER_ITERM_VAOD 0: Current above Iterm threshold 1: Current below Iterm threshold */
  #define BCHARGER_BCHGSTATUS_BCHGITERM_Pos (7UL)    /*!< Position of BCHGITERM field.                                         */
  #define BCHARGER_BCHGSTATUS_BCHGITERM_Msk (0x1UL << BCHARGER_BCHGSTATUS_BCHGITERM_Pos) /*!< Bit mask of BCHGITERM field.     */


/* BCHARGER_BCHGILIMSTATUS: BCHARGER Ilim Status */
  #define BCHARGER_BCHGILIMSTATUS_ResetValue (0x00UL) /*!< Reset value of BCHGILIMSTATUS register.                             */

/* BCHGILIMBATACTIVE @Bit 0 : BCHARGER Ilimiter active */
  #define BCHARGER_BCHGILIMSTATUS_BCHGILIMBATACTIVE_Pos (0UL) /*!< Position of BCHGILIMBATACTIVE field.                        */
  #define BCHARGER_BCHGILIMSTATUS_BCHGILIMBATACTIVE_Msk (0x1UL << BCHARGER_BCHGILIMSTATUS_BCHGILIMBATACTIVE_Pos) /*!< Bit mask
                                                                            of BCHGILIMBATACTIVE field.*/                         


/* BCHARGER_BCHGSPARESTATUS: BCHARGER Spare Status */
  #define BCHARGER_BCHGSPARESTATUS_ResetValue (0x00UL) /*!< Reset value of BCHGSPARESTATUS register.                           */

/* BCHGSPARESTATUS @Bits 0..3 : BCHARGER_SPARE_STATUS_VAOD */
  #define BCHARGER_BCHGSPARESTATUS_BCHGSPARESTATUS_Pos (0UL) /*!< Position of BCHGSPARESTATUS field.                           */
  #define BCHARGER_BCHGSPARESTATUS_BCHGSPARESTATUS_Msk (0xFUL << BCHARGER_BCHGSPARESTATUS_BCHGSPARESTATUS_Pos) /*!< Bit mask of
                                                                            BCHGSPARESTATUS field.*/                              


/* BCHARGER_BCHGIDACCTRLSTATUS0: Digital IDAC control Status */
  #define BCHARGER_BCHGIDACCTRLSTATUS0_ResetValue (0x00UL) /*!< Reset value of BCHGIDACCTRLSTATUS0 register.                   */

/* BCHGIDACCTRLTHERMOMSB @Bits 0..3 : MSB part of BCHARGER_IDAC_CTRL_THRMTR */
  #define BCHARGER_BCHGIDACCTRLSTATUS0_BCHGIDACCTRLTHERMOMSB_Pos (0UL) /*!< Position of BCHGIDACCTRLTHERMOMSB field.           */
  #define BCHARGER_BCHGIDACCTRLSTATUS0_BCHGIDACCTRLTHERMOMSB_Msk (0xFUL << BCHARGER_BCHGIDACCTRLSTATUS0_BCHGIDACCTRLTHERMOMSB_Pos)
                                                                            /*!< Bit mask of BCHGIDACCTRLTHERMOMSB field.*/       


/* BCHARGER_BCHGIDACCTRLSTATUS1: Digital IDAC control Status */
  #define BCHARGER_BCHGIDACCTRLSTATUS1_ResetValue (0x00UL) /*!< Reset value of BCHGIDACCTRLSTATUS1 register.                   */

/* BCHGIDACCTRLTHERMOLSB @Bits 0..7 : LSB part of BCHARGER_IDAC_CTRL_THRMTR */
  #define BCHARGER_BCHGIDACCTRLSTATUS1_BCHGIDACCTRLTHERMOLSB_Pos (0UL) /*!< Position of BCHGIDACCTRLTHERMOLSB field.           */
  #define BCHARGER_BCHGIDACCTRLSTATUS1_BCHGIDACCTRLTHERMOLSB_Msk (0xFFUL << BCHARGER_BCHGIDACCTRLSTATUS1_BCHGIDACCTRLTHERMOLSB_Pos)
                                                                            /*!< Bit mask of BCHGIDACCTRLTHERMOLSB field.*/       


/* BCHARGER_BCHGIDACCTRLSTATUS2: Digital IDAC control Status */
  #define BCHARGER_BCHGIDACCTRLSTATUS2_ResetValue (0x00UL) /*!< Reset value of BCHGIDACCTRLSTATUS2 register.                   */

/* BCHGIDACCTRLBIN @Bits 0..4 : BCHARGER_IDAC_CTRL_BIN */
  #define BCHARGER_BCHGIDACCTRLSTATUS2_BCHGIDACCTRLBIN_Pos (0UL) /*!< Position of BCHGIDACCTRLBIN field.                       */
  #define BCHARGER_BCHGIDACCTRLSTATUS2_BCHGIDACCTRLBIN_Msk (0x1FUL << BCHARGER_BCHGIDACCTRLSTATUS2_BCHGIDACCTRLBIN_Pos) /*!< Bit
                                                                            mask of BCHGIDACCTRLBIN field.*/                      


/* BCHARGER_NTCSTATUS: Ntc Comparator Status */
  #define BCHARGER_NTCSTATUS_ResetValue (0x00UL)     /*!< Reset value of NTCSTATUS register.                                   */

/* NTCCOLD @Bit 0 : Ntc Cold */
  #define BCHARGER_NTCSTATUS_NTCCOLD_Pos (0UL)       /*!< Position of NTCCOLD field.                                           */
  #define BCHARGER_NTCSTATUS_NTCCOLD_Msk (0x1UL << BCHARGER_NTCSTATUS_NTCCOLD_Pos) /*!< Bit mask of NTCCOLD field.             */

/* NTCCOOL @Bit 1 : Ntc Cool */
  #define BCHARGER_NTCSTATUS_NTCCOOL_Pos (1UL)       /*!< Position of NTCCOOL field.                                           */
  #define BCHARGER_NTCSTATUS_NTCCOOL_Msk (0x1UL << BCHARGER_NTCSTATUS_NTCCOOL_Pos) /*!< Bit mask of NTCCOOL field.             */

/* NTCWARM @Bit 2 : Ntc Warm */
  #define BCHARGER_NTCSTATUS_NTCWARM_Pos (2UL)       /*!< Position of NTCWARM field.                                           */
  #define BCHARGER_NTCSTATUS_NTCWARM_Msk (0x1UL << BCHARGER_NTCSTATUS_NTCWARM_Pos) /*!< Bit mask of NTCWARM field.             */

/* NTCHOT @Bit 3 : Ntc Hot */
  #define BCHARGER_NTCSTATUS_NTCHOT_Pos (3UL)        /*!< Position of NTCHOT field.                                            */
  #define BCHARGER_NTCSTATUS_NTCHOT_Msk (0x1UL << BCHARGER_NTCSTATUS_NTCHOT_Pos) /*!< Bit mask of NTCHOT field.                */


/* BCHARGER_DIETEMPSTATUS: DieTemp Comparator Status */
  #define BCHARGER_DIETEMPSTATUS_ResetValue (0x00UL) /*!< Reset value of DIETEMPSTATUS register.                               */

/* DIETEMPHIGH @Bit 0 : DieTemp High */
  #define BCHARGER_DIETEMPSTATUS_DIETEMPHIGH_Pos (0UL) /*!< Position of DIETEMPHIGH field.                                     */
  #define BCHARGER_DIETEMPSTATUS_DIETEMPHIGH_Msk (0x1UL << BCHARGER_DIETEMPSTATUS_DIETEMPHIGH_Pos) /*!< Bit mask of DIETEMPHIGH
                                                                            field.*/                                              


/* BCHARGER_BCHGCHARGESTATUS: Charging Status */
  #define BCHARGER_BCHGCHARGESTATUS_ResetValue (0x00UL) /*!< Reset value of BCHGCHARGESTATUS register.                         */

/* BATTERYDETECTED @Bit 0 : Battery is connected */
  #define BCHARGER_BCHGCHARGESTATUS_BATTERYDETECTED_Pos (0UL) /*!< Position of BATTERYDETECTED field.                          */
  #define BCHARGER_BCHGCHARGESTATUS_BATTERYDETECTED_Msk (0x1UL << BCHARGER_BCHGCHARGESTATUS_BATTERYDETECTED_Pos) /*!< Bit mask
                                                                            of BATTERYDETECTED field.*/                           

/* COMPLETED @Bit 1 : Charging completed (Battery Full) */
  #define BCHARGER_BCHGCHARGESTATUS_COMPLETED_Pos (1UL) /*!< Position of COMPLETED field.                                      */
  #define BCHARGER_BCHGCHARGESTATUS_COMPLETED_Msk (0x1UL << BCHARGER_BCHGCHARGESTATUS_COMPLETED_Pos) /*!< Bit mask of COMPLETED
                                                                            field.*/                                              

/* TRICKLECHARGE @Bit 2 : Trickle charge */
  #define BCHARGER_BCHGCHARGESTATUS_TRICKLECHARGE_Pos (2UL) /*!< Position of TRICKLECHARGE field.                              */
  #define BCHARGER_BCHGCHARGESTATUS_TRICKLECHARGE_Msk (0x1UL << BCHARGER_BCHGCHARGESTATUS_TRICKLECHARGE_Pos) /*!< Bit mask of
                                                                            TRICKLECHARGE field.*/                                

/* CONSTANTCURRENT @Bit 3 : Constant Current charging */
  #define BCHARGER_BCHGCHARGESTATUS_CONSTANTCURRENT_Pos (3UL) /*!< Position of CONSTANTCURRENT field.                          */
  #define BCHARGER_BCHGCHARGESTATUS_CONSTANTCURRENT_Msk (0x1UL << BCHARGER_BCHGCHARGESTATUS_CONSTANTCURRENT_Pos) /*!< Bit mask
                                                                            of CONSTANTCURRENT field.*/                           

/* CONSTANTVOLTAGE @Bit 4 : Constant Voltage charging */
  #define BCHARGER_BCHGCHARGESTATUS_CONSTANTVOLTAGE_Pos (4UL) /*!< Position of CONSTANTVOLTAGE field.                          */
  #define BCHARGER_BCHGCHARGESTATUS_CONSTANTVOLTAGE_Msk (0x1UL << BCHARGER_BCHGCHARGESTATUS_CONSTANTVOLTAGE_Pos) /*!< Bit mask
                                                                            of CONSTANTVOLTAGE field.*/                           

/* RECHARGE @Bit 5 : Battery re-charge is needed */
  #define BCHARGER_BCHGCHARGESTATUS_RECHARGE_Pos (5UL) /*!< Position of RECHARGE field.                                        */
  #define BCHARGER_BCHGCHARGESTATUS_RECHARGE_Msk (0x1UL << BCHARGER_BCHGCHARGESTATUS_RECHARGE_Pos) /*!< Bit mask of RECHARGE
                                                                            field.*/                                              

/* DIETEMPHIGHCHGPAUSED @Bit 6 : Charging stopped due Die Temp high. */
  #define BCHARGER_BCHGCHARGESTATUS_DIETEMPHIGHCHGPAUSED_Pos (6UL) /*!< Position of DIETEMPHIGHCHGPAUSED field.                */
  #define BCHARGER_BCHGCHARGESTATUS_DIETEMPHIGHCHGPAUSED_Msk (0x1UL << BCHARGER_BCHGCHARGESTATUS_DIETEMPHIGHCHGPAUSED_Pos) /*!<
                                                                            Bit mask of DIETEMPHIGHCHGPAUSED field.*/             

/* SUPPLEMENTACTIVE @Bit 7 : Supplement Mode Active */
  #define BCHARGER_BCHGCHARGESTATUS_SUPPLEMENTACTIVE_Pos (7UL) /*!< Position of SUPPLEMENTACTIVE field.                        */
  #define BCHARGER_BCHGCHARGESTATUS_SUPPLEMENTACTIVE_Msk (0x1UL << BCHARGER_BCHGCHARGESTATUS_SUPPLEMENTACTIVE_Pos) /*!< Bit mask
                                                                            of SUPPLEMENTACTIVE field.*/                          


/* BCHARGER_BCHGDBGSTATUS: Charger-FSM current state */
  #define BCHARGER_BCHGDBGSTATUS_ResetValue (0x00UL) /*!< Reset value of BCHGDBGSTATUS register.                               */

/* CHARGERFSMSTATE @Bits 0..4 : Current state of Charger Fsm */
  #define BCHARGER_BCHGDBGSTATUS_CHARGERFSMSTATE_Pos (0UL) /*!< Position of CHARGERFSMSTATE field.                             */
  #define BCHARGER_BCHGDBGSTATUS_CHARGERFSMSTATE_Msk (0x1FUL << BCHARGER_BCHGDBGSTATUS_CHARGERFSMSTATE_Pos) /*!< Bit mask of
                                                                            CHARGERFSMSTATE field.*/                              


/* BCHARGER_BCHGERRREASON: Charger-FSM Error. Latched error reasons. Cleared with TASKS_CLEAR_CHG_ERR */
  #define BCHARGER_BCHGERRREASON_ResetValue (0x00UL) /*!< Reset value of BCHGERRREASON register.                               */

/* NTCSENSORERROR @Bit 0 : Ntc sensor error */
  #define BCHARGER_BCHGERRREASON_NTCSENSORERROR_Pos (0UL) /*!< Position of NTCSENSORERROR field.                               */
  #define BCHARGER_BCHGERRREASON_NTCSENSORERROR_Msk (0x1UL << BCHARGER_BCHGERRREASON_NTCSENSORERROR_Pos) /*!< Bit mask of
                                                                            NTCSENSORERROR field.*/                               

/* VBATSENSORERROR @Bit 1 : Vbat sensor error */
  #define BCHARGER_BCHGERRREASON_VBATSENSORERROR_Pos (1UL) /*!< Position of VBATSENSORERROR field.                             */
  #define BCHARGER_BCHGERRREASON_VBATSENSORERROR_Msk (0x1UL << BCHARGER_BCHGERRREASON_VBATSENSORERROR_Pos) /*!< Bit mask of
                                                                            VBATSENSORERROR field.*/                              

/* VBATLOW @Bit 2 : VbatLow error */
  #define BCHARGER_BCHGERRREASON_VBATLOW_Pos (2UL)   /*!< Position of VBATLOW field.                                           */
  #define BCHARGER_BCHGERRREASON_VBATLOW_Msk (0x1UL << BCHARGER_BCHGERRREASON_VBATLOW_Pos) /*!< Bit mask of VBATLOW field.     */

/* VTRICKLE @Bit 3 : Vtrickle error */
  #define BCHARGER_BCHGERRREASON_VTRICKLE_Pos (3UL)  /*!< Position of VTRICKLE field.                                          */
  #define BCHARGER_BCHGERRREASON_VTRICKLE_Msk (0x1UL << BCHARGER_BCHGERRREASON_VTRICKLE_Pos) /*!< Bit mask of VTRICKLE field.  */

/* MEASTIMEOUT @Bit 4 : Measurement timer timeout */
  #define BCHARGER_BCHGERRREASON_MEASTIMEOUT_Pos (4UL) /*!< Position of MEASTIMEOUT field.                                     */
  #define BCHARGER_BCHGERRREASON_MEASTIMEOUT_Msk (0x1UL << BCHARGER_BCHGERRREASON_MEASTIMEOUT_Pos) /*!< Bit mask of MEASTIMEOUT
                                                                            field.*/                                              

/* CHARGETIMEOUT @Bit 5 : Charge timer timeout */
  #define BCHARGER_BCHGERRREASON_CHARGETIMEOUT_Pos (5UL) /*!< Position of CHARGETIMEOUT field.                                 */
  #define BCHARGER_BCHGERRREASON_CHARGETIMEOUT_Msk (0x1UL << BCHARGER_BCHGERRREASON_CHARGETIMEOUT_Pos) /*!< Bit mask of
                                                                            CHARGETIMEOUT field.*/                                

/* TRICKLETIMEOUT @Bit 6 : Trickle timer timeout */
  #define BCHARGER_BCHGERRREASON_TRICKLETIMEOUT_Pos (6UL) /*!< Position of TRICKLETIMEOUT field.                               */
  #define BCHARGER_BCHGERRREASON_TRICKLETIMEOUT_Msk (0x1UL << BCHARGER_BCHGERRREASON_TRICKLETIMEOUT_Pos) /*!< Bit mask of
                                                                            TRICKLETIMEOUT field.*/                               


/* BCHARGER_BCHGERRSENSOR: Charger-FSM Error. Latched sensor values. Cleared with TASKS_CLEAR_CHG_ERR */
  #define BCHARGER_BCHGERRSENSOR_ResetValue (0x00UL) /*!< Reset value of BCHGERRSENSOR register.                               */

/* SENSORNTCCOLD @Bit 0 : Ntc Cold sensor value during error */
  #define BCHARGER_BCHGERRSENSOR_SENSORNTCCOLD_Pos (0UL) /*!< Position of SENSORNTCCOLD field.                                 */
  #define BCHARGER_BCHGERRSENSOR_SENSORNTCCOLD_Msk (0x1UL << BCHARGER_BCHGERRSENSOR_SENSORNTCCOLD_Pos) /*!< Bit mask of
                                                                            SENSORNTCCOLD field.*/                                

/* SENSORNTCCOOL @Bit 1 : Ntc Cool sensor value during error */
  #define BCHARGER_BCHGERRSENSOR_SENSORNTCCOOL_Pos (1UL) /*!< Position of SENSORNTCCOOL field.                                 */
  #define BCHARGER_BCHGERRSENSOR_SENSORNTCCOOL_Msk (0x1UL << BCHARGER_BCHGERRSENSOR_SENSORNTCCOOL_Pos) /*!< Bit mask of
                                                                            SENSORNTCCOOL field.*/                                

/* SENSORNTCWARM @Bit 2 : Ntc Warm sensor value during error */
  #define BCHARGER_BCHGERRSENSOR_SENSORNTCWARM_Pos (2UL) /*!< Position of SENSORNTCWARM field.                                 */
  #define BCHARGER_BCHGERRSENSOR_SENSORNTCWARM_Msk (0x1UL << BCHARGER_BCHGERRSENSOR_SENSORNTCWARM_Pos) /*!< Bit mask of
                                                                            SENSORNTCWARM field.*/                                

/* SENSORNTCHOT @Bit 3 : Ntc Hot sensor value during error */
  #define BCHARGER_BCHGERRSENSOR_SENSORNTCHOT_Pos (3UL) /*!< Position of SENSORNTCHOT field.                                   */
  #define BCHARGER_BCHGERRSENSOR_SENSORNTCHOT_Msk (0x1UL << BCHARGER_BCHGERRSENSOR_SENSORNTCHOT_Pos) /*!< Bit mask of
                                                                            SENSORNTCHOT field.*/                                 

/* SENSORVTERM @Bit 4 : Vterm sensor value during error */
  #define BCHARGER_BCHGERRSENSOR_SENSORVTERM_Pos (4UL) /*!< Position of SENSORVTERM field.                                     */
  #define BCHARGER_BCHGERRSENSOR_SENSORVTERM_Msk (0x1UL << BCHARGER_BCHGERRSENSOR_SENSORVTERM_Pos) /*!< Bit mask of SENSORVTERM
                                                                            field.*/                                              

/* SENSORRECHARGE @Bit 5 : Recharge sensor value during error */
  #define BCHARGER_BCHGERRSENSOR_SENSORRECHARGE_Pos (5UL) /*!< Position of SENSORRECHARGE field.                               */
  #define BCHARGER_BCHGERRSENSOR_SENSORRECHARGE_Msk (0x1UL << BCHARGER_BCHGERRSENSOR_SENSORRECHARGE_Pos) /*!< Bit mask of
                                                                            SENSORRECHARGE field.*/                               

/* SENSORVTRICKLE @Bit 6 : Vtrickle sensor value during error */
  #define BCHARGER_BCHGERRSENSOR_SENSORVTRICKLE_Pos (6UL) /*!< Position of SENSORVTRICKLE field.                               */
  #define BCHARGER_BCHGERRSENSOR_SENSORVTRICKLE_Msk (0x1UL << BCHARGER_BCHGERRSENSOR_SENSORVTRICKLE_Pos) /*!< Bit mask of
                                                                            SENSORVTRICKLE field.*/                               

/* SENSORVBATLOW @Bit 7 : Vbatlow sensor value during error */
  #define BCHARGER_BCHGERRSENSOR_SENSORVBATLOW_Pos (7UL) /*!< Position of SENSORVBATLOW field.                                 */
  #define BCHARGER_BCHGERRSENSOR_SENSORVBATLOW_Msk (0x1UL << BCHARGER_BCHGERRSENSOR_SENSORVBATLOW_Pos) /*!< Bit mask of
                                                                            SENSORVBATLOW field.*/                                


/* BCHARGER_BCHGERRPREVSTATES0: Charger-FSM Error. Latched previous state values. Cleared by TASKS_CLEAR_CHG_ERR */
  #define BCHARGER_BCHGERRPREVSTATES0_ResetValue (0x00UL) /*!< Reset value of BCHGERRPREVSTATES0 register.                     */

/* CHARGERPREVSTATE0 @Bits 0..4 : Charger-FSM previous state */
  #define BCHARGER_BCHGERRPREVSTATES0_CHARGERPREVSTATE0_Pos (0UL) /*!< Position of CHARGERPREVSTATE0 field.                    */
  #define BCHARGER_BCHGERRPREVSTATES0_CHARGERPREVSTATE0_Msk (0x1FUL << BCHARGER_BCHGERRPREVSTATES0_CHARGERPREVSTATE0_Pos) /*!<
                                                                            Bit mask of CHARGERPREVSTATE0 field.*/                


/* BCHARGER_BCHGERRPREVSTATES1: Charger-FSM Error. Latched previous state values. Cleared by TASKS_CLEAR_CHG_ERR */
  #define BCHARGER_BCHGERRPREVSTATES1_ResetValue (0x00UL) /*!< Reset value of BCHGERRPREVSTATES1 register.                     */

/* CHARGERPREVSTATE1 @Bits 0..4 : Charger-FSM second previous state */
  #define BCHARGER_BCHGERRPREVSTATES1_CHARGERPREVSTATE1_Pos (0UL) /*!< Position of CHARGERPREVSTATE1 field.                    */
  #define BCHARGER_BCHGERRPREVSTATES1_CHARGERPREVSTATE1_Msk (0x1FUL << BCHARGER_BCHGERRPREVSTATES1_CHARGERPREVSTATE1_Pos) /*!<
                                                                            Bit mask of CHARGERPREVSTATE1 field.*/                


/* BCHARGER_BCHGERRPREVSTATES2: Charger-FSM Error. Latched previous state values. Cleared by TASKS_CLEAR_CHG_ERR */
  #define BCHARGER_BCHGERRPREVSTATES2_ResetValue (0x00UL) /*!< Reset value of BCHGERRPREVSTATES2 register.                     */

/* CHARGERPREVSTATE2 @Bits 0..4 : Charger-FSM third previous state */
  #define BCHARGER_BCHGERRPREVSTATES2_CHARGERPREVSTATE2_Pos (0UL) /*!< Position of CHARGERPREVSTATE2 field.                    */
  #define BCHARGER_BCHGERRPREVSTATES2_CHARGERPREVSTATE2_Msk (0x1FUL << BCHARGER_BCHGERRPREVSTATES2_CHARGERPREVSTATE2_Pos) /*!<
                                                                            Bit mask of CHARGERPREVSTATE2 field.*/                


/* BCHARGER_BCHGERRPREVSTATES3: Charger-FSM Error. Latched previous state values. Cleared by TASKS_CLEAR_CHG_ERR */
  #define BCHARGER_BCHGERRPREVSTATES3_ResetValue (0x00UL) /*!< Reset value of BCHGERRPREVSTATES3 register.                     */

/* CHARGERPREVSTATE3 @Bits 0..4 : Charger-FSM fourth previous state */
  #define BCHARGER_BCHGERRPREVSTATES3_CHARGERPREVSTATE3_Pos (0UL) /*!< Position of CHARGERPREVSTATE3 field.                    */
  #define BCHARGER_BCHGERRPREVSTATES3_CHARGERPREVSTATE3_Msk (0x1FUL << BCHARGER_BCHGERRPREVSTATES3_CHARGERPREVSTATE3_Pos) /*!<
                                                                            Bit mask of CHARGERPREVSTATE3 field.*/                


/* BCHARGER_BCHGCONFIG: Charger configuration */
  #define BCHARGER_BCHGCONFIG_ResetValue (0x00UL)    /*!< Reset value of BCHGCONFIG register.                                  */

/* DISABLECHARGEWARM @Bit 0 : Disable charging if battery is warm */
  #define BCHARGER_BCHGCONFIG_DISABLECHARGEWARM_Pos (0UL) /*!< Position of DISABLECHARGEWARM field.                            */
  #define BCHARGER_BCHGCONFIG_DISABLECHARGEWARM_Msk (0x1UL << BCHARGER_BCHGCONFIG_DISABLECHARGEWARM_Pos) /*!< Bit mask of
                                                                            DISABLECHARGEWARM field.*/                            


/* BCHARGER_BCHGHYSSEL: VSYSVBAT hysteresis select NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGHYSSEL_ResetValue (0x00UL)    /*!< Reset value of BCHGHYSSEL register.                                  */

/* BCHGVSYSVBATHYSSEL @Bit 0 : Hysteresis selection for VSYSVBAT comparator */
  #define BCHARGER_BCHGHYSSEL_BCHGVSYSVBATHYSSEL_Pos (0UL) /*!< Position of BCHGVSYSVBATHYSSEL field.                          */
  #define BCHARGER_BCHGHYSSEL_BCHGVSYSVBATHYSSEL_Msk (0x1UL << BCHARGER_BCHGHYSSEL_BCHGVSYSVBATHYSSEL_Pos) /*!< Bit mask of
                                                                            BCHGVSYSVBATHYSSEL field.*/                           
  #define BCHARGER_BCHGHYSSEL_BCHGVSYSVBATHYSSEL_Min (0x0UL) /*!< Min enumerator value of BCHGVSYSVBATHYSSEL field.            */
  #define BCHARGER_BCHGHYSSEL_BCHGVSYSVBATHYSSEL_Max (0x1UL) /*!< Max enumerator value of BCHGVSYSVBATHYSSEL field.            */
  #define BCHARGER_BCHGHYSSEL_BCHGVSYSVBATHYSSEL_SEL0 (0x0UL) /*!< 50mV(default)                                               */
  #define BCHARGER_BCHGHYSSEL_BCHGVSYSVBATHYSSEL_SEL1 (0x1UL) /*!< 100mV                                                       */


/* BCHARGER_BCHGTRIM0: VTERM_TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGTRIM0_ResetValue (0x00UL)     /*!< Reset value of BCHGTRIM0 register.                                   */

/* BCHGVTERMTRIM @Bits 0..3 : BCHARGER_VTERM_TRIM */
  #define BCHARGER_BCHGTRIM0_BCHGVTERMTRIM_Pos (0UL) /*!< Position of BCHGVTERMTRIM field.                                     */
  #define BCHARGER_BCHGTRIM0_BCHGVTERMTRIM_Msk (0xFUL << BCHARGER_BCHGTRIM0_BCHGVTERMTRIM_Pos) /*!< Bit mask of BCHGVTERMTRIM
                                                                            field.*/                                              


/* BCHARGER_BCHGTRIM1: ILIMBATVOS_TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGTRIM1_ResetValue (0x00UL)     /*!< Reset value of BCHGTRIM1 register.                                   */

/* BCHGILIMBATVOSTRIM @Bits 0..3 : BCHARGER_ILIMBATVOS_TRIM */
  #define BCHARGER_BCHGTRIM1_BCHGILIMBATVOSTRIM_Pos (0UL) /*!< Position of BCHGILIMBATVOSTRIM field.                           */
  #define BCHARGER_BCHGTRIM1_BCHGILIMBATVOSTRIM_Msk (0xFUL << BCHARGER_BCHGTRIM1_BCHGILIMBATVOSTRIM_Pos) /*!< Bit mask of
                                                                            BCHGILIMBATVOSTRIM field.*/                           


/* BCHARGER_BCHGTRIM2: ILIMBATREF_TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGTRIM2_ResetValue (0x00UL)     /*!< Reset value of BCHGTRIM2 register.                                   */

/* BCHGILIMBATREFTRIM @Bits 0..3 : BCHARGER_ILIMBATREF_TRIM */
  #define BCHARGER_BCHGTRIM2_BCHGILIMBATREFTRIM_Pos (0UL) /*!< Position of BCHGILIMBATREFTRIM field.                           */
  #define BCHARGER_BCHGTRIM2_BCHGILIMBATREFTRIM_Msk (0xFUL << BCHARGER_BCHGTRIM2_BCHGILIMBATREFTRIM_Pos) /*!< Bit mask of
                                                                            BCHGILIMBATREFTRIM field.*/                           


/* BCHARGER_BCHGTRIM3: BCHARGER_DROPOUT_TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGTRIM3_ResetValue (0x00UL)     /*!< Reset value of BCHGTRIM3 register.                                   */

/* BCHGDROPOUTTRIM @Bits 0..4 : BCHARGER_DROPOUT_TRIM */
  #define BCHARGER_BCHGTRIM3_BCHGDROPOUTTRIM_Pos (0UL) /*!< Position of BCHGDROPOUTTRIM field.                                 */
  #define BCHARGER_BCHGTRIM3_BCHGDROPOUTTRIM_Msk (0x1FUL << BCHARGER_BCHGTRIM3_BCHGDROPOUTTRIM_Pos) /*!< Bit mask of
                                                                            BCHGDROPOUTTRIM field.*/                              


/* BCHARGER_BCHGTRIM4: BCHARGER_ICHARGING_TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGTRIM4_ResetValue (0x00UL)     /*!< Reset value of BCHGTRIM4 register.                                   */

/* BCHGICHARGINGTRIM @Bits 0..4 : BCHARGER_ICHARGING_TRIM */
  #define BCHARGER_BCHGTRIM4_BCHGICHARGINGTRIM_Pos (0UL) /*!< Position of BCHGICHARGINGTRIM field.                             */
  #define BCHARGER_BCHGTRIM4_BCHGICHARGINGTRIM_Msk (0x1FUL << BCHARGER_BCHGTRIM4_BCHGICHARGINGTRIM_Pos) /*!< Bit mask of
                                                                            BCHGICHARGINGTRIM field.*/                            


/* BCHARGER_BCHGTRIM5: VSYSVBAT_TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGTRIM5_ResetValue (0x00UL)     /*!< Reset value of BCHGTRIM5 register.                                   */

/* BCHGVSYSVBATTRIM @Bits 0..3 : BCHARGER_VSYSVBAT_TRIM */
  #define BCHARGER_BCHGTRIM5_BCHGVSYSVBATTRIM_Pos (0UL) /*!< Position of BCHGVSYSVBATTRIM field.                               */
  #define BCHARGER_BCHGTRIM5_BCHGVSYSVBATTRIM_Msk (0xFUL << BCHARGER_BCHGTRIM5_BCHGVSYSVBATTRIM_Pos) /*!< Bit mask of
                                                                            BCHGVSYSVBATTRIM field.*/                             


/* BCHARGER_BCHGSPARECTRL: BCHARGER _SPARE NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGSPARECTRL_ResetValue (0x00UL) /*!< Reset value of BCHGSPARECTRL register.                               */

/* BCHGSPARECTRL @Bits 0..7 : BCHARGER_SPARE_CTRL */
  #define BCHARGER_BCHGSPARECTRL_BCHGSPARECTRL_Pos (0UL) /*!< Position of BCHGSPARECTRL field.                                 */
  #define BCHARGER_BCHGSPARECTRL_BCHGSPARECTRL_Msk (0xFFUL << BCHARGER_BCHGSPARECTRL_BCHGSPARECTRL_Pos) /*!< Bit mask of
                                                                            BCHGSPARECTRL field.*/                                


/* BCHARGER_BCHGISETBATSOURCE: Bcharger Iset Battery Source NOTE: Reset value from OTP, value listed in this table may not be
                                correct. */                                                                                       
                                                                                                                                  
  #define BCHARGER_BCHGISETBATSOURCE_ResetValue (0x00UL) /*!< Reset value of BCHGISETBATSOURCE register.                       */

/* BCHGISETBATSOURCESEL @Bits 0..1 : Battery source current select */
  #define BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_Pos (0UL) /*!< Position of BCHGISETBATSOURCESEL field.               */
  #define BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_Msk (0x3UL << BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_Pos)
                                                                            /*!< Bit mask of BCHGISETBATSOURCESEL field.*/        
  #define BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_Min (0x0UL) /*!< Min enumerator value of BCHGISETBATSOURCESEL field. */
  #define BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_Max (0x3UL) /*!< Max enumerator value of BCHGISETBATSOURCESEL field. */
  #define BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_SEL0 (0x0UL) /*!< 1mA                                                */
  #define BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_SEL1 (0x1UL) /*!< 4mA                                                */
  #define BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_SEL2 (0x2UL) /*!< 10mA                                               */
  #define BCHARGER_BCHGISETBATSOURCE_BCHGISETBATSOURCESEL_SEL3 (0x3UL) /*!< 20mA                                               */


/* BCHARGER_BCHGDEBUG: Charger-FSM debug NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGDEBUG_ResetValue (0x00UL)     /*!< Reset value of BCHGDEBUG register.                                   */

/* ENABLEVBATLOWCHARGE @Bit 0 : Enable Vbatlow Charging */
  #define BCHARGER_BCHGDEBUG_ENABLEVBATLOWCHARGE_Pos (0UL) /*!< Position of ENABLEVBATLOWCHARGE field.                         */
  #define BCHARGER_BCHGDEBUG_ENABLEVBATLOWCHARGE_Msk (0x1UL << BCHARGER_BCHGDEBUG_ENABLEVBATLOWCHARGE_Pos) /*!< Bit mask of
                                                                            ENABLEVBATLOWCHARGE field.*/                          

/* DISABLEVSYSHIGH @Bit 1 : Disable Vsys High from DISCHARGE */
  #define BCHARGER_BCHGDEBUG_DISABLEVSYSHIGH_Pos (1UL) /*!< Position of DISABLEVSYSHIGH field.                                 */
  #define BCHARGER_BCHGDEBUG_DISABLEVSYSHIGH_Msk (0x1UL << BCHARGER_BCHGDEBUG_DISABLEVSYSHIGH_Pos) /*!< Bit mask of
                                                                            DISABLEVSYSHIGH field.*/                              

/* DISABLEBATTERYDETECT @Bit 2 : Disable Battery Detection */
  #define BCHARGER_BCHGDEBUG_DISABLEBATTERYDETECT_Pos (2UL) /*!< Position of DISABLEBATTERYDETECT field.                       */
  #define BCHARGER_BCHGDEBUG_DISABLEBATTERYDETECT_Msk (0x1UL << BCHARGER_BCHGDEBUG_DISABLEBATTERYDETECT_Pos) /*!< Bit mask of
                                                                            DISABLEBATTERYDETECT field.*/                         

/* DISABLESUPPLEMENT @Bit 3 : Disable supplement */
  #define BCHARGER_BCHGDEBUG_DISABLESUPPLEMENT_Pos (3UL) /*!< Position of DISABLESUPPLEMENT field.                             */
  #define BCHARGER_BCHGDEBUG_DISABLESUPPLEMENT_Msk (0x1UL << BCHARGER_BCHGDEBUG_DISABLESUPPLEMENT_Pos) /*!< Bit mask of
                                                                            DISABLESUPPLEMENT field.*/                            

/* ENABLESUPPLEMENTDELAY @Bit 4 : Enable COMP_ON to SUPPLEMENT delay. See register BCHARGER_DELAY to adjust value */
  #define BCHARGER_BCHGDEBUG_ENABLESUPPLEMENTDELAY_Pos (4UL) /*!< Position of ENABLESUPPLEMENTDELAY field.                     */
  #define BCHARGER_BCHGDEBUG_ENABLESUPPLEMENTDELAY_Msk (0x1UL << BCHARGER_BCHGDEBUG_ENABLESUPPLEMENTDELAY_Pos) /*!< Bit mask of
                                                                            ENABLESUPPLEMENTDELAY field.*/                        

/* DISABLEASYNCCTRL @Bit 5 : Disable asynchronous Charger Mode ctrl */
  #define BCHARGER_BCHGDEBUG_DISABLEASYNCCTRL_Pos (5UL) /*!< Position of DISABLEASYNCCTRL field.                               */
  #define BCHARGER_BCHGDEBUG_DISABLEASYNCCTRL_Msk (0x1UL << BCHARGER_BCHGDEBUG_DISABLEASYNCCTRL_Pos) /*!< Bit mask of
                                                                            DISABLEASYNCCTRL field.*/                             

/* DISABLESUSPENDMODE @Bit 6 : Disable SuspendMode from Charger */
  #define BCHARGER_BCHGDEBUG_DISABLESUSPENDMODE_Pos (6UL) /*!< Position of DISABLESUSPENDMODE field.                           */
  #define BCHARGER_BCHGDEBUG_DISABLESUSPENDMODE_Msk (0x1UL << BCHARGER_BCHGDEBUG_DISABLESUSPENDMODE_Pos) /*!< Bit mask of
                                                                            DISABLESUSPENDMODE field.*/                           


/* BCHARGER_BCHGDELAYSEL: Charger-FSM Delay Select NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGDELAYSEL_ResetValue (0x00UL)  /*!< Reset value of BCHGDELAYSEL register.                                */

/* CHARGERDETECTTSEL @Bit 0 : Battery Detection delay select for debugging and testing purpose */
  #define BCHARGER_BCHGDELAYSEL_CHARGERDETECTTSEL_Pos (0UL) /*!< Position of CHARGERDETECTTSEL field.                          */
  #define BCHARGER_BCHGDELAYSEL_CHARGERDETECTTSEL_Msk (0x1UL << BCHARGER_BCHGDELAYSEL_CHARGERDETECTTSEL_Pos) /*!< Bit mask of
                                                                            CHARGERDETECTTSEL field.*/                            
  #define BCHARGER_BCHGDELAYSEL_CHARGERDETECTTSEL_Min (0x0UL) /*!< Min enumerator value of CHARGERDETECTTSEL field.            */
  #define BCHARGER_BCHGDELAYSEL_CHARGERDETECTTSEL_Max (0x1UL) /*!< Max enumerator value of CHARGERDETECTTSEL field.            */
  #define BCHARGER_BCHGDELAYSEL_CHARGERDETECTTSEL_NORMAL (0x0UL) /*!< Normal                                                   */
  #define BCHARGER_BCHGDELAYSEL_CHARGERDETECTTSEL_FAST (0x1UL) /*!< Fast                                                       */

/* CHARGERTRICKLETSEL @Bits 1..2 : Charger Trickle Timer timeout select for debugging and testing purpose */
  #define BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_Pos (1UL) /*!< Position of CHARGERTRICKLETSEL field.                        */
  #define BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_Msk (0x3UL << BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_Pos) /*!< Bit mask of
                                                                            CHARGERTRICKLETSEL field.*/                           
  #define BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_Min (0x0UL) /*!< Min enumerator value of CHARGERTRICKLETSEL field.          */
  #define BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_Max (0x3UL) /*!< Max enumerator value of CHARGERTRICKLETSEL field.          */
  #define BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_NORMAL (0x0UL) /*!< Normal                                                  */
  #define BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_FAST (0x1UL) /*!< Fast                                                      */
  #define BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_MEDIUM (0x2UL) /*!< Medium                                                  */
  #define BCHARGER_BCHGDELAYSEL_CHARGERTRICKLETSEL_RFU (0x3UL) /*!< Normal                                                     */

/* CHARGERCHARGETSEL @Bits 3..4 : Charger Charge Timer timeout select for debugging and testing purpose */
  #define BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_Pos (3UL) /*!< Position of CHARGERCHARGETSEL field.                          */
  #define BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_Msk (0x3UL << BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_Pos) /*!< Bit mask of
                                                                            CHARGERCHARGETSEL field.*/                            
  #define BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_Min (0x0UL) /*!< Min enumerator value of CHARGERCHARGETSEL field.            */
  #define BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_Max (0x3UL) /*!< Max enumerator value of CHARGERCHARGETSEL field.            */
  #define BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_NORMAL (0x0UL) /*!< Normal                                                   */
  #define BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_FAST (0x1UL) /*!< Fast                                                       */
  #define BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_MEDIUM (0x2UL) /*!< Medium                                                   */
  #define BCHARGER_BCHGDELAYSEL_CHARGERCHARGETSEL_RFU (0x3UL) /*!< Normal                                                      */


/* BCHARGER_BCHGSUPPLEMENTDELAY: Charger-FSM supplement delay select NOTE: Reset value from OTP, value listed in this table may
                                  not be correct. */                                                                              
                                                                                                                                  
  #define BCHARGER_BCHGSUPPLEMENTDELAY_ResetValue (0x00UL) /*!< Reset value of BCHGSUPPLEMENTDELAY register.                   */

/* CHARGERSUPPLDELAYTSEL @Bits 0..1 : Charger-FSM supplement delay select */
  #define BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_Pos (0UL) /*!< Position of CHARGERSUPPLDELAYTSEL field.           */
  #define BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_Msk (0x3UL << BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_Pos)
                                                                            /*!< Bit mask of CHARGERSUPPLDELAYTSEL field.*/       
  #define BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_Min (0x0UL) /*!< Min enumerator value of CHARGERSUPPLDELAYTSEL
                                                                            field.*/                                              
  #define BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_Max (0x3UL) /*!< Max enumerator value of CHARGERSUPPLDELAYTSEL
                                                                            field.*/                                              
  #define BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_SEL2U5 (0x0UL) /*!< Select 2.5us delay (default)                  */
  #define BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_SEL4U0 (0x1UL) /*!< Select 4us delay                              */
  #define BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_SEL8U (0x2UL) /*!< Select 8us delay                               */
  #define BCHARGER_BCHGSUPPLEMENTDELAY_CHARGERSUPPLDELAYTSEL_SEL20U (0x3UL) /*!< Select 20us delay                             */


/* BCHARGER_BCHGFGCONFIG: FUEL GAUGE configuration */
  #define BCHARGER_BCHGFGCONFIG_ResetValue (0x00UL)  /*!< Reset value of BCHGFGCONFIG register.                                */

/* BCHGFUELGAUGERST @Bit 0 : Reset for fuel gauge counter */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGERST_Pos (0UL) /*!< Position of BCHGFUELGAUGERST field.                            */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGERST_Msk (0x1UL << BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGERST_Pos) /*!< Bit mask of
                                                                            BCHGFUELGAUGERST field.*/                             
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGERST_Min (0x0UL) /*!< Min enumerator value of BCHGFUELGAUGERST field.              */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGERST_Max (0x1UL) /*!< Max enumerator value of BCHGFUELGAUGERST field.              */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGERST_NOT (0x0UL) /*!< Reset non active                                             */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGERST_RST (0x1UL) /*!< Reset active                                                 */

/* BCHGFUELGAUGEHOLD @Bit 1 : Hold signal for ROSC inside fuel gauge */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGEHOLD_Pos (1UL) /*!< Position of BCHGFUELGAUGEHOLD field.                          */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGEHOLD_Msk (0x1UL << BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGEHOLD_Pos) /*!< Bit mask of
                                                                            BCHGFUELGAUGEHOLD field.*/                            
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGEHOLD_Min (0x0UL) /*!< Min enumerator value of BCHGFUELGAUGEHOLD field.            */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGEHOLD_Max (0x1UL) /*!< Max enumerator value of BCHGFUELGAUGEHOLD field.            */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGEHOLD_FREE (0x0UL) /*!< Free                                                       */
  #define BCHARGER_BCHGFGCONFIG_BCHGFUELGAUGEHOLD_HOLD (0x1UL) /*!< Hold                                                       */


/* BCHARGER_BCHGFGDIVSEL: FUEL GAUGE divider selection */
  #define BCHARGER_BCHGFGDIVSEL_ResetValue (0x00UL)  /*!< Reset value of BCHGFGDIVSEL register.                                */

/* BCHGFUELQGAUGEDIVSEL @Bits 0..2 : ROSC clock divider */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_Pos (0UL) /*!< Position of BCHGFUELQGAUGEDIVSEL field.                    */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_Msk (0x7UL << BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_Pos) /*!< Bit mask
                                                                            of BCHGFUELQGAUGEDIVSEL field.*/                      
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_Min (0x0UL) /*!< Min enumerator value of BCHGFUELQGAUGEDIVSEL field.      */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_Max (0x7UL) /*!< Max enumerator value of BCHGFUELQGAUGEDIVSEL field.      */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_DIV1 (0x0UL) /*!< div1                                                    */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_DIV2 (0x1UL) /*!< div2                                                    */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_DIV4 (0x2UL) /*!< div4                                                    */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_DIV8 (0x3UL) /*!< div8                                                    */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_DIV16 (0x4UL) /*!< div16                                                  */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_DIV32 (0x5UL) /*!< div32                                                  */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_DIV64 (0x6UL) /*!< div64                                                  */
  #define BCHARGER_BCHGFGDIVSEL_BCHGFUELQGAUGEDIVSEL_SPARE (0x7UL) /*!< spare                                                  */


/* BCHARGER_BCHGFGTRIM0: FUEL GAUGE TRIM0 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGFGTRIM0_ResetValue (0x00UL)   /*!< Reset value of BCHGFGTRIM0 register.                                 */

/* BCHGFGTRIM0 @Bits 0..4 : Fuel Gauge OTA offset trim */
  #define BCHARGER_BCHGFGTRIM0_BCHGFGTRIM0_Pos (0UL) /*!< Position of BCHGFGTRIM0 field.                                       */
  #define BCHARGER_BCHGFGTRIM0_BCHGFGTRIM0_Msk (0x1FUL << BCHARGER_BCHGFGTRIM0_BCHGFGTRIM0_Pos) /*!< Bit mask of BCHGFGTRIM0
                                                                            field.*/                                              


/* BCHARGER_BCHGFGTRIM1: FUEL GAUGE TRIM1 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGFGTRIM1_ResetValue (0x00UL)   /*!< Reset value of BCHGFGTRIM1 register.                                 */

/* BCHGFGTRIM1 @Bits 0..7 : Fuel Gauge resistor trim for Charge mode */
  #define BCHARGER_BCHGFGTRIM1_BCHGFGTRIM1_Pos (0UL) /*!< Position of BCHGFGTRIM1 field.                                       */
  #define BCHARGER_BCHGFGTRIM1_BCHGFGTRIM1_Msk (0xFFUL << BCHARGER_BCHGFGTRIM1_BCHGFGTRIM1_Pos) /*!< Bit mask of BCHGFGTRIM1
                                                                            field.*/                                              


/* BCHARGER_BCHGFGTRIM2: FUEL GAUGE TRIM2 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define BCHARGER_BCHGFGTRIM2_ResetValue (0x00UL)   /*!< Reset value of BCHGFGTRIM2 register.                                 */

/* BCHGFGTRIM2 @Bits 0..7 : Fuel Gauge resistor trim for Discharge mode */
  #define BCHARGER_BCHGFGTRIM2_BCHGFGTRIM2_Pos (0UL) /*!< Position of BCHGFGTRIM2 field.                                       */
  #define BCHARGER_BCHGFGTRIM2_BCHGFGTRIM2_Msk (0xFFUL << BCHARGER_BCHGFGTRIM2_BCHGFGTRIM2_Pos) /*!< Bit mask of BCHGFGTRIM2
                                                                            field.*/                                              


/* BCHARGER_BCHGFGCOUNTERMSB: FUEL GAUGE counter MSB part */
  #define BCHARGER_BCHGFGCOUNTERMSB_ResetValue (0x00UL) /*!< Reset value of BCHGFGCOUNTERMSB register.                         */

/* BCHGFUELQGAUGECOUNTERMSB @Bits 0..7 : Fuel Gauge Counter MSB */
  #define BCHARGER_BCHGFGCOUNTERMSB_BCHGFUELQGAUGECOUNTERMSB_Pos (0UL) /*!< Position of BCHGFUELQGAUGECOUNTERMSB field.        */
  #define BCHARGER_BCHGFGCOUNTERMSB_BCHGFUELQGAUGECOUNTERMSB_Msk (0xFFUL << BCHARGER_BCHGFGCOUNTERMSB_BCHGFUELQGAUGECOUNTERMSB_Pos)
                                                                            /*!< Bit mask of BCHGFUELQGAUGECOUNTERMSB field.*/    


/* BCHARGER_BCHGFGCOUNTERLSB: FUEL GAUGE counter LSB part */
  #define BCHARGER_BCHGFGCOUNTERLSB_ResetValue (0x00UL) /*!< Reset value of BCHGFGCOUNTERLSB register.                         */

/* BCHGFUELQGAUGECOUNTERLSB @Bits 0..7 : Fuel Gauge Counter LSB */
  #define BCHARGER_BCHGFGCOUNTERLSB_BCHGFUELQGAUGECOUNTERLSB_Pos (0UL) /*!< Position of BCHGFUELQGAUGECOUNTERLSB field.        */
  #define BCHARGER_BCHGFGCOUNTERLSB_BCHGFUELQGAUGECOUNTERLSB_Msk (0xFFUL << BCHARGER_BCHGFGCOUNTERLSB_BCHGFUELQGAUGECOUNTERLSB_Pos)
                                                                            /*!< Bit mask of BCHGFUELQGAUGECOUNTERLSB field.*/    



/* =========================================================================================================================== */
/* ================                                           DCDC                                           ================ */
/* =========================================================================================================================== */

/* ======================================================= Struct DCDC ======================================================= */
/**
  * @brief Neutrino DCDC registers
  */
typedef struct {                                     /*!< DCDC Structure                                                       */
  __OM  uint8_t   DCDC1ENASET;                       /*!< (@ 0x00000000) DCDC1 Enable pulse                                    */
  __OM  uint8_t   DCDC1ENACLR;                       /*!< (@ 0x00000001) DCDC1 Disable pulse                                   */
  __OM  uint8_t   DCDC2ENASET;                       /*!< (@ 0x00000002) DCDC2 Enable pulse                                    */
  __OM  uint8_t   DCDC2ENACLR;                       /*!< (@ 0x00000003) DCDC2 Disable pulse                                   */
  __OM  uint8_t   DCDC1PWMSET;                       /*!< (@ 0x00000004) DCDC1 PWM mode enable pulse                           */
  __OM  uint8_t   DCDC1PWMCLR;                       /*!< (@ 0x00000005) DCDC1 PWM mode disable pulse                          */
  __OM  uint8_t   DCDC2PWMSET;                       /*!< (@ 0x00000006) DCDC2 PWM mode enable pulse                           */
  __OM  uint8_t   DCDC2PWMCLR;                       /*!< (@ 0x00000007) DCDC2 PWM mode disable pulse                          */
  __IOM uint8_t   DCDC1NORMVOUT;                     /*!< (@ 0x00000008) DCDC1 Output voltage Normal mode                      */
  __IOM uint8_t   DCDC1RETVOUT;                      /*!< (@ 0x00000009) DCDC1 Output voltage Retention mode                   */
  __IOM uint8_t   DCDC2NORMVOUT;                     /*!< (@ 0x0000000A) DCDC2 Output voltage Normal mode                      */
  __IOM uint8_t   DCDC2RETVOUT;                      /*!< (@ 0x0000000B) DCDC2 Output voltage Retention mode                   */
  __IOM uint8_t   DCDCENCTRL;                        /*!< (@ 0x0000000C) DCDC Enable GPIO Select                               */
  __IOM uint8_t   DCDCVRETCTRL;                      /*!< (@ 0x0000000D) DCDC Retention Voltage select                         */
  __IOM uint8_t   DCDCPWMCTRL;                       /*!< (@ 0x0000000E) DCDC Forced PWM mode GPIO select                      */
  __IOM uint8_t   DCDCSWCTRLSEL;                     /*!< (@ 0x0000000F) DCDC Software Control select                          */
  __IM  uint8_t   DCDC1VOUTSTATUS;                   /*!< (@ 0x00000010) DCDC1 Vout Status register. Lets software read the Vout
                                                                         value in case its driven by the FSM.*/                   
  __IM  uint8_t   DCDC2VOUTSTATUS;                   /*!< (@ 0x00000011) DCDC2 Vout Status register. Lets software read the Vout
                                                                         value in case its driven by the FSM.*/                   
  __IM  uint8_t   DCDC1CALBRT;                       /*!< (@ 0x00000012) DCDC1 Calibration word read output                    */
  __IM  uint8_t   DCDC2CALBRT;                       /*!< (@ 0x00000013) DCDC2 Calibration word read output                    */
  __IM  uint8_t   DCDCSPARESTATUS;                   /*!< (@ 0x00000014) DCDCx spare status read only register                 */
  __IOM uint8_t   DCDCCTRL0;                         /*!< (@ 0x00000015) DCDC Auto PFM to PWM Control select                   */
  __IOM uint8_t   DCDCCTRL1;                         /*!< (@ 0x00000016) DCDC CLK Sync control                                 */
  __IOM uint8_t   DCDCPWRUPCTRL;                     /*!< (@ 0x00000017) DCDCPWRUP control register                            */
  __IOM uint8_t   DCDCENHPMODE;                      /*!< (@ 0x00000018) DCDC HP_MODE enable register                          */
  __IOM uint8_t   DCDCCTRL2;                         /*!< (@ 0x00000019) DCDC common slew control NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   DCDCCTRL3;                         /*!< (@ 0x0000001A) DCDC common debug register 0                          */
  __IOM uint8_t   DCDCCTRL4;                         /*!< (@ 0x0000001B) DCDC common debug register 2                          */
  __IOM uint8_t   DCDCCTRL5;                         /*!< (@ 0x0000001C) DCDC common debug register 3                          */
  __IOM uint8_t   DCDC1FICR0;                        /*!< (@ 0x0000001D) DCDC1 OTP Config0 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   DCDC1FICR1;                        /*!< (@ 0x0000001E) DCDC1 OTP Config1 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   DCDC2FICR0;                        /*!< (@ 0x0000001F) DCDC2 OTP Config0 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   DCDC2FICR1;                        /*!< (@ 0x00000020) DCDC2 OTP Config1 NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   DCDCFICRSPARE;                     /*!< (@ 0x00000021) DCDC OTP Spare NOTE: Reset value from OTP, value listed
                                                                         in this table may not be correct.*/                      
  __IOM uint8_t   DCDCFTMODE;                        /*!< (@ 0x00000022) DCDC Functional test mode over-ride register          */
  __IOM uint8_t   DCDC1ATE;                          /*!< (@ 0x00000023) DCDC1 TESTMODE and ATE control                        */
  __IOM uint8_t   DCDCTESTMODE;                      /*!< (@ 0x00000024) TESTMODE signal commong for both DCDCs                */
  __IOM uint8_t   DCDC2ATE;                          /*!< (@ 0x00000025) DCDC2 TESTMODE and ATE control                        */
  __IOM uint8_t   DCDC1CLKGENTRM;                    /*!< (@ 0x00000026) DCDC1 ClkGen TRIM NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   DCDC2CLKGENTRM;                    /*!< (@ 0x00000027) DCDC2 ClkGen TRIM NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   DCDC1TRM0;                         /*!< (@ 0x00000028) DCDC1 VOUT_ULP TRIM NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   DCDC1TRM1;                         /*!< (@ 0x00000029) DCDC1_ULP_FEEDBACK_TRM NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   DCDC1TRM2;                         /*!< (@ 0x0000002A) DCDC1_VREF_TRM NOTE: Reset value from OTP, value listed
                                                                         in this table may not be correct.*/                      
  __IOM uint8_t   DCDC1TRM3;                         /*!< (@ 0x0000002B) DCDC1 OFFSET and VHYST TRIM NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   DCDC1TRM4;                         /*!< (@ 0x0000002C) DCDC1 IBNS and EACLAMP HSLIM TRIM NOTE: Reset value
                                                                         from OTP, value listed in this table may not be
                                                                         correct.*/                                               
  __IOM uint8_t   DCDC2TRM0;                         /*!< (@ 0x0000002D) DCDC2 VOUT_ULP TRIM NOTE: Reset value from OTP, value
                                                                         listed in this table may not be correct.*/               
  __IOM uint8_t   DCDC2TRM1;                         /*!< (@ 0x0000002E) DCDC2_ULP_FEEDBACK_TRM NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   DCDC2TRM2;                         /*!< (@ 0x0000002F) DCDC2_VREF_TRM NOTE: Reset value from OTP, value listed
                                                                         in this table may not be correct.*/                      
  __IOM uint8_t   DCDC2TRM3;                         /*!< (@ 0x00000030) DCDC2 OFFSET and VHYST TRIM NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   DCDC2TRM4;                         /*!< (@ 0x00000031) DCDC2 IBNS and EACLAMP HSLIM TRIM NOTE: Reset value
                                                                         from OTP, value listed in this table may not be
                                                                         correct.*/                                               
  __IOM uint8_t   DCDC1DTE;                          /*!< (@ 0x00000032) Dcdc Digital Testbus Enable NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   DCDC2DTE;                          /*!< (@ 0x00000033) Dcdc Digital Testbus Enable NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
} __PACKED NPM_DCDC_Type;                            /*!< Size = 52 (0x034)                                                    */

/* DCDC_DCDC1ENASET: DCDC1 Enable pulse */
  #define DCDC_DCDC1ENASET_ResetValue (0x00UL)       /*!< Reset value of DCDC1ENASET register.                                 */

/* TASKDCDC1ENASET @Bit 0 : Request to enable DCDC1 */
  #define DCDC_DCDC1ENASET_TASKDCDC1ENASET_Pos (0UL) /*!< Position of TASKDCDC1ENASET field.                                   */
  #define DCDC_DCDC1ENASET_TASKDCDC1ENASET_Msk (0x1UL << DCDC_DCDC1ENASET_TASKDCDC1ENASET_Pos) /*!< Bit mask of TASKDCDC1ENASET
                                                                            field.*/                                              
  #define DCDC_DCDC1ENASET_TASKDCDC1ENASET_Min (0x0UL) /*!< Min enumerator value of TASKDCDC1ENASET field.                     */
  #define DCDC_DCDC1ENASET_TASKDCDC1ENASET_Max (0x1UL) /*!< Max enumerator value of TASKDCDC1ENASET field.                     */
  #define DCDC_DCDC1ENASET_TASKDCDC1ENASET_NOEFFECT (0x0UL) /*!< no effect                                                     */
  #define DCDC_DCDC1ENASET_TASKDCDC1ENASET_SET (0x1UL) /*!< DCDC1 Enable request set                                           */


/* DCDC_DCDC1ENACLR: DCDC1 Disable pulse */
  #define DCDC_DCDC1ENACLR_ResetValue (0x00UL)       /*!< Reset value of DCDC1ENACLR register.                                 */

/* TASKDCDC1ENACLR @Bit 0 : Request to disable DCDC1 */
  #define DCDC_DCDC1ENACLR_TASKDCDC1ENACLR_Pos (0UL) /*!< Position of TASKDCDC1ENACLR field.                                   */
  #define DCDC_DCDC1ENACLR_TASKDCDC1ENACLR_Msk (0x1UL << DCDC_DCDC1ENACLR_TASKDCDC1ENACLR_Pos) /*!< Bit mask of TASKDCDC1ENACLR
                                                                            field.*/                                              
  #define DCDC_DCDC1ENACLR_TASKDCDC1ENACLR_Min (0x0UL) /*!< Min enumerator value of TASKDCDC1ENACLR field.                     */
  #define DCDC_DCDC1ENACLR_TASKDCDC1ENACLR_Max (0x1UL) /*!< Max enumerator value of TASKDCDC1ENACLR field.                     */
  #define DCDC_DCDC1ENACLR_TASKDCDC1ENACLR_NOEFFECT (0x0UL) /*!< no effect                                                     */
  #define DCDC_DCDC1ENACLR_TASKDCDC1ENACLR_SET (0x1UL) /*!< DCDC1 Enable request clr                                           */


/* DCDC_DCDC2ENASET: DCDC2 Enable pulse */
  #define DCDC_DCDC2ENASET_ResetValue (0x00UL)       /*!< Reset value of DCDC2ENASET register.                                 */

/* TASKDCDC2ENASET @Bit 0 : Request to enable DCDC2 */
  #define DCDC_DCDC2ENASET_TASKDCDC2ENASET_Pos (0UL) /*!< Position of TASKDCDC2ENASET field.                                   */
  #define DCDC_DCDC2ENASET_TASKDCDC2ENASET_Msk (0x1UL << DCDC_DCDC2ENASET_TASKDCDC2ENASET_Pos) /*!< Bit mask of TASKDCDC2ENASET
                                                                            field.*/                                              
  #define DCDC_DCDC2ENASET_TASKDCDC2ENASET_Min (0x0UL) /*!< Min enumerator value of TASKDCDC2ENASET field.                     */
  #define DCDC_DCDC2ENASET_TASKDCDC2ENASET_Max (0x1UL) /*!< Max enumerator value of TASKDCDC2ENASET field.                     */
  #define DCDC_DCDC2ENASET_TASKDCDC2ENASET_NOEFFECT (0x0UL) /*!< no effect                                                     */
  #define DCDC_DCDC2ENASET_TASKDCDC2ENASET_SET (0x1UL) /*!< DCDC2 Enable request set                                           */


/* DCDC_DCDC2ENACLR: DCDC2 Disable pulse */
  #define DCDC_DCDC2ENACLR_ResetValue (0x00UL)       /*!< Reset value of DCDC2ENACLR register.                                 */

/* TASKDCDC2ENACLR @Bit 0 : Request to enable DCDC2 */
  #define DCDC_DCDC2ENACLR_TASKDCDC2ENACLR_Pos (0UL) /*!< Position of TASKDCDC2ENACLR field.                                   */
  #define DCDC_DCDC2ENACLR_TASKDCDC2ENACLR_Msk (0x1UL << DCDC_DCDC2ENACLR_TASKDCDC2ENACLR_Pos) /*!< Bit mask of TASKDCDC2ENACLR
                                                                            field.*/                                              
  #define DCDC_DCDC2ENACLR_TASKDCDC2ENACLR_Min (0x0UL) /*!< Min enumerator value of TASKDCDC2ENACLR field.                     */
  #define DCDC_DCDC2ENACLR_TASKDCDC2ENACLR_Max (0x1UL) /*!< Max enumerator value of TASKDCDC2ENACLR field.                     */
  #define DCDC_DCDC2ENACLR_TASKDCDC2ENACLR_NOEFFECT (0x0UL) /*!< no effect                                                     */
  #define DCDC_DCDC2ENACLR_TASKDCDC2ENACLR_SET (0x1UL) /*!< DCDC2 Enable request clr                                           */


/* DCDC_DCDC1PWMSET: DCDC1 PWM mode enable pulse */
  #define DCDC_DCDC1PWMSET_ResetValue (0x00UL)       /*!< Reset value of DCDC1PWMSET register.                                 */

/* TASKDCDC1PWMSET @Bit 0 : request for DCDC1 to enter forced PWM mode */
  #define DCDC_DCDC1PWMSET_TASKDCDC1PWMSET_Pos (0UL) /*!< Position of TASKDCDC1PWMSET field.                                   */
  #define DCDC_DCDC1PWMSET_TASKDCDC1PWMSET_Msk (0x1UL << DCDC_DCDC1PWMSET_TASKDCDC1PWMSET_Pos) /*!< Bit mask of TASKDCDC1PWMSET
                                                                            field.*/                                              
  #define DCDC_DCDC1PWMSET_TASKDCDC1PWMSET_Min (0x0UL) /*!< Min enumerator value of TASKDCDC1PWMSET field.                     */
  #define DCDC_DCDC1PWMSET_TASKDCDC1PWMSET_Max (0x1UL) /*!< Max enumerator value of TASKDCDC1PWMSET field.                     */
  #define DCDC_DCDC1PWMSET_TASKDCDC1PWMSET_NOEFFECT (0x0UL) /*!< no effect                                                     */
  #define DCDC_DCDC1PWMSET_TASKDCDC1PWMSET_SET (0x1UL) /*!< DCDC1 Forced PWM request                                           */


/* DCDC_DCDC1PWMCLR: DCDC1 PWM mode disable pulse */
  #define DCDC_DCDC1PWMCLR_ResetValue (0x00UL)       /*!< Reset value of DCDC1PWMCLR register.                                 */

/* TASKDCDC1PWMCLR @Bit 0 : request for DCDC1 to leave forced PWM mode and return to Auto mode */
  #define DCDC_DCDC1PWMCLR_TASKDCDC1PWMCLR_Pos (0UL) /*!< Position of TASKDCDC1PWMCLR field.                                   */
  #define DCDC_DCDC1PWMCLR_TASKDCDC1PWMCLR_Msk (0x1UL << DCDC_DCDC1PWMCLR_TASKDCDC1PWMCLR_Pos) /*!< Bit mask of TASKDCDC1PWMCLR
                                                                            field.*/                                              
  #define DCDC_DCDC1PWMCLR_TASKDCDC1PWMCLR_Min (0x0UL) /*!< Min enumerator value of TASKDCDC1PWMCLR field.                     */
  #define DCDC_DCDC1PWMCLR_TASKDCDC1PWMCLR_Max (0x1UL) /*!< Max enumerator value of TASKDCDC1PWMCLR field.                     */
  #define DCDC_DCDC1PWMCLR_TASKDCDC1PWMCLR_NOEFFECT (0x0UL) /*!< no effect                                                     */
  #define DCDC_DCDC1PWMCLR_TASKDCDC1PWMCLR_SET (0x1UL) /*!< DCDC1 Auto mode request                                            */


/* DCDC_DCDC2PWMSET: DCDC2 PWM mode enable pulse */
  #define DCDC_DCDC2PWMSET_ResetValue (0x00UL)       /*!< Reset value of DCDC2PWMSET register.                                 */

/* TASKDCDC2PWMSET @Bit 0 : request for DCDC2 to enter forced PWM mode */
  #define DCDC_DCDC2PWMSET_TASKDCDC2PWMSET_Pos (0UL) /*!< Position of TASKDCDC2PWMSET field.                                   */
  #define DCDC_DCDC2PWMSET_TASKDCDC2PWMSET_Msk (0x1UL << DCDC_DCDC2PWMSET_TASKDCDC2PWMSET_Pos) /*!< Bit mask of TASKDCDC2PWMSET
                                                                            field.*/                                              
  #define DCDC_DCDC2PWMSET_TASKDCDC2PWMSET_Min (0x0UL) /*!< Min enumerator value of TASKDCDC2PWMSET field.                     */
  #define DCDC_DCDC2PWMSET_TASKDCDC2PWMSET_Max (0x1UL) /*!< Max enumerator value of TASKDCDC2PWMSET field.                     */
  #define DCDC_DCDC2PWMSET_TASKDCDC2PWMSET_NOEFFECT (0x0UL) /*!< no effect                                                     */
  #define DCDC_DCDC2PWMSET_TASKDCDC2PWMSET_SET (0x1UL) /*!< DCDC2 Forced PWM request                                           */


/* DCDC_DCDC2PWMCLR: DCDC2 PWM mode disable pulse */
  #define DCDC_DCDC2PWMCLR_ResetValue (0x00UL)       /*!< Reset value of DCDC2PWMCLR register.                                 */

/* TASKDCDC2PWMCLR @Bit 0 : request for DCDC2 to leave forced PWM mode and return to Auto mode */
  #define DCDC_DCDC2PWMCLR_TASKDCDC2PWMCLR_Pos (0UL) /*!< Position of TASKDCDC2PWMCLR field.                                   */
  #define DCDC_DCDC2PWMCLR_TASKDCDC2PWMCLR_Msk (0x1UL << DCDC_DCDC2PWMCLR_TASKDCDC2PWMCLR_Pos) /*!< Bit mask of TASKDCDC2PWMCLR
                                                                            field.*/                                              
  #define DCDC_DCDC2PWMCLR_TASKDCDC2PWMCLR_Min (0x0UL) /*!< Min enumerator value of TASKDCDC2PWMCLR field.                     */
  #define DCDC_DCDC2PWMCLR_TASKDCDC2PWMCLR_Max (0x1UL) /*!< Max enumerator value of TASKDCDC2PWMCLR field.                     */
  #define DCDC_DCDC2PWMCLR_TASKDCDC2PWMCLR_NOEFFECT (0x0UL) /*!< no effect                                                     */
  #define DCDC_DCDC2PWMCLR_TASKDCDC2PWMCLR_SET (0x1UL) /*!< DCDC2 Auto mode request                                            */


/* DCDC_DCDC1NORMVOUT: DCDC1 Output voltage Normal mode */
  #define DCDC_DCDC1NORMVOUT_ResetValue (0x02UL)     /*!< Reset value of DCDC1NORMVOUT register.                               */

/* DCDC1NORMVOUT @Bits 0..4 : DCDC1 Output voltage Normal mode */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_Pos (0UL) /*!< Position of DCDC1NORMVOUT field.                                     */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_Msk (0x1FUL << DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_Pos) /*!< Bit mask of DCDC1NORMVOUT
                                                                            field.*/                                              
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_Min (0x0UL) /*!< Min enumerator value of DCDC1NORMVOUT field.                       */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_Max (0x18UL) /*!< Max enumerator value of DCDC1NORMVOUT field.                      */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V (0x00UL) /*!< 1V                                                                 */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V1 (0x01UL) /*!< 1.1V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V2 (0x02UL) /*!< 1.2V(Default)                                                     */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V3 (0x03UL) /*!< 1.3V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V4 (0x04UL) /*!< 1.4V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V5 (0x05UL) /*!< 1.5V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V6 (0x06UL) /*!< 1.6V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V7 (0x07UL) /*!< 1.7V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V8 (0x08UL) /*!< 1.8V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_1V9 (0x09UL) /*!< 1.9V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V0 (0x0AUL) /*!< 2V                                                                */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V1 (0x0BUL) /*!< 2.1V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V2 (0x0CUL) /*!< 2.2V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V3 (0x0DUL) /*!< 2.3V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V4 (0x0EUL) /*!< 2.4V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V5 (0x0FUL) /*!< 2.5V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V6 (0x10UL) /*!< 2.6V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V7 (0x11UL) /*!< 2.7V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V8 (0x12UL) /*!< 2.8V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_2V9 (0x13UL) /*!< 2.9V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_3V0 (0x14UL) /*!< 3V                                                                */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_3V1 (0x15UL) /*!< 3.1V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_3V2 (0x16UL) /*!< 3.2V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_3V3 (0x17UL) /*!< 3.3V                                                              */
  #define DCDC_DCDC1NORMVOUT_DCDC1NORMVOUT_3V30 (0x18UL) /*!< 3.3V                                                             */


/* DCDC_DCDC1RETVOUT: DCDC1 Output voltage Retention mode */
  #define DCDC_DCDC1RETVOUT_ResetValue (0x02UL)      /*!< Reset value of DCDC1RETVOUT register.                                */

/* DCDC1RETVOUT @Bits 0..4 : DCDC1 Output voltage Retention mode */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_Pos (0UL)   /*!< Position of DCDC1RETVOUT field.                                      */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_Msk (0x1FUL << DCDC_DCDC1RETVOUT_DCDC1RETVOUT_Pos) /*!< Bit mask of DCDC1RETVOUT
                                                                            field.*/                                              
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_Min (0x0UL) /*!< Min enumerator value of DCDC1RETVOUT field.                          */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_Max (0x18UL) /*!< Max enumerator value of DCDC1RETVOUT field.                         */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V (0x00UL) /*!< 1V                                                                   */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V1 (0x01UL) /*!< 1.1V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V2 (0x02UL) /*!< 1.2V(Default)                                                       */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V3 (0x03UL) /*!< 1.3V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V4 (0x04UL) /*!< 1.4V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V5 (0x05UL) /*!< 1.5V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V6 (0x06UL) /*!< 1.6V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V7 (0x07UL) /*!< 1.7V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V8 (0x08UL) /*!< 1.8V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_1V9 (0x09UL) /*!< 1.9V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V0 (0x0AUL) /*!< 2V                                                                  */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V1 (0x0BUL) /*!< 2.1V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V2 (0x0CUL) /*!< 2.2V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V3 (0x0DUL) /*!< 2.3V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V4 (0x0EUL) /*!< 2.4V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V5 (0x0FUL) /*!< 2.5V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V6 (0x10UL) /*!< 2.6V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V7 (0x11UL) /*!< 2.7V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V8 (0x12UL) /*!< 2.8V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_2V9 (0x13UL) /*!< 2.9V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_3V0 (0x14UL) /*!< 3V                                                                  */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_3V1 (0x15UL) /*!< 3.1V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_3V2 (0x16UL) /*!< 3.2V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_3V3 (0x17UL) /*!< 3.3V                                                                */
  #define DCDC_DCDC1RETVOUT_DCDC1RETVOUT_3V30 (0x18UL) /*!< 3.3V                                                               */


/* DCDC_DCDC2NORMVOUT: DCDC2 Output voltage Normal mode */
  #define DCDC_DCDC2NORMVOUT_ResetValue (0x08UL)     /*!< Reset value of DCDC2NORMVOUT register.                               */

/* DCDC2NORMVOUT @Bits 0..4 : DCDC2 Output voltage Normal mode */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_Pos (0UL) /*!< Position of DCDC2NORMVOUT field.                                     */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_Msk (0x1FUL << DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_Pos) /*!< Bit mask of DCDC2NORMVOUT
                                                                            field.*/                                              
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_Min (0x0UL) /*!< Min enumerator value of DCDC2NORMVOUT field.                       */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_Max (0x18UL) /*!< Max enumerator value of DCDC2NORMVOUT field.                      */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V (0x00UL) /*!< 1V                                                                 */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V1 (0x01UL) /*!< 1.1V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V2 (0x02UL) /*!< 1.2V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V3 (0x03UL) /*!< 1.3V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V4 (0x04UL) /*!< 1.4V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V5 (0x05UL) /*!< 1.5V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V6 (0x06UL) /*!< 1.6V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V7 (0x07UL) /*!< 1.7V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V8 (0x08UL) /*!< 1.8V(Default)                                                     */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_1V9 (0x09UL) /*!< 1.9V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V0 (0x0AUL) /*!< 2V                                                                */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V1 (0x0BUL) /*!< 2.1V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V2 (0x0CUL) /*!< 2.2V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V3 (0x0DUL) /*!< 2.3V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V4 (0x0EUL) /*!< 2.4V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V5 (0x0FUL) /*!< 2.5V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V6 (0x10UL) /*!< 2.6V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V7 (0x11UL) /*!< 2.7V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V8 (0x12UL) /*!< 2.8V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_2V9 (0x13UL) /*!< 2.9V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_3V0 (0x14UL) /*!< 3V                                                                */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_3V1 (0x15UL) /*!< 3.1V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_3V2 (0x16UL) /*!< 3.2V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_3V3 (0x17UL) /*!< 3.3V                                                              */
  #define DCDC_DCDC2NORMVOUT_DCDC2NORMVOUT_3V30 (0x18UL) /*!< 3.3V                                                             */


/* DCDC_DCDC2RETVOUT: DCDC2 Output voltage Retention mode */
  #define DCDC_DCDC2RETVOUT_ResetValue (0x08UL)      /*!< Reset value of DCDC2RETVOUT register.                                */

/* DCDC2RETVOUT @Bits 0..4 : DCDC2 Output voltage Retention mode */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_Pos (0UL)   /*!< Position of DCDC2RETVOUT field.                                      */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_Msk (0x1FUL << DCDC_DCDC2RETVOUT_DCDC2RETVOUT_Pos) /*!< Bit mask of DCDC2RETVOUT
                                                                            field.*/                                              
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_Min (0x0UL) /*!< Min enumerator value of DCDC2RETVOUT field.                          */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_Max (0x18UL) /*!< Max enumerator value of DCDC2RETVOUT field.                         */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V (0x00UL) /*!< 1V                                                                   */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V1 (0x01UL) /*!< 1.1V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V2 (0x02UL) /*!< 1.2V(                                                               */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V3 (0x03UL) /*!< 1.3V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V4 (0x04UL) /*!< 1.4V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V5 (0x05UL) /*!< 1.5V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V6 (0x06UL) /*!< 1.6V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V7 (0x07UL) /*!< 1.7V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V8 (0x08UL) /*!< 1.8VDefault)                                                        */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_1V9 (0x09UL) /*!< 1.9V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V0 (0x0AUL) /*!< 2V                                                                  */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V1 (0x0BUL) /*!< 2.1V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V2 (0x0CUL) /*!< 2.2V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V3 (0x0DUL) /*!< 2.3V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V4 (0x0EUL) /*!< 2.4V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V5 (0x0FUL) /*!< 2.5V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V6 (0x10UL) /*!< 2.6V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V7 (0x11UL) /*!< 2.7V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V8 (0x12UL) /*!< 2.8V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_2V9 (0x13UL) /*!< 2.9V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_3V0 (0x14UL) /*!< 3V                                                                  */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_3V1 (0x15UL) /*!< 3.1V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_3V2 (0x16UL) /*!< 3.2V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_3V3 (0x17UL) /*!< 3.3V                                                                */
  #define DCDC_DCDC2RETVOUT_DCDC2RETVOUT_3V30 (0x18UL) /*!< 3.3V                                                               */


/* DCDC_DCDCENCTRL: DCDC Enable GPIO Select */
  #define DCDC_DCDCENCTRL_ResetValue (0x00UL)        /*!< Reset value of DCDCENCTRL register.                                  */

/* DCDC1ENGPISEL @Bits 0..2 : Select which GPI controls DCDC1_enable */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_Pos (0UL)    /*!< Position of DCDC1ENGPISEL field.                                     */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_Msk (0x7UL << DCDC_DCDCENCTRL_DCDC1ENGPISEL_Pos) /*!< Bit mask of DCDC1ENGPISEL field. */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_Min (0x0UL)  /*!< Min enumerator value of DCDC1ENGPISEL field.                         */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_Max (0x7UL)  /*!< Max enumerator value of DCDC1ENGPISEL field.                         */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_NOTUSED (0x0UL) /*!< Not used                                                          */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_GPIO0 (0x1UL) /*!< GPI_0 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_GPIO1 (0x2UL) /*!< GPI_1 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_GPIO2 (0x3UL) /*!< GPI_2 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_GPIO3 (0x4UL) /*!< GPI_3 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_GPIO4 (0x5UL) /*!< GPI_4 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_GPIO5 (0x6UL) /*!< GPI_5 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC1ENGPISEL_NOTUSED1 (0x7UL) /*!< no GPI selected                                                  */

/* DCDC2ENGPISEL @Bits 3..5 : Select which GPI controls DCDC2_enable */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_Pos (3UL)    /*!< Position of DCDC2ENGPISEL field.                                     */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_Msk (0x7UL << DCDC_DCDCENCTRL_DCDC2ENGPISEL_Pos) /*!< Bit mask of DCDC2ENGPISEL field. */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_Min (0x0UL)  /*!< Min enumerator value of DCDC2ENGPISEL field.                         */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_Max (0x7UL)  /*!< Max enumerator value of DCDC2ENGPISEL field.                         */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_NOTUSED1 (0x0UL) /*!< Not used                                                         */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_GPIO0 (0x1UL) /*!< GPI_0 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_GPIO1 (0x2UL) /*!< GPI_1 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_GPIO2 (0x3UL) /*!< GPI_2 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_GPIO3 (0x4UL) /*!< GPI_3 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_GPIO4 (0x5UL) /*!< GPI_4 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_GPIO5 (0x6UL) /*!< GPI_5 selected                                                      */
  #define DCDC_DCDCENCTRL_DCDC2ENGPISEL_NOTUSED2 (0x7UL) /*!< no GPI selected                                                  */

/* DCDC1ENGPIINV @Bit 6 : Invert the sense of the selected GPIO */
  #define DCDC_DCDCENCTRL_DCDC1ENGPIINV_Pos (6UL)    /*!< Position of DCDC1ENGPIINV field.                                     */
  #define DCDC_DCDCENCTRL_DCDC1ENGPIINV_Msk (0x1UL << DCDC_DCDCENCTRL_DCDC1ENGPIINV_Pos) /*!< Bit mask of DCDC1ENGPIINV field. */
  #define DCDC_DCDCENCTRL_DCDC1ENGPIINV_Min (0x0UL)  /*!< Min enumerator value of DCDC1ENGPIINV field.                         */
  #define DCDC_DCDCENCTRL_DCDC1ENGPIINV_Max (0x1UL)  /*!< Max enumerator value of DCDC1ENGPIINV field.                         */
  #define DCDC_DCDCENCTRL_DCDC1ENGPIINV_NORMAL (0x0UL) /*!< not Inverted                                                       */
  #define DCDC_DCDCENCTRL_DCDC1ENGPIINV_INVERTED (0x1UL) /*!< Inverted                                                         */

/* DCDC2ENGPIINV @Bit 7 : Invert the sense of the selected GPIO */
  #define DCDC_DCDCENCTRL_DCDC2ENGPIINV_Pos (7UL)    /*!< Position of DCDC2ENGPIINV field.                                     */
  #define DCDC_DCDCENCTRL_DCDC2ENGPIINV_Msk (0x1UL << DCDC_DCDCENCTRL_DCDC2ENGPIINV_Pos) /*!< Bit mask of DCDC2ENGPIINV field. */
  #define DCDC_DCDCENCTRL_DCDC2ENGPIINV_Min (0x0UL)  /*!< Min enumerator value of DCDC2ENGPIINV field.                         */
  #define DCDC_DCDCENCTRL_DCDC2ENGPIINV_Max (0x1UL)  /*!< Max enumerator value of DCDC2ENGPIINV field.                         */
  #define DCDC_DCDCENCTRL_DCDC2ENGPIINV_NORMAL (0x0UL) /*!< not Inverted                                                       */
  #define DCDC_DCDCENCTRL_DCDC2ENGPIINV_INVERTED (0x1UL) /*!< Inverted                                                         */


/* DCDC_DCDCVRETCTRL: DCDC Retention Voltage select */
  #define DCDC_DCDCVRETCTRL_ResetValue (0x00UL)      /*!< Reset value of DCDCVRETCTRL register.                                */

/* DCDC1VRETGPISEL @Bits 0..2 : Select which GPI controls DCDC1_retention voltage sel */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_Pos (0UL) /*!< Position of DCDC1VRETGPISEL field.                                  */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_Msk (0x7UL << DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_Pos) /*!< Bit mask of
                                                                            DCDC1VRETGPISEL field.*/                              
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_Min (0x0UL) /*!< Min enumerator value of DCDC1VRETGPISEL field.                    */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_Max (0x7UL) /*!< Max enumerator value of DCDC1VRETGPISEL field.                    */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_NOTUSED (0x0UL) /*!< Not used                                                      */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_GPIO0 (0x1UL) /*!< GPI_0 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_GPIO1 (0x2UL) /*!< GPI_1 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_GPIO2 (0x3UL) /*!< GPI_2 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_GPIO3 (0x4UL) /*!< GPI_3 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_GPIO4 (0x5UL) /*!< GPI_4 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_NOTUSED2 (0x6UL) /*!< Not used                                                     */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPISEL_NOTUSED1 (0x7UL) /*!< Not used                                                     */

/* DCDC2VRETGPISEL @Bits 3..5 : Select which GPI controls DCDC2_retention voltage sel */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_Pos (3UL) /*!< Position of DCDC2VRETGPISEL field.                                  */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_Msk (0x7UL << DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_Pos) /*!< Bit mask of
                                                                            DCDC2VRETGPISEL field.*/                              
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_Min (0x0UL) /*!< Min enumerator value of DCDC2VRETGPISEL field.                    */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_Max (0x7UL) /*!< Max enumerator value of DCDC2VRETGPISEL field.                    */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_NOTUSED (0x0UL) /*!< Not used                                                      */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_GPIO0 (0x1UL) /*!< GPI_0 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_GPIO1 (0x2UL) /*!< GPI_1 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_GPIO2 (0x3UL) /*!< GPI_2 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_GPIO3 (0x4UL) /*!< GPI_3 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_GPIO4 (0x5UL) /*!< GPI_4 selected                                                  */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_NOTUSED2 (0x6UL) /*!< Not used                                                     */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPISEL_NOTUSED1 (0x7UL) /*!< Not used                                                     */

/* DCDC1VRETGPIINV @Bit 6 : Invert the sense of the selected GPIO */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPIINV_Pos (6UL) /*!< Position of DCDC1VRETGPIINV field.                                  */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPIINV_Msk (0x1UL << DCDC_DCDCVRETCTRL_DCDC1VRETGPIINV_Pos) /*!< Bit mask of
                                                                            DCDC1VRETGPIINV field.*/                              
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPIINV_Min (0x0UL) /*!< Min enumerator value of DCDC1VRETGPIINV field.                    */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPIINV_Max (0x1UL) /*!< Max enumerator value of DCDC1VRETGPIINV field.                    */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPIINV_NORMAL (0x0UL) /*!< not Inverted                                                   */
  #define DCDC_DCDCVRETCTRL_DCDC1VRETGPIINV_INVERTED (0x1UL) /*!< Inverted                                                     */

/* DCDC2VRETGPIINV @Bit 7 : Invert the sense of the selected GPIO */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPIINV_Pos (7UL) /*!< Position of DCDC2VRETGPIINV field.                                  */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPIINV_Msk (0x1UL << DCDC_DCDCVRETCTRL_DCDC2VRETGPIINV_Pos) /*!< Bit mask of
                                                                            DCDC2VRETGPIINV field.*/                              
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPIINV_Min (0x0UL) /*!< Min enumerator value of DCDC2VRETGPIINV field.                    */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPIINV_Max (0x1UL) /*!< Max enumerator value of DCDC2VRETGPIINV field.                    */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPIINV_NORMAL (0x0UL) /*!< not Inverted                                                   */
  #define DCDC_DCDCVRETCTRL_DCDC2VRETGPIINV_INVERTED (0x1UL) /*!< Inverted                                                     */


/* DCDC_DCDCPWMCTRL: DCDC Forced PWM mode GPIO select */
  #define DCDC_DCDCPWMCTRL_ResetValue (0x00UL)       /*!< Reset value of DCDCPWMCTRL register.                                 */

/* DCDC1PWMGPISEL @Bits 0..2 : Select which GPI controls DCDC1 force PWM */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_Pos (0UL)  /*!< Position of DCDC1PWMGPISEL field.                                    */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_Msk (0x7UL << DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_Pos) /*!< Bit mask of DCDC1PWMGPISEL
                                                                            field.*/                                              
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_Min (0x0UL) /*!< Min enumerator value of DCDC1PWMGPISEL field.                       */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_Max (0x7UL) /*!< Max enumerator value of DCDC1PWMGPISEL field.                       */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_NOTUSED1 (0x0UL) /*!< Not used                                                       */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_GPIO0 (0x1UL) /*!< GPI_0 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_GPIO1 (0x2UL) /*!< GPI_1 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_GPIO2 (0x3UL) /*!< GPI_2 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_GPIO3 (0x4UL) /*!< GPI_3 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_GPIO4 (0x5UL) /*!< GPI_4 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_NOTUSED (0x6UL) /*!< Not used                                                        */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPISEL_NOTUSED2 (0x7UL) /*!< Not used                                                       */

/* DCDC2PWMGPISEL @Bits 3..5 : Select which GPI controls DCDC2 force PWM */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_Pos (3UL)  /*!< Position of DCDC2PWMGPISEL field.                                    */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_Msk (0x7UL << DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_Pos) /*!< Bit mask of DCDC2PWMGPISEL
                                                                            field.*/                                              
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_Min (0x0UL) /*!< Min enumerator value of DCDC2PWMGPISEL field.                       */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_Max (0x7UL) /*!< Max enumerator value of DCDC2PWMGPISEL field.                       */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_NOTUSED1 (0x0UL) /*!< Not used                                                       */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_GPIO0 (0x1UL) /*!< GPI_0 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_GPIO1 (0x2UL) /*!< GPI_1 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_GPIO2 (0x3UL) /*!< GPI_2 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_GPIO3 (0x4UL) /*!< GPI_3 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_GPIO4 (0x5UL) /*!< GPI_4 selected                                                    */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_NOTUSED (0x6UL) /*!< Not used                                                        */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPISEL_NOTUSED2 (0x7UL) /*!< Not used                                                       */

/* DCDC1PWMGPIINV @Bit 6 : Invert the sense of the selected GPIO */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPIINV_Pos (6UL)  /*!< Position of DCDC1PWMGPIINV field.                                    */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPIINV_Msk (0x1UL << DCDC_DCDCPWMCTRL_DCDC1PWMGPIINV_Pos) /*!< Bit mask of DCDC1PWMGPIINV
                                                                            field.*/                                              
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPIINV_Min (0x0UL) /*!< Min enumerator value of DCDC1PWMGPIINV field.                       */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPIINV_Max (0x1UL) /*!< Max enumerator value of DCDC1PWMGPIINV field.                       */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPIINV_NORMAL (0x0UL) /*!< not Inverted                                                     */
  #define DCDC_DCDCPWMCTRL_DCDC1PWMGPIINV_INVERTED (0x1UL) /*!< Inverted                                                       */

/* DCDC2PWMGPIINV @Bit 7 : Invert the sense of the selected GPIO */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPIINV_Pos (7UL)  /*!< Position of DCDC2PWMGPIINV field.                                    */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPIINV_Msk (0x1UL << DCDC_DCDCPWMCTRL_DCDC2PWMGPIINV_Pos) /*!< Bit mask of DCDC2PWMGPIINV
                                                                            field.*/                                              
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPIINV_Min (0x0UL) /*!< Min enumerator value of DCDC2PWMGPIINV field.                       */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPIINV_Max (0x1UL) /*!< Max enumerator value of DCDC2PWMGPIINV field.                       */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPIINV_NORMAL (0x0UL) /*!< not Inverted                                                     */
  #define DCDC_DCDCPWMCTRL_DCDC2PWMGPIINV_INVERTED (0x1UL) /*!< Inverted                                                       */


/* DCDC_DCDCSWCTRLSEL: DCDC Software Control select */
  #define DCDC_DCDCSWCTRLSEL_ResetValue (0x00UL)     /*!< Reset value of DCDCSWCTRLSEL register.                               */

/* DCDC1SWCTRLSEL @Bit 0 : dcdc1SwCtrlSel */
  #define DCDC_DCDCSWCTRLSEL_DCDC1SWCTRLSEL_Pos (0UL) /*!< Position of DCDC1SWCTRLSEL field.                                   */
  #define DCDC_DCDCSWCTRLSEL_DCDC1SWCTRLSEL_Msk (0x1UL << DCDC_DCDCSWCTRLSEL_DCDC1SWCTRLSEL_Pos) /*!< Bit mask of DCDC1SWCTRLSEL
                                                                            field.*/                                              
  #define DCDC_DCDCSWCTRLSEL_DCDC1SWCTRLSEL_Min (0x0UL) /*!< Min enumerator value of DCDC1SWCTRLSEL field.                     */
  #define DCDC_DCDCSWCTRLSEL_DCDC1SWCTRLSEL_Max (0x1UL) /*!< Max enumerator value of DCDC1SWCTRLSEL field.                     */
  #define DCDC_DCDCSWCTRLSEL_DCDC1SWCTRLSEL_VSETANDSWCTRL (0x0UL) /*!< Allow VSET pins to set VOUT                             */
  #define DCDC_DCDCSWCTRLSEL_DCDC1SWCTRLSEL_SWCTRL (0x1UL) /*!< Allow SW to override VSET pin                                  */

/* DCDC2SWCTRLSEL @Bit 1 : dcdc2SwCtrlSel */
  #define DCDC_DCDCSWCTRLSEL_DCDC2SWCTRLSEL_Pos (1UL) /*!< Position of DCDC2SWCTRLSEL field.                                   */
  #define DCDC_DCDCSWCTRLSEL_DCDC2SWCTRLSEL_Msk (0x1UL << DCDC_DCDCSWCTRLSEL_DCDC2SWCTRLSEL_Pos) /*!< Bit mask of DCDC2SWCTRLSEL
                                                                            field.*/                                              
  #define DCDC_DCDCSWCTRLSEL_DCDC2SWCTRLSEL_Min (0x0UL) /*!< Min enumerator value of DCDC2SWCTRLSEL field.                     */
  #define DCDC_DCDCSWCTRLSEL_DCDC2SWCTRLSEL_Max (0x1UL) /*!< Max enumerator value of DCDC2SWCTRLSEL field.                     */
  #define DCDC_DCDCSWCTRLSEL_DCDC2SWCTRLSEL_VSETANDSWCTRL (0x0UL) /*!< Allow VSET pins to set VOUT                             */
  #define DCDC_DCDCSWCTRLSEL_DCDC2SWCTRLSEL_SWCTRL (0x1UL) /*!< Allow SW to override VSET pin                                  */


/* DCDC_DCDC1VOUTSTATUS: DCDC1 Vout Status register. Lets software read the Vout value in case its driven by the FSM. */
  #define DCDC_DCDC1VOUTSTATUS_ResetValue (0x00UL)   /*!< Reset value of DCDC1VOUTSTATUS register.                             */

/* DCDC1VOUTSTATUS @Bits 0..4 : dcdc1VoutStatus */
  #define DCDC_DCDC1VOUTSTATUS_DCDC1VOUTSTATUS_Pos (0UL) /*!< Position of DCDC1VOUTSTATUS field.                               */
  #define DCDC_DCDC1VOUTSTATUS_DCDC1VOUTSTATUS_Msk (0x1FUL << DCDC_DCDC1VOUTSTATUS_DCDC1VOUTSTATUS_Pos) /*!< Bit mask of
                                                                            DCDC1VOUTSTATUS field.*/                              


/* DCDC_DCDC2VOUTSTATUS: DCDC2 Vout Status register. Lets software read the Vout value in case its driven by the FSM. */
  #define DCDC_DCDC2VOUTSTATUS_ResetValue (0x00UL)   /*!< Reset value of DCDC2VOUTSTATUS register.                             */

/* DCDC2VOUTSTATUS @Bits 0..4 : dcdc2VoutStatus */
  #define DCDC_DCDC2VOUTSTATUS_DCDC2VOUTSTATUS_Pos (0UL) /*!< Position of DCDC2VOUTSTATUS field.                               */
  #define DCDC_DCDC2VOUTSTATUS_DCDC2VOUTSTATUS_Msk (0x1FUL << DCDC_DCDC2VOUTSTATUS_DCDC2VOUTSTATUS_Pos) /*!< Bit mask of
                                                                            DCDC2VOUTSTATUS field.*/                              


/* DCDC_DCDC1CALBRT: DCDC1 Calibration word read output */
  #define DCDC_DCDC1CALBRT_ResetValue (0x00UL)       /*!< Reset value of DCDC1CALBRT register.                                 */

/* DCDC1OUTCALBRTREG @Bits 0..3 : dcdc1OutCalbrtReg */
  #define DCDC_DCDC1CALBRT_DCDC1OUTCALBRTREG_Pos (0UL) /*!< Position of DCDC1OUTCALBRTREG field.                               */
  #define DCDC_DCDC1CALBRT_DCDC1OUTCALBRTREG_Msk (0xFUL << DCDC_DCDC1CALBRT_DCDC1OUTCALBRTREG_Pos) /*!< Bit mask of
                                                                            DCDC1OUTCALBRTREG field.*/                            


/* DCDC_DCDC2CALBRT: DCDC2 Calibration word read output */
  #define DCDC_DCDC2CALBRT_ResetValue (0x00UL)       /*!< Reset value of DCDC2CALBRT register.                                 */

/* DCDC2OUTCALBRTREG @Bits 0..3 : dcdc2OutCalbrtReg */
  #define DCDC_DCDC2CALBRT_DCDC2OUTCALBRTREG_Pos (0UL) /*!< Position of DCDC2OUTCALBRTREG field.                               */
  #define DCDC_DCDC2CALBRT_DCDC2OUTCALBRTREG_Msk (0xFUL << DCDC_DCDC2CALBRT_DCDC2OUTCALBRTREG_Pos) /*!< Bit mask of
                                                                            DCDC2OUTCALBRTREG field.*/                            


/* DCDC_DCDCSPARESTATUS: DCDCx spare status read only register */
  #define DCDC_DCDCSPARESTATUS_ResetValue (0x00UL)   /*!< Reset value of DCDCSPARESTATUS register.                             */

/* DCDC1SPARESTATUS @Bits 0..3 : dcdc1SpareStatus */
  #define DCDC_DCDCSPARESTATUS_DCDC1SPARESTATUS_Pos (0UL) /*!< Position of DCDC1SPARESTATUS field.                             */
  #define DCDC_DCDCSPARESTATUS_DCDC1SPARESTATUS_Msk (0xFUL << DCDC_DCDCSPARESTATUS_DCDC1SPARESTATUS_Pos) /*!< Bit mask of
                                                                            DCDC1SPARESTATUS field.*/                             

/* DCDC2SPARESTATUS @Bits 4..7 : dcdc2SpareStatus */
  #define DCDC_DCDCSPARESTATUS_DCDC2SPARESTATUS_Pos (4UL) /*!< Position of DCDC2SPARESTATUS field.                             */
  #define DCDC_DCDCSPARESTATUS_DCDC2SPARESTATUS_Msk (0xFUL << DCDC_DCDCSPARESTATUS_DCDC2SPARESTATUS_Pos) /*!< Bit mask of
                                                                            DCDC2SPARESTATUS field.*/                             


/* DCDC_DCDCCTRL0: DCDC Auto PFM to PWM Control select */
  #define DCDC_DCDCCTRL0_ResetValue (0x00UL)         /*!< Reset value of DCDCCTRL0 register.                                   */

/* DCDC1AUTOCTRLSEL @Bit 0 : dcdc1AutoCtrlSel */
  #define DCDC_DCDCCTRL0_DCDC1AUTOCTRLSEL_Pos (0UL)  /*!< Position of DCDC1AUTOCTRLSEL field.                                  */
  #define DCDC_DCDCCTRL0_DCDC1AUTOCTRLSEL_Msk (0x1UL << DCDC_DCDCCTRL0_DCDC1AUTOCTRLSEL_Pos) /*!< Bit mask of DCDC1AUTOCTRLSEL
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL0_DCDC1AUTOCTRLSEL_Min (0x0UL) /*!< Min enumerator value of DCDC1AUTOCTRLSEL field.                     */
  #define DCDC_DCDCCTRL0_DCDC1AUTOCTRLSEL_Max (0x1UL) /*!< Max enumerator value of DCDC1AUTOCTRLSEL field.                     */
  #define DCDC_DCDCCTRL0_DCDC1AUTOCTRLSEL_AUTO (0x0UL) /*!< Select Auto switching between PFM and PWM                          */
  #define DCDC_DCDCCTRL0_DCDC1AUTOCTRLSEL_PFM (0x1UL) /*!< Select PFM mode only                                                */

/* DCDC2AUTOCTRLSEL @Bit 1 : dcdc2AutoCtrlSel */
  #define DCDC_DCDCCTRL0_DCDC2AUTOCTRLSEL_Pos (1UL)  /*!< Position of DCDC2AUTOCTRLSEL field.                                  */
  #define DCDC_DCDCCTRL0_DCDC2AUTOCTRLSEL_Msk (0x1UL << DCDC_DCDCCTRL0_DCDC2AUTOCTRLSEL_Pos) /*!< Bit mask of DCDC2AUTOCTRLSEL
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL0_DCDC2AUTOCTRLSEL_Min (0x0UL) /*!< Min enumerator value of DCDC2AUTOCTRLSEL field.                     */
  #define DCDC_DCDCCTRL0_DCDC2AUTOCTRLSEL_Max (0x1UL) /*!< Max enumerator value of DCDC2AUTOCTRLSEL field.                     */
  #define DCDC_DCDCCTRL0_DCDC2AUTOCTRLSEL_PFM (0x0UL) /*!< Select Auto switching between PFM and PWM                           */
  #define DCDC_DCDCCTRL0_DCDC2AUTOCTRLSEL_AUTO (0x1UL) /*!< Select PFM mode only                                               */

/* DCDC1ENPULLDOWN @Bit 2 : DCDC1_EN_PULLDOWN */
  #define DCDC_DCDCCTRL0_DCDC1ENPULLDOWN_Pos (2UL)   /*!< Position of DCDC1ENPULLDOWN field.                                   */
  #define DCDC_DCDCCTRL0_DCDC1ENPULLDOWN_Msk (0x1UL << DCDC_DCDCCTRL0_DCDC1ENPULLDOWN_Pos) /*!< Bit mask of DCDC1ENPULLDOWN
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL0_DCDC1ENPULLDOWN_Min (0x0UL) /*!< Min enumerator value of DCDC1ENPULLDOWN field.                       */
  #define DCDC_DCDCCTRL0_DCDC1ENPULLDOWN_Max (0x1UL) /*!< Max enumerator value of DCDC1ENPULLDOWN field.                       */
  #define DCDC_DCDCCTRL0_DCDC1ENPULLDOWN_LOW (0x0UL) /*!< DCDC1 Pull Down Disabled                                             */
  #define DCDC_DCDCCTRL0_DCDC1ENPULLDOWN_HIGH (0x1UL) /*!< DCDC1 Pull Down Enabled                                             */

/* DCDC2ENPULLDOWN @Bit 3 : DCDC2_EN_PULLDOWN */
  #define DCDC_DCDCCTRL0_DCDC2ENPULLDOWN_Pos (3UL)   /*!< Position of DCDC2ENPULLDOWN field.                                   */
  #define DCDC_DCDCCTRL0_DCDC2ENPULLDOWN_Msk (0x1UL << DCDC_DCDCCTRL0_DCDC2ENPULLDOWN_Pos) /*!< Bit mask of DCDC2ENPULLDOWN
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL0_DCDC2ENPULLDOWN_Min (0x0UL) /*!< Min enumerator value of DCDC2ENPULLDOWN field.                       */
  #define DCDC_DCDCCTRL0_DCDC2ENPULLDOWN_Max (0x1UL) /*!< Max enumerator value of DCDC2ENPULLDOWN field.                       */
  #define DCDC_DCDCCTRL0_DCDC2ENPULLDOWN_LOW (0x0UL) /*!< DCDC2 Pull Down Disabled                                             */
  #define DCDC_DCDCCTRL0_DCDC2ENPULLDOWN_HIGH (0x1UL) /*!< DCDC2 Pull Down Enabled                                             */


/* DCDC_DCDCCTRL1: DCDC CLK Sync control */
  #define DCDC_DCDCCTRL1_ResetValue (0x00UL)         /*!< Reset value of DCDCCTRL1 register.                                   */

/* DCDC1CLKPASSSYNC @Bit 0 : dcdc1ClkPassSync */
  #define DCDC_DCDCCTRL1_DCDC1CLKPASSSYNC_Pos (0UL)  /*!< Position of DCDC1CLKPASSSYNC field.                                  */
  #define DCDC_DCDCCTRL1_DCDC1CLKPASSSYNC_Msk (0x1UL << DCDC_DCDCCTRL1_DCDC1CLKPASSSYNC_Pos) /*!< Bit mask of DCDC1CLKPASSSYNC
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL1_DCDC1CLKPASSSYNC_Min (0x0UL) /*!< Min enumerator value of DCDC1CLKPASSSYNC field.                     */
  #define DCDC_DCDCCTRL1_DCDC1CLKPASSSYNC_Max (0x1UL) /*!< Max enumerator value of DCDC1CLKPASSSYNC field.                     */
  #define DCDC_DCDCCTRL1_DCDC1CLKPASSSYNC_DISABLE (0x0UL) /*!< clock sync disabled                                             */
  #define DCDC_DCDCCTRL1_DCDC1CLKPASSSYNC_ENABLE (0x1UL) /*!< clock sync enabled                                               */

/* DCDC1CLKENSYNCIN @Bit 1 : dcdc1ClkEnSyncin */
  #define DCDC_DCDCCTRL1_DCDC1CLKENSYNCIN_Pos (1UL)  /*!< Position of DCDC1CLKENSYNCIN field.                                  */
  #define DCDC_DCDCCTRL1_DCDC1CLKENSYNCIN_Msk (0x1UL << DCDC_DCDCCTRL1_DCDC1CLKENSYNCIN_Pos) /*!< Bit mask of DCDC1CLKENSYNCIN
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL1_DCDC1CLKENSYNCIN_Min (0x0UL) /*!< Min enumerator value of DCDC1CLKENSYNCIN field.                     */
  #define DCDC_DCDCCTRL1_DCDC1CLKENSYNCIN_Max (0x1UL) /*!< Max enumerator value of DCDC1CLKENSYNCIN field.                     */
  #define DCDC_DCDCCTRL1_DCDC1CLKENSYNCIN_DISABLE (0x0UL) /*!< syncin disabled                                                 */
  #define DCDC_DCDCCTRL1_DCDC1CLKENSYNCIN_ENABLE (0x1UL) /*!< syncin enabled                                                   */

/* DCDC2CLKPASSSYNC @Bit 2 : dcdc2ClkPassSync */
  #define DCDC_DCDCCTRL1_DCDC2CLKPASSSYNC_Pos (2UL)  /*!< Position of DCDC2CLKPASSSYNC field.                                  */
  #define DCDC_DCDCCTRL1_DCDC2CLKPASSSYNC_Msk (0x1UL << DCDC_DCDCCTRL1_DCDC2CLKPASSSYNC_Pos) /*!< Bit mask of DCDC2CLKPASSSYNC
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL1_DCDC2CLKPASSSYNC_Min (0x0UL) /*!< Min enumerator value of DCDC2CLKPASSSYNC field.                     */
  #define DCDC_DCDCCTRL1_DCDC2CLKPASSSYNC_Max (0x1UL) /*!< Max enumerator value of DCDC2CLKPASSSYNC field.                     */
  #define DCDC_DCDCCTRL1_DCDC2CLKPASSSYNC_DISABLE (0x0UL) /*!< clock sync disabled                                             */
  #define DCDC_DCDCCTRL1_DCDC2CLKPASSSYNC_ENABLE (0x1UL) /*!< clock sync enabled                                               */

/* DCDC2CLKENSYNCIN @Bit 3 : dcdc2ClkEnSyncin */
  #define DCDC_DCDCCTRL1_DCDC2CLKENSYNCIN_Pos (3UL)  /*!< Position of DCDC2CLKENSYNCIN field.                                  */
  #define DCDC_DCDCCTRL1_DCDC2CLKENSYNCIN_Msk (0x1UL << DCDC_DCDCCTRL1_DCDC2CLKENSYNCIN_Pos) /*!< Bit mask of DCDC2CLKENSYNCIN
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL1_DCDC2CLKENSYNCIN_Min (0x0UL) /*!< Min enumerator value of DCDC2CLKENSYNCIN field.                     */
  #define DCDC_DCDCCTRL1_DCDC2CLKENSYNCIN_Max (0x1UL) /*!< Max enumerator value of DCDC2CLKENSYNCIN field.                     */
  #define DCDC_DCDCCTRL1_DCDC2CLKENSYNCIN_DISABLE (0x0UL) /*!< syncin disabled                                                 */
  #define DCDC_DCDCCTRL1_DCDC2CLKENSYNCIN_ENABLE (0x1UL) /*!< syncin enabled                                                   */


/* DCDC_DCDCPWRUPCTRL: DCDCPWRUP control register */
  #define DCDC_DCDCPWRUPCTRL_ResetValue (0x00UL)     /*!< Reset value of DCDCPWRUPCTRL register.                               */

/* DCDCPWRUP @Bits 0..7 : Debug override for DCDC PWRUP signal */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_Pos (0UL)     /*!< Position of DCDCPWRUP field.                                         */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_Msk (0xFFUL << DCDC_DCDCPWRUPCTRL_DCDCPWRUP_Pos) /*!< Bit mask of DCDCPWRUP field.      */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_Min (0x1UL)   /*!< Min enumerator value of DCDCPWRUP field.                             */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_Max (0x80UL)  /*!< Max enumerator value of DCDCPWRUP field.                             */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_DC2PWR0 (0x01UL) /*!< dcd1pwr0                                                          */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_DC2PWR1 (0x02UL) /*!< dcdc1pwr1                                                         */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_DC2PWR2 (0x04UL) /*!< dcdc1pwr2                                                         */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_DC2PWR3 (0x08UL) /*!< dcdc1pwr3                                                         */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_DC2PWR4 (0x10UL) /*!< dcdc1pwr4                                                         */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_DC2PWR5 (0x20UL) /*!< dcdc1pwr5                                                         */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_DC2PWR6 (0x40UL) /*!< dcdc1pwr6                                                         */
  #define DCDC_DCDCPWRUPCTRL_DCDCPWRUP_DC2PWR7 (0x80UL) /*!< dcdc1pwr7                                                         */


/* DCDC_DCDCENHPMODE: DCDC HP_MODE enable register */
  #define DCDC_DCDCENHPMODE_ResetValue (0x00UL)      /*!< Reset value of DCDCENHPMODE register.                                */

/* DCDCENHPMODE @Bits 0..6 : dcdcEnHpmode */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_Pos (0UL)   /*!< Position of DCDCENHPMODE field.                                      */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_Msk (0x7FUL << DCDC_DCDCENHPMODE_DCDCENHPMODE_Pos) /*!< Bit mask of DCDCENHPMODE
                                                                            field.*/                                              
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_Min (0x1UL) /*!< Min enumerator value of DCDCENHPMODE field.                          */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_Max (0x40UL) /*!< Max enumerator value of DCDCENHPMODE field.                         */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_DC1HPMODE0 (0x01UL) /*!< dc1hpmode0                                                   */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_DC1HPMODE1 (0x02UL) /*!< dc1hpmode1                                                   */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_DC1HPMODE2 (0x04UL) /*!< dc1hpmode2                                                   */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_DC1HPMODE3 (0x08UL) /*!< dc1hpmode3                                                   */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_DC1HPMODE4 (0x10UL) /*!< dc1hpmode4                                                   */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_DC1HPMODE5 (0x20UL) /*!< dc1hpmode5                                                   */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODE_DC1HPMODE6 (0x40UL) /*!< dc1hpmode6                                                   */

/* DCDCENHPMODEFORCE @Bit 7 : dcdcEnHpmodeForce */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODEFORCE_Pos (7UL) /*!< Position of DCDCENHPMODEFORCE field.                              */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODEFORCE_Msk (0x1UL << DCDC_DCDCENHPMODE_DCDCENHPMODEFORCE_Pos) /*!< Bit mask of
                                                                            DCDCENHPMODEFORCE field.*/                            
  #define DCDC_DCDCENHPMODE_DCDCENHPMODEFORCE_Min (0x0UL) /*!< Min enumerator value of DCDCENHPMODEFORCE field.                */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODEFORCE_Max (0x1UL) /*!< Max enumerator value of DCDCENHPMODEFORCE field.                */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODEFORCE_NORMAL (0x0UL) /*!< normal mode                                                  */
  #define DCDC_DCDCENHPMODE_DCDCENHPMODEFORCE_OVRDFRC (0x1UL) /*!< force override                                              */


/* DCDC_DCDCCTRL2: DCDC common slew control NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDCCTRL2_ResetValue (0x00UL)         /*!< Reset value of DCDCCTRL2 register.                                   */

/* DCDC1PRGNSLEW @Bits 0..1 : DCDC1_N_Slew rate control */
  #define DCDC_DCDCCTRL2_DCDC1PRGNSLEW_Pos (0UL)     /*!< Position of DCDC1PRGNSLEW field.                                     */
  #define DCDC_DCDCCTRL2_DCDC1PRGNSLEW_Msk (0x3UL << DCDC_DCDCCTRL2_DCDC1PRGNSLEW_Pos) /*!< Bit mask of DCDC1PRGNSLEW field.   */
  #define DCDC_DCDCCTRL2_DCDC1PRGNSLEW_Min (0x0UL)   /*!< Min enumerator value of DCDC1PRGNSLEW field.                         */
  #define DCDC_DCDCCTRL2_DCDC1PRGNSLEW_Max (0x3UL)   /*!< Max enumerator value of DCDC1PRGNSLEW field.                         */
  #define DCDC_DCDCCTRL2_DCDC1PRGNSLEW_TBA (0x0UL)   /*!< Un used                                                              */
  #define DCDC_DCDCCTRL2_DCDC1PRGNSLEW_1V1 (0x1UL)   /*!< 1.1V                                                                 */
  #define DCDC_DCDCCTRL2_DCDC1PRGNSLEW_1V2 (0x2UL)   /*!< 1.2V                                                                 */
  #define DCDC_DCDCCTRL2_DCDC1PRGNSLEW_1V3 (0x3UL)   /*!< 1.3V                                                                 */

/* DCDC1PRGPSLEW @Bits 2..3 : DCDC1_P_Slew rate control */
  #define DCDC_DCDCCTRL2_DCDC1PRGPSLEW_Pos (2UL)     /*!< Position of DCDC1PRGPSLEW field.                                     */
  #define DCDC_DCDCCTRL2_DCDC1PRGPSLEW_Msk (0x3UL << DCDC_DCDCCTRL2_DCDC1PRGPSLEW_Pos) /*!< Bit mask of DCDC1PRGPSLEW field.   */
  #define DCDC_DCDCCTRL2_DCDC1PRGPSLEW_Min (0x0UL)   /*!< Min enumerator value of DCDC1PRGPSLEW field.                         */
  #define DCDC_DCDCCTRL2_DCDC1PRGPSLEW_Max (0x3UL)   /*!< Max enumerator value of DCDC1PRGPSLEW field.                         */
  #define DCDC_DCDCCTRL2_DCDC1PRGPSLEW_TBA (0x0UL)   /*!< Un used                                                              */
  #define DCDC_DCDCCTRL2_DCDC1PRGPSLEW_1V1 (0x1UL)   /*!< 1.1V                                                                 */
  #define DCDC_DCDCCTRL2_DCDC1PRGPSLEW_1V2 (0x2UL)   /*!< 1.2V                                                                 */
  #define DCDC_DCDCCTRL2_DCDC1PRGPSLEW_1V4 (0x3UL)   /*!< 1.4V                                                                 */

/* DCDC2PRGNSLEW @Bits 4..5 : DCDCDC2_N_Slew rate control */
  #define DCDC_DCDCCTRL2_DCDC2PRGNSLEW_Pos (4UL)     /*!< Position of DCDC2PRGNSLEW field.                                     */
  #define DCDC_DCDCCTRL2_DCDC2PRGNSLEW_Msk (0x3UL << DCDC_DCDCCTRL2_DCDC2PRGNSLEW_Pos) /*!< Bit mask of DCDC2PRGNSLEW field.   */
  #define DCDC_DCDCCTRL2_DCDC2PRGNSLEW_Min (0x0UL)   /*!< Min enumerator value of DCDC2PRGNSLEW field.                         */
  #define DCDC_DCDCCTRL2_DCDC2PRGNSLEW_Max (0x3UL)   /*!< Max enumerator value of DCDC2PRGNSLEW field.                         */
  #define DCDC_DCDCCTRL2_DCDC2PRGNSLEW_TBA (0x0UL)   /*!< Un used                                                              */
  #define DCDC_DCDCCTRL2_DCDC2PRGNSLEW_1V1 (0x1UL)   /*!< 1.1V                                                                 */
  #define DCDC_DCDCCTRL2_DCDC2PRGNSLEW_1V2 (0x2UL)   /*!< 1.2V                                                                 */
  #define DCDC_DCDCCTRL2_DCDC2PRGNSLEW_1V5 (0x3UL)   /*!< 1.5V                                                                 */

/* DCDC2PRGPSLEW @Bits 6..7 : DCDCDC2_P_Slew rate control */
  #define DCDC_DCDCCTRL2_DCDC2PRGPSLEW_Pos (6UL)     /*!< Position of DCDC2PRGPSLEW field.                                     */
  #define DCDC_DCDCCTRL2_DCDC2PRGPSLEW_Msk (0x3UL << DCDC_DCDCCTRL2_DCDC2PRGPSLEW_Pos) /*!< Bit mask of DCDC2PRGPSLEW field.   */
  #define DCDC_DCDCCTRL2_DCDC2PRGPSLEW_Min (0x0UL)   /*!< Min enumerator value of DCDC2PRGPSLEW field.                         */
  #define DCDC_DCDCCTRL2_DCDC2PRGPSLEW_Max (0x3UL)   /*!< Max enumerator value of DCDC2PRGPSLEW field.                         */
  #define DCDC_DCDCCTRL2_DCDC2PRGPSLEW_TBA (0x0UL)   /*!< Un used                                                              */
  #define DCDC_DCDCCTRL2_DCDC2PRGPSLEW_1V1 (0x1UL)   /*!< 1.1V                                                                 */
  #define DCDC_DCDCCTRL2_DCDC2PRGPSLEW_1V2 (0x2UL)   /*!< 1.2V                                                                 */
  #define DCDC_DCDCCTRL2_DCDC2PRGPSLEW_1V6 (0x3UL)   /*!< 1.6V                                                                 */


/* DCDC_DCDCCTRL3: DCDC common debug register 0 */
  #define DCDC_DCDCCTRL3_ResetValue (0x00UL)         /*!< Reset value of DCDCCTRL3 register.                                   */

/* PWRUPFORCE @Bit 0 : Common DCDC PWRUP override enable */
  #define DCDC_DCDCCTRL3_PWRUPFORCE_Pos (0UL)        /*!< Position of PWRUPFORCE field.                                        */
  #define DCDC_DCDCCTRL3_PWRUPFORCE_Msk (0x1UL << DCDC_DCDCCTRL3_PWRUPFORCE_Pos) /*!< Bit mask of PWRUPFORCE field.            */
  #define DCDC_DCDCCTRL3_PWRUPFORCE_Min (0x0UL)      /*!< Min enumerator value of PWRUPFORCE field.                            */
  #define DCDC_DCDCCTRL3_PWRUPFORCE_Max (0x1UL)      /*!< Max enumerator value of PWRUPFORCE field.                            */
  #define DCDC_DCDCCTRL3_PWRUPFORCE_NOEFFECT (0x0UL) /*!< No effect                                                            */
  #define DCDC_DCDCCTRL3_PWRUPFORCE_SET (0x1UL)      /*!< set                                                                  */

/* OFFFORCEVALUE @Bit 1 : offForceValue */
  #define DCDC_DCDCCTRL3_OFFFORCEVALUE_Pos (1UL)     /*!< Position of OFFFORCEVALUE field.                                     */
  #define DCDC_DCDCCTRL3_OFFFORCEVALUE_Msk (0x1UL << DCDC_DCDCCTRL3_OFFFORCEVALUE_Pos) /*!< Bit mask of OFFFORCEVALUE field.   */
  #define DCDC_DCDCCTRL3_OFFFORCEVALUE_Min (0x0UL)   /*!< Min enumerator value of OFFFORCEVALUE field.                         */
  #define DCDC_DCDCCTRL3_OFFFORCEVALUE_Max (0x1UL)   /*!< Max enumerator value of OFFFORCEVALUE field.                         */
  #define DCDC_DCDCCTRL3_OFFFORCEVALUE_NOEFFECT (0x0UL) /*!< No effect                                                         */
  #define DCDC_DCDCCTRL3_OFFFORCEVALUE_SET (0x1UL)   /*!< set                                                                  */

/* HPBIAS @Bit 2 : hpBias */
  #define DCDC_DCDCCTRL3_HPBIAS_Pos (2UL)            /*!< Position of HPBIAS field.                                            */
  #define DCDC_DCDCCTRL3_HPBIAS_Msk (0x1UL << DCDC_DCDCCTRL3_HPBIAS_Pos) /*!< Bit mask of HPBIAS field.                        */
  #define DCDC_DCDCCTRL3_HPBIAS_Min (0x0UL)          /*!< Min enumerator value of HPBIAS field.                                */
  #define DCDC_DCDCCTRL3_HPBIAS_Max (0x1UL)          /*!< Max enumerator value of HPBIAS field.                                */
  #define DCDC_DCDCCTRL3_HPBIAS_NOEFFECT (0x0UL)     /*!< No effect                                                            */
  #define DCDC_DCDCCTRL3_HPBIAS_SET (0x1UL)          /*!< set                                                                  */

/* HPREFRESH @Bit 3 : hpRefresh */
  #define DCDC_DCDCCTRL3_HPREFRESH_Pos (3UL)         /*!< Position of HPREFRESH field.                                         */
  #define DCDC_DCDCCTRL3_HPREFRESH_Msk (0x1UL << DCDC_DCDCCTRL3_HPREFRESH_Pos) /*!< Bit mask of HPREFRESH field.               */
  #define DCDC_DCDCCTRL3_HPREFRESH_Min (0x0UL)       /*!< Min enumerator value of HPREFRESH field.                             */
  #define DCDC_DCDCCTRL3_HPREFRESH_Max (0x1UL)       /*!< Max enumerator value of HPREFRESH field.                             */
  #define DCDC_DCDCCTRL3_HPREFRESH_NOEFFECT (0x0UL)  /*!< No effect                                                            */
  #define DCDC_DCDCCTRL3_HPREFRESH_SET (0x1UL)       /*!< set                                                                  */

/* HPREFRESHFORCE @Bit 4 : hpRefreshForce */
  #define DCDC_DCDCCTRL3_HPREFRESHFORCE_Pos (4UL)    /*!< Position of HPREFRESHFORCE field.                                    */
  #define DCDC_DCDCCTRL3_HPREFRESHFORCE_Msk (0x1UL << DCDC_DCDCCTRL3_HPREFRESHFORCE_Pos) /*!< Bit mask of HPREFRESHFORCE field.*/
  #define DCDC_DCDCCTRL3_HPREFRESHFORCE_Min (0x0UL)  /*!< Min enumerator value of HPREFRESHFORCE field.                        */
  #define DCDC_DCDCCTRL3_HPREFRESHFORCE_Max (0x1UL)  /*!< Max enumerator value of HPREFRESHFORCE field.                        */
  #define DCDC_DCDCCTRL3_HPREFRESHFORCE_NOEFFECT (0x0UL) /*!< No effect                                                        */
  #define DCDC_DCDCCTRL3_HPREFRESHFORCE_SET (0x1UL)  /*!< set                                                                  */

/* HPBIASFORCE @Bit 5 : hpBiasForce */
  #define DCDC_DCDCCTRL3_HPBIASFORCE_Pos (5UL)       /*!< Position of HPBIASFORCE field.                                       */
  #define DCDC_DCDCCTRL3_HPBIASFORCE_Msk (0x1UL << DCDC_DCDCCTRL3_HPBIASFORCE_Pos) /*!< Bit mask of HPBIASFORCE field.         */
  #define DCDC_DCDCCTRL3_HPBIASFORCE_Min (0x0UL)     /*!< Min enumerator value of HPBIASFORCE field.                           */
  #define DCDC_DCDCCTRL3_HPBIASFORCE_Max (0x1UL)     /*!< Max enumerator value of HPBIASFORCE field.                           */
  #define DCDC_DCDCCTRL3_HPBIASFORCE_NOEFFECT (0x0UL) /*!< No effect                                                           */
  #define DCDC_DCDCCTRL3_HPBIASFORCE_SET (0x1UL)     /*!< set                                                                  */

/* HSAVGVALUE @Bit 6 : hsavgValue */
  #define DCDC_DCDCCTRL3_HSAVGVALUE_Pos (6UL)        /*!< Position of HSAVGVALUE field.                                        */
  #define DCDC_DCDCCTRL3_HSAVGVALUE_Msk (0x1UL << DCDC_DCDCCTRL3_HSAVGVALUE_Pos) /*!< Bit mask of HSAVGVALUE field.            */
  #define DCDC_DCDCCTRL3_HSAVGVALUE_Min (0x0UL)      /*!< Min enumerator value of HSAVGVALUE field.                            */
  #define DCDC_DCDCCTRL3_HSAVGVALUE_Max (0x1UL)      /*!< Max enumerator value of HSAVGVALUE field.                            */
  #define DCDC_DCDCCTRL3_HSAVGVALUE_NOEFFECT (0x0UL) /*!< No effect                                                            */
  #define DCDC_DCDCCTRL3_HSAVGVALUE_SET (0x1UL)      /*!< set                                                                  */

/* HSAVGFORCE @Bit 7 : hsavgForce */
  #define DCDC_DCDCCTRL3_HSAVGFORCE_Pos (7UL)        /*!< Position of HSAVGFORCE field.                                        */
  #define DCDC_DCDCCTRL3_HSAVGFORCE_Msk (0x1UL << DCDC_DCDCCTRL3_HSAVGFORCE_Pos) /*!< Bit mask of HSAVGFORCE field.            */
  #define DCDC_DCDCCTRL3_HSAVGFORCE_Min (0x0UL)      /*!< Min enumerator value of HSAVGFORCE field.                            */
  #define DCDC_DCDCCTRL3_HSAVGFORCE_Max (0x1UL)      /*!< Max enumerator value of HSAVGFORCE field.                            */
  #define DCDC_DCDCCTRL3_HSAVGFORCE_NOEFFECT (0x0UL) /*!< No effect                                                            */
  #define DCDC_DCDCCTRL3_HSAVGFORCE_SET (0x1UL)      /*!< set                                                                  */


/* DCDC_DCDCCTRL4: DCDC common debug register 2 */
  #define DCDC_DCDCCTRL4_ResetValue (0x00UL)         /*!< Reset value of DCDCCTRL4 register.                                   */

/* REFRESHULPREFFBCK @Bit 0 : refreshUlpRefFbck */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCK_Pos (0UL) /*!< Position of REFRESHULPREFFBCK field.                                 */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCK_Msk (0x1UL << DCDC_DCDCCTRL4_REFRESHULPREFFBCK_Pos) /*!< Bit mask of
                                                                            REFRESHULPREFFBCK field.*/                            
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCK_Min (0x0UL) /*!< Min enumerator value of REFRESHULPREFFBCK field.                   */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCK_Max (0x1UL) /*!< Max enumerator value of REFRESHULPREFFBCK field.                   */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCK_NORMAL (0x0UL) /*!< normal mode                                                     */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCK_OVRDVAL (0x1UL) /*!< override value                                                 */

/* REFRESHULPREFFBCKFORCE @Bit 1 : refreshUlpRefFbckForce */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCKFORCE_Pos (1UL) /*!< Position of REFRESHULPREFFBCKFORCE field.                       */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCKFORCE_Msk (0x1UL << DCDC_DCDCCTRL4_REFRESHULPREFFBCKFORCE_Pos) /*!< Bit mask of
                                                                            REFRESHULPREFFBCKFORCE field.*/                       
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCKFORCE_Min (0x0UL) /*!< Min enumerator value of REFRESHULPREFFBCKFORCE field.         */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCKFORCE_Max (0x1UL) /*!< Max enumerator value of REFRESHULPREFFBCKFORCE field.         */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCKFORCE_NORMAL (0x0UL) /*!< normal mode                                                */
  #define DCDC_DCDCCTRL4_REFRESHULPREFFBCKFORCE_OVRDFRC (0x1UL) /*!< force override                                            */

/* ULPREFRESH @Bit 2 : ulpRefresh */
  #define DCDC_DCDCCTRL4_ULPREFRESH_Pos (2UL)        /*!< Position of ULPREFRESH field.                                        */
  #define DCDC_DCDCCTRL4_ULPREFRESH_Msk (0x1UL << DCDC_DCDCCTRL4_ULPREFRESH_Pos) /*!< Bit mask of ULPREFRESH field.            */
  #define DCDC_DCDCCTRL4_ULPREFRESH_Min (0x0UL)      /*!< Min enumerator value of ULPREFRESH field.                            */
  #define DCDC_DCDCCTRL4_ULPREFRESH_Max (0x1UL)      /*!< Max enumerator value of ULPREFRESH field.                            */
  #define DCDC_DCDCCTRL4_ULPREFRESH_NORMAL (0x0UL)   /*!< normal mode                                                          */
  #define DCDC_DCDCCTRL4_ULPREFRESH_OVRDVAL (0x1UL)  /*!< override value                                                       */

/* ULPREFRESHFORCE @Bit 3 : ulpRefreshForce */
  #define DCDC_DCDCCTRL4_ULPREFRESHFORCE_Pos (3UL)   /*!< Position of ULPREFRESHFORCE field.                                   */
  #define DCDC_DCDCCTRL4_ULPREFRESHFORCE_Msk (0x1UL << DCDC_DCDCCTRL4_ULPREFRESHFORCE_Pos) /*!< Bit mask of ULPREFRESHFORCE
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL4_ULPREFRESHFORCE_Min (0x0UL) /*!< Min enumerator value of ULPREFRESHFORCE field.                       */
  #define DCDC_DCDCCTRL4_ULPREFRESHFORCE_Max (0x1UL) /*!< Max enumerator value of ULPREFRESHFORCE field.                       */
  #define DCDC_DCDCCTRL4_ULPREFRESHFORCE_NORMAL (0x0UL) /*!< normal mode                                                       */
  #define DCDC_DCDCCTRL4_ULPREFRESHFORCE_OVRDFRC (0x1UL) /*!< force override                                                   */

/* ENHYSTH @Bit 4 : enHysth */
  #define DCDC_DCDCCTRL4_ENHYSTH_Pos (4UL)           /*!< Position of ENHYSTH field.                                           */
  #define DCDC_DCDCCTRL4_ENHYSTH_Msk (0x1UL << DCDC_DCDCCTRL4_ENHYSTH_Pos) /*!< Bit mask of ENHYSTH field.                     */
  #define DCDC_DCDCCTRL4_ENHYSTH_Min (0x0UL)         /*!< Min enumerator value of ENHYSTH field.                               */
  #define DCDC_DCDCCTRL4_ENHYSTH_Max (0x1UL)         /*!< Max enumerator value of ENHYSTH field.                               */
  #define DCDC_DCDCCTRL4_ENHYSTH_NORMAL (0x0UL)      /*!< normal mode                                                          */
  #define DCDC_DCDCCTRL4_ENHYSTH_OVRDVAL (0x1UL)     /*!< override value                                                       */

/* ENHYSTHFORCE @Bit 5 : enHysthForce */
  #define DCDC_DCDCCTRL4_ENHYSTHFORCE_Pos (5UL)      /*!< Position of ENHYSTHFORCE field.                                      */
  #define DCDC_DCDCCTRL4_ENHYSTHFORCE_Msk (0x1UL << DCDC_DCDCCTRL4_ENHYSTHFORCE_Pos) /*!< Bit mask of ENHYSTHFORCE field.      */
  #define DCDC_DCDCCTRL4_ENHYSTHFORCE_Min (0x0UL)    /*!< Min enumerator value of ENHYSTHFORCE field.                          */
  #define DCDC_DCDCCTRL4_ENHYSTHFORCE_Max (0x1UL)    /*!< Max enumerator value of ENHYSTHFORCE field.                          */
  #define DCDC_DCDCCTRL4_ENHYSTHFORCE_NORMAL (0x0UL) /*!< normal mode                                                          */
  #define DCDC_DCDCCTRL4_ENHYSTHFORCE_OVRDFRC (0x1UL) /*!< force override                                                      */

/* MAGNETIZEVALUE @Bit 6 : magnetizeValue */
  #define DCDC_DCDCCTRL4_MAGNETIZEVALUE_Pos (6UL)    /*!< Position of MAGNETIZEVALUE field.                                    */
  #define DCDC_DCDCCTRL4_MAGNETIZEVALUE_Msk (0x1UL << DCDC_DCDCCTRL4_MAGNETIZEVALUE_Pos) /*!< Bit mask of MAGNETIZEVALUE field.*/
  #define DCDC_DCDCCTRL4_MAGNETIZEVALUE_Min (0x0UL)  /*!< Min enumerator value of MAGNETIZEVALUE field.                        */
  #define DCDC_DCDCCTRL4_MAGNETIZEVALUE_Max (0x1UL)  /*!< Max enumerator value of MAGNETIZEVALUE field.                        */
  #define DCDC_DCDCCTRL4_MAGNETIZEVALUE_NORMAL (0x0UL) /*!< normal mode                                                        */
  #define DCDC_DCDCCTRL4_MAGNETIZEVALUE_OVRDVAL (0x1UL) /*!< override value                                                    */

/* MAGNETIZEOFFFORCE @Bit 7 : magnetizeOffForce */
  #define DCDC_DCDCCTRL4_MAGNETIZEOFFFORCE_Pos (7UL) /*!< Position of MAGNETIZEOFFFORCE field.                                 */
  #define DCDC_DCDCCTRL4_MAGNETIZEOFFFORCE_Msk (0x1UL << DCDC_DCDCCTRL4_MAGNETIZEOFFFORCE_Pos) /*!< Bit mask of
                                                                            MAGNETIZEOFFFORCE field.*/                            
  #define DCDC_DCDCCTRL4_MAGNETIZEOFFFORCE_Min (0x0UL) /*!< Min enumerator value of MAGNETIZEOFFFORCE field.                   */
  #define DCDC_DCDCCTRL4_MAGNETIZEOFFFORCE_Max (0x1UL) /*!< Max enumerator value of MAGNETIZEOFFFORCE field.                   */
  #define DCDC_DCDCCTRL4_MAGNETIZEOFFFORCE_NORMAL (0x0UL) /*!< normal mode                                                     */
  #define DCDC_DCDCCTRL4_MAGNETIZEOFFFORCE_OVRDFRC (0x1UL) /*!< force override                                                 */


/* DCDC_DCDCCTRL5: DCDC common debug register 3 */
  #define DCDC_DCDCCTRL5_ResetValue (0x00UL)         /*!< Reset value of DCDCCTRL5 register.                                   */

/* CCMMODE @Bit 0 : ccmMode */
  #define DCDC_DCDCCTRL5_CCMMODE_Pos (0UL)           /*!< Position of CCMMODE field.                                           */
  #define DCDC_DCDCCTRL5_CCMMODE_Msk (0x1UL << DCDC_DCDCCTRL5_CCMMODE_Pos) /*!< Bit mask of CCMMODE field.                     */
  #define DCDC_DCDCCTRL5_CCMMODE_Min (0x0UL)         /*!< Min enumerator value of CCMMODE field.                               */
  #define DCDC_DCDCCTRL5_CCMMODE_Max (0x1UL)         /*!< Max enumerator value of CCMMODE field.                               */
  #define DCDC_DCDCCTRL5_CCMMODE_NORMAL (0x0UL)      /*!< normal mode                                                          */
  #define DCDC_DCDCCTRL5_CCMMODE_OVRDVAL (0x1UL)     /*!< override value                                                       */

/* CCMMODEFORCE @Bit 1 : ccmModeForce */
  #define DCDC_DCDCCTRL5_CCMMODEFORCE_Pos (1UL)      /*!< Position of CCMMODEFORCE field.                                      */
  #define DCDC_DCDCCTRL5_CCMMODEFORCE_Msk (0x1UL << DCDC_DCDCCTRL5_CCMMODEFORCE_Pos) /*!< Bit mask of CCMMODEFORCE field.      */
  #define DCDC_DCDCCTRL5_CCMMODEFORCE_Min (0x0UL)    /*!< Min enumerator value of CCMMODEFORCE field.                          */
  #define DCDC_DCDCCTRL5_CCMMODEFORCE_Max (0x1UL)    /*!< Max enumerator value of CCMMODEFORCE field.                          */
  #define DCDC_DCDCCTRL5_CCMMODEFORCE_NORMAL (0x0UL) /*!< normal mode                                                          */
  #define DCDC_DCDCCTRL5_CCMMODEFORCE_OVRDFRC (0x1UL) /*!< force override                                                      */

/* ENSOFTSTART @Bit 2 : enSoftstart */
  #define DCDC_DCDCCTRL5_ENSOFTSTART_Pos (2UL)       /*!< Position of ENSOFTSTART field.                                       */
  #define DCDC_DCDCCTRL5_ENSOFTSTART_Msk (0x1UL << DCDC_DCDCCTRL5_ENSOFTSTART_Pos) /*!< Bit mask of ENSOFTSTART field.         */
  #define DCDC_DCDCCTRL5_ENSOFTSTART_Min (0x0UL)     /*!< Min enumerator value of ENSOFTSTART field.                           */
  #define DCDC_DCDCCTRL5_ENSOFTSTART_Max (0x1UL)     /*!< Max enumerator value of ENSOFTSTART field.                           */
  #define DCDC_DCDCCTRL5_ENSOFTSTART_NORMAL (0x0UL)  /*!< normal mode                                                          */
  #define DCDC_DCDCCTRL5_ENSOFTSTART_OVRDVAL (0x1UL) /*!< override value                                                       */

/* ENSOFTSTARTFORCE @Bit 3 : enSoftstartForce */
  #define DCDC_DCDCCTRL5_ENSOFTSTARTFORCE_Pos (3UL)  /*!< Position of ENSOFTSTARTFORCE field.                                  */
  #define DCDC_DCDCCTRL5_ENSOFTSTARTFORCE_Msk (0x1UL << DCDC_DCDCCTRL5_ENSOFTSTARTFORCE_Pos) /*!< Bit mask of ENSOFTSTARTFORCE
                                                                            field.*/                                              
  #define DCDC_DCDCCTRL5_ENSOFTSTARTFORCE_Min (0x0UL) /*!< Min enumerator value of ENSOFTSTARTFORCE field.                     */
  #define DCDC_DCDCCTRL5_ENSOFTSTARTFORCE_Max (0x1UL) /*!< Max enumerator value of ENSOFTSTARTFORCE field.                     */
  #define DCDC_DCDCCTRL5_ENSOFTSTARTFORCE_NORMAL (0x0UL) /*!< normal mode                                                      */
  #define DCDC_DCDCCTRL5_ENSOFTSTARTFORCE_OVRDFRC (0x1UL) /*!< force override                                                  */

/* ENPWMDUTY @Bit 4 : enPwmDuty */
  #define DCDC_DCDCCTRL5_ENPWMDUTY_Pos (4UL)         /*!< Position of ENPWMDUTY field.                                         */
  #define DCDC_DCDCCTRL5_ENPWMDUTY_Msk (0x1UL << DCDC_DCDCCTRL5_ENPWMDUTY_Pos) /*!< Bit mask of ENPWMDUTY field.               */
  #define DCDC_DCDCCTRL5_ENPWMDUTY_Min (0x0UL)       /*!< Min enumerator value of ENPWMDUTY field.                             */
  #define DCDC_DCDCCTRL5_ENPWMDUTY_Max (0x1UL)       /*!< Max enumerator value of ENPWMDUTY field.                             */
  #define DCDC_DCDCCTRL5_ENPWMDUTY_NORMAL (0x0UL)    /*!< normal mode                                                          */
  #define DCDC_DCDCCTRL5_ENPWMDUTY_OVRDVAL (0x1UL)   /*!< override value                                                       */

/* ENPWMDUTYFORCE @Bit 5 : enPwmDutyForce */
  #define DCDC_DCDCCTRL5_ENPWMDUTYFORCE_Pos (5UL)    /*!< Position of ENPWMDUTYFORCE field.                                    */
  #define DCDC_DCDCCTRL5_ENPWMDUTYFORCE_Msk (0x1UL << DCDC_DCDCCTRL5_ENPWMDUTYFORCE_Pos) /*!< Bit mask of ENPWMDUTYFORCE field.*/
  #define DCDC_DCDCCTRL5_ENPWMDUTYFORCE_Min (0x0UL)  /*!< Min enumerator value of ENPWMDUTYFORCE field.                        */
  #define DCDC_DCDCCTRL5_ENPWMDUTYFORCE_Max (0x1UL)  /*!< Max enumerator value of ENPWMDUTYFORCE field.                        */
  #define DCDC_DCDCCTRL5_ENPWMDUTYFORCE_NORMAL (0x0UL) /*!< normal mode                                                        */
  #define DCDC_DCDCCTRL5_ENPWMDUTYFORCE_OVRDFRC (0x1UL) /*!< force override                                                    */


/* DCDC_DCDC1FICR0: DCDC1 OTP Config0 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC1FICR0_ResetValue (0x00UL)        /*!< Reset value of DCDC1FICR0 register.                                  */

/* DCDC1PRGHSLIMHYST @Bits 0..1 : DCDC1_PRG_HSLIM_HYST */
  #define DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_Pos (0UL) /*!< Position of DCDC1PRGHSLIMHYST field.                                */
  #define DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_Msk (0x3UL << DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_Pos) /*!< Bit mask of
                                                                            DCDC1PRGHSLIMHYST field.*/                            
  #define DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_Min (0x0UL) /*!< Min enumerator value of DCDC1PRGHSLIMHYST field.                  */
  #define DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_Max (0x3UL) /*!< Max enumerator value of DCDC1PRGHSLIMHYST field.                  */
  #define DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_SEL0 (0x0UL) /*!< Sel0                                                             */
  #define DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_SEL1 (0x1UL) /*!< Sel1                                                             */
  #define DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_SEL2 (0x2UL) /*!< Sel2                                                             */
  #define DCDC_DCDC1FICR0_DCDC1PRGHSLIMHYST_SEL3 (0x3UL) /*!< Sel3                                                             */

/* DCDC1PRGVHYST @Bit 2 : DCDC1_PRG_VHYST */
  #define DCDC_DCDC1FICR0_DCDC1PRGVHYST_Pos (2UL)    /*!< Position of DCDC1PRGVHYST field.                                     */
  #define DCDC_DCDC1FICR0_DCDC1PRGVHYST_Msk (0x1UL << DCDC_DCDC1FICR0_DCDC1PRGVHYST_Pos) /*!< Bit mask of DCDC1PRGVHYST field. */
  #define DCDC_DCDC1FICR0_DCDC1PRGVHYST_Min (0x0UL)  /*!< Min enumerator value of DCDC1PRGVHYST field.                         */
  #define DCDC_DCDC1FICR0_DCDC1PRGVHYST_Max (0x1UL)  /*!< Max enumerator value of DCDC1PRGVHYST field.                         */
  #define DCDC_DCDC1FICR0_DCDC1PRGVHYST_LOW (0x0UL)  /*!< Low                                                                  */
  #define DCDC_DCDC1FICR0_DCDC1PRGVHYST_HIGH (0x1UL) /*!< High                                                                 */

/* DCDC1BYPASSSFTSTRT @Bit 3 : DCDC1_BYPASS_SFTSTRT */
  #define DCDC_DCDC1FICR0_DCDC1BYPASSSFTSTRT_Pos (3UL) /*!< Position of DCDC1BYPASSSFTSTRT field.                              */
  #define DCDC_DCDC1FICR0_DCDC1BYPASSSFTSTRT_Msk (0x1UL << DCDC_DCDC1FICR0_DCDC1BYPASSSFTSTRT_Pos) /*!< Bit mask of
                                                                            DCDC1BYPASSSFTSTRT field.*/                           
  #define DCDC_DCDC1FICR0_DCDC1BYPASSSFTSTRT_Min (0x0UL) /*!< Min enumerator value of DCDC1BYPASSSFTSTRT field.                */
  #define DCDC_DCDC1FICR0_DCDC1BYPASSSFTSTRT_Max (0x1UL) /*!< Max enumerator value of DCDC1BYPASSSFTSTRT field.                */
  #define DCDC_DCDC1FICR0_DCDC1BYPASSSFTSTRT_LOW (0x0UL) /*!< Low                                                              */
  #define DCDC_DCDC1FICR0_DCDC1BYPASSSFTSTRT_HIGH (0x1UL) /*!< High                                                            */

/* DCDC1DISABLEFEEDFORWARD @Bit 4 : DCDC1_DISABLE FEEDFORWARD */
  #define DCDC_DCDC1FICR0_DCDC1DISABLEFEEDFORWARD_Pos (4UL) /*!< Position of DCDC1DISABLEFEEDFORWARD field.                    */
  #define DCDC_DCDC1FICR0_DCDC1DISABLEFEEDFORWARD_Msk (0x1UL << DCDC_DCDC1FICR0_DCDC1DISABLEFEEDFORWARD_Pos) /*!< Bit mask of
                                                                            DCDC1DISABLEFEEDFORWARD field.*/                      
  #define DCDC_DCDC1FICR0_DCDC1DISABLEFEEDFORWARD_Min (0x0UL) /*!< Min enumerator value of DCDC1DISABLEFEEDFORWARD field.      */
  #define DCDC_DCDC1FICR0_DCDC1DISABLEFEEDFORWARD_Max (0x1UL) /*!< Max enumerator value of DCDC1DISABLEFEEDFORWARD field.      */
  #define DCDC_DCDC1FICR0_DCDC1DISABLEFEEDFORWARD_LOW (0x0UL) /*!< Low                                                         */
  #define DCDC_DCDC1FICR0_DCDC1DISABLEFEEDFORWARD_HIGH (0x1UL) /*!< High                                                       */

/* DCDC1PWMFILTERHIGHCAP @Bit 5 : DCDC1_PWM_FILTER_HIGHCAP */
  #define DCDC_DCDC1FICR0_DCDC1PWMFILTERHIGHCAP_Pos (5UL) /*!< Position of DCDC1PWMFILTERHIGHCAP field.                        */
  #define DCDC_DCDC1FICR0_DCDC1PWMFILTERHIGHCAP_Msk (0x1UL << DCDC_DCDC1FICR0_DCDC1PWMFILTERHIGHCAP_Pos) /*!< Bit mask of
                                                                            DCDC1PWMFILTERHIGHCAP field.*/                        
  #define DCDC_DCDC1FICR0_DCDC1PWMFILTERHIGHCAP_Min (0x0UL) /*!< Min enumerator value of DCDC1PWMFILTERHIGHCAP field.          */
  #define DCDC_DCDC1FICR0_DCDC1PWMFILTERHIGHCAP_Max (0x1UL) /*!< Max enumerator value of DCDC1PWMFILTERHIGHCAP field.          */
  #define DCDC_DCDC1FICR0_DCDC1PWMFILTERHIGHCAP_LOW (0x0UL) /*!< Low                                                           */
  #define DCDC_DCDC1FICR0_DCDC1PWMFILTERHIGHCAP_HIGH (0x1UL) /*!< High                                                         */


/* DCDC_DCDC1FICR1: DCDC1 OTP Config1 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC1FICR1_ResetValue (0x00UL)        /*!< Reset value of DCDC1FICR1 register.                                  */

/* DCDC1PRGHSAVG @Bits 0..2 : DCDC1_PRG_HSAVG */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_Pos (0UL)    /*!< Position of DCDC1PRGHSAVG field.                                     */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_Msk (0x7UL << DCDC_DCDC1FICR1_DCDC1PRGHSAVG_Pos) /*!< Bit mask of DCDC1PRGHSAVG field. */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_Min (0x0UL)  /*!< Min enumerator value of DCDC1PRGHSAVG field.                         */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_Max (0x7UL)  /*!< Max enumerator value of DCDC1PRGHSAVG field.                         */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_SEL0 (0x0UL) /*!< Sel0                                                                 */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_SEL1 (0x1UL) /*!< Sel1                                                                 */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_SEL2 (0x2UL) /*!< Sel2                                                                 */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_SEL3 (0x3UL) /*!< Sel3                                                                 */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_SEL4 (0x4UL) /*!< Sel4                                                                 */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_SEL5 (0x5UL) /*!< Sel5                                                                 */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_SEL6 (0x6UL) /*!< Sel6                                                                 */
  #define DCDC_DCDC1FICR1_DCDC1PRGHSAVG_SEL7 (0x7UL) /*!< Sel7                                                                 */

/* DCDC1DISABLEULPSTARTUP @Bit 3 : DCDC1_DISABLE_ULP_STARTUP */
  #define DCDC_DCDC1FICR1_DCDC1DISABLEULPSTARTUP_Pos (3UL) /*!< Position of DCDC1DISABLEULPSTARTUP field.                      */
  #define DCDC_DCDC1FICR1_DCDC1DISABLEULPSTARTUP_Msk (0x1UL << DCDC_DCDC1FICR1_DCDC1DISABLEULPSTARTUP_Pos) /*!< Bit mask of
                                                                            DCDC1DISABLEULPSTARTUP field.*/                       
  #define DCDC_DCDC1FICR1_DCDC1DISABLEULPSTARTUP_Min (0x0UL) /*!< Min enumerator value of DCDC1DISABLEULPSTARTUP field.        */
  #define DCDC_DCDC1FICR1_DCDC1DISABLEULPSTARTUP_Max (0x1UL) /*!< Max enumerator value of DCDC1DISABLEULPSTARTUP field.        */
  #define DCDC_DCDC1FICR1_DCDC1DISABLEULPSTARTUP_LOW (0x0UL) /*!< Low                                                          */
  #define DCDC_DCDC1FICR1_DCDC1DISABLEULPSTARTUP_HIGH (0x1UL) /*!< High                                                        */

/* DCDC1PWRUPOVRDFORCE @Bit 4 : DCDC1_PWRUP_OVRD_FORCE */
  #define DCDC_DCDC1FICR1_DCDC1PWRUPOVRDFORCE_Pos (4UL) /*!< Position of DCDC1PWRUPOVRDFORCE field.                            */
  #define DCDC_DCDC1FICR1_DCDC1PWRUPOVRDFORCE_Msk (0x1UL << DCDC_DCDC1FICR1_DCDC1PWRUPOVRDFORCE_Pos) /*!< Bit mask of
                                                                            DCDC1PWRUPOVRDFORCE field.*/                          
  #define DCDC_DCDC1FICR1_DCDC1PWRUPOVRDFORCE_Min (0x0UL) /*!< Min enumerator value of DCDC1PWRUPOVRDFORCE field.              */
  #define DCDC_DCDC1FICR1_DCDC1PWRUPOVRDFORCE_Max (0x1UL) /*!< Max enumerator value of DCDC1PWRUPOVRDFORCE field.              */
  #define DCDC_DCDC1FICR1_DCDC1PWRUPOVRDFORCE_LOW (0x0UL) /*!< Low                                                             */
  #define DCDC_DCDC1FICR1_DCDC1PWRUPOVRDFORCE_HIGH (0x1UL) /*!< High                                                           */

/* DCDC1VOUTSLOPEBYPASS @Bit 5 : DCDC1_VOUT_SLOPE_BYPASS */
  #define DCDC_DCDC1FICR1_DCDC1VOUTSLOPEBYPASS_Pos (5UL) /*!< Position of DCDC1VOUTSLOPEBYPASS field.                          */
  #define DCDC_DCDC1FICR1_DCDC1VOUTSLOPEBYPASS_Msk (0x1UL << DCDC_DCDC1FICR1_DCDC1VOUTSLOPEBYPASS_Pos) /*!< Bit mask of
                                                                            DCDC1VOUTSLOPEBYPASS field.*/                         
  #define DCDC_DCDC1FICR1_DCDC1VOUTSLOPEBYPASS_Min (0x0UL) /*!< Min enumerator value of DCDC1VOUTSLOPEBYPASS field.            */
  #define DCDC_DCDC1FICR1_DCDC1VOUTSLOPEBYPASS_Max (0x1UL) /*!< Max enumerator value of DCDC1VOUTSLOPEBYPASS field.            */
  #define DCDC_DCDC1FICR1_DCDC1VOUTSLOPEBYPASS_NO (0x0UL) /*!< Not bypassed                                                    */
  #define DCDC_DCDC1FICR1_DCDC1VOUTSLOPEBYPASS_BYPASS (0x1UL) /*!< Bypassed                                                    */

/* DCDC1PRGVOUTSLOPE @Bits 6..7 : Select the delay (clock cycles) between steps on PWM mode output voltage programming */
  #define DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_Pos (6UL) /*!< Position of DCDC1PRGVOUTSLOPE field.                                */
  #define DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_Msk (0x3UL << DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_Pos) /*!< Bit mask of
                                                                            DCDC1PRGVOUTSLOPE field.*/                            
  #define DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_Min (0x0UL) /*!< Min enumerator value of DCDC1PRGVOUTSLOPE field.                  */
  #define DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_Max (0x3UL) /*!< Max enumerator value of DCDC1PRGVOUTSLOPE field.                  */
  #define DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_8CLK (0x0UL) /*!< 8CLK (Default)                                                   */
  #define DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_1CLK (0x1UL) /*!< 1 CLK                                                            */
  #define DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_32CLK (0x2UL) /*!< 32 CLK                                                          */
  #define DCDC_DCDC1FICR1_DCDC1PRGVOUTSLOPE_16CLK (0x3UL) /*!< 16 CLK                                                          */


/* DCDC_DCDC2FICR0: DCDC2 OTP Config0 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC2FICR0_ResetValue (0x00UL)        /*!< Reset value of DCDC2FICR0 register.                                  */

/* DCDC2PRGHSLIMHYST @Bits 0..1 : DCDC2_PRG_HSLIM_HYST */
  #define DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_Pos (0UL) /*!< Position of DCDC2PRGHSLIMHYST field.                                */
  #define DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_Msk (0x3UL << DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_Pos) /*!< Bit mask of
                                                                            DCDC2PRGHSLIMHYST field.*/                            
  #define DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_Min (0x0UL) /*!< Min enumerator value of DCDC2PRGHSLIMHYST field.                  */
  #define DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_Max (0x3UL) /*!< Max enumerator value of DCDC2PRGHSLIMHYST field.                  */
  #define DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_SEL0 (0x0UL) /*!< Sel0                                                             */
  #define DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_SEL1 (0x1UL) /*!< Sel1                                                             */
  #define DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_SEL2 (0x2UL) /*!< Sel2                                                             */
  #define DCDC_DCDC2FICR0_DCDC2PRGHSLIMHYST_SEL3 (0x3UL) /*!< Sel3                                                             */

/* DCDC2PRGVHYST @Bit 2 : DCDC2_PRG_VHYST */
  #define DCDC_DCDC2FICR0_DCDC2PRGVHYST_Pos (2UL)    /*!< Position of DCDC2PRGVHYST field.                                     */
  #define DCDC_DCDC2FICR0_DCDC2PRGVHYST_Msk (0x1UL << DCDC_DCDC2FICR0_DCDC2PRGVHYST_Pos) /*!< Bit mask of DCDC2PRGVHYST field. */
  #define DCDC_DCDC2FICR0_DCDC2PRGVHYST_Min (0x0UL)  /*!< Min enumerator value of DCDC2PRGVHYST field.                         */
  #define DCDC_DCDC2FICR0_DCDC2PRGVHYST_Max (0x1UL)  /*!< Max enumerator value of DCDC2PRGVHYST field.                         */
  #define DCDC_DCDC2FICR0_DCDC2PRGVHYST_LOW (0x0UL)  /*!< Low                                                                  */
  #define DCDC_DCDC2FICR0_DCDC2PRGVHYST_HIGH (0x1UL) /*!< High                                                                 */

/* DCDC2BYPASSSFTSTRT @Bit 3 : DCDC2_BYPASS_SFTSTRT */
  #define DCDC_DCDC2FICR0_DCDC2BYPASSSFTSTRT_Pos (3UL) /*!< Position of DCDC2BYPASSSFTSTRT field.                              */
  #define DCDC_DCDC2FICR0_DCDC2BYPASSSFTSTRT_Msk (0x1UL << DCDC_DCDC2FICR0_DCDC2BYPASSSFTSTRT_Pos) /*!< Bit mask of
                                                                            DCDC2BYPASSSFTSTRT field.*/                           
  #define DCDC_DCDC2FICR0_DCDC2BYPASSSFTSTRT_Min (0x0UL) /*!< Min enumerator value of DCDC2BYPASSSFTSTRT field.                */
  #define DCDC_DCDC2FICR0_DCDC2BYPASSSFTSTRT_Max (0x1UL) /*!< Max enumerator value of DCDC2BYPASSSFTSTRT field.                */
  #define DCDC_DCDC2FICR0_DCDC2BYPASSSFTSTRT_LOW (0x0UL) /*!< Low                                                              */
  #define DCDC_DCDC2FICR0_DCDC2BYPASSSFTSTRT_HIGH (0x1UL) /*!< High                                                            */

/* DCDC2DISABLEFEEDFORWARD @Bit 4 : DCDC2_DISABLE FEEDFORWARD */
  #define DCDC_DCDC2FICR0_DCDC2DISABLEFEEDFORWARD_Pos (4UL) /*!< Position of DCDC2DISABLEFEEDFORWARD field.                    */
  #define DCDC_DCDC2FICR0_DCDC2DISABLEFEEDFORWARD_Msk (0x1UL << DCDC_DCDC2FICR0_DCDC2DISABLEFEEDFORWARD_Pos) /*!< Bit mask of
                                                                            DCDC2DISABLEFEEDFORWARD field.*/                      
  #define DCDC_DCDC2FICR0_DCDC2DISABLEFEEDFORWARD_Min (0x0UL) /*!< Min enumerator value of DCDC2DISABLEFEEDFORWARD field.      */
  #define DCDC_DCDC2FICR0_DCDC2DISABLEFEEDFORWARD_Max (0x1UL) /*!< Max enumerator value of DCDC2DISABLEFEEDFORWARD field.      */
  #define DCDC_DCDC2FICR0_DCDC2DISABLEFEEDFORWARD_LOW (0x0UL) /*!< Low                                                         */
  #define DCDC_DCDC2FICR0_DCDC2DISABLEFEEDFORWARD_HIGH (0x1UL) /*!< High                                                       */

/* DCDC2PWMFILTERHIGHCAP @Bit 5 : DCDC2_PWM_FILTER_HIGHCAP */
  #define DCDC_DCDC2FICR0_DCDC2PWMFILTERHIGHCAP_Pos (5UL) /*!< Position of DCDC2PWMFILTERHIGHCAP field.                        */
  #define DCDC_DCDC2FICR0_DCDC2PWMFILTERHIGHCAP_Msk (0x1UL << DCDC_DCDC2FICR0_DCDC2PWMFILTERHIGHCAP_Pos) /*!< Bit mask of
                                                                            DCDC2PWMFILTERHIGHCAP field.*/                        
  #define DCDC_DCDC2FICR0_DCDC2PWMFILTERHIGHCAP_Min (0x0UL) /*!< Min enumerator value of DCDC2PWMFILTERHIGHCAP field.          */
  #define DCDC_DCDC2FICR0_DCDC2PWMFILTERHIGHCAP_Max (0x1UL) /*!< Max enumerator value of DCDC2PWMFILTERHIGHCAP field.          */
  #define DCDC_DCDC2FICR0_DCDC2PWMFILTERHIGHCAP_LOW (0x0UL) /*!< Low                                                           */
  #define DCDC_DCDC2FICR0_DCDC2PWMFILTERHIGHCAP_HIGH (0x1UL) /*!< High                                                         */


/* DCDC_DCDC2FICR1: DCDC2 OTP Config1 NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC2FICR1_ResetValue (0x00UL)        /*!< Reset value of DCDC2FICR1 register.                                  */

/* DCDC2PRGHSAVG @Bits 0..2 : DCDC2_PRG_HSAVG */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_Pos (0UL)    /*!< Position of DCDC2PRGHSAVG field.                                     */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_Msk (0x7UL << DCDC_DCDC2FICR1_DCDC2PRGHSAVG_Pos) /*!< Bit mask of DCDC2PRGHSAVG field. */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_Min (0x0UL)  /*!< Min enumerator value of DCDC2PRGHSAVG field.                         */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_Max (0x7UL)  /*!< Max enumerator value of DCDC2PRGHSAVG field.                         */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_SEL0 (0x0UL) /*!< Sel0                                                                 */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_SEL1 (0x1UL) /*!< Sel1                                                                 */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_SEL2 (0x2UL) /*!< Sel2                                                                 */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_SEL3 (0x3UL) /*!< Sel3                                                                 */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_SEL4 (0x4UL) /*!< Sel4                                                                 */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_SEL5 (0x5UL) /*!< Sel5                                                                 */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_SEL6 (0x6UL) /*!< Sel6                                                                 */
  #define DCDC_DCDC2FICR1_DCDC2PRGHSAVG_SEL7 (0x7UL) /*!< Sel7                                                                 */

/* DCDC2DISABLEULPSTARTUP @Bit 3 : DCDC2_DISABLE_ULP_STARTUP */
  #define DCDC_DCDC2FICR1_DCDC2DISABLEULPSTARTUP_Pos (3UL) /*!< Position of DCDC2DISABLEULPSTARTUP field.                      */
  #define DCDC_DCDC2FICR1_DCDC2DISABLEULPSTARTUP_Msk (0x1UL << DCDC_DCDC2FICR1_DCDC2DISABLEULPSTARTUP_Pos) /*!< Bit mask of
                                                                            DCDC2DISABLEULPSTARTUP field.*/                       
  #define DCDC_DCDC2FICR1_DCDC2DISABLEULPSTARTUP_Min (0x0UL) /*!< Min enumerator value of DCDC2DISABLEULPSTARTUP field.        */
  #define DCDC_DCDC2FICR1_DCDC2DISABLEULPSTARTUP_Max (0x1UL) /*!< Max enumerator value of DCDC2DISABLEULPSTARTUP field.        */
  #define DCDC_DCDC2FICR1_DCDC2DISABLEULPSTARTUP_LOW (0x0UL) /*!< Low                                                          */
  #define DCDC_DCDC2FICR1_DCDC2DISABLEULPSTARTUP_HIGH (0x1UL) /*!< High                                                        */

/* DCDC2PWRUPOVRDFORCE @Bit 4 : DCDC2_PWRUP_OVRD_FORCE */
  #define DCDC_DCDC2FICR1_DCDC2PWRUPOVRDFORCE_Pos (4UL) /*!< Position of DCDC2PWRUPOVRDFORCE field.                            */
  #define DCDC_DCDC2FICR1_DCDC2PWRUPOVRDFORCE_Msk (0x1UL << DCDC_DCDC2FICR1_DCDC2PWRUPOVRDFORCE_Pos) /*!< Bit mask of
                                                                            DCDC2PWRUPOVRDFORCE field.*/                          
  #define DCDC_DCDC2FICR1_DCDC2PWRUPOVRDFORCE_Min (0x0UL) /*!< Min enumerator value of DCDC2PWRUPOVRDFORCE field.              */
  #define DCDC_DCDC2FICR1_DCDC2PWRUPOVRDFORCE_Max (0x1UL) /*!< Max enumerator value of DCDC2PWRUPOVRDFORCE field.              */
  #define DCDC_DCDC2FICR1_DCDC2PWRUPOVRDFORCE_LOW (0x0UL) /*!< Low                                                             */
  #define DCDC_DCDC2FICR1_DCDC2PWRUPOVRDFORCE_HIGH (0x1UL) /*!< High                                                           */

/* DCDC2VOUTSLOPEBYPASS @Bit 5 : DCDC2_VOUT_SLOPE_BYPASS */
  #define DCDC_DCDC2FICR1_DCDC2VOUTSLOPEBYPASS_Pos (5UL) /*!< Position of DCDC2VOUTSLOPEBYPASS field.                          */
  #define DCDC_DCDC2FICR1_DCDC2VOUTSLOPEBYPASS_Msk (0x1UL << DCDC_DCDC2FICR1_DCDC2VOUTSLOPEBYPASS_Pos) /*!< Bit mask of
                                                                            DCDC2VOUTSLOPEBYPASS field.*/                         
  #define DCDC_DCDC2FICR1_DCDC2VOUTSLOPEBYPASS_Min (0x0UL) /*!< Min enumerator value of DCDC2VOUTSLOPEBYPASS field.            */
  #define DCDC_DCDC2FICR1_DCDC2VOUTSLOPEBYPASS_Max (0x1UL) /*!< Max enumerator value of DCDC2VOUTSLOPEBYPASS field.            */
  #define DCDC_DCDC2FICR1_DCDC2VOUTSLOPEBYPASS_NO (0x0UL) /*!< Not bypassed                                                    */
  #define DCDC_DCDC2FICR1_DCDC2VOUTSLOPEBYPASS_BYPASS (0x1UL) /*!< Bypassed                                                    */

/* DCDC2PRGVOUTSLOPE @Bits 6..7 : Select the delay (clock cycles) between steps on PWM mode output voltage programming */
  #define DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_Pos (6UL) /*!< Position of DCDC2PRGVOUTSLOPE field.                                */
  #define DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_Msk (0x3UL << DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_Pos) /*!< Bit mask of
                                                                            DCDC2PRGVOUTSLOPE field.*/                            
  #define DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_Min (0x0UL) /*!< Min enumerator value of DCDC2PRGVOUTSLOPE field.                  */
  #define DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_Max (0x3UL) /*!< Max enumerator value of DCDC2PRGVOUTSLOPE field.                  */
  #define DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_8CLK (0x0UL) /*!< 8CLK (Default)                                                   */
  #define DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_1CLK (0x1UL) /*!< 1 CLK                                                            */
  #define DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_32CLK (0x2UL) /*!< 32 CLK                                                          */
  #define DCDC_DCDC2FICR1_DCDC2PRGVOUTSLOPE_16CLK (0x3UL) /*!< 16 CLK                                                          */


/* DCDC_DCDCFICRSPARE: DCDC OTP Spare NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDCFICRSPARE_ResetValue (0x00UL)     /*!< Reset value of DCDCFICRSPARE register.                               */

/* DCDCOTPSPARE @Bits 0..7 : DCDC_OTP_SPARE */
  #define DCDC_DCDCFICRSPARE_DCDCOTPSPARE_Pos (0UL)  /*!< Position of DCDCOTPSPARE field.                                      */
  #define DCDC_DCDCFICRSPARE_DCDCOTPSPARE_Msk (0xFFUL << DCDC_DCDCFICRSPARE_DCDCOTPSPARE_Pos) /*!< Bit mask of DCDCOTPSPARE
                                                                            field.*/                                              


/* DCDC_DCDCFTMODE: DCDC Functional test mode over-ride register */
  #define DCDC_DCDCFTMODE_ResetValue (0x00UL)        /*!< Reset value of DCDCFTMODE register.                                  */

/* DCDC1MODE1OVRD @Bit 0 : DCDC1 Mode[1] over-ride value */
  #define DCDC_DCDCFTMODE_DCDC1MODE1OVRD_Pos (0UL)   /*!< Position of DCDC1MODE1OVRD field.                                    */
  #define DCDC_DCDCFTMODE_DCDC1MODE1OVRD_Msk (0x1UL << DCDC_DCDCFTMODE_DCDC1MODE1OVRD_Pos) /*!< Bit mask of DCDC1MODE1OVRD
                                                                            field.*/                                              
  #define DCDC_DCDCFTMODE_DCDC1MODE1OVRD_Min (0x0UL) /*!< Min enumerator value of DCDC1MODE1OVRD field.                        */
  #define DCDC_DCDCFTMODE_DCDC1MODE1OVRD_Max (0x1UL) /*!< Max enumerator value of DCDC1MODE1OVRD field.                        */
  #define DCDC_DCDCFTMODE_DCDC1MODE1OVRD_SET0 (0x0UL) /*!< dcdc1Mode1=0                                                        */
  #define DCDC_DCDCFTMODE_DCDC1MODE1OVRD_SET1 (0x1UL) /*!< dcdc1Mode1=1                                                        */

/* DCDC2MODE1OVRD @Bit 1 : DCDC2 Mode[1] over-ride value */
  #define DCDC_DCDCFTMODE_DCDC2MODE1OVRD_Pos (1UL)   /*!< Position of DCDC2MODE1OVRD field.                                    */
  #define DCDC_DCDCFTMODE_DCDC2MODE1OVRD_Msk (0x1UL << DCDC_DCDCFTMODE_DCDC2MODE1OVRD_Pos) /*!< Bit mask of DCDC2MODE1OVRD
                                                                            field.*/                                              
  #define DCDC_DCDCFTMODE_DCDC2MODE1OVRD_Min (0x0UL) /*!< Min enumerator value of DCDC2MODE1OVRD field.                        */
  #define DCDC_DCDCFTMODE_DCDC2MODE1OVRD_Max (0x1UL) /*!< Max enumerator value of DCDC2MODE1OVRD field.                        */
  #define DCDC_DCDCFTMODE_DCDC2MODE1OVRD_SET0 (0x0UL) /*!< dcdc2Mode1=0                                                        */
  #define DCDC_DCDCFTMODE_DCDC2MODE1OVRD_SET1 (0x1UL) /*!< dcdc2Mode1=1                                                        */

/* DCDC1PWRUPOVRD @Bit 2 : DCDC1 PowerUp Over-ride value */
  #define DCDC_DCDCFTMODE_DCDC1PWRUPOVRD_Pos (2UL)   /*!< Position of DCDC1PWRUPOVRD field.                                    */
  #define DCDC_DCDCFTMODE_DCDC1PWRUPOVRD_Msk (0x1UL << DCDC_DCDCFTMODE_DCDC1PWRUPOVRD_Pos) /*!< Bit mask of DCDC1PWRUPOVRD
                                                                            field.*/                                              
  #define DCDC_DCDCFTMODE_DCDC1PWRUPOVRD_Min (0x0UL) /*!< Min enumerator value of DCDC1PWRUPOVRD field.                        */
  #define DCDC_DCDCFTMODE_DCDC1PWRUPOVRD_Max (0x1UL) /*!< Max enumerator value of DCDC1PWRUPOVRD field.                        */
  #define DCDC_DCDCFTMODE_DCDC1PWRUPOVRD_SET0 (0x0UL) /*!< dcdc1Powerup=0                                                      */
  #define DCDC_DCDCFTMODE_DCDC1PWRUPOVRD_SET1 (0x1UL) /*!< dcdc1Powerup=1                                                      */

/* DCDC2PWRUPOVRD @Bit 3 : DCDC2 PowerUp Over-ride value */
  #define DCDC_DCDCFTMODE_DCDC2PWRUPOVRD_Pos (3UL)   /*!< Position of DCDC2PWRUPOVRD field.                                    */
  #define DCDC_DCDCFTMODE_DCDC2PWRUPOVRD_Msk (0x1UL << DCDC_DCDCFTMODE_DCDC2PWRUPOVRD_Pos) /*!< Bit mask of DCDC2PWRUPOVRD
                                                                            field.*/                                              
  #define DCDC_DCDCFTMODE_DCDC2PWRUPOVRD_Min (0x0UL) /*!< Min enumerator value of DCDC2PWRUPOVRD field.                        */
  #define DCDC_DCDCFTMODE_DCDC2PWRUPOVRD_Max (0x1UL) /*!< Max enumerator value of DCDC2PWRUPOVRD field.                        */
  #define DCDC_DCDCFTMODE_DCDC2PWRUPOVRD_SET0 (0x0UL) /*!< dcdc2Powerup=0                                                      */
  #define DCDC_DCDCFTMODE_DCDC2PWRUPOVRD_SET1 (0x1UL) /*!< dcdc2Powerup=1                                                      */

/* DCDCFTOVRDEN @Bit 4 : DCDC funtional test Over-ride enable bit */
  #define DCDC_DCDCFTMODE_DCDCFTOVRDEN_Pos (4UL)     /*!< Position of DCDCFTOVRDEN field.                                      */
  #define DCDC_DCDCFTMODE_DCDCFTOVRDEN_Msk (0x1UL << DCDC_DCDCFTMODE_DCDCFTOVRDEN_Pos) /*!< Bit mask of DCDCFTOVRDEN field.    */
  #define DCDC_DCDCFTMODE_DCDCFTOVRDEN_Min (0x0UL)   /*!< Min enumerator value of DCDCFTOVRDEN field.                          */
  #define DCDC_DCDCFTMODE_DCDCFTOVRDEN_Max (0x1UL)   /*!< Max enumerator value of DCDCFTOVRDEN field.                          */
  #define DCDC_DCDCFTMODE_DCDCFTOVRDEN_SET0 (0x0UL)  /*!< Normal Mode Operation                                                */
  #define DCDC_DCDCFTMODE_DCDCFTOVRDEN_SET1 (0x1UL)  /*!< Enable Over-ride Mode                                                */


/* DCDC_DCDC1ATE: DCDC1 TESTMODE and ATE control */
  #define DCDC_DCDC1ATE_ResetValue (0x00UL)          /*!< Reset value of DCDC1ATE register.                                    */

/* DCDC1ATE @Bits 0..3 : ATE_I_DVDD */
  #define DCDC_DCDC1ATE_DCDC1ATE_Pos (0UL)           /*!< Position of DCDC1ATE field.                                          */
  #define DCDC_DCDC1ATE_DCDC1ATE_Msk (0xFUL << DCDC_DCDC1ATE_DCDC1ATE_Pos) /*!< Bit mask of DCDC1ATE field.                    */
  #define DCDC_DCDC1ATE_DCDC1ATE_Min (0x0UL)         /*!< Min enumerator value of DCDC1ATE field.                              */
  #define DCDC_DCDC1ATE_DCDC1ATE_Max (0x7UL)         /*!< Max enumerator value of DCDC1ATE field.                              */
  #define DCDC_DCDC1ATE_DCDC1ATE_SEL0 (0x0UL)        /*!< Sel0                                                                 */
  #define DCDC_DCDC1ATE_DCDC1ATE_SEL1 (0x1UL)        /*!< Sel1                                                                 */
  #define DCDC_DCDC1ATE_DCDC1ATE_SEL2 (0x2UL)        /*!< Sel2                                                                 */
  #define DCDC_DCDC1ATE_DCDC1ATE_SEL3 (0x3UL)        /*!< Sel3                                                                 */
  #define DCDC_DCDC1ATE_DCDC1ATE_SEL4 (0x4UL)        /*!< Sel4                                                                 */
  #define DCDC_DCDC1ATE_DCDC1ATE_SEL5 (0x5UL)        /*!< Sel5                                                                 */
  #define DCDC_DCDC1ATE_DCDC1ATE_SEL6 (0x6UL)        /*!< Sel6                                                                 */
  #define DCDC_DCDC1ATE_DCDC1ATE_SEL7 (0x7UL)        /*!< Sel7                                                                 */


/* DCDC_DCDCTESTMODE: TESTMODE signal commong for both DCDCs */
  #define DCDC_DCDCTESTMODE_ResetValue (0x00UL)      /*!< Reset value of DCDCTESTMODE register.                                */

/* DCDCTESTMODE @Bits 0..7 : TSTMODE_I_DVDD */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_Pos (0UL)   /*!< Position of DCDCTESTMODE field.                                      */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_Msk (0xFFUL << DCDC_DCDCTESTMODE_DCDCTESTMODE_Pos) /*!< Bit mask of DCDCTESTMODE
                                                                            field.*/                                              
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_Min (0x0UL) /*!< Min enumerator value of DCDCTESTMODE field.                          */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_Max (0x7UL) /*!< Max enumerator value of DCDCTESTMODE field.                          */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_SEL0 (0x00UL) /*!< Sel0                                                               */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_SEL1 (0x01UL) /*!< Sel1                                                               */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_SEL2 (0x02UL) /*!< Sel2                                                               */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_SEL3 (0x03UL) /*!< Sel3                                                               */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_SEL4 (0x04UL) /*!< Sel4                                                               */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_SEL5 (0x05UL) /*!< Sel5                                                               */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_SEL6 (0x06UL) /*!< Sel6                                                               */
  #define DCDC_DCDCTESTMODE_DCDCTESTMODE_SEL7 (0x07UL) /*!< Sel7                                                               */


/* DCDC_DCDC2ATE: DCDC2 TESTMODE and ATE control */
  #define DCDC_DCDC2ATE_ResetValue (0x00UL)          /*!< Reset value of DCDC2ATE register.                                    */

/* DCDC2ATE @Bits 0..3 : ATE_I_DVDD */
  #define DCDC_DCDC2ATE_DCDC2ATE_Pos (0UL)           /*!< Position of DCDC2ATE field.                                          */
  #define DCDC_DCDC2ATE_DCDC2ATE_Msk (0xFUL << DCDC_DCDC2ATE_DCDC2ATE_Pos) /*!< Bit mask of DCDC2ATE field.                    */
  #define DCDC_DCDC2ATE_DCDC2ATE_Min (0x0UL)         /*!< Min enumerator value of DCDC2ATE field.                              */
  #define DCDC_DCDC2ATE_DCDC2ATE_Max (0x7UL)         /*!< Max enumerator value of DCDC2ATE field.                              */
  #define DCDC_DCDC2ATE_DCDC2ATE_SEL0 (0x0UL)        /*!< Sel0                                                                 */
  #define DCDC_DCDC2ATE_DCDC2ATE_SEL1 (0x1UL)        /*!< Sel1                                                                 */
  #define DCDC_DCDC2ATE_DCDC2ATE_SEL2 (0x2UL)        /*!< Sel2                                                                 */
  #define DCDC_DCDC2ATE_DCDC2ATE_SEL3 (0x3UL)        /*!< Sel3                                                                 */
  #define DCDC_DCDC2ATE_DCDC2ATE_SEL4 (0x4UL)        /*!< Sel4                                                                 */
  #define DCDC_DCDC2ATE_DCDC2ATE_SEL5 (0x5UL)        /*!< Sel5                                                                 */
  #define DCDC_DCDC2ATE_DCDC2ATE_SEL6 (0x6UL)        /*!< Sel6                                                                 */
  #define DCDC_DCDC2ATE_DCDC2ATE_SEL7 (0x7UL)        /*!< Sel7                                                                 */


/* DCDC_DCDC1CLKGENTRM: DCDC1 ClkGen TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC1CLKGENTRM_ResetValue (0x00UL)    /*!< Reset value of DCDC1CLKGENTRM register.                              */

/* DCDC1TRMCLKGEN @Bits 0..3 : DCDC1 Clock Gen TRIM */
  #define DCDC_DCDC1CLKGENTRM_DCDC1TRMCLKGEN_Pos (0UL) /*!< Position of DCDC1TRMCLKGEN field.                                  */
  #define DCDC_DCDC1CLKGENTRM_DCDC1TRMCLKGEN_Msk (0xFUL << DCDC_DCDC1CLKGENTRM_DCDC1TRMCLKGEN_Pos) /*!< Bit mask of
                                                                            DCDC1TRMCLKGEN field.*/                               

/* DCDC1TRMCLKGENSLOPE @Bits 4..6 : DCDC1 Clock Gen Slope TRIM */
  #define DCDC_DCDC1CLKGENTRM_DCDC1TRMCLKGENSLOPE_Pos (4UL) /*!< Position of DCDC1TRMCLKGENSLOPE field.                        */
  #define DCDC_DCDC1CLKGENTRM_DCDC1TRMCLKGENSLOPE_Msk (0x7UL << DCDC_DCDC1CLKGENTRM_DCDC1TRMCLKGENSLOPE_Pos) /*!< Bit mask of
                                                                            DCDC1TRMCLKGENSLOPE field.*/                          


/* DCDC_DCDC2CLKGENTRM: DCDC2 ClkGen TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC2CLKGENTRM_ResetValue (0x00UL)    /*!< Reset value of DCDC2CLKGENTRM register.                              */

/* DCDC2TRMCLKGEN @Bits 0..3 : DCDC2 Clock Gen TRIM */
  #define DCDC_DCDC2CLKGENTRM_DCDC2TRMCLKGEN_Pos (0UL) /*!< Position of DCDC2TRMCLKGEN field.                                  */
  #define DCDC_DCDC2CLKGENTRM_DCDC2TRMCLKGEN_Msk (0xFUL << DCDC_DCDC2CLKGENTRM_DCDC2TRMCLKGEN_Pos) /*!< Bit mask of
                                                                            DCDC2TRMCLKGEN field.*/                               

/* DCDC2TRMCLKGENSLOPE @Bits 4..6 : DCDC2 Clock Gen Slope TRIM */
  #define DCDC_DCDC2CLKGENTRM_DCDC2TRMCLKGENSLOPE_Pos (4UL) /*!< Position of DCDC2TRMCLKGENSLOPE field.                        */
  #define DCDC_DCDC2CLKGENTRM_DCDC2TRMCLKGENSLOPE_Msk (0x7UL << DCDC_DCDC2CLKGENTRM_DCDC2TRMCLKGENSLOPE_Pos) /*!< Bit mask of
                                                                            DCDC2TRMCLKGENSLOPE field.*/                          


/* DCDC_DCDC1TRM0: DCDC1 VOUT_ULP TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC1TRM0_ResetValue (0x00UL)         /*!< Reset value of DCDC1TRM0 register.                                   */

/* DCDC1VOUTULPTRM @Bits 0..4 : DCDC1_VOUT_ULP_TRM */
  #define DCDC_DCDC1TRM0_DCDC1VOUTULPTRM_Pos (0UL)   /*!< Position of DCDC1VOUTULPTRM field.                                   */
  #define DCDC_DCDC1TRM0_DCDC1VOUTULPTRM_Msk (0x1FUL << DCDC_DCDC1TRM0_DCDC1VOUTULPTRM_Pos) /*!< Bit mask of DCDC1VOUTULPTRM
                                                                            field.*/                                              


/* DCDC_DCDC1TRM1: DCDC1_ULP_FEEDBACK_TRM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC1TRM1_ResetValue (0x00UL)         /*!< Reset value of DCDC1TRM1 register.                                   */

/* DCDC1ULPFBKTRM @Bits 0..4 : DCDC1_ULP_FEEBACK_TRM */
  #define DCDC_DCDC1TRM1_DCDC1ULPFBKTRM_Pos (0UL)    /*!< Position of DCDC1ULPFBKTRM field.                                    */
  #define DCDC_DCDC1TRM1_DCDC1ULPFBKTRM_Msk (0x1FUL << DCDC_DCDC1TRM1_DCDC1ULPFBKTRM_Pos) /*!< Bit mask of DCDC1ULPFBKTRM
                                                                            field.*/                                              


/* DCDC_DCDC1TRM2: DCDC1_VREF_TRM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC1TRM2_ResetValue (0x00UL)         /*!< Reset value of DCDC1TRM2 register.                                   */

/* DCDC1VREFTRM @Bits 0..4 : DCDC1_VREF_TRM */
  #define DCDC_DCDC1TRM2_DCDC1VREFTRM_Pos (0UL)      /*!< Position of DCDC1VREFTRM field.                                      */
  #define DCDC_DCDC1TRM2_DCDC1VREFTRM_Msk (0x1FUL << DCDC_DCDC1TRM2_DCDC1VREFTRM_Pos) /*!< Bit mask of DCDC1VREFTRM field.     */


/* DCDC_DCDC1TRM3: DCDC1 OFFSET and VHYST TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC1TRM3_ResetValue (0x00UL)         /*!< Reset value of DCDC1TRM3 register.                                   */

/* DCDC1OFFSETPWMTRM @Bits 0..3 : DCDC1_OFFSET_PWM_TRM */
  #define DCDC_DCDC1TRM3_DCDC1OFFSETPWMTRM_Pos (0UL) /*!< Position of DCDC1OFFSETPWMTRM field.                                 */
  #define DCDC_DCDC1TRM3_DCDC1OFFSETPWMTRM_Msk (0xFUL << DCDC_DCDC1TRM3_DCDC1OFFSETPWMTRM_Pos) /*!< Bit mask of
                                                                            DCDC1OFFSETPWMTRM field.*/                            

/* DCDC1VHYST2PWMTRM @Bits 4..6 : DCDC1_VHYST2PWM_TRM */
  #define DCDC_DCDC1TRM3_DCDC1VHYST2PWMTRM_Pos (4UL) /*!< Position of DCDC1VHYST2PWMTRM field.                                 */
  #define DCDC_DCDC1TRM3_DCDC1VHYST2PWMTRM_Msk (0x7UL << DCDC_DCDC1TRM3_DCDC1VHYST2PWMTRM_Pos) /*!< Bit mask of
                                                                            DCDC1VHYST2PWMTRM field.*/                            


/* DCDC_DCDC1TRM4: DCDC1 IBNS and EACLAMP HSLIM TRIM NOTE: Reset value from OTP, value listed in this table may not be correct.
                    */                                                                                                            
                                                                                                                                  
  #define DCDC_DCDC1TRM4_ResetValue (0x00UL)         /*!< Reset value of DCDC1TRM4 register.                                   */

/* DCDC1IBNSHSLIMTRM @Bits 0..3 : DCDC1_IBNS_HSLIM_TRM */
  #define DCDC_DCDC1TRM4_DCDC1IBNSHSLIMTRM_Pos (0UL) /*!< Position of DCDC1IBNSHSLIMTRM field.                                 */
  #define DCDC_DCDC1TRM4_DCDC1IBNSHSLIMTRM_Msk (0xFUL << DCDC_DCDC1TRM4_DCDC1IBNSHSLIMTRM_Pos) /*!< Bit mask of
                                                                            DCDC1IBNSHSLIMTRM field.*/                            


/* DCDC_DCDC2TRM0: DCDC2 VOUT_ULP TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC2TRM0_ResetValue (0x00UL)         /*!< Reset value of DCDC2TRM0 register.                                   */

/* DCDC2VOUTULPTRM @Bits 0..4 : DCDC2_VOUT_ULP_TRM */
  #define DCDC_DCDC2TRM0_DCDC2VOUTULPTRM_Pos (0UL)   /*!< Position of DCDC2VOUTULPTRM field.                                   */
  #define DCDC_DCDC2TRM0_DCDC2VOUTULPTRM_Msk (0x1FUL << DCDC_DCDC2TRM0_DCDC2VOUTULPTRM_Pos) /*!< Bit mask of DCDC2VOUTULPTRM
                                                                            field.*/                                              


/* DCDC_DCDC2TRM1: DCDC2_ULP_FEEDBACK_TRM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC2TRM1_ResetValue (0x00UL)         /*!< Reset value of DCDC2TRM1 register.                                   */

/* DCDC2ULPFBKTRM @Bits 0..4 : DCDC2_ULP_FEEBACK_TRM */
  #define DCDC_DCDC2TRM1_DCDC2ULPFBKTRM_Pos (0UL)    /*!< Position of DCDC2ULPFBKTRM field.                                    */
  #define DCDC_DCDC2TRM1_DCDC2ULPFBKTRM_Msk (0x1FUL << DCDC_DCDC2TRM1_DCDC2ULPFBKTRM_Pos) /*!< Bit mask of DCDC2ULPFBKTRM
                                                                            field.*/                                              


/* DCDC_DCDC2TRM2: DCDC2_VREF_TRM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC2TRM2_ResetValue (0x00UL)         /*!< Reset value of DCDC2TRM2 register.                                   */

/* DCDC2VREFTRM @Bits 0..4 : DCDC2_VREF_TRM */
  #define DCDC_DCDC2TRM2_DCDC2VREFTRM_Pos (0UL)      /*!< Position of DCDC2VREFTRM field.                                      */
  #define DCDC_DCDC2TRM2_DCDC2VREFTRM_Msk (0x1FUL << DCDC_DCDC2TRM2_DCDC2VREFTRM_Pos) /*!< Bit mask of DCDC2VREFTRM field.     */


/* DCDC_DCDC2TRM3: DCDC2 OFFSET and VHYST TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC2TRM3_ResetValue (0x00UL)         /*!< Reset value of DCDC2TRM3 register.                                   */

/* DCDC2OFFSETPWMTRM @Bits 0..3 : DCDC2_OFFSET_PWM_TRM */
  #define DCDC_DCDC2TRM3_DCDC2OFFSETPWMTRM_Pos (0UL) /*!< Position of DCDC2OFFSETPWMTRM field.                                 */
  #define DCDC_DCDC2TRM3_DCDC2OFFSETPWMTRM_Msk (0xFUL << DCDC_DCDC2TRM3_DCDC2OFFSETPWMTRM_Pos) /*!< Bit mask of
                                                                            DCDC2OFFSETPWMTRM field.*/                            

/* DCDC2VHYST2PWMTRM @Bits 4..6 : DCDC2_VHYST2PWM_TRM */
  #define DCDC_DCDC2TRM3_DCDC2VHYST2PWMTRM_Pos (4UL) /*!< Position of DCDC2VHYST2PWMTRM field.                                 */
  #define DCDC_DCDC2TRM3_DCDC2VHYST2PWMTRM_Msk (0x7UL << DCDC_DCDC2TRM3_DCDC2VHYST2PWMTRM_Pos) /*!< Bit mask of
                                                                            DCDC2VHYST2PWMTRM field.*/                            


/* DCDC_DCDC2TRM4: DCDC2 IBNS and EACLAMP HSLIM TRIM NOTE: Reset value from OTP, value listed in this table may not be correct.
                    */                                                                                                            
                                                                                                                                  
  #define DCDC_DCDC2TRM4_ResetValue (0x00UL)         /*!< Reset value of DCDC2TRM4 register.                                   */

/* DCDC2IBNSHSLIMTRM @Bits 0..3 : DCDC2_IBNS_HSLIM_TRM */
  #define DCDC_DCDC2TRM4_DCDC2IBNSHSLIMTRM_Pos (0UL) /*!< Position of DCDC2IBNSHSLIMTRM field.                                 */
  #define DCDC_DCDC2TRM4_DCDC2IBNSHSLIMTRM_Msk (0xFUL << DCDC_DCDC2TRM4_DCDC2IBNSHSLIMTRM_Pos) /*!< Bit mask of
                                                                            DCDC2IBNSHSLIMTRM field.*/                            


/* DCDC_DCDC1DTE: Dcdc Digital Testbus Enable NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC1DTE_ResetValue (0x00UL)          /*!< Reset value of DCDC1DTE register.                                    */

/* DCDC1DTE @Bits 0..4 : DCDC1_DTE */
  #define DCDC_DCDC1DTE_DCDC1DTE_Pos (0UL)           /*!< Position of DCDC1DTE field.                                          */
  #define DCDC_DCDC1DTE_DCDC1DTE_Msk (0x1FUL << DCDC_DCDC1DTE_DCDC1DTE_Pos) /*!< Bit mask of DCDC1DTE field.                   */


/* DCDC_DCDC2DTE: Dcdc Digital Testbus Enable NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define DCDC_DCDC2DTE_ResetValue (0x00UL)          /*!< Reset value of DCDC2DTE register.                                    */

/* DCDC2DTE @Bits 0..4 : DCDC2_DTE */
  #define DCDC_DCDC2DTE_DCDC2DTE_Pos (0UL)           /*!< Position of DCDC2DTE field.                                          */
  #define DCDC_DCDC2DTE_DCDC2DTE_Msk (0x1FUL << DCDC_DCDC2DTE_DCDC2DTE_Pos) /*!< Bit mask of DCDC2DTE field.                   */



/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */

/* ======================================================= Struct ADC ======================================================== */
/**
  * @brief Neutrino ADC registers
  */
typedef struct {                                     /*!< ADC Structure                                                        */
  __OM  uint8_t   TASKVBATMEASURE;                   /*!< (@ 0x00000000) Task Take VBAT measurement                            */
  __OM  uint8_t   TASKNTCMEASURE;                    /*!< (@ 0x00000001) Task Take NTC measurement                             */
  __OM  uint8_t   TASKTEMPMEASURE;                   /*!< (@ 0x00000002) Task Take Die Temperature measurement                 */
  __OM  uint8_t   TASKVSYSMEASURE;                   /*!< (@ 0x00000003) Task Take VSYS measurement                            */
  __OM  uint8_t   TASKVSET1MEASURE;                  /*!< (@ 0x00000004) Task Take VSET1 pin measurement                       */
  __OM  uint8_t   TASKVSET2MEASURE;                  /*!< (@ 0x00000005) Task Take VSET2 pin measurement                       */
  __OM  uint8_t   TASKIBATMEASURE;                   /*!< (@ 0x00000006) Task Take IBATmeasurement                             */
  __OM  uint8_t   TASKVBUS7MEASURE;                  /*!< (@ 0x00000007) Task Take VBUS 7V range measurement                   */
  __OM  uint8_t   TASKDELAYEDVBATMEASURE;            /*!< (@ 0x00000008) Task Take delayed VBAT measurement                    */
  __IOM uint8_t   ADCCONFIG;                         /*!< (@ 0x00000009) ADC Configuration                                     */
  __IOM uint8_t   ADCNTCRSEL;                        /*!< (@ 0x0000000A) Select Battery NTC register                           */
  __IOM uint8_t   ADCAUTOTIMCONF;                    /*!< (@ 0x0000000B) Auto measurement intervals                            */
  __OM  uint8_t   TASKAUTOTIMUPDATE;                 /*!< (@ 0x0000000C) update toggle for NTC and Die temp AutoTime register
                                                                         bits*/                                                   
  __IOM uint8_t   ADCDELTIMCONF;                     /*!< (@ 0x0000000D) Vbat Delay timer control                              */
  __IM  uint8_t   ADCCALIBOFFSET;                    /*!< (@ 0x0000000E) ADC Calibration Offset measurement                    */
  __IOM uint8_t   ADCCALIBDISABLE;                   /*!< (@ 0x0000000F) Disable ADC Calibration Offset measurement            */
  __IM  uint8_t   ADCIBATMEASSTATUS;                 /*!< (@ 0x00000010) Battery current measurement status                    */
  __IM  uint8_t   ADCVBATRESULTMSB;                  /*!< (@ 0x00000011) ADC VBAT measurement result MSB                       */
  __IM  uint8_t   ADCNTCRESULTMSB;                   /*!< (@ 0x00000012) ADC NTC measurement result MSB                        */
  __IM  uint8_t   ADCTEMPRESULTMSB;                  /*!< (@ 0x00000013) ADC DIE TEMP measurement result MSB                   */
  __IM  uint8_t   ADCVSYSRESULTMSB;                  /*!< (@ 0x00000014) ADC VSYS measurement result MSB                       */
  __IM  uint8_t   ADCGP0RESULTLSBS;                  /*!< (@ 0x00000015) ADC result LSB's (Vbat, Ntc, Temp and Vsys)           */
  __IM  uint8_t   ADCVBAT0RESULTMSB;                 /*!< (@ 0x00000016) ADC VBAT0 Burst measurement result MSB                */
  __IM  uint8_t   ADCVBAT1RESULTMSB;                 /*!< (@ 0x00000017) ADC VBAT1 Burst measurement result MSB                */
  __IM  uint8_t   ADCVBAT2RESULTMSB;                 /*!< (@ 0x00000018) ADC VBAT2 Burst measurement result MSB                */
  __IM  uint8_t   ADCVBAT3RESULTMSB;                 /*!< (@ 0x00000019) ADC VBAT3 Burst or VBUS measurement result MSB        */
  __IM  uint8_t   ADCGP1RESULTLSBS;                  /*!< (@ 0x0000001A) ADC result LSB's (Vbat_burst0, 1, 2 and 3)            */
  __IOM uint8_t   ADCTESTCONF;                       /*!< (@ 0x0000001B) ADC test configuration registers                      */
  __IM  uint8_t   ADCSPARESTATUS;                    /*!< (@ 0x0000001C) Spare status bits for ADC                             */
  __IOM uint8_t   ADCCONFOVRDEN;                     /*!< (@ 0x0000001D) Enable override of ADC config signals                 */
  __IOM uint8_t   ADCCONFOVRD;                       /*!< (@ 0x0000001E) ADC Overrides for ADC configuration signals           */
  __IOM uint8_t   ADCSPARECTRL;                      /*!< (@ 0x0000001F) ADC Spare Control register NOTE: Reset value from OTP,
                                                                         value listed in this table may not be correct.*/         
  __IOM uint8_t   ADCTRIMR110K;                      /*!< (@ 0x00000020) ADC Resistor string TRIM for 10K NOTE: Reset value from
                                                                         OTP, value listed in this table may not be correct.*/    
  __IOM uint8_t   ADCTRIMR247K;                      /*!< (@ 0x00000021) ADC Resistor string TRIM for 47K NOTE: Reset value from
                                                                         OTP, value listed in this table may not be correct.*/    
  __IOM uint8_t   ADCTRIMR3100K;                     /*!< (@ 0x00000022) ADC Resistor string TRIM for 100K NOTE: Reset value
                                                                         from OTP, value listed in this table may not be
                                                                         correct.*/                                               
  __IOM uint8_t   ADCTRIMGAIN;                       /*!< (@ 0x00000023) ADC Gain TRIM NOTE: Reset value from OTP, value listed
                                                                         in this table may not be correct.*/                      
} __PACKED NPM_ADC_Type;                             /*!< Size = 36 (0x024)                                                    */

/* ADC_TASKVBATMEASURE: Task Take VBAT measurement */
  #define ADC_TASKVBATMEASURE_ResetValue (0x00UL)    /*!< Reset value of TASKVBATMEASURE register.                             */

/* TASKVBATMEASURE @Bit 0 : Start VBAT Measurement */
  #define ADC_TASKVBATMEASURE_TASKVBATMEASURE_Pos (0UL) /*!< Position of TASKVBATMEASURE field.                                */
  #define ADC_TASKVBATMEASURE_TASKVBATMEASURE_Msk (0x1UL << ADC_TASKVBATMEASURE_TASKVBATMEASURE_Pos) /*!< Bit mask of
                                                                            TASKVBATMEASURE field.*/                              
  #define ADC_TASKVBATMEASURE_TASKVBATMEASURE_Min (0x0UL) /*!< Min enumerator value of TASKVBATMEASURE field.                  */
  #define ADC_TASKVBATMEASURE_TASKVBATMEASURE_Max (0x1UL) /*!< Max enumerator value of TASKVBATMEASURE field.                  */
  #define ADC_TASKVBATMEASURE_TASKVBATMEASURE_NOEFFECT (0x0UL) /*!< no effect                                                  */
  #define ADC_TASKVBATMEASURE_TASKVBATMEASURE_TRIGGER (0x1UL) /*!< Trigger task                                                */


/* ADC_TASKNTCMEASURE: Task Take NTC measurement */
  #define ADC_TASKNTCMEASURE_ResetValue (0x00UL)     /*!< Reset value of TASKNTCMEASURE register.                              */

/* TASKNTCMEASURE @Bit 0 : Start Battery NTC Measurement */
  #define ADC_TASKNTCMEASURE_TASKNTCMEASURE_Pos (0UL) /*!< Position of TASKNTCMEASURE field.                                   */
  #define ADC_TASKNTCMEASURE_TASKNTCMEASURE_Msk (0x1UL << ADC_TASKNTCMEASURE_TASKNTCMEASURE_Pos) /*!< Bit mask of TASKNTCMEASURE
                                                                            field.*/                                              
  #define ADC_TASKNTCMEASURE_TASKNTCMEASURE_Min (0x0UL) /*!< Min enumerator value of TASKNTCMEASURE field.                     */
  #define ADC_TASKNTCMEASURE_TASKNTCMEASURE_Max (0x1UL) /*!< Max enumerator value of TASKNTCMEASURE field.                     */
  #define ADC_TASKNTCMEASURE_TASKNTCMEASURE_NOEFFECT (0x0UL) /*!< no effect                                                    */
  #define ADC_TASKNTCMEASURE_TASKNTCMEASURE_TRIGGER (0x1UL) /*!< Trigger task                                                  */


/* ADC_TASKTEMPMEASURE: Task Take Die Temperature measurement */
  #define ADC_TASKTEMPMEASURE_ResetValue (0x00UL)    /*!< Reset value of TASKTEMPMEASURE register.                             */

/* TASKTEMPMEASURE @Bit 0 : Start Die Temperature Measurement */
  #define ADC_TASKTEMPMEASURE_TASKTEMPMEASURE_Pos (0UL) /*!< Position of TASKTEMPMEASURE field.                                */
  #define ADC_TASKTEMPMEASURE_TASKTEMPMEASURE_Msk (0x1UL << ADC_TASKTEMPMEASURE_TASKTEMPMEASURE_Pos) /*!< Bit mask of
                                                                            TASKTEMPMEASURE field.*/                              
  #define ADC_TASKTEMPMEASURE_TASKTEMPMEASURE_Min (0x0UL) /*!< Min enumerator value of TASKTEMPMEASURE field.                  */
  #define ADC_TASKTEMPMEASURE_TASKTEMPMEASURE_Max (0x1UL) /*!< Max enumerator value of TASKTEMPMEASURE field.                  */
  #define ADC_TASKTEMPMEASURE_TASKTEMPMEASURE_NOEFFECT (0x0UL) /*!< no effect                                                  */
  #define ADC_TASKTEMPMEASURE_TASKTEMPMEASURE_TRIGGER (0x1UL) /*!< Trigger task                                                */


/* ADC_TASKVSYSMEASURE: Task Take VSYS measurement */
  #define ADC_TASKVSYSMEASURE_ResetValue (0x00UL)    /*!< Reset value of TASKVSYSMEASURE register.                             */

/* TASKVSYSMEASURE @Bit 0 : Start VSYS Measurement */
  #define ADC_TASKVSYSMEASURE_TASKVSYSMEASURE_Pos (0UL) /*!< Position of TASKVSYSMEASURE field.                                */
  #define ADC_TASKVSYSMEASURE_TASKVSYSMEASURE_Msk (0x1UL << ADC_TASKVSYSMEASURE_TASKVSYSMEASURE_Pos) /*!< Bit mask of
                                                                            TASKVSYSMEASURE field.*/                              
  #define ADC_TASKVSYSMEASURE_TASKVSYSMEASURE_Min (0x0UL) /*!< Min enumerator value of TASKVSYSMEASURE field.                  */
  #define ADC_TASKVSYSMEASURE_TASKVSYSMEASURE_Max (0x1UL) /*!< Max enumerator value of TASKVSYSMEASURE field.                  */
  #define ADC_TASKVSYSMEASURE_TASKVSYSMEASURE_NOEFFECT (0x0UL) /*!< no effect                                                  */
  #define ADC_TASKVSYSMEASURE_TASKVSYSMEASURE_TRIGGER (0x1UL) /*!< Trigger task                                                */


/* ADC_TASKVSET1MEASURE: Task Take VSET1 pin measurement */
  #define ADC_TASKVSET1MEASURE_ResetValue (0x00UL)   /*!< Reset value of TASKVSET1MEASURE register.                            */

/* TASKVSET1MEASURE @Bit 0 : Start VSET1 pin Measurement */
  #define ADC_TASKVSET1MEASURE_TASKVSET1MEASURE_Pos (0UL) /*!< Position of TASKVSET1MEASURE field.                             */
  #define ADC_TASKVSET1MEASURE_TASKVSET1MEASURE_Msk (0x1UL << ADC_TASKVSET1MEASURE_TASKVSET1MEASURE_Pos) /*!< Bit mask of
                                                                            TASKVSET1MEASURE field.*/                             
  #define ADC_TASKVSET1MEASURE_TASKVSET1MEASURE_Min (0x0UL) /*!< Min enumerator value of TASKVSET1MEASURE field.               */
  #define ADC_TASKVSET1MEASURE_TASKVSET1MEASURE_Max (0x1UL) /*!< Max enumerator value of TASKVSET1MEASURE field.               */
  #define ADC_TASKVSET1MEASURE_TASKVSET1MEASURE_NOEFFECT (0x0UL) /*!< no effect                                                */
  #define ADC_TASKVSET1MEASURE_TASKVSET1MEASURE_TRIGGER (0x1UL) /*!< Trigger task                                              */


/* ADC_TASKVSET2MEASURE: Task Take VSET2 pin measurement */
  #define ADC_TASKVSET2MEASURE_ResetValue (0x00UL)   /*!< Reset value of TASKVSET2MEASURE register.                            */

/* TASKVSET2MEASURE @Bit 0 : Start VSET2 pin Measurement */
  #define ADC_TASKVSET2MEASURE_TASKVSET2MEASURE_Pos (0UL) /*!< Position of TASKVSET2MEASURE field.                             */
  #define ADC_TASKVSET2MEASURE_TASKVSET2MEASURE_Msk (0x1UL << ADC_TASKVSET2MEASURE_TASKVSET2MEASURE_Pos) /*!< Bit mask of
                                                                            TASKVSET2MEASURE field.*/                             
  #define ADC_TASKVSET2MEASURE_TASKVSET2MEASURE_Min (0x0UL) /*!< Min enumerator value of TASKVSET2MEASURE field.               */
  #define ADC_TASKVSET2MEASURE_TASKVSET2MEASURE_Max (0x1UL) /*!< Max enumerator value of TASKVSET2MEASURE field.               */
  #define ADC_TASKVSET2MEASURE_TASKVSET2MEASURE_NOEFFECT (0x0UL) /*!< no effect                                                */
  #define ADC_TASKVSET2MEASURE_TASKVSET2MEASURE_TRIGGER (0x1UL) /*!< Trigger task                                              */


/* ADC_TASKIBATMEASURE: Task Take IBATmeasurement */
  #define ADC_TASKIBATMEASURE_ResetValue (0x00UL)    /*!< Reset value of TASKIBATMEASURE register.                             */

/* TASKIBATMEASURE @Bit 0 : Start IBAT Measurement */
  #define ADC_TASKIBATMEASURE_TASKIBATMEASURE_Pos (0UL) /*!< Position of TASKIBATMEASURE field.                                */
  #define ADC_TASKIBATMEASURE_TASKIBATMEASURE_Msk (0x1UL << ADC_TASKIBATMEASURE_TASKIBATMEASURE_Pos) /*!< Bit mask of
                                                                            TASKIBATMEASURE field.*/                              
  #define ADC_TASKIBATMEASURE_TASKIBATMEASURE_Min (0x0UL) /*!< Min enumerator value of TASKIBATMEASURE field.                  */
  #define ADC_TASKIBATMEASURE_TASKIBATMEASURE_Max (0x1UL) /*!< Max enumerator value of TASKIBATMEASURE field.                  */
  #define ADC_TASKIBATMEASURE_TASKIBATMEASURE_NOEFFECT (0x0UL) /*!< no effect                                                  */
  #define ADC_TASKIBATMEASURE_TASKIBATMEASURE_TRIGGER (0x1UL) /*!< Trigger task                                                */


/* ADC_TASKVBUS7MEASURE: Task Take VBUS 7V range measurement */
  #define ADC_TASKVBUS7MEASURE_ResetValue (0x00UL)   /*!< Reset value of TASKVBUS7MEASURE register.                            */

/* TASKVBUS7MEASURE @Bit 0 : Start VBUS 7Volt range Measurement */
  #define ADC_TASKVBUS7MEASURE_TASKVBUS7MEASURE_Pos (0UL) /*!< Position of TASKVBUS7MEASURE field.                             */
  #define ADC_TASKVBUS7MEASURE_TASKVBUS7MEASURE_Msk (0x1UL << ADC_TASKVBUS7MEASURE_TASKVBUS7MEASURE_Pos) /*!< Bit mask of
                                                                            TASKVBUS7MEASURE field.*/                             
  #define ADC_TASKVBUS7MEASURE_TASKVBUS7MEASURE_Min (0x0UL) /*!< Min enumerator value of TASKVBUS7MEASURE field.               */
  #define ADC_TASKVBUS7MEASURE_TASKVBUS7MEASURE_Max (0x1UL) /*!< Max enumerator value of TASKVBUS7MEASURE field.               */
  #define ADC_TASKVBUS7MEASURE_TASKVBUS7MEASURE_NOEFFECT (0x0UL) /*!< no effect                                                */
  #define ADC_TASKVBUS7MEASURE_TASKVBUS7MEASURE_TRIGGER (0x1UL) /*!< Trigger task                                              */


/* ADC_TASKDELAYEDVBATMEASURE: Task Take delayed VBAT measurement */
  #define ADC_TASKDELAYEDVBATMEASURE_ResetValue (0x00UL) /*!< Reset value of TASKDELAYEDVBATMEASURE register.                  */

/* TASKDLYDVBATMEASURE @Bit 0 : Start delayed VBAT Measurement */
  #define ADC_TASKDELAYEDVBATMEASURE_TASKDLYDVBATMEASURE_Pos (0UL) /*!< Position of TASKDLYDVBATMEASURE field.                 */
  #define ADC_TASKDELAYEDVBATMEASURE_TASKDLYDVBATMEASURE_Msk (0x1UL << ADC_TASKDELAYEDVBATMEASURE_TASKDLYDVBATMEASURE_Pos) /*!<
                                                                            Bit mask of TASKDLYDVBATMEASURE field.*/              
  #define ADC_TASKDELAYEDVBATMEASURE_TASKDLYDVBATMEASURE_Min (0x0UL) /*!< Min enumerator value of TASKDLYDVBATMEASURE field.   */
  #define ADC_TASKDELAYEDVBATMEASURE_TASKDLYDVBATMEASURE_Max (0x1UL) /*!< Max enumerator value of TASKDLYDVBATMEASURE field.   */
  #define ADC_TASKDELAYEDVBATMEASURE_TASKDLYDVBATMEASURE_NOEFFECT (0x0UL) /*!< no effect                                       */
  #define ADC_TASKDELAYEDVBATMEASURE_TASKDLYDVBATMEASURE_TRIGGER (0x1UL) /*!< Trigger task                                     */


/* ADC_ADCCONFIG: ADC Configuration */
  #define ADC_ADCCONFIG_ResetValue (0x00UL)          /*!< Reset value of ADCCONFIG register.                                   */

/* VBATAUTOENABLE @Bit 0 : Enable VBAT Auto measurement every 1 Second */
  #define ADC_ADCCONFIG_VBATAUTOENABLE_Pos (0UL)     /*!< Position of VBATAUTOENABLE field.                                    */
  #define ADC_ADCCONFIG_VBATAUTOENABLE_Msk (0x1UL << ADC_ADCCONFIG_VBATAUTOENABLE_Pos) /*!< Bit mask of VBATAUTOENABLE field.  */

/* VBATBURSTENABLE @Bit 1 : Enable VBAT Burst mode VBAT0, VBAT1, VBAt2, VBAT3 */
  #define ADC_ADCCONFIG_VBATBURSTENABLE_Pos (1UL)    /*!< Position of VBATBURSTENABLE field.                                   */
  #define ADC_ADCCONFIG_VBATBURSTENABLE_Msk (0x1UL << ADC_ADCCONFIG_VBATBURSTENABLE_Pos) /*!< Bit mask of VBATBURSTENABLE
                                                                            field.*/                                              


/* ADC_ADCNTCRSEL: Select Battery NTC register */
  #define ADC_ADCNTCRSEL_ResetValue (0x01UL)         /*!< Reset value of ADCNTCRSEL register.                                  */

/* ADCNTCRSEL @Bits 0..1 : Select value and TRIM to match Battery NTC resistance */
  #define ADC_ADCNTCRSEL_ADCNTCRSEL_Pos (0UL)        /*!< Position of ADCNTCRSEL field.                                        */
  #define ADC_ADCNTCRSEL_ADCNTCRSEL_Msk (0x3UL << ADC_ADCNTCRSEL_ADCNTCRSEL_Pos) /*!< Bit mask of ADCNTCRSEL field.            */
  #define ADC_ADCNTCRSEL_ADCNTCRSEL_Min (0x0UL)      /*!< Min enumerator value of ADCNTCRSEL field.                            */
  #define ADC_ADCNTCRSEL_ADCNTCRSEL_Max (0x3UL)      /*!< Max enumerator value of ADCNTCRSEL field.                            */
  #define ADC_ADCNTCRSEL_ADCNTCRSEL_Hi_Z (0x0UL)     /*!< No resistor                                                          */
  #define ADC_ADCNTCRSEL_ADCNTCRSEL_10K (0x1UL)      /*!< NTC10K                                                               */
  #define ADC_ADCNTCRSEL_ADCNTCRSEL_47K (0x2UL)      /*!< NTC47K                                                               */
  #define ADC_ADCNTCRSEL_ADCNTCRSEL_100K (0x3UL)     /*!< NTC100K                                                              */


/* ADC_ADCAUTOTIMCONF: Auto measurement intervals */
  #define ADC_ADCAUTOTIMCONF_ResetValue (0x03UL)     /*!< Reset value of ADCAUTOTIMCONF register.                              */

/* NTCAUTOTIM @Bits 0..1 : NTC measurement interval during Charging */
  #define ADC_ADCAUTOTIMCONF_NTCAUTOTIM_Pos (0UL)    /*!< Position of NTCAUTOTIM field.                                        */
  #define ADC_ADCAUTOTIMCONF_NTCAUTOTIM_Msk (0x3UL << ADC_ADCAUTOTIMCONF_NTCAUTOTIM_Pos) /*!< Bit mask of NTCAUTOTIM field.    */
  #define ADC_ADCAUTOTIMCONF_NTCAUTOTIM_Min (0x0UL)  /*!< Min enumerator value of NTCAUTOTIM field.                            */
  #define ADC_ADCAUTOTIMCONF_NTCAUTOTIM_Max (0x3UL)  /*!< Max enumerator value of NTCAUTOTIM field.                            */
  #define ADC_ADCAUTOTIMCONF_NTCAUTOTIM_4MS (0x0UL)  /*!< 4ms                                                                  */
  #define ADC_ADCAUTOTIMCONF_NTCAUTOTIM_64MS (0x1UL) /*!< 64ms                                                                 */
  #define ADC_ADCAUTOTIMCONF_NTCAUTOTIM_128MS (0x2UL) /*!< 128ms                                                               */
  #define ADC_ADCAUTOTIMCONF_NTCAUTOTIM_1024MS (0x3UL) /*!< 1024ms                                                             */

/* TEMPAUTOTIM @Bits 2..3 : Die Temp measurement interval during Charging */
  #define ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_Pos (2UL)   /*!< Position of TEMPAUTOTIM field.                                       */
  #define ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_Msk (0x3UL << ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_Pos) /*!< Bit mask of TEMPAUTOTIM field. */
  #define ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_Min (0x0UL) /*!< Min enumerator value of TEMPAUTOTIM field.                           */
  #define ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_Max (0x3UL) /*!< Max enumerator value of TEMPAUTOTIM field.                           */
  #define ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_4MS (0x0UL) /*!< 4ms                                                                  */
  #define ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_8MS (0x1UL) /*!< 8ms                                                                  */
  #define ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_16MS (0x2UL) /*!< 16ms                                                                */
  #define ADC_ADCAUTOTIMCONF_TEMPAUTOTIM_32MS (0x3UL) /*!< 32ms                                                                */


/* ADC_TASKAUTOTIMUPDATE: update toggle for NTC and Die temp AutoTime register bits */
  #define ADC_TASKAUTOTIMUPDATE_ResetValue (0x00UL)  /*!< Reset value of TASKAUTOTIMUPDATE register.                           */

/* TASKAUTOTIMUPDATE @Bit 0 : update toggle, handshake signal to flag NtcAutoTim and TempAutoTim change */
  #define ADC_TASKAUTOTIMUPDATE_TASKAUTOTIMUPDATE_Pos (0UL) /*!< Position of TASKAUTOTIMUPDATE field.                          */
  #define ADC_TASKAUTOTIMUPDATE_TASKAUTOTIMUPDATE_Msk (0x1UL << ADC_TASKAUTOTIMUPDATE_TASKAUTOTIMUPDATE_Pos) /*!< Bit mask of
                                                                            TASKAUTOTIMUPDATE field.*/                            
  #define ADC_TASKAUTOTIMUPDATE_TASKAUTOTIMUPDATE_Min (0x0UL) /*!< Min enumerator value of TASKAUTOTIMUPDATE field.            */
  #define ADC_TASKAUTOTIMUPDATE_TASKAUTOTIMUPDATE_Max (0x1UL) /*!< Max enumerator value of TASKAUTOTIMUPDATE field.            */
  #define ADC_TASKAUTOTIMUPDATE_TASKAUTOTIMUPDATE_NOEFFECT (0x0UL) /*!< no effect                                              */
  #define ADC_TASKAUTOTIMUPDATE_TASKAUTOTIMUPDATE_UPDATEAUTOTIM (0x1UL) /*!< Register new NtcAutoTim, TempAutoTim value        */


/* ADC_ADCDELTIMCONF: Vbat Delay timer control */
  #define ADC_ADCDELTIMCONF_ResetValue (0x00UL)      /*!< Reset value of ADCDELTIMCONF register.                               */

/* VBATDELTIM @Bits 0..7 : Delayed Vbat measurement control 2ms to 255ms(0,1,2 will all give 2ms delay) */
  #define ADC_ADCDELTIMCONF_VBATDELTIM_Pos (0UL)     /*!< Position of VBATDELTIM field.                                        */
  #define ADC_ADCDELTIMCONF_VBATDELTIM_Msk (0xFFUL << ADC_ADCDELTIMCONF_VBATDELTIM_Pos) /*!< Bit mask of VBATDELTIM field.     */


/* ADC_ADCCALIBOFFSET: ADC Calibration Offset measurement */
  #define ADC_ADCCALIBOFFSET_ResetValue (0x00UL)     /*!< Reset value of ADCCALIBOFFSET register.                              */

/* CALIBOFFSET @Bits 0..7 : Last ADC Calibration Offset measurement */
  #define ADC_ADCCALIBOFFSET_CALIBOFFSET_Pos (0UL)   /*!< Position of CALIBOFFSET field.                                       */
  #define ADC_ADCCALIBOFFSET_CALIBOFFSET_Msk (0xFFUL << ADC_ADCCALIBOFFSET_CALIBOFFSET_Pos) /*!< Bit mask of CALIBOFFSET field.*/


/* ADC_ADCCALIBDISABLE: Disable ADC Calibration Offset measurement */
  #define ADC_ADCCALIBDISABLE_ResetValue (0x01UL)    /*!< Reset value of ADCCALIBDISABLE register.                             */

/* CALIBDISABLE @Bit 0 : Disable ADC Calibration Offset and use last result */
  #define ADC_ADCCALIBDISABLE_CALIBDISABLE_Pos (0UL) /*!< Position of CALIBDISABLE field.                                      */
  #define ADC_ADCCALIBDISABLE_CALIBDISABLE_Msk (0x1UL << ADC_ADCCALIBDISABLE_CALIBDISABLE_Pos) /*!< Bit mask of CALIBDISABLE
                                                                            field.*/                                              


/* ADC_ADCIBATMEASSTATUS: Battery current measurement status */
  #define ADC_ADCIBATMEASSTATUS_ResetValue (0x00UL)  /*!< Reset value of ADCIBATMEASSTATUS register.                           */

/* BCHARGERICHARGE @Bits 0..1 : Battery current charge */
  #define ADC_ADCIBATMEASSTATUS_BCHARGERICHARGE_Pos (0UL) /*!< Position of BCHARGERICHARGE field.                              */
  #define ADC_ADCIBATMEASSTATUS_BCHARGERICHARGE_Msk (0x3UL << ADC_ADCIBATMEASSTATUS_BCHARGERICHARGE_Pos) /*!< Bit mask of
                                                                            BCHARGERICHARGE field.*/                              

/* BCHARGERMODE @Bits 2..3 : Battery charger mode */
  #define ADC_ADCIBATMEASSTATUS_BCHARGERMODE_Pos (2UL) /*!< Position of BCHARGERMODE field.                                    */
  #define ADC_ADCIBATMEASSTATUS_BCHARGERMODE_Msk (0x3UL << ADC_ADCIBATMEASSTATUS_BCHARGERMODE_Pos) /*!< Bit mask of BCHARGERMODE
                                                                            field.*/                                              

/* IBATMEASEINVALID @Bit 4 : Ibat mesaurement Invalid flag */
  #define ADC_ADCIBATMEASSTATUS_IBATMEASEINVALID_Pos (4UL) /*!< Position of IBATMEASEINVALID field.                            */
  #define ADC_ADCIBATMEASSTATUS_IBATMEASEINVALID_Msk (0x1UL << ADC_ADCIBATMEASSTATUS_IBATMEASEINVALID_Pos) /*!< Bit mask of
                                                                            IBATMEASEINVALID field.*/                             


/* ADC_ADCVBATRESULTMSB: ADC VBAT measurement result MSB */
  #define ADC_ADCVBATRESULTMSB_ResetValue (0x00UL)   /*!< Reset value of ADCVBATRESULTMSB register.                            */

/* VBATRESULTMSB @Bits 0..7 : ADC VBAT measurement result upper 8-bits */
  #define ADC_ADCVBATRESULTMSB_VBATRESULTMSB_Pos (0UL) /*!< Position of VBATRESULTMSB field.                                   */
  #define ADC_ADCVBATRESULTMSB_VBATRESULTMSB_Msk (0xFFUL << ADC_ADCVBATRESULTMSB_VBATRESULTMSB_Pos) /*!< Bit mask of
                                                                            VBATRESULTMSB field.*/                                


/* ADC_ADCNTCRESULTMSB: ADC NTC measurement result MSB */
  #define ADC_ADCNTCRESULTMSB_ResetValue (0x00UL)    /*!< Reset value of ADCNTCRESULTMSB register.                             */

/* NTCRESULTMSB @Bits 0..7 : ADC NTC Battery measurement result upper 8-bits */
  #define ADC_ADCNTCRESULTMSB_NTCRESULTMSB_Pos (0UL) /*!< Position of NTCRESULTMSB field.                                      */
  #define ADC_ADCNTCRESULTMSB_NTCRESULTMSB_Msk (0xFFUL << ADC_ADCNTCRESULTMSB_NTCRESULTMSB_Pos) /*!< Bit mask of NTCRESULTMSB
                                                                            field.*/                                              


/* ADC_ADCTEMPRESULTMSB: ADC DIE TEMP measurement result MSB */
  #define ADC_ADCTEMPRESULTMSB_ResetValue (0x00UL)   /*!< Reset value of ADCTEMPRESULTMSB register.                            */

/* TEMPRESULTMSB @Bits 0..7 : ADC Die Temperature measurement result upper 8-bits */
  #define ADC_ADCTEMPRESULTMSB_TEMPRESULTMSB_Pos (0UL) /*!< Position of TEMPRESULTMSB field.                                   */
  #define ADC_ADCTEMPRESULTMSB_TEMPRESULTMSB_Msk (0xFFUL << ADC_ADCTEMPRESULTMSB_TEMPRESULTMSB_Pos) /*!< Bit mask of
                                                                            TEMPRESULTMSB field.*/                                


/* ADC_ADCVSYSRESULTMSB: ADC VSYS measurement result MSB */
  #define ADC_ADCVSYSRESULTMSB_ResetValue (0x00UL)   /*!< Reset value of ADCVSYSRESULTMSB register.                            */

/* VSYSRESULTMSB @Bits 0..7 : ADC VSYS measurement result upper 8-bits */
  #define ADC_ADCVSYSRESULTMSB_VSYSRESULTMSB_Pos (0UL) /*!< Position of VSYSRESULTMSB field.                                   */
  #define ADC_ADCVSYSRESULTMSB_VSYSRESULTMSB_Msk (0xFFUL << ADC_ADCVSYSRESULTMSB_VSYSRESULTMSB_Pos) /*!< Bit mask of
                                                                            VSYSRESULTMSB field.*/                                


/* ADC_ADCGP0RESULTLSBS: ADC result LSB's (Vbat, Ntc, Temp and Vsys) */
  #define ADC_ADCGP0RESULTLSBS_ResetValue (0x00UL)   /*!< Reset value of ADCGP0RESULTLSBS register.                            */

/* VBATRESULTLSB @Bits 0..1 : VBAT measurement result LSBs */
  #define ADC_ADCGP0RESULTLSBS_VBATRESULTLSB_Pos (0UL) /*!< Position of VBATRESULTLSB field.                                   */
  #define ADC_ADCGP0RESULTLSBS_VBATRESULTLSB_Msk (0x3UL << ADC_ADCGP0RESULTLSBS_VBATRESULTLSB_Pos) /*!< Bit mask of
                                                                            VBATRESULTLSB field.*/                                

/* NTCRESULTLSB @Bits 2..3 : Battery NTC measurement result LSBs */
  #define ADC_ADCGP0RESULTLSBS_NTCRESULTLSB_Pos (2UL) /*!< Position of NTCRESULTLSB field.                                     */
  #define ADC_ADCGP0RESULTLSBS_NTCRESULTLSB_Msk (0x3UL << ADC_ADCGP0RESULTLSBS_NTCRESULTLSB_Pos) /*!< Bit mask of NTCRESULTLSB
                                                                            field.*/                                              

/* TEMPRESULTLSB @Bits 4..5 : Die Temperature measurement result LSBs */
  #define ADC_ADCGP0RESULTLSBS_TEMPRESULTLSB_Pos (4UL) /*!< Position of TEMPRESULTLSB field.                                   */
  #define ADC_ADCGP0RESULTLSBS_TEMPRESULTLSB_Msk (0x3UL << ADC_ADCGP0RESULTLSBS_TEMPRESULTLSB_Pos) /*!< Bit mask of
                                                                            TEMPRESULTLSB field.*/                                

/* VSYSRESULTLSB @Bits 6..7 : VSYS measurement result LSBs */
  #define ADC_ADCGP0RESULTLSBS_VSYSRESULTLSB_Pos (6UL) /*!< Position of VSYSRESULTLSB field.                                   */
  #define ADC_ADCGP0RESULTLSBS_VSYSRESULTLSB_Msk (0x3UL << ADC_ADCGP0RESULTLSBS_VSYSRESULTLSB_Pos) /*!< Bit mask of
                                                                            VSYSRESULTLSB field.*/                                


/* ADC_ADCVBAT0RESULTMSB: ADC VBAT0 Burst measurement result MSB */
  #define ADC_ADCVBAT0RESULTMSB_ResetValue (0x00UL)  /*!< Reset value of ADCVBAT0RESULTMSB register.                           */

/* VBAT0RESULTMSB @Bits 0..7 : ADC VBAT0 Burst measurement result upper 8-bits */
  #define ADC_ADCVBAT0RESULTMSB_VBAT0RESULTMSB_Pos (0UL) /*!< Position of VBAT0RESULTMSB field.                                */
  #define ADC_ADCVBAT0RESULTMSB_VBAT0RESULTMSB_Msk (0xFFUL << ADC_ADCVBAT0RESULTMSB_VBAT0RESULTMSB_Pos) /*!< Bit mask of
                                                                            VBAT0RESULTMSB field.*/                               


/* ADC_ADCVBAT1RESULTMSB: ADC VBAT1 Burst measurement result MSB */
  #define ADC_ADCVBAT1RESULTMSB_ResetValue (0x00UL)  /*!< Reset value of ADCVBAT1RESULTMSB register.                           */

/* VBAT1RESULTMSB @Bits 0..7 : ADC VBAT1 Burst measurement result upper 8-bits */
  #define ADC_ADCVBAT1RESULTMSB_VBAT1RESULTMSB_Pos (0UL) /*!< Position of VBAT1RESULTMSB field.                                */
  #define ADC_ADCVBAT1RESULTMSB_VBAT1RESULTMSB_Msk (0xFFUL << ADC_ADCVBAT1RESULTMSB_VBAT1RESULTMSB_Pos) /*!< Bit mask of
                                                                            VBAT1RESULTMSB field.*/                               


/* ADC_ADCVBAT2RESULTMSB: ADC VBAT2 Burst measurement result MSB */
  #define ADC_ADCVBAT2RESULTMSB_ResetValue (0x00UL)  /*!< Reset value of ADCVBAT2RESULTMSB register.                           */

/* VBAT2RESULTMSB @Bits 0..7 : ADC VBAT2 Burst measurement result upper 8-bits */
  #define ADC_ADCVBAT2RESULTMSB_VBAT2RESULTMSB_Pos (0UL) /*!< Position of VBAT2RESULTMSB field.                                */
  #define ADC_ADCVBAT2RESULTMSB_VBAT2RESULTMSB_Msk (0xFFUL << ADC_ADCVBAT2RESULTMSB_VBAT2RESULTMSB_Pos) /*!< Bit mask of
                                                                            VBAT2RESULTMSB field.*/                               


/* ADC_ADCVBAT3RESULTMSB: ADC VBAT3 Burst or VBUS measurement result MSB */
  #define ADC_ADCVBAT3RESULTMSB_ResetValue (0x00UL)  /*!< Reset value of ADCVBAT3RESULTMSB register.                           */

/* VBAT3RESULTMSB @Bits 0..7 : If TASK_VBAT_MEASURE is triggered in BURST mode, this register will contain ADC VBAT3 Burst
                               measurement result upper 8-bits If TASK_VBUS7_MEASURE is triggered, this register will contain
                               VBUS measurement result upper 8-bits */                                                            
                                                                                                                                  
  #define ADC_ADCVBAT3RESULTMSB_VBAT3RESULTMSB_Pos (0UL) /*!< Position of VBAT3RESULTMSB field.                                */
  #define ADC_ADCVBAT3RESULTMSB_VBAT3RESULTMSB_Msk (0xFFUL << ADC_ADCVBAT3RESULTMSB_VBAT3RESULTMSB_Pos) /*!< Bit mask of
                                                                            VBAT3RESULTMSB field.*/                               


/* ADC_ADCGP1RESULTLSBS: ADC result LSB's (Vbat_burst0, 1, 2 and 3) */
  #define ADC_ADCGP1RESULTLSBS_ResetValue (0x00UL)   /*!< Reset value of ADCGP1RESULTLSBS register.                            */

/* VBAT0RESULTLSB @Bits 0..1 : Burst VBAT0 measurement result LSBs */
  #define ADC_ADCGP1RESULTLSBS_VBAT0RESULTLSB_Pos (0UL) /*!< Position of VBAT0RESULTLSB field.                                 */
  #define ADC_ADCGP1RESULTLSBS_VBAT0RESULTLSB_Msk (0x3UL << ADC_ADCGP1RESULTLSBS_VBAT0RESULTLSB_Pos) /*!< Bit mask of
                                                                            VBAT0RESULTLSB field.*/                               

/* VBAT1RESULTLSB @Bits 2..3 : Burst VBAT1 measurement result LSBs */
  #define ADC_ADCGP1RESULTLSBS_VBAT1RESULTLSB_Pos (2UL) /*!< Position of VBAT1RESULTLSB field.                                 */
  #define ADC_ADCGP1RESULTLSBS_VBAT1RESULTLSB_Msk (0x3UL << ADC_ADCGP1RESULTLSBS_VBAT1RESULTLSB_Pos) /*!< Bit mask of
                                                                            VBAT1RESULTLSB field.*/                               

/* VBAT2RESULTLSB @Bits 4..5 : Burst VBAT2 measurement result LSBs */
  #define ADC_ADCGP1RESULTLSBS_VBAT2RESULTLSB_Pos (4UL) /*!< Position of VBAT2RESULTLSB field.                                 */
  #define ADC_ADCGP1RESULTLSBS_VBAT2RESULTLSB_Msk (0x3UL << ADC_ADCGP1RESULTLSBS_VBAT2RESULTLSB_Pos) /*!< Bit mask of
                                                                            VBAT2RESULTLSB field.*/                               

/* VBAT3RESULTLSB @Bits 6..7 : Burst VBAT3 measurement result LSBs */
  #define ADC_ADCGP1RESULTLSBS_VBAT3RESULTLSB_Pos (6UL) /*!< Position of VBAT3RESULTLSB field.                                 */
  #define ADC_ADCGP1RESULTLSBS_VBAT3RESULTLSB_Msk (0x3UL << ADC_ADCGP1RESULTLSBS_VBAT3RESULTLSB_Pos) /*!< Bit mask of
                                                                            VBAT3RESULTLSB field.*/                               


/* ADC_ADCTESTCONF: ADC test configuration registers */
  #define ADC_ADCTESTCONF_ResetValue (0x00UL)        /*!< Reset value of ADCTESTCONF register.                                 */

/* TESTENABLE @Bit 0 : Enable ADC test modes */
  #define ADC_ADCTESTCONF_TESTENABLE_Pos (0UL)       /*!< Position of TESTENABLE field.                                        */
  #define ADC_ADCTESTCONF_TESTENABLE_Msk (0x1UL << ADC_ADCTESTCONF_TESTENABLE_Pos) /*!< Bit mask of TESTENABLE field.          */

/* FULLRANGE @Bit 1 : Extend INL and DNL range to 10-bit from 6 and 4 bits */
  #define ADC_ADCTESTCONF_FULLRANGE_Pos (1UL)        /*!< Position of FULLRANGE field.                                         */
  #define ADC_ADCTESTCONF_FULLRANGE_Msk (0x1UL << ADC_ADCTESTCONF_FULLRANGE_Pos) /*!< Bit mask of FULLRANGE field.             */

/* INLEN @Bit 2 : Enable ADC INL measurement */
  #define ADC_ADCTESTCONF_INLEN_Pos (2UL)            /*!< Position of INLEN field.                                             */
  #define ADC_ADCTESTCONF_INLEN_Msk (0x1UL << ADC_ADCTESTCONF_INLEN_Pos) /*!< Bit mask of INLEN field.                         */

/* ADCATE @Bits 3..5 : Control signal for ADC Analogue test bus */
  #define ADC_ADCTESTCONF_ADCATE_Pos (3UL)           /*!< Position of ADCATE field.                                            */
  #define ADC_ADCTESTCONF_ADCATE_Msk (0x7UL << ADC_ADCTESTCONF_ADCATE_Pos) /*!< Bit mask of ADCATE field.                      */


/* ADC_ADCSPARESTATUS: Spare status bits for ADC */
  #define ADC_ADCSPARESTATUS_ResetValue (0x00UL)     /*!< Reset value of ADCSPARESTATUS register.                              */

/* ADCSPARESTATUS @Bits 0..1 : ADC spare status signal */
  #define ADC_ADCSPARESTATUS_ADCSPARESTATUS_Pos (0UL) /*!< Position of ADCSPARESTATUS field.                                   */
  #define ADC_ADCSPARESTATUS_ADCSPARESTATUS_Msk (0x3UL << ADC_ADCSPARESTATUS_ADCSPARESTATUS_Pos) /*!< Bit mask of ADCSPARESTATUS
                                                                            field.*/                                              


/* ADC_ADCCONFOVRDEN: Enable override of ADC config signals */
  #define ADC_ADCCONFOVRDEN_ResetValue (0x00UL)      /*!< Reset value of ADCCONFOVRDEN register.                               */

/* ADCOVRDEN @Bit 0 : Enable override of ADC config signals */
  #define ADC_ADCCONFOVRDEN_ADCOVRDEN_Pos (0UL)      /*!< Position of ADCOVRDEN field.                                         */
  #define ADC_ADCCONFOVRDEN_ADCOVRDEN_Msk (0x1UL << ADC_ADCCONFOVRDEN_ADCOVRDEN_Pos) /*!< Bit mask of ADCOVRDEN field.         */

/* OVRDFGPWRUPEN @Bit 1 : Register override enable for Fuel gauge power up */
  #define ADC_ADCCONFOVRDEN_OVRDFGPWRUPEN_Pos (1UL)  /*!< Position of OVRDFGPWRUPEN field.                                     */
  #define ADC_ADCCONFOVRDEN_OVRDFGPWRUPEN_Msk (0x1UL << ADC_ADCCONFOVRDEN_OVRDFGPWRUPEN_Pos) /*!< Bit mask of OVRDFGPWRUPEN
                                                                            field.*/                                              


/* ADC_ADCCONFOVRD: ADC Overrides for ADC configuration signals */
  #define ADC_ADCCONFOVRD_ResetValue (0x00UL)        /*!< Reset value of ADCCONFOVRD register.                                 */

/* OVRDADCSEL @Bits 0..3 : Register override for ADC_SEL_IN */
  #define ADC_ADCCONFOVRD_OVRDADCSEL_Pos (0UL)       /*!< Position of OVRDADCSEL field.                                        */
  #define ADC_ADCCONFOVRD_OVRDADCSEL_Msk (0xFUL << ADC_ADCCONFOVRD_OVRDADCSEL_Pos) /*!< Bit mask of OVRDADCSEL field.          */

/* OVRDENISRC @Bit 4 : Register override for EN_ISRC */
  #define ADC_ADCCONFOVRD_OVRDENISRC_Pos (4UL)       /*!< Position of OVRDENISRC field.                                        */
  #define ADC_ADCCONFOVRD_OVRDENISRC_Msk (0x1UL << ADC_ADCCONFOVRD_OVRDENISRC_Pos) /*!< Bit mask of OVRDENISRC field.          */

/* OVRDRSEL @Bits 5..6 : Register override for RSEL */
  #define ADC_ADCCONFOVRD_OVRDRSEL_Pos (5UL)         /*!< Position of OVRDRSEL field.                                          */
  #define ADC_ADCCONFOVRD_OVRDRSEL_Msk (0x3UL << ADC_ADCCONFOVRD_OVRDRSEL_Pos) /*!< Bit mask of OVRDRSEL field.                */

/* OVRDFGPWRUP @Bit 7 : Register override for Fuel gauge power up */
  #define ADC_ADCCONFOVRD_OVRDFGPWRUP_Pos (7UL)      /*!< Position of OVRDFGPWRUP field.                                       */
  #define ADC_ADCCONFOVRD_OVRDFGPWRUP_Msk (0x1UL << ADC_ADCCONFOVRD_OVRDFGPWRUP_Pos) /*!< Bit mask of OVRDFGPWRUP field.       */


/* ADC_ADCSPARECTRL: ADC Spare Control register NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define ADC_ADCSPARECTRL_ResetValue (0x00UL)       /*!< Reset value of ADCSPARECTRL register.                                */

/* ADCSPARECTRL @Bits 0..3 : ADC spare control register */
  #define ADC_ADCSPARECTRL_ADCSPARECTRL_Pos (0UL)    /*!< Position of ADCSPARECTRL field.                                      */
  #define ADC_ADCSPARECTRL_ADCSPARECTRL_Msk (0xFUL << ADC_ADCSPARECTRL_ADCSPARECTRL_Pos) /*!< Bit mask of ADCSPARECTRL field.  */


/* ADC_ADCTRIMR110K: ADC Resistor string TRIM for 10K NOTE: Reset value from OTP, value listed in this table may not be correct.
                      */                                                                                                          
                                                                                                                                  
  #define ADC_ADCTRIMR110K_ResetValue (0x00UL)       /*!< Reset value of ADCTRIMR110K register.                                */

/* ADCTRIMR10K @Bits 0..4 : ADC Resistor string TRIM for 10K */
  #define ADC_ADCTRIMR110K_ADCTRIMR10K_Pos (0UL)     /*!< Position of ADCTRIMR10K field.                                       */
  #define ADC_ADCTRIMR110K_ADCTRIMR10K_Msk (0x1FUL << ADC_ADCTRIMR110K_ADCTRIMR10K_Pos) /*!< Bit mask of ADCTRIMR10K field.    */


/* ADC_ADCTRIMR247K: ADC Resistor string TRIM for 47K NOTE: Reset value from OTP, value listed in this table may not be correct.
                      */                                                                                                          
                                                                                                                                  
  #define ADC_ADCTRIMR247K_ResetValue (0x00UL)       /*!< Reset value of ADCTRIMR247K register.                                */

/* ADCTRIMR47K @Bits 0..4 : ADC Resistor string TRIM for 47K */
  #define ADC_ADCTRIMR247K_ADCTRIMR47K_Pos (0UL)     /*!< Position of ADCTRIMR47K field.                                       */
  #define ADC_ADCTRIMR247K_ADCTRIMR47K_Msk (0x1FUL << ADC_ADCTRIMR247K_ADCTRIMR47K_Pos) /*!< Bit mask of ADCTRIMR47K field.    */


/* ADC_ADCTRIMR3100K: ADC Resistor string TRIM for 100K NOTE: Reset value from OTP, value listed in this table may not be
                       correct. */                                                                                                
                                                                                                                                  
  #define ADC_ADCTRIMR3100K_ResetValue (0x00UL)      /*!< Reset value of ADCTRIMR3100K register.                               */

/* ADCTRIMR100K @Bits 0..4 : ADC Resistor string TRIM for 100K */
  #define ADC_ADCTRIMR3100K_ADCTRIMR100K_Pos (0UL)   /*!< Position of ADCTRIMR100K field.                                      */
  #define ADC_ADCTRIMR3100K_ADCTRIMR100K_Msk (0x1FUL << ADC_ADCTRIMR3100K_ADCTRIMR100K_Pos) /*!< Bit mask of ADCTRIMR100K
                                                                            field.*/                                              


/* ADC_ADCTRIMGAIN: ADC Gain TRIM NOTE: Reset value from OTP, value listed in this table may not be correct. */
  #define ADC_ADCTRIMGAIN_ResetValue (0x00UL)        /*!< Reset value of ADCTRIMGAIN register.                                 */

/* ADCTRIMGAIN @Bits 0..5 : ADC GAIN TRIM */
  #define ADC_ADCTRIMGAIN_ADCTRIMGAIN_Pos (0UL)      /*!< Position of ADCTRIMGAIN field.                                       */
  #define ADC_ADCTRIMGAIN_ADCTRIMGAIN_Msk (0x3FUL << ADC_ADCTRIMGAIN_ADCTRIMGAIN_Pos) /*!< Bit mask of ADCTRIMGAIN field.      */



/* =========================================================================================================================== */
/* ================                                           GPIOS                                           ================ */
/* =========================================================================================================================== */

/* ====================================================== Struct GPIOS ======================================================= */
/**
  * @brief Neutrino GPIOS registers
  */
typedef struct {                                     /*!< GPIOS Structure                                                      */
  __IOM uint8_t   GPIOMODE0;                         /*!< (@ 0x00000000) GPIO Mode Configuration                               */
  __IOM uint8_t   GPIOMODE1;                         /*!< (@ 0x00000001) GPIO Mode Configuration                               */
  __IOM uint8_t   GPIOMODE2;                         /*!< (@ 0x00000002) GPIO Mode Configuration                               */
  __IOM uint8_t   GPIOMODE3;                         /*!< (@ 0x00000003) GPIO Mode Configuration                               */
  __IOM uint8_t   GPIOMODE4;                         /*!< (@ 0x00000004) GPIO Mode Configuration                               */
  __IOM uint8_t   GPIODRIVE0;                        /*!< (@ 0x00000005) GPIO Drive strength Configuration                     */
  __IOM uint8_t   GPIODRIVE1;                        /*!< (@ 0x00000006) GPIO Drive strength Configuration                     */
  __IOM uint8_t   GPIODRIVE2;                        /*!< (@ 0x00000007) GPIO Drive strength Configuration                     */
  __IOM uint8_t   GPIODRIVE3;                        /*!< (@ 0x00000008) GPIO Drive strength Configuration                     */
  __IOM uint8_t   GPIODRIVE4;                        /*!< (@ 0x00000009) GPIO Drive strength Configuration                     */
  __IOM uint8_t   GPIOPUEN0;                         /*!< (@ 0x0000000A) GPIO Pull-up Enable Configuration                     */
  __IOM uint8_t   GPIOPUEN1;                         /*!< (@ 0x0000000B) GPIO Pull-up Enable Configuration                     */
  __IOM uint8_t   GPIOPUEN2;                         /*!< (@ 0x0000000C) GPIO Pull-up Enable Configuration                     */
  __IOM uint8_t   GPIOPUEN3;                         /*!< (@ 0x0000000D) GPIO Pull-up Enable Configuration                     */
  __IOM uint8_t   GPIOPUEN4;                         /*!< (@ 0x0000000E) GPIO Pull-up Enable Configuration                     */
  __IOM uint8_t   GPIOPDEN0;                         /*!< (@ 0x0000000F) GPIO Pull-down Enable Configuration                   */
  __IOM uint8_t   GPIOPDEN1;                         /*!< (@ 0x00000010) GPIO Pull-down Enable Configuration                   */
  __IOM uint8_t   GPIOPDEN2;                         /*!< (@ 0x00000011) GPIO Pull-down Enable Configuration                   */
  __IOM uint8_t   GPIOPDEN3;                         /*!< (@ 0x00000012) GPIO Pull-down Enable Configuration                   */
  __IOM uint8_t   GPIOPDEN4;                         /*!< (@ 0x00000013) GPIO Pull-down Enable Configuration                   */
  __IOM uint8_t   GPIOOPENDRAIN0;                    /*!< (@ 0x00000014) GPIO Open Drain Configuration                         */
  __IOM uint8_t   GPIOOPENDRAIN1;                    /*!< (@ 0x00000015) GPIO Open Drain Configuration                         */
  __IOM uint8_t   GPIOOPENDRAIN2;                    /*!< (@ 0x00000016) GPIO Open Drain Configuration                         */
  __IOM uint8_t   GPIOOPENDRAIN3;                    /*!< (@ 0x00000017) GPIO Open Drain Configuration                         */
  __IOM uint8_t   GPIOOPENDRAIN4;                    /*!< (@ 0x00000018) GPIO Open Drain Configuration                         */
  __IOM uint8_t   GPIODEBOUNCE0;                     /*!< (@ 0x00000019) GPIO Debounce Configuration                           */
  __IOM uint8_t   GPIODEBOUNCE1;                     /*!< (@ 0x0000001A) GPIO Debounce Configuration                           */
  __IOM uint8_t   GPIODEBOUNCE2;                     /*!< (@ 0x0000001B) GPIO Debounce Configuration                           */
  __IOM uint8_t   GPIODEBOUNCE3;                     /*!< (@ 0x0000001C) GPIO Debounce Configuration                           */
  __IOM uint8_t   GPIODEBOUNCE4;                     /*!< (@ 0x0000001D) GPIO Debounce Configuration                           */
} __PACKED NPM_GPIOS_Type;                           /*!< Size = 30 (0x01E)                                                    */

/* GPIOS_GPIOMODE0: GPIO Mode Configuration */
  #define GPIOS_GPIOMODE0_ResetValue (0x00UL)        /*!< Reset value of GPIOMODE0 register.                                   */

/* GPIOMODE @Bits 0..3 : Config for GPIO mode selection */
  #define GPIOS_GPIOMODE0_GPIOMODE_Pos (0UL)         /*!< Position of GPIOMODE field.                                          */
  #define GPIOS_GPIOMODE0_GPIOMODE_Msk (0xFUL << GPIOS_GPIOMODE0_GPIOMODE_Pos) /*!< Bit mask of GPIOMODE field.                */
  #define GPIOS_GPIOMODE0_GPIOMODE_Min (0x0UL)       /*!< Min enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE0_GPIOMODE_Max (0x9UL)       /*!< Max enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPIINPUT (0x0UL)  /*!< GPI Input                                                            */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPILOGIC1 (0x1UL) /*!< GPI Logic1                                                           */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPILOGIC0 (0x2UL) /*!< GPI Logic0                                                           */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPIEVENTRISE (0x3UL) /*!< GPI Rising Edge Event                                             */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPIEVENTFALL (0x4UL) /*!< GPI Falling Edge Event                                            */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPOIRQ (0x5UL)    /*!< GPO Interrupt                                                        */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPORESET (0x6UL)  /*!< GPO Reset                                                            */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPOPLW (0x7UL)    /*!< GPO PwrLossWarn                                                      */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPOLOGIC1 (0x8UL) /*!< GPO Logic1                                                           */
  #define GPIOS_GPIOMODE0_GPIOMODE_GPOLOGIC0 (0x9UL) /*!< GPO Logic0                                                           */


/* GPIOS_GPIOMODE1: GPIO Mode Configuration */
  #define GPIOS_GPIOMODE1_ResetValue (0x00UL)        /*!< Reset value of GPIOMODE1 register.                                   */

/* GPIOMODE @Bits 0..3 : Config for GPIO mode selection */
  #define GPIOS_GPIOMODE1_GPIOMODE_Pos (0UL)         /*!< Position of GPIOMODE field.                                          */
  #define GPIOS_GPIOMODE1_GPIOMODE_Msk (0xFUL << GPIOS_GPIOMODE1_GPIOMODE_Pos) /*!< Bit mask of GPIOMODE field.                */
  #define GPIOS_GPIOMODE1_GPIOMODE_Min (0x0UL)       /*!< Min enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE1_GPIOMODE_Max (0x9UL)       /*!< Max enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPIINPUT (0x0UL)  /*!< GPI Input                                                            */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPILOGIC1 (0x1UL) /*!< GPI Logic1                                                           */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPILOGIC0 (0x2UL) /*!< GPI Logic0                                                           */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPIEVENTRISE (0x3UL) /*!< GPI Rising Edge Event                                             */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPIEVENTFALL (0x4UL) /*!< GPI Falling Edge Event                                            */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPOIRQ (0x5UL)    /*!< GPO Interrupt                                                        */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPORESET (0x6UL)  /*!< GPO Reset                                                            */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPOPLW (0x7UL)    /*!< GPO PwrLossWarn                                                      */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPOLOGIC1 (0x8UL) /*!< GPO Logic1                                                           */
  #define GPIOS_GPIOMODE1_GPIOMODE_GPOLOGIC0 (0x9UL) /*!< GPO Logic0                                                           */


/* GPIOS_GPIOMODE2: GPIO Mode Configuration */
  #define GPIOS_GPIOMODE2_ResetValue (0x00UL)        /*!< Reset value of GPIOMODE2 register.                                   */

/* GPIOMODE @Bits 0..3 : Config for GPIO mode selection */
  #define GPIOS_GPIOMODE2_GPIOMODE_Pos (0UL)         /*!< Position of GPIOMODE field.                                          */
  #define GPIOS_GPIOMODE2_GPIOMODE_Msk (0xFUL << GPIOS_GPIOMODE2_GPIOMODE_Pos) /*!< Bit mask of GPIOMODE field.                */
  #define GPIOS_GPIOMODE2_GPIOMODE_Min (0x0UL)       /*!< Min enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE2_GPIOMODE_Max (0x9UL)       /*!< Max enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPIINPUT (0x0UL)  /*!< GPI Input                                                            */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPILOGIC1 (0x1UL) /*!< GPI Logic1                                                           */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPILOGIC0 (0x2UL) /*!< GPI Logic0                                                           */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPIEVENTRISE (0x3UL) /*!< GPI Rising Edge Event                                             */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPIEVENTFALL (0x4UL) /*!< GPI Falling Edge Event                                            */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPOIRQ (0x5UL)    /*!< GPO Interrupt                                                        */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPORESET (0x6UL)  /*!< GPO Reset                                                            */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPOPLW (0x7UL)    /*!< GPO PwrLossWarn                                                      */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPOLOGIC1 (0x8UL) /*!< GPO Logic1                                                           */
  #define GPIOS_GPIOMODE2_GPIOMODE_GPOLOGIC0 (0x9UL) /*!< GPO Logic0                                                           */


/* GPIOS_GPIOMODE3: GPIO Mode Configuration */
  #define GPIOS_GPIOMODE3_ResetValue (0x00UL)        /*!< Reset value of GPIOMODE3 register.                                   */

/* GPIOMODE @Bits 0..3 : Config for GPIO mode selection */
  #define GPIOS_GPIOMODE3_GPIOMODE_Pos (0UL)         /*!< Position of GPIOMODE field.                                          */
  #define GPIOS_GPIOMODE3_GPIOMODE_Msk (0xFUL << GPIOS_GPIOMODE3_GPIOMODE_Pos) /*!< Bit mask of GPIOMODE field.                */
  #define GPIOS_GPIOMODE3_GPIOMODE_Min (0x0UL)       /*!< Min enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE3_GPIOMODE_Max (0x9UL)       /*!< Max enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPIINPUT (0x0UL)  /*!< GPI Input                                                            */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPILOGIC1 (0x1UL) /*!< GPI Logic1                                                           */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPILOGIC0 (0x2UL) /*!< GPI Logic0                                                           */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPIEVENTRISE (0x3UL) /*!< GPI Rising Edge Event                                             */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPIEVENTFALL (0x4UL) /*!< GPI Falling Edge Event                                            */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPOIRQ (0x5UL)    /*!< GPO Interrupt                                                        */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPORESET (0x6UL)  /*!< GPO Reset                                                            */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPOPLW (0x7UL)    /*!< GPO PwrLossWarn                                                      */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPOLOGIC1 (0x8UL) /*!< GPO Logic1                                                           */
  #define GPIOS_GPIOMODE3_GPIOMODE_GPOLOGIC0 (0x9UL) /*!< GPO Logic0                                                           */


/* GPIOS_GPIOMODE4: GPIO Mode Configuration */
  #define GPIOS_GPIOMODE4_ResetValue (0x00UL)        /*!< Reset value of GPIOMODE4 register.                                   */

/* GPIOMODE @Bits 0..3 : Config for GPIO mode selection */
  #define GPIOS_GPIOMODE4_GPIOMODE_Pos (0UL)         /*!< Position of GPIOMODE field.                                          */
  #define GPIOS_GPIOMODE4_GPIOMODE_Msk (0xFUL << GPIOS_GPIOMODE4_GPIOMODE_Pos) /*!< Bit mask of GPIOMODE field.                */
  #define GPIOS_GPIOMODE4_GPIOMODE_Min (0x0UL)       /*!< Min enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE4_GPIOMODE_Max (0x9UL)       /*!< Max enumerator value of GPIOMODE field.                              */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPIINPUT (0x0UL)  /*!< GPI Input                                                            */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPILOGIC1 (0x1UL) /*!< GPI Logic1                                                           */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPILOGIC0 (0x2UL) /*!< GPI Logic0                                                           */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPIEVENTRISE (0x3UL) /*!< GPI Rising Edge Event                                             */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPIEVENTFALL (0x4UL) /*!< GPI Falling Edge Event                                            */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPOIRQ (0x5UL)    /*!< GPO Interrupt                                                        */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPORESET (0x6UL)  /*!< GPO Reset                                                            */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPOPLW (0x7UL)    /*!< GPO PwrLossWarn                                                      */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPOLOGIC1 (0x8UL) /*!< GPO Logic1                                                           */
  #define GPIOS_GPIOMODE4_GPIOMODE_GPOLOGIC0 (0x9UL) /*!< GPO Logic0                                                           */


/* GPIOS_GPIODRIVE0: GPIO Drive strength Configuration */
  #define GPIOS_GPIODRIVE0_ResetValue (0x00UL)       /*!< Reset value of GPIODRIVE0 register.                                  */

/* GPIODRIVE @Bit 0 : Config for GPIO drive strength */
  #define GPIOS_GPIODRIVE0_GPIODRIVE_Pos (0UL)       /*!< Position of GPIODRIVE field.                                         */
  #define GPIOS_GPIODRIVE0_GPIODRIVE_Msk (0x1UL << GPIOS_GPIODRIVE0_GPIODRIVE_Pos) /*!< Bit mask of GPIODRIVE field.           */
  #define GPIOS_GPIODRIVE0_GPIODRIVE_Min (0x0UL)     /*!< Min enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE0_GPIODRIVE_Max (0x1UL)     /*!< Max enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE0_GPIODRIVE_1MA (0x0UL)     /*!< 1mA                                                                  */
  #define GPIOS_GPIODRIVE0_GPIODRIVE_6MA (0x1UL)     /*!< 6mA                                                                  */


/* GPIOS_GPIODRIVE1: GPIO Drive strength Configuration */
  #define GPIOS_GPIODRIVE1_ResetValue (0x00UL)       /*!< Reset value of GPIODRIVE1 register.                                  */

/* GPIODRIVE @Bit 0 : Config for GPIO drive strength */
  #define GPIOS_GPIODRIVE1_GPIODRIVE_Pos (0UL)       /*!< Position of GPIODRIVE field.                                         */
  #define GPIOS_GPIODRIVE1_GPIODRIVE_Msk (0x1UL << GPIOS_GPIODRIVE1_GPIODRIVE_Pos) /*!< Bit mask of GPIODRIVE field.           */
  #define GPIOS_GPIODRIVE1_GPIODRIVE_Min (0x0UL)     /*!< Min enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE1_GPIODRIVE_Max (0x1UL)     /*!< Max enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE1_GPIODRIVE_1MA (0x0UL)     /*!< 1mA                                                                  */
  #define GPIOS_GPIODRIVE1_GPIODRIVE_6MA (0x1UL)     /*!< 6mA                                                                  */


/* GPIOS_GPIODRIVE2: GPIO Drive strength Configuration */
  #define GPIOS_GPIODRIVE2_ResetValue (0x00UL)       /*!< Reset value of GPIODRIVE2 register.                                  */

/* GPIODRIVE @Bit 0 : Config for GPIO drive strength */
  #define GPIOS_GPIODRIVE2_GPIODRIVE_Pos (0UL)       /*!< Position of GPIODRIVE field.                                         */
  #define GPIOS_GPIODRIVE2_GPIODRIVE_Msk (0x1UL << GPIOS_GPIODRIVE2_GPIODRIVE_Pos) /*!< Bit mask of GPIODRIVE field.           */
  #define GPIOS_GPIODRIVE2_GPIODRIVE_Min (0x0UL)     /*!< Min enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE2_GPIODRIVE_Max (0x1UL)     /*!< Max enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE2_GPIODRIVE_1MA (0x0UL)     /*!< 1mA                                                                  */
  #define GPIOS_GPIODRIVE2_GPIODRIVE_6MA (0x1UL)     /*!< 6mA                                                                  */


/* GPIOS_GPIODRIVE3: GPIO Drive strength Configuration */
  #define GPIOS_GPIODRIVE3_ResetValue (0x00UL)       /*!< Reset value of GPIODRIVE3 register.                                  */

/* GPIODRIVE @Bit 0 : Config for GPIO drive strength */
  #define GPIOS_GPIODRIVE3_GPIODRIVE_Pos (0UL)       /*!< Position of GPIODRIVE field.                                         */
  #define GPIOS_GPIODRIVE3_GPIODRIVE_Msk (0x1UL << GPIOS_GPIODRIVE3_GPIODRIVE_Pos) /*!< Bit mask of GPIODRIVE field.           */
  #define GPIOS_GPIODRIVE3_GPIODRIVE_Min (0x0UL)     /*!< Min enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE3_GPIODRIVE_Max (0x1UL)     /*!< Max enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE3_GPIODRIVE_1MA (0x0UL)     /*!< 1mA                                                                  */
  #define GPIOS_GPIODRIVE3_GPIODRIVE_6MA (0x1UL)     /*!< 6mA                                                                  */


/* GPIOS_GPIODRIVE4: GPIO Drive strength Configuration */
  #define GPIOS_GPIODRIVE4_ResetValue (0x00UL)       /*!< Reset value of GPIODRIVE4 register.                                  */

/* GPIODRIVE @Bit 0 : Config for GPIO drive strength */
  #define GPIOS_GPIODRIVE4_GPIODRIVE_Pos (0UL)       /*!< Position of GPIODRIVE field.                                         */
  #define GPIOS_GPIODRIVE4_GPIODRIVE_Msk (0x1UL << GPIOS_GPIODRIVE4_GPIODRIVE_Pos) /*!< Bit mask of GPIODRIVE field.           */
  #define GPIOS_GPIODRIVE4_GPIODRIVE_Min (0x0UL)     /*!< Min enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE4_GPIODRIVE_Max (0x1UL)     /*!< Max enumerator value of GPIODRIVE field.                             */
  #define GPIOS_GPIODRIVE4_GPIODRIVE_1MA (0x0UL)     /*!< 1mA                                                                  */
  #define GPIOS_GPIODRIVE4_GPIODRIVE_6MA (0x1UL)     /*!< 6mA                                                                  */


/* GPIOS_GPIOPUEN0: GPIO Pull-up Enable Configuration */
  #define GPIOS_GPIOPUEN0_ResetValue (0x00UL)        /*!< Reset value of GPIOPUEN0 register.                                   */

/* GPIOPUEN @Bit 0 : Config for GPIO pull-up enable */
  #define GPIOS_GPIOPUEN0_GPIOPUEN_Pos (0UL)         /*!< Position of GPIOPUEN field.                                          */
  #define GPIOS_GPIOPUEN0_GPIOPUEN_Msk (0x1UL << GPIOS_GPIOPUEN0_GPIOPUEN_Pos) /*!< Bit mask of GPIOPUEN field.                */
  #define GPIOS_GPIOPUEN0_GPIOPUEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN0_GPIOPUEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN0_GPIOPUEN_PULLUP0 (0x0UL)   /*!< Pull Up Disable                                                      */
  #define GPIOS_GPIOPUEN0_GPIOPUEN_PULLUP1 (0x1UL)   /*!< Pull Up Enable                                                       */


/* GPIOS_GPIOPUEN1: GPIO Pull-up Enable Configuration */
  #define GPIOS_GPIOPUEN1_ResetValue (0x00UL)        /*!< Reset value of GPIOPUEN1 register.                                   */

/* GPIOPUEN @Bit 0 : Config for GPIO pull-up enable */
  #define GPIOS_GPIOPUEN1_GPIOPUEN_Pos (0UL)         /*!< Position of GPIOPUEN field.                                          */
  #define GPIOS_GPIOPUEN1_GPIOPUEN_Msk (0x1UL << GPIOS_GPIOPUEN1_GPIOPUEN_Pos) /*!< Bit mask of GPIOPUEN field.                */
  #define GPIOS_GPIOPUEN1_GPIOPUEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN1_GPIOPUEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN1_GPIOPUEN_PULLUP0 (0x0UL)   /*!< Pull Up Disable                                                      */
  #define GPIOS_GPIOPUEN1_GPIOPUEN_PULLUP1 (0x1UL)   /*!< Pull Up Enable                                                       */


/* GPIOS_GPIOPUEN2: GPIO Pull-up Enable Configuration */
  #define GPIOS_GPIOPUEN2_ResetValue (0x00UL)        /*!< Reset value of GPIOPUEN2 register.                                   */

/* GPIOPUEN @Bit 0 : Config for GPIO pull-up enable */
  #define GPIOS_GPIOPUEN2_GPIOPUEN_Pos (0UL)         /*!< Position of GPIOPUEN field.                                          */
  #define GPIOS_GPIOPUEN2_GPIOPUEN_Msk (0x1UL << GPIOS_GPIOPUEN2_GPIOPUEN_Pos) /*!< Bit mask of GPIOPUEN field.                */
  #define GPIOS_GPIOPUEN2_GPIOPUEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN2_GPIOPUEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN2_GPIOPUEN_PULLUP0 (0x0UL)   /*!< Pull Up Disable                                                      */
  #define GPIOS_GPIOPUEN2_GPIOPUEN_PULLUP1 (0x1UL)   /*!< Pull Up Enable                                                       */


/* GPIOS_GPIOPUEN3: GPIO Pull-up Enable Configuration */
  #define GPIOS_GPIOPUEN3_ResetValue (0x00UL)        /*!< Reset value of GPIOPUEN3 register.                                   */

/* GPIOPUEN @Bit 0 : Config for GPIO pull-up enable */
  #define GPIOS_GPIOPUEN3_GPIOPUEN_Pos (0UL)         /*!< Position of GPIOPUEN field.                                          */
  #define GPIOS_GPIOPUEN3_GPIOPUEN_Msk (0x1UL << GPIOS_GPIOPUEN3_GPIOPUEN_Pos) /*!< Bit mask of GPIOPUEN field.                */
  #define GPIOS_GPIOPUEN3_GPIOPUEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN3_GPIOPUEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN3_GPIOPUEN_PULLUP0 (0x0UL)   /*!< Pull Up Disable                                                      */
  #define GPIOS_GPIOPUEN3_GPIOPUEN_PULLUP1 (0x1UL)   /*!< Pull Up Enable                                                       */


/* GPIOS_GPIOPUEN4: GPIO Pull-up Enable Configuration */
  #define GPIOS_GPIOPUEN4_ResetValue (0x00UL)        /*!< Reset value of GPIOPUEN4 register.                                   */

/* GPIOPUEN @Bit 0 : Config for GPIO pull-up enable */
  #define GPIOS_GPIOPUEN4_GPIOPUEN_Pos (0UL)         /*!< Position of GPIOPUEN field.                                          */
  #define GPIOS_GPIOPUEN4_GPIOPUEN_Msk (0x1UL << GPIOS_GPIOPUEN4_GPIOPUEN_Pos) /*!< Bit mask of GPIOPUEN field.                */
  #define GPIOS_GPIOPUEN4_GPIOPUEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN4_GPIOPUEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPUEN field.                              */
  #define GPIOS_GPIOPUEN4_GPIOPUEN_PULLUP0 (0x0UL)   /*!< Pull Up Disable                                                      */
  #define GPIOS_GPIOPUEN4_GPIOPUEN_PULLUP1 (0x1UL)   /*!< Pull Up Enable                                                       */


/* GPIOS_GPIOPDEN0: GPIO Pull-down Enable Configuration */
  #define GPIOS_GPIOPDEN0_ResetValue (0x01UL)        /*!< Reset value of GPIOPDEN0 register.                                   */

/* GPIOPDEN @Bit 0 : Config for GPIO pull-down enable */
  #define GPIOS_GPIOPDEN0_GPIOPDEN_Pos (0UL)         /*!< Position of GPIOPDEN field.                                          */
  #define GPIOS_GPIOPDEN0_GPIOPDEN_Msk (0x1UL << GPIOS_GPIOPDEN0_GPIOPDEN_Pos) /*!< Bit mask of GPIOPDEN field.                */
  #define GPIOS_GPIOPDEN0_GPIOPDEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN0_GPIOPDEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN0_GPIOPDEN_PULLDOWN0 (0x0UL) /*!< Pull Down Disable                                                    */
  #define GPIOS_GPIOPDEN0_GPIOPDEN_PULLDOWN1 (0x1UL) /*!< Pull Down Enable                                                     */


/* GPIOS_GPIOPDEN1: GPIO Pull-down Enable Configuration */
  #define GPIOS_GPIOPDEN1_ResetValue (0x01UL)        /*!< Reset value of GPIOPDEN1 register.                                   */

/* GPIOPDEN @Bit 0 : Config for GPIO pull-down enable */
  #define GPIOS_GPIOPDEN1_GPIOPDEN_Pos (0UL)         /*!< Position of GPIOPDEN field.                                          */
  #define GPIOS_GPIOPDEN1_GPIOPDEN_Msk (0x1UL << GPIOS_GPIOPDEN1_GPIOPDEN_Pos) /*!< Bit mask of GPIOPDEN field.                */
  #define GPIOS_GPIOPDEN1_GPIOPDEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN1_GPIOPDEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN1_GPIOPDEN_PULLDOWN0 (0x0UL) /*!< Pull Down Disable                                                    */
  #define GPIOS_GPIOPDEN1_GPIOPDEN_PULLDOWN1 (0x1UL) /*!< Pull Down Enable                                                     */


/* GPIOS_GPIOPDEN2: GPIO Pull-down Enable Configuration */
  #define GPIOS_GPIOPDEN2_ResetValue (0x01UL)        /*!< Reset value of GPIOPDEN2 register.                                   */

/* GPIOPDEN @Bit 0 : Config for GPIO pull-down enable */
  #define GPIOS_GPIOPDEN2_GPIOPDEN_Pos (0UL)         /*!< Position of GPIOPDEN field.                                          */
  #define GPIOS_GPIOPDEN2_GPIOPDEN_Msk (0x1UL << GPIOS_GPIOPDEN2_GPIOPDEN_Pos) /*!< Bit mask of GPIOPDEN field.                */
  #define GPIOS_GPIOPDEN2_GPIOPDEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN2_GPIOPDEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN2_GPIOPDEN_PULLDOWN0 (0x0UL) /*!< Pull Down Disable                                                    */
  #define GPIOS_GPIOPDEN2_GPIOPDEN_PULLDOWN1 (0x1UL) /*!< Pull Down Enable                                                     */


/* GPIOS_GPIOPDEN3: GPIO Pull-down Enable Configuration */
  #define GPIOS_GPIOPDEN3_ResetValue (0x01UL)        /*!< Reset value of GPIOPDEN3 register.                                   */

/* GPIOPDEN @Bit 0 : Config for GPIO pull-down enable */
  #define GPIOS_GPIOPDEN3_GPIOPDEN_Pos (0UL)         /*!< Position of GPIOPDEN field.                                          */
  #define GPIOS_GPIOPDEN3_GPIOPDEN_Msk (0x1UL << GPIOS_GPIOPDEN3_GPIOPDEN_Pos) /*!< Bit mask of GPIOPDEN field.                */
  #define GPIOS_GPIOPDEN3_GPIOPDEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN3_GPIOPDEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN3_GPIOPDEN_PULLDOWN0 (0x0UL) /*!< Pull Down Disable                                                    */
  #define GPIOS_GPIOPDEN3_GPIOPDEN_PULLDOWN1 (0x1UL) /*!< Pull Down Enable                                                     */


/* GPIOS_GPIOPDEN4: GPIO Pull-down Enable Configuration */
  #define GPIOS_GPIOPDEN4_ResetValue (0x01UL)        /*!< Reset value of GPIOPDEN4 register.                                   */

/* GPIOPDEN @Bit 0 : Config for GPIO pull-down enable */
  #define GPIOS_GPIOPDEN4_GPIOPDEN_Pos (0UL)         /*!< Position of GPIOPDEN field.                                          */
  #define GPIOS_GPIOPDEN4_GPIOPDEN_Msk (0x1UL << GPIOS_GPIOPDEN4_GPIOPDEN_Pos) /*!< Bit mask of GPIOPDEN field.                */
  #define GPIOS_GPIOPDEN4_GPIOPDEN_Min (0x0UL)       /*!< Min enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN4_GPIOPDEN_Max (0x1UL)       /*!< Max enumerator value of GPIOPDEN field.                              */
  #define GPIOS_GPIOPDEN4_GPIOPDEN_PULLDOWN0 (0x0UL) /*!< Pull Down Disable                                                    */
  #define GPIOS_GPIOPDEN4_GPIOPDEN_PULLDOWN1 (0x1UL) /*!< Pull Down Enable                                                     */


/* GPIOS_GPIOOPENDRAIN0: GPIO Open Drain Configuration */
  #define GPIOS_GPIOOPENDRAIN0_ResetValue (0x00UL)   /*!< Reset value of GPIOOPENDRAIN0 register.                              */

/* GPIOOPENDRAIN @Bit 0 : Config for GPIO open drain */
  #define GPIOS_GPIOOPENDRAIN0_GPIOOPENDRAIN_Pos (0UL) /*!< Position of GPIOOPENDRAIN field.                                   */
  #define GPIOS_GPIOOPENDRAIN0_GPIOOPENDRAIN_Msk (0x1UL << GPIOS_GPIOOPENDRAIN0_GPIOOPENDRAIN_Pos) /*!< Bit mask of
                                                                            GPIOOPENDRAIN field.*/                                
  #define GPIOS_GPIOOPENDRAIN0_GPIOOPENDRAIN_Min (0x0UL) /*!< Min enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN0_GPIOOPENDRAIN_Max (0x1UL) /*!< Max enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN0_GPIOOPENDRAIN_OPENDRAIN0 (0x0UL) /*!< Open Drain Disable                                        */
  #define GPIOS_GPIOOPENDRAIN0_GPIOOPENDRAIN_OPENDRAIN1 (0x1UL) /*!< Open Drain Enable                                         */


/* GPIOS_GPIOOPENDRAIN1: GPIO Open Drain Configuration */
  #define GPIOS_GPIOOPENDRAIN1_ResetValue (0x00UL)   /*!< Reset value of GPIOOPENDRAIN1 register.                              */

/* GPIOOPENDRAIN @Bit 0 : Config for GPIO open drain */
  #define GPIOS_GPIOOPENDRAIN1_GPIOOPENDRAIN_Pos (0UL) /*!< Position of GPIOOPENDRAIN field.                                   */
  #define GPIOS_GPIOOPENDRAIN1_GPIOOPENDRAIN_Msk (0x1UL << GPIOS_GPIOOPENDRAIN1_GPIOOPENDRAIN_Pos) /*!< Bit mask of
                                                                            GPIOOPENDRAIN field.*/                                
  #define GPIOS_GPIOOPENDRAIN1_GPIOOPENDRAIN_Min (0x0UL) /*!< Min enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN1_GPIOOPENDRAIN_Max (0x1UL) /*!< Max enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN1_GPIOOPENDRAIN_OPENDRAIN0 (0x0UL) /*!< Open Drain Disable                                        */
  #define GPIOS_GPIOOPENDRAIN1_GPIOOPENDRAIN_OPENDRAIN1 (0x1UL) /*!< Open Drain Enable                                         */


/* GPIOS_GPIOOPENDRAIN2: GPIO Open Drain Configuration */
  #define GPIOS_GPIOOPENDRAIN2_ResetValue (0x00UL)   /*!< Reset value of GPIOOPENDRAIN2 register.                              */

/* GPIOOPENDRAIN @Bit 0 : Config for GPIO open drain */
  #define GPIOS_GPIOOPENDRAIN2_GPIOOPENDRAIN_Pos (0UL) /*!< Position of GPIOOPENDRAIN field.                                   */
  #define GPIOS_GPIOOPENDRAIN2_GPIOOPENDRAIN_Msk (0x1UL << GPIOS_GPIOOPENDRAIN2_GPIOOPENDRAIN_Pos) /*!< Bit mask of
                                                                            GPIOOPENDRAIN field.*/                                
  #define GPIOS_GPIOOPENDRAIN2_GPIOOPENDRAIN_Min (0x0UL) /*!< Min enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN2_GPIOOPENDRAIN_Max (0x1UL) /*!< Max enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN2_GPIOOPENDRAIN_OPENDRAIN0 (0x0UL) /*!< Open Drain Disable                                        */
  #define GPIOS_GPIOOPENDRAIN2_GPIOOPENDRAIN_OPENDRAIN1 (0x1UL) /*!< Open Drain Enable                                         */


/* GPIOS_GPIOOPENDRAIN3: GPIO Open Drain Configuration */
  #define GPIOS_GPIOOPENDRAIN3_ResetValue (0x00UL)   /*!< Reset value of GPIOOPENDRAIN3 register.                              */

/* GPIOOPENDRAIN @Bit 0 : Config for GPIO open drain */
  #define GPIOS_GPIOOPENDRAIN3_GPIOOPENDRAIN_Pos (0UL) /*!< Position of GPIOOPENDRAIN field.                                   */
  #define GPIOS_GPIOOPENDRAIN3_GPIOOPENDRAIN_Msk (0x1UL << GPIOS_GPIOOPENDRAIN3_GPIOOPENDRAIN_Pos) /*!< Bit mask of
                                                                            GPIOOPENDRAIN field.*/                                
  #define GPIOS_GPIOOPENDRAIN3_GPIOOPENDRAIN_Min (0x0UL) /*!< Min enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN3_GPIOOPENDRAIN_Max (0x1UL) /*!< Max enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN3_GPIOOPENDRAIN_OPENDRAIN0 (0x0UL) /*!< Open Drain Disable                                        */
  #define GPIOS_GPIOOPENDRAIN3_GPIOOPENDRAIN_OPENDRAIN1 (0x1UL) /*!< Open Drain Enable                                         */


/* GPIOS_GPIOOPENDRAIN4: GPIO Open Drain Configuration */
  #define GPIOS_GPIOOPENDRAIN4_ResetValue (0x00UL)   /*!< Reset value of GPIOOPENDRAIN4 register.                              */

/* GPIOOPENDRAIN @Bit 0 : Config for GPIO open drain */
  #define GPIOS_GPIOOPENDRAIN4_GPIOOPENDRAIN_Pos (0UL) /*!< Position of GPIOOPENDRAIN field.                                   */
  #define GPIOS_GPIOOPENDRAIN4_GPIOOPENDRAIN_Msk (0x1UL << GPIOS_GPIOOPENDRAIN4_GPIOOPENDRAIN_Pos) /*!< Bit mask of
                                                                            GPIOOPENDRAIN field.*/                                
  #define GPIOS_GPIOOPENDRAIN4_GPIOOPENDRAIN_Min (0x0UL) /*!< Min enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN4_GPIOOPENDRAIN_Max (0x1UL) /*!< Max enumerator value of GPIOOPENDRAIN field.                     */
  #define GPIOS_GPIOOPENDRAIN4_GPIOOPENDRAIN_OPENDRAIN0 (0x0UL) /*!< Open Drain Disable                                        */
  #define GPIOS_GPIOOPENDRAIN4_GPIOOPENDRAIN_OPENDRAIN1 (0x1UL) /*!< Open Drain Enable                                         */


/* GPIOS_GPIODEBOUNCE0: GPIO Debounce Configuration */
  #define GPIOS_GPIODEBOUNCE0_ResetValue (0x00UL)    /*!< Reset value of GPIODEBOUNCE0 register.                               */

/* GPIODEBOUNCE @Bit 0 : Config for GPIO debounce */
  #define GPIOS_GPIODEBOUNCE0_GPIODEBOUNCE_Pos (0UL) /*!< Position of GPIODEBOUNCE field.                                      */
  #define GPIOS_GPIODEBOUNCE0_GPIODEBOUNCE_Msk (0x1UL << GPIOS_GPIODEBOUNCE0_GPIODEBOUNCE_Pos) /*!< Bit mask of GPIODEBOUNCE
                                                                            field.*/                                              
  #define GPIOS_GPIODEBOUNCE0_GPIODEBOUNCE_Min (0x0UL) /*!< Min enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE0_GPIODEBOUNCE_Max (0x1UL) /*!< Max enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE0_GPIODEBOUNCE_DEBOUNCE0 (0x0UL) /*!< Debounce Disable                                             */
  #define GPIOS_GPIODEBOUNCE0_GPIODEBOUNCE_DEBOUNCE1 (0x1UL) /*!< Debounce Enable                                              */


/* GPIOS_GPIODEBOUNCE1: GPIO Debounce Configuration */
  #define GPIOS_GPIODEBOUNCE1_ResetValue (0x00UL)    /*!< Reset value of GPIODEBOUNCE1 register.                               */

/* GPIODEBOUNCE @Bit 0 : Config for GPIO debounce */
  #define GPIOS_GPIODEBOUNCE1_GPIODEBOUNCE_Pos (0UL) /*!< Position of GPIODEBOUNCE field.                                      */
  #define GPIOS_GPIODEBOUNCE1_GPIODEBOUNCE_Msk (0x1UL << GPIOS_GPIODEBOUNCE1_GPIODEBOUNCE_Pos) /*!< Bit mask of GPIODEBOUNCE
                                                                            field.*/                                              
  #define GPIOS_GPIODEBOUNCE1_GPIODEBOUNCE_Min (0x0UL) /*!< Min enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE1_GPIODEBOUNCE_Max (0x1UL) /*!< Max enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE1_GPIODEBOUNCE_DEBOUNCE0 (0x0UL) /*!< Debounce Disable                                             */
  #define GPIOS_GPIODEBOUNCE1_GPIODEBOUNCE_DEBOUNCE1 (0x1UL) /*!< Debounce Enable                                              */


/* GPIOS_GPIODEBOUNCE2: GPIO Debounce Configuration */
  #define GPIOS_GPIODEBOUNCE2_ResetValue (0x00UL)    /*!< Reset value of GPIODEBOUNCE2 register.                               */

/* GPIODEBOUNCE @Bit 0 : Config for GPIO debounce */
  #define GPIOS_GPIODEBOUNCE2_GPIODEBOUNCE_Pos (0UL) /*!< Position of GPIODEBOUNCE field.                                      */
  #define GPIOS_GPIODEBOUNCE2_GPIODEBOUNCE_Msk (0x1UL << GPIOS_GPIODEBOUNCE2_GPIODEBOUNCE_Pos) /*!< Bit mask of GPIODEBOUNCE
                                                                            field.*/                                              
  #define GPIOS_GPIODEBOUNCE2_GPIODEBOUNCE_Min (0x0UL) /*!< Min enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE2_GPIODEBOUNCE_Max (0x1UL) /*!< Max enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE2_GPIODEBOUNCE_DEBOUNCE0 (0x0UL) /*!< Debounce Disable                                             */
  #define GPIOS_GPIODEBOUNCE2_GPIODEBOUNCE_DEBOUNCE1 (0x1UL) /*!< Debounce Enable                                              */


/* GPIOS_GPIODEBOUNCE3: GPIO Debounce Configuration */
  #define GPIOS_GPIODEBOUNCE3_ResetValue (0x00UL)    /*!< Reset value of GPIODEBOUNCE3 register.                               */

/* GPIODEBOUNCE @Bit 0 : Config for GPIO debounce */
  #define GPIOS_GPIODEBOUNCE3_GPIODEBOUNCE_Pos (0UL) /*!< Position of GPIODEBOUNCE field.                                      */
  #define GPIOS_GPIODEBOUNCE3_GPIODEBOUNCE_Msk (0x1UL << GPIOS_GPIODEBOUNCE3_GPIODEBOUNCE_Pos) /*!< Bit mask of GPIODEBOUNCE
                                                                            field.*/                                              
  #define GPIOS_GPIODEBOUNCE3_GPIODEBOUNCE_Min (0x0UL) /*!< Min enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE3_GPIODEBOUNCE_Max (0x1UL) /*!< Max enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE3_GPIODEBOUNCE_DEBOUNCE0 (0x0UL) /*!< Debounce Disable                                             */
  #define GPIOS_GPIODEBOUNCE3_GPIODEBOUNCE_DEBOUNCE1 (0x1UL) /*!< Debounce Enable                                              */


/* GPIOS_GPIODEBOUNCE4: GPIO Debounce Configuration */
  #define GPIOS_GPIODEBOUNCE4_ResetValue (0x00UL)    /*!< Reset value of GPIODEBOUNCE4 register.                               */

/* GPIODEBOUNCE @Bit 0 : Config for GPIO debounce */
  #define GPIOS_GPIODEBOUNCE4_GPIODEBOUNCE_Pos (0UL) /*!< Position of GPIODEBOUNCE field.                                      */
  #define GPIOS_GPIODEBOUNCE4_GPIODEBOUNCE_Msk (0x1UL << GPIOS_GPIODEBOUNCE4_GPIODEBOUNCE_Pos) /*!< Bit mask of GPIODEBOUNCE
                                                                            field.*/                                              
  #define GPIOS_GPIODEBOUNCE4_GPIODEBOUNCE_Min (0x0UL) /*!< Min enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE4_GPIODEBOUNCE_Max (0x1UL) /*!< Max enumerator value of GPIODEBOUNCE field.                        */
  #define GPIOS_GPIODEBOUNCE4_GPIODEBOUNCE_DEBOUNCE0 (0x0UL) /*!< Debounce Disable                                             */
  #define GPIOS_GPIODEBOUNCE4_GPIODEBOUNCE_DEBOUNCE1 (0x1UL) /*!< Debounce Enable                                              */



/* =========================================================================================================================== */
/* ================                                           TIMER                                           ================ */
/* =========================================================================================================================== */

/* ====================================================== Struct TIMER ======================================================= */
/**
  * @brief Neutrino TIMER registers
  */
typedef struct {                                     /*!< TIMER Structure                                                      */
  __OM  uint8_t   TIMERSET;                          /*!< (@ 0x00000000) Start Timer                                           */
  __OM  uint8_t   TIMERCLR;                          /*!< (@ 0x00000001) Stop Timer                                            */
  __OM  uint8_t   WAKEUPACT;                         /*!< (@ 0x00000002) Activate Wakeup                                       */
  __OM  uint8_t   TIMERTARGETSTROBE;                 /*!< (@ 0x00000003) Strobe for timer Target                               */
  __OM  uint8_t   WATCHDOGKICK;                      /*!< (@ 0x00000004) Watchdog kick                                         */
  __IOM uint8_t   TIMERCONFIG;                       /*!< (@ 0x00000005) Timer mode selection                                  */
  __IM  uint8_t   TIMERSTATUS;                       /*!< (@ 0x00000006) Timers Status                                         */
  __IOM uint8_t   PERIODICTIMEROVERRIDE;             /*!< (@ 0x00000007) Periodic Timer Override                               */
  __IOM uint8_t   TIMERHIBYTE;                       /*!< (@ 0x00000008) Timer Most Significant Byte                           */
  __IOM uint8_t   TIMERMIDBYTE;                      /*!< (@ 0x00000009) Timer Middle Byte                                     */
  __IOM uint8_t   TIMERLOBYTE;                       /*!< (@ 0x0000000A) Timer Least Significant Byte                          */
} __PACKED NPM_TIMER_Type;                           /*!< Size = 11 (0x00B)                                                    */

/* TIMER_TIMERSET: Start Timer */
  #define TIMER_TIMERSET_ResetValue (0x00UL)         /*!< Reset value of TIMERSET register.                                    */

/* TASKTIMEREN @Bit 0 : Start Timer */
  #define TIMER_TIMERSET_TASKTIMEREN_Pos (0UL)       /*!< Position of TASKTIMEREN field.                                       */
  #define TIMER_TIMERSET_TASKTIMEREN_Msk (0x1UL << TIMER_TIMERSET_TASKTIMEREN_Pos) /*!< Bit mask of TASKTIMEREN field.         */
  #define TIMER_TIMERSET_TASKTIMEREN_Min (0x0UL)     /*!< Min enumerator value of TASKTIMEREN field.                           */
  #define TIMER_TIMERSET_TASKTIMEREN_Max (0x1UL)     /*!< Max enumerator value of TASKTIMEREN field.                           */
  #define TIMER_TIMERSET_TASKTIMEREN_NOEFFECT (0x0UL) /*!< no effect                                                           */
  #define TIMER_TIMERSET_TASKTIMEREN_SET (0x1UL)     /*!< Timer Start request                                                  */


/* TIMER_TIMERCLR: Stop Timer */
  #define TIMER_TIMERCLR_ResetValue (0x00UL)         /*!< Reset value of TIMERCLR register.                                    */

/* TASKTIMERDIS @Bit 0 : Stop Timer */
  #define TIMER_TIMERCLR_TASKTIMERDIS_Pos (0UL)      /*!< Position of TASKTIMERDIS field.                                      */
  #define TIMER_TIMERCLR_TASKTIMERDIS_Msk (0x1UL << TIMER_TIMERCLR_TASKTIMERDIS_Pos) /*!< Bit mask of TASKTIMERDIS field.      */
  #define TIMER_TIMERCLR_TASKTIMERDIS_Min (0x0UL)    /*!< Min enumerator value of TASKTIMERDIS field.                          */
  #define TIMER_TIMERCLR_TASKTIMERDIS_Max (0x1UL)    /*!< Max enumerator value of TASKTIMERDIS field.                          */
  #define TIMER_TIMERCLR_TASKTIMERDIS_NOEFFECT (0x0UL) /*!< no effect                                                          */
  #define TIMER_TIMERCLR_TASKTIMERDIS_SET (0x1UL)    /*!< Timer Stop request                                                   */


/* TIMER_ WAKEUPACT: Activate Wakeup */
  #define TIMER_WAKEUPACT_ResetValue (0x00UL)         /*!< Reset value of  WAKEUPACT register.                                 */

/* TASKWAKEUPACT @Bit 0 : Activate Wakeup */
  #define TIMER_WAKEUPACT_TASKWAKEUPACT_Pos (0UL)      /*!< Position of TASKWAKEUPACT field.                                    */
  #define TIMER_WAKEUPACT_TASKWAKEUPACT_Msk (0x1UL << TIMER_TIMERCLR_TASKWAKEUPACT_Pos) /*!< Bit mask of TASKWAKEUPACT field.   */
  #define TIMER_WAKEUPACT_TASKWAKEUPACT_Min (0x0UL)    /*!< Min enumerator value of TASKWAKEUPACT field.                        */
  #define TIMER_WAKEUPACT_TASKWAKEUPACT_Max (0x1UL)    /*!< Max enumerator value of TASKWAKEUPACT field.                        */
  #define TIMER_WAKEUPACT_TASKWAKEUPACT_NOEFFECT (0x0UL) /*!< no effect                                                         */
  #define TIMER_WAKEUPACT_TASKWAKEUPACT_SET (0x1UL)    /*!< Activate wakeup request                                             */


/* TIMER_TIMERTARGETSTROBE: Strobe for timer Target */
  #define TIMER_TIMERTARGETSTROBE_ResetValue (0x00UL) /*!< Reset value of TIMERTARGETSTROBE register.                          */

/* TASKTIMERTARGETSTROBE @Bit 0 : Timer target strobe */
  #define TIMER_TIMERTARGETSTROBE_TASKTIMERTARGETSTROBE_Pos (0UL) /*!< Position of TASKTIMERTARGETSTROBE field.                */
  #define TIMER_TIMERTARGETSTROBE_TASKTIMERTARGETSTROBE_Msk (0x1UL << TIMER_TIMERTARGETSTROBE_TASKTIMERTARGETSTROBE_Pos) /*!<
                                                                            Bit mask of TASKTIMERTARGETSTROBE field.*/            
  #define TIMER_TIMERTARGETSTROBE_TASKTIMERTARGETSTROBE_Min (0x0UL) /*!< Min enumerator value of TASKTIMERTARGETSTROBE field.  */
  #define TIMER_TIMERTARGETSTROBE_TASKTIMERTARGETSTROBE_Max (0x1UL) /*!< Max enumerator value of TASKTIMERTARGETSTROBE field.  */
  #define TIMER_TIMERTARGETSTROBE_TASKTIMERTARGETSTROBE_NOEFFECT (0x0UL) /*!< no effect                                        */
  #define TIMER_TIMERTARGETSTROBE_TASKTIMERTARGETSTROBE_SET (0x1UL) /*!< load timer target (24 bit timer val)                  */


/* TIMER_WATCHDOGKICK: Watchdog kick */
  #define TIMER_WATCHDOGKICK_ResetValue (0x00UL)     /*!< Reset value of WATCHDOGKICK register.                                */

/* TASKWATCHDOGKICK @Bit 0 : Watchdog kick */
  #define TIMER_WATCHDOGKICK_TASKWATCHDOGKICK_Pos (0UL) /*!< Position of TASKWATCHDOGKICK field.                               */
  #define TIMER_WATCHDOGKICK_TASKWATCHDOGKICK_Msk (0x1UL << TIMER_WATCHDOGKICK_TASKWATCHDOGKICK_Pos) /*!< Bit mask of
                                                                            TASKWATCHDOGKICK field.*/                             
  #define TIMER_WATCHDOGKICK_TASKWATCHDOGKICK_Min (0x0UL) /*!< Min enumerator value of TASKWATCHDOGKICK field.                 */
  #define TIMER_WATCHDOGKICK_TASKWATCHDOGKICK_Max (0x1UL) /*!< Max enumerator value of TASKWATCHDOGKICK field.                 */
  #define TIMER_WATCHDOGKICK_TASKWATCHDOGKICK_NOEFFECT (0x0UL) /*!< no effect                                                  */
  #define TIMER_WATCHDOGKICK_TASKWATCHDOGKICK_Kick (0x1UL) /*!< kick watchdog                                                  */


/* TIMER_TIMERCONFIG: Timer mode selection */
  #define TIMER_TIMERCONFIG_ResetValue (0x00UL)      /*!< Reset value of TIMERCONFIG register.                                 */

/* TIMERMODESEL @Bits 0..2 : Select Watchdog and timer modes */
  #define TIMER_TIMERCONFIG_TIMERMODESEL_Pos (0UL)   /*!< Position of TIMERMODESEL field.                                      */
  #define TIMER_TIMERCONFIG_TIMERMODESEL_Msk (0x7UL << TIMER_TIMERCONFIG_TIMERMODESEL_Pos) /*!< Bit mask of TIMERMODESEL field.*/
  #define TIMER_TIMERCONFIG_TIMERMODESEL_Min (0x0UL) /*!< Min enumerator value of TIMERMODESEL field.                          */
  #define TIMER_TIMERCONFIG_TIMERMODESEL_Max (0x4UL) /*!< Max enumerator value of TIMERMODESEL field.                          */
  #define TIMER_TIMERCONFIG_TIMERMODESEL_BOOTMONITOR (0x0UL) /*!< Boot Monitor                                                 */
  #define TIMER_TIMERCONFIG_TIMERMODESEL_WATCHDOGWARNING (0x1UL) /*!< Watchdog Warning                                         */
  #define TIMER_TIMERCONFIG_TIMERMODESEL_WATCHDOGRESET (0x2UL) /*!< Watchdog Reset                                             */
  #define TIMER_TIMERCONFIG_TIMERMODESEL_GENPURPOSETIMER (0x3UL) /*!< GenPurpose Timer                                         */
  #define TIMER_TIMERCONFIG_TIMERMODESEL_WAKEUPTIMER (0x4UL) /*!< Wakeup Timer                                                 */

/* TIMERPRESCALER @Bit 3 : Switches between 16ms and 2ms Timer Prescale */
  #define TIMER_TIMERCONFIG_TIMERPRESCALER_Pos (3UL) /*!< Position of TIMERPRESCALER field.                                    */
  #define TIMER_TIMERCONFIG_TIMERPRESCALER_Msk (0x1UL << TIMER_TIMERCONFIG_TIMERPRESCALER_Pos) /*!< Bit mask of TIMERPRESCALER
                                                                            field.*/                                              
  #define TIMER_TIMERCONFIG_TIMERPRESCALER_Min (0x0UL) /*!< Min enumerator value of TIMERPRESCALER field.                      */
  #define TIMER_TIMERCONFIG_TIMERPRESCALER_Max (0x1UL) /*!< Max enumerator value of TIMERPRESCALER field.                      */
  #define TIMER_TIMERCONFIG_TIMERPRESCALER_SLOW (0x0UL) /*!< 16ms Prescale                                                     */
  #define TIMER_TIMERCONFIG_TIMERPRESCALER_FAST (0x1UL) /*!< 2ms Prescale                                                      */


/* TIMER_TIMERSTATUS: Timers Status */
  #define TIMER_TIMERSTATUS_ResetValue (0x00UL)      /*!< Reset value of TIMERSTATUS register.                                 */

/* BOOTMONITORACTIVE @Bit 0 : BootMonitor Active */
  #define TIMER_TIMERSTATUS_BOOTMONITORACTIVE_Pos (0UL) /*!< Position of BOOTMONITORACTIVE field.                              */
  #define TIMER_TIMERSTATUS_BOOTMONITORACTIVE_Msk (0x1UL << TIMER_TIMERSTATUS_BOOTMONITORACTIVE_Pos) /*!< Bit mask of
                                                                            BOOTMONITORACTIVE field.*/                            
  #define TIMER_TIMERSTATUS_BOOTMONITORACTIVE_Min (0x0UL) /*!< Min enumerator value of BOOTMONITORACTIVE field.                */
  #define TIMER_TIMERSTATUS_BOOTMONITORACTIVE_Max (0x1UL) /*!< Max enumerator value of BOOTMONITORACTIVE field.                */
  #define TIMER_TIMERSTATUS_BOOTMONITORACTIVE_INACTIVE (0x0UL) /*!< Boot Monitor not running                                   */
  #define TIMER_TIMERSTATUS_BOOTMONITORACTIVE_ACTIVE (0x1UL) /*!< BootMonitor running                                          */

/* SLOWDOMAINCONFIGURED @Bit 1 : slowDomain Configured */
  #define TIMER_TIMERSTATUS_SLOWDOMAINCONFIGURED_Pos (1UL) /*!< Position of SLOWDOMAINCONFIGURED field.                        */
  #define TIMER_TIMERSTATUS_SLOWDOMAINCONFIGURED_Msk (0x1UL << TIMER_TIMERSTATUS_SLOWDOMAINCONFIGURED_Pos) /*!< Bit mask of
                                                                            SLOWDOMAINCONFIGURED field.*/                         
  #define TIMER_TIMERSTATUS_SLOWDOMAINCONFIGURED_Min (0x0UL) /*!< Min enumerator value of SLOWDOMAINCONFIGURED field.          */
  #define TIMER_TIMERSTATUS_SLOWDOMAINCONFIGURED_Max (0x1UL) /*!< Max enumerator value of SLOWDOMAINCONFIGURED field.          */
  #define TIMER_TIMERSTATUS_SLOWDOMAINCONFIGURED_NOTCONFIG (0x0UL) /*!< No config, TASK_RESET_CFG clears.                      */
  #define TIMER_TIMERSTATUS_SLOWDOMAINCONFIGURED_CONFIG (0x1UL) /*!< At least one timer related Strobe has been active to
                                                                     configure slowDomain*/                                       


/* TIMER_PERIODICTIMEROVERRIDE: Periodic Timer Override */
  #define TIMER_PERIODICTIMEROVERRIDE_ResetValue (0x00UL) /*!< Reset value of PERIODICTIMEROVERRIDE register.                  */

/* AUTOVBATOVERRIDEENA @Bit 0 : Enable override of Auto VBAT request */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDEENA_Pos (0UL) /*!< Position of AUTOVBATOVERRIDEENA field.                */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDEENA_Msk (0x1UL << TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDEENA_Pos)
                                                                            /*!< Bit mask of AUTOVBATOVERRIDEENA field.*/         
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDEENA_Min (0x0UL) /*!< Min enumerator value of AUTOVBATOVERRIDEENA field.  */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDEENA_Max (0x1UL) /*!< Max enumerator value of AUTOVBATOVERRIDEENA field.  */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDEENA_INACTIVE (0x0UL) /*!< normal AutoVbat operation                      */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDEENA_ACTIVE (0x1UL) /*!< override of AutoVbat enabled                     */

/* AUTOVBATOVERRIDE @Bit 1 : Value of Auto VBAT request override */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDE_Pos (1UL) /*!< Position of AUTOVBATOVERRIDE field.                      */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDE_Msk (0x1UL << TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDE_Pos) /*!< Bit
                                                                            mask of AUTOVBATOVERRIDE field.*/                     
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDE_Min (0x0UL) /*!< Min enumerator value of AUTOVBATOVERRIDE field.        */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDE_Max (0x1UL) /*!< Max enumerator value of AUTOVBATOVERRIDE field.        */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDE_ZERO (0x0UL) /*!< override value 0                                      */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTOVBATOVERRIDE_ONE (0x1UL) /*!< override value 1                                       */

/* AUTONTCOVERRIDEENA @Bit 2 : Enable override of Auto Ntc request */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDEENA_Pos (2UL) /*!< Position of AUTONTCOVERRIDEENA field.                  */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDEENA_Msk (0x1UL << TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDEENA_Pos) /*!<
                                                                            Bit mask of AUTONTCOVERRIDEENA field.*/               
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDEENA_Min (0x0UL) /*!< Min enumerator value of AUTONTCOVERRIDEENA field.    */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDEENA_Max (0x1UL) /*!< Max enumerator value of AUTONTCOVERRIDEENA field.    */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDEENA_ZERO (0x0UL) /*!< normal Auto Ntc operation                           */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDEENA_ONE (0x1UL) /*!< override of Auto Ntc enabled                         */

/* AUTONTCOVERRIDE @Bit 3 : Value of Auto Die Ntc request override */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDE_Pos (3UL) /*!< Position of AUTONTCOVERRIDE field.                        */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDE_Msk (0x1UL << TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDE_Pos) /*!< Bit
                                                                            mask of AUTONTCOVERRIDE field.*/                      
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDE_Min (0x0UL) /*!< Min enumerator value of AUTONTCOVERRIDE field.          */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDE_Max (0x1UL) /*!< Max enumerator value of AUTONTCOVERRIDE field.          */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDE_ZERO (0x0UL) /*!< override value 0                                       */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTONTCOVERRIDE_ONE (0x1UL) /*!< override value 1                                        */

/* AUTODIETEMPOVERRIDEENA @Bit 4 : Enable override of Auto DieTemp request */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDEENA_Pos (4UL) /*!< Position of AUTODIETEMPOVERRIDEENA field.          */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDEENA_Msk (0x1UL << TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDEENA_Pos)
                                                                            /*!< Bit mask of AUTODIETEMPOVERRIDEENA field.*/      
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDEENA_Min (0x0UL) /*!< Min enumerator value of AUTODIETEMPOVERRIDEENA
                                                                            field.*/                                              
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDEENA_Max (0x1UL) /*!< Max enumerator value of AUTODIETEMPOVERRIDEENA
                                                                            field.*/                                              
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDEENA_ZERO (0x0UL) /*!< normal Auto DieTemp operation                   */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDEENA_ONE (0x1UL) /*!< override of Auto DieTemp enabled                 */

/* AUTODIETEMPOVERRIDE @Bit 5 : Value of Auto Die Temp request override */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDE_Pos (5UL) /*!< Position of AUTODIETEMPOVERRIDE field.                */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDE_Msk (0x1UL << TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDE_Pos)
                                                                            /*!< Bit mask of AUTODIETEMPOVERRIDE field.*/         
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDE_Min (0x0UL) /*!< Min enumerator value of AUTODIETEMPOVERRIDE field.  */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDE_Max (0x1UL) /*!< Max enumerator value of AUTODIETEMPOVERRIDE field.  */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDE_ZERO (0x0UL) /*!< override value 0                                   */
  #define TIMER_PERIODICTIMEROVERRIDE_AUTODIETEMPOVERRIDE_ONE (0x1UL) /*!< override value 1                                    */


/* TIMER_TIMERHIBYTE: Timer Most Significant Byte */
  #define TIMER_TIMERHIBYTE_ResetValue (0x00UL)      /*!< Reset value of TIMERHIBYTE register.                                 */

/* TIMERHIBYTE @Bits 0..7 : Timer Most Significant Byte of 3 */
  #define TIMER_TIMERHIBYTE_TIMERHIBYTE_Pos (0UL)    /*!< Position of TIMERHIBYTE field.                                       */
  #define TIMER_TIMERHIBYTE_TIMERHIBYTE_Msk (0xFFUL << TIMER_TIMERHIBYTE_TIMERHIBYTE_Pos) /*!< Bit mask of TIMERHIBYTE field.  */


/* TIMER_TIMERMIDBYTE: Timer Middle Byte */
  #define TIMER_TIMERMIDBYTE_ResetValue (0x00UL)     /*!< Reset value of TIMERMIDBYTE register.                                */

/* TIMERMIDBYTE @Bits 0..7 : Timer Middle Byte of 3 */
  #define TIMER_TIMERMIDBYTE_TIMERMIDBYTE_Pos (0UL)  /*!< Position of TIMERMIDBYTE field.                                      */
  #define TIMER_TIMERMIDBYTE_TIMERMIDBYTE_Msk (0xFFUL << TIMER_TIMERMIDBYTE_TIMERMIDBYTE_Pos) /*!< Bit mask of TIMERMIDBYTE
                                                                            field.*/                                              


/* TIMER_TIMERLOBYTE: Timer Least Significant Byte */
  #define TIMER_TIMERLOBYTE_ResetValue (0x00UL)      /*!< Reset value of TIMERLOBYTE register.                                 */

/* TIMERLOBYTE @Bits 0..7 : Timer Least Significant Byte of 3 */
  #define TIMER_TIMERLOBYTE_TIMERLOBYTE_Pos (0UL)    /*!< Position of TIMERLOBYTE field.                                       */
  #define TIMER_TIMERLOBYTE_TIMERLOBYTE_Msk (0xFFUL << TIMER_TIMERLOBYTE_TIMERLOBYTE_Pos) /*!< Bit mask of TIMERLOBYTE field.  */



/* =========================================================================================================================== */
/* ================                                           LDSW                                           ================ */
/* =========================================================================================================================== */

/* ======================================================= Struct LDSW ======================================================= */
/**
  * @brief Neutrino LDSW registers
  */
typedef struct {                                     /*!< LDSW Structure                                                       */
  __OM  uint8_t   TASKLDSW1SET;                      /*!< (@ 0x00000000) Enable LDSW1                                          */
  __OM  uint8_t   TASKLDSW1CLR;                      /*!< (@ 0x00000001) Disable LDSW1                                         */
  __OM  uint8_t   TASKLDSW2SET;                      /*!< (@ 0x00000002) Enable LDSW2                                          */
  __OM  uint8_t   TASKLDSW2CLR;                      /*!< (@ 0x00000003) Disable LDSW2                                         */
  __IM  uint8_t   LDSWSTATUS;                        /*!< (@ 0x00000004) Load Switch Status                                    */
  __IOM uint8_t   LDSW1GPISEL;                       /*!< (@ 0x00000005) Load Switch1 GPIO Control Select                      */
  __IOM uint8_t   LDSW2GPISEL;                       /*!< (@ 0x00000006) Load Switch2 GPIO Control Select                      */
  __IOM uint8_t   LDSWCONFIG;                        /*!< (@ 0x00000007) Load Switch Configuration                             */
  __IOM uint8_t   LDSW1LDOSEL;                       /*!< (@ 0x00000008) Load Switch1 / LDO Select                             */
  __IOM uint8_t   LDSW2LDOSEL;                       /*!< (@ 0x00000009) Load Switch2 / LDO Select                             */
  __IOM uint8_t   LDSW1TRIMULPFBCKRES;               /*!< (@ 0x0000000A) LDO1 output voltage trimming NOTE: Reset value from
                                                                         OTP, value listed in this table may not be correct.*/    
  __IOM uint8_t   LDSW2TRIMULPFBCKRES;               /*!< (@ 0x0000000B) LDO2 output voltage trimming NOTE: Reset value from
                                                                         OTP, value listed in this table may not be correct.*/    
  __IOM uint8_t   LDSW1VOUTSEL;                      /*!< (@ 0x0000000C) LDO1 programmable output voltage                      */
  __IOM uint8_t   LDSW2VOUTSEL;                      /*!< (@ 0x0000000D) LDO2 programmable output voltage                      */
  __IOM uint8_t   LDSWATE;                           /*!< (@ 0x0000000E) Analog testbus control                                */
  __IOM uint8_t   LDSWDTE;                           /*!< (@ 0x0000000F) Digital testbus control                               */
  __IOM uint8_t   LDSW1HPREFFORCE;                   /*!< (@ 0x00000010) Force HPREF LDO1                                      */
  __IOM uint8_t   LDSW2HPREFFORCE;                   /*!< (@ 0x00000011) Force HPREF LDO2                                      */
} __PACKED NPM_LDSW_Type;                            /*!< Size = 18 (0x012)                                                    */

/* LDSW_TASKLDSW1SET: Enable LDSW1 */
  #define LDSW_TASKLDSW1SET_ResetValue (0x00UL)      /*!< Reset value of TASKLDSW1SET register.                                */

/* TASKLDSW1SET @Bit 0 : LDSW1_Enable request SET */
  #define LDSW_TASKLDSW1SET_TASKLDSW1SET_Pos (0UL)   /*!< Position of TASKLDSW1SET field.                                      */
  #define LDSW_TASKLDSW1SET_TASKLDSW1SET_Msk (0x1UL << LDSW_TASKLDSW1SET_TASKLDSW1SET_Pos) /*!< Bit mask of TASKLDSW1SET field.*/
  #define LDSW_TASKLDSW1SET_TASKLDSW1SET_Min (0x0UL) /*!< Min enumerator value of TASKLDSW1SET field.                          */
  #define LDSW_TASKLDSW1SET_TASKLDSW1SET_Max (0x1UL) /*!< Max enumerator value of TASKLDSW1SET field.                          */
  #define LDSW_TASKLDSW1SET_TASKLDSW1SET_NOEFFECT (0x0UL) /*!< no effect                                                       */
  #define LDSW_TASKLDSW1SET_TASKLDSW1SET_SET (0x1UL) /*!< LDSW1 Enable request set                                             */


/* LDSW_TASKLDSW1CLR: Disable LDSW1 */
  #define LDSW_TASKLDSW1CLR_ResetValue (0x00UL)      /*!< Reset value of TASKLDSW1CLR register.                                */

/* TASKLDSW1CLR @Bit 0 : LDSW1_Enable request CLR */
  #define LDSW_TASKLDSW1CLR_TASKLDSW1CLR_Pos (0UL)   /*!< Position of TASKLDSW1CLR field.                                      */
  #define LDSW_TASKLDSW1CLR_TASKLDSW1CLR_Msk (0x1UL << LDSW_TASKLDSW1CLR_TASKLDSW1CLR_Pos) /*!< Bit mask of TASKLDSW1CLR field.*/
  #define LDSW_TASKLDSW1CLR_TASKLDSW1CLR_Min (0x0UL) /*!< Min enumerator value of TASKLDSW1CLR field.                          */
  #define LDSW_TASKLDSW1CLR_TASKLDSW1CLR_Max (0x1UL) /*!< Max enumerator value of TASKLDSW1CLR field.                          */
  #define LDSW_TASKLDSW1CLR_TASKLDSW1CLR_NOEFFECT (0x0UL) /*!< no effect                                                       */
  #define LDSW_TASKLDSW1CLR_TASKLDSW1CLR_CLR (0x1UL) /*!< LDSW1 Disable request clr                                            */


/* LDSW_TASKLDSW2SET: Enable LDSW2 */
  #define LDSW_TASKLDSW2SET_ResetValue (0x00UL)      /*!< Reset value of TASKLDSW2SET register.                                */

/* TASKLDSW2SET @Bit 0 : LDSW2_Enable request SET */
  #define LDSW_TASKLDSW2SET_TASKLDSW2SET_Pos (0UL)   /*!< Position of TASKLDSW2SET field.                                      */
  #define LDSW_TASKLDSW2SET_TASKLDSW2SET_Msk (0x1UL << LDSW_TASKLDSW2SET_TASKLDSW2SET_Pos) /*!< Bit mask of TASKLDSW2SET field.*/
  #define LDSW_TASKLDSW2SET_TASKLDSW2SET_Min (0x0UL) /*!< Min enumerator value of TASKLDSW2SET field.                          */
  #define LDSW_TASKLDSW2SET_TASKLDSW2SET_Max (0x1UL) /*!< Max enumerator value of TASKLDSW2SET field.                          */
  #define LDSW_TASKLDSW2SET_TASKLDSW2SET_NOEFFECT (0x0UL) /*!< no effect                                                       */
  #define LDSW_TASKLDSW2SET_TASKLDSW2SET_SET (0x1UL) /*!< LDSW2 Enable request set                                             */


/* LDSW_TASKLDSW2CLR: Disable LDSW2 */
  #define LDSW_TASKLDSW2CLR_ResetValue (0x00UL)      /*!< Reset value of TASKLDSW2CLR register.                                */

/* TASKLDSW2CLR @Bit 0 : LDSW2_Enable request CLR */
  #define LDSW_TASKLDSW2CLR_TASKLDSW2CLR_Pos (0UL)   /*!< Position of TASKLDSW2CLR field.                                      */
  #define LDSW_TASKLDSW2CLR_TASKLDSW2CLR_Msk (0x1UL << LDSW_TASKLDSW2CLR_TASKLDSW2CLR_Pos) /*!< Bit mask of TASKLDSW2CLR field.*/
  #define LDSW_TASKLDSW2CLR_TASKLDSW2CLR_Min (0x0UL) /*!< Min enumerator value of TASKLDSW2CLR field.                          */
  #define LDSW_TASKLDSW2CLR_TASKLDSW2CLR_Max (0x1UL) /*!< Max enumerator value of TASKLDSW2CLR field.                          */
  #define LDSW_TASKLDSW2CLR_TASKLDSW2CLR_NOEFFECT (0x0UL) /*!< no effect                                                       */
  #define LDSW_TASKLDSW2CLR_TASKLDSW2CLR_CLR (0x1UL) /*!< LDSW2 Disable request clr                                            */


/* LDSW_LDSWSTATUS: Load Switch Status */
  #define LDSW_LDSWSTATUS_ResetValue (0x00UL)        /*!< Reset value of LDSWSTATUS register.                                  */

/* LDSW1PWRUPLDSW @Bit 0 : Power up signal to move load switch 1 into and out of load switch state. When the load switch is
                           enabled the low-dropout regulator is disabled. This is ensured by digital logic. */                    
                                                                                                                                  
  #define LDSW_LDSWSTATUS_LDSW1PWRUPLDSW_Pos (0UL)   /*!< Position of LDSW1PWRUPLDSW field.                                    */
  #define LDSW_LDSWSTATUS_LDSW1PWRUPLDSW_Msk (0x1UL << LDSW_LDSWSTATUS_LDSW1PWRUPLDSW_Pos) /*!< Bit mask of LDSW1PWRUPLDSW
                                                                            field.*/                                              

/* LDSW1PWRUPLDO @Bit 1 : Power up signal to move low-dropout regulator 1into and out of low-dropout active state. When the
                          low-dropout regulator is enabled the load switch is disabled. */                                        
                                                                                                                                  
  #define LDSW_LDSWSTATUS_LDSW1PWRUPLDO_Pos (1UL)    /*!< Position of LDSW1PWRUPLDO field.                                     */
  #define LDSW_LDSWSTATUS_LDSW1PWRUPLDO_Msk (0x1UL << LDSW_LDSWSTATUS_LDSW1PWRUPLDO_Pos) /*!< Bit mask of LDSW1PWRUPLDO field. */

/* LDSW2PWRUPLDSW @Bit 2 : Power up signal to move low-dropout regulator 2 into and out of low-dropout active state. When the
                           low-dropout regulator is enabled the load switch is disabled. This is ensured by digital logic. */     
                                                                                                                                  
  #define LDSW_LDSWSTATUS_LDSW2PWRUPLDSW_Pos (2UL)   /*!< Position of LDSW2PWRUPLDSW field.                                    */
  #define LDSW_LDSWSTATUS_LDSW2PWRUPLDSW_Msk (0x1UL << LDSW_LDSWSTATUS_LDSW2PWRUPLDSW_Pos) /*!< Bit mask of LDSW2PWRUPLDSW
                                                                            field.*/                                              

/* LDSW2PWRUPLDO @Bit 3 : Load switch 2 softstart causes passfet to deliver a constant current from LS2_IN to LS2_OUT. It brings
                          the load switch into and out of the sofstart state. */                                                  
                                                                                                                                  
  #define LDSW_LDSWSTATUS_LDSW2PWRUPLDO_Pos (3UL)    /*!< Position of LDSW2PWRUPLDO field.                                     */
  #define LDSW_LDSWSTATUS_LDSW2PWRUPLDO_Msk (0x1UL << LDSW_LDSWSTATUS_LDSW2PWRUPLDO_Pos) /*!< Bit mask of LDSW2PWRUPLDO field. */

/* LDSWENABLE @Bit 4 : Enable signal to move the overal load switch + low-dropout regulator IP from Awake to Deepsleep state to
                       save power when required. */                                                                               
                                                                                                                                  
  #define LDSW_LDSWSTATUS_LDSWENABLE_Pos (4UL)       /*!< Position of LDSWENABLE field.                                        */
  #define LDSW_LDSWSTATUS_LDSWENABLE_Msk (0x1UL << LDSW_LDSWSTATUS_LDSWENABLE_Pos) /*!< Bit mask of LDSWENABLE field.          */


/* LDSW_LDSW1GPISEL: Load Switch1 GPIO Control Select */
  #define LDSW_LDSW1GPISEL_ResetValue (0x00UL)       /*!< Reset value of LDSW1GPISEL register.                                 */

/* LDSW1GPISEL @Bits 0..2 : Select which GPI controls Load Switch1 */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_Pos (0UL)     /*!< Position of LDSW1GPISEL field.                                       */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_Msk (0x7UL << LDSW_LDSW1GPISEL_LDSW1GPISEL_Pos) /*!< Bit mask of LDSW1GPISEL field.     */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_Min (0x0UL)   /*!< Min enumerator value of LDSW1GPISEL field.                           */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_Max (0x7UL)   /*!< Max enumerator value of LDSW1GPISEL field.                           */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_NOTUSED1 (0x0UL) /*!< no GPI selected                                                   */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_GPIO0 (0x1UL) /*!< GPI_0 selected                                                       */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_GPIO1 (0x2UL) /*!< GPI_1 selected                                                       */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_GPIO2 (0x3UL) /*!< GPI_2 selected                                                       */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_GPIO3 (0x4UL) /*!< GPI_3 selected                                                       */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_GPIO4 (0x5UL) /*!< GPI_4 selected                                                       */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_GPIO5 (0x6UL) /*!< GPI_5 selected                                                       */
  #define LDSW_LDSW1GPISEL_LDSW1GPISEL_NOTUSED2 (0x7UL) /*!< no GPI selected                                                   */

/* LDSW1GPIINV @Bit 3 : Invert the sense of the selected GPIO */
  #define LDSW_LDSW1GPISEL_LDSW1GPIINV_Pos (3UL)     /*!< Position of LDSW1GPIINV field.                                       */
  #define LDSW_LDSW1GPISEL_LDSW1GPIINV_Msk (0x1UL << LDSW_LDSW1GPISEL_LDSW1GPIINV_Pos) /*!< Bit mask of LDSW1GPIINV field.     */
  #define LDSW_LDSW1GPISEL_LDSW1GPIINV_Min (0x0UL)   /*!< Min enumerator value of LDSW1GPIINV field.                           */
  #define LDSW_LDSW1GPISEL_LDSW1GPIINV_Max (0x1UL)   /*!< Max enumerator value of LDSW1GPIINV field.                           */
  #define LDSW_LDSW1GPISEL_LDSW1GPIINV_NORMAL (0x0UL) /*!< not Inverted                                                        */
  #define LDSW_LDSW1GPISEL_LDSW1GPIINV_INVERTED (0x1UL) /*!< Inverted                                                          */


/* LDSW_LDSW2GPISEL: Load Switch2 GPIO Control Select */
  #define LDSW_LDSW2GPISEL_ResetValue (0x00UL)       /*!< Reset value of LDSW2GPISEL register.                                 */

/* LDSW2GPISEL @Bits 0..2 : Select which GPI controls Load Switch2 */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_Pos (0UL)     /*!< Position of LDSW2GPISEL field.                                       */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_Msk (0x7UL << LDSW_LDSW2GPISEL_LDSW2GPISEL_Pos) /*!< Bit mask of LDSW2GPISEL field.     */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_Min (0x0UL)   /*!< Min enumerator value of LDSW2GPISEL field.                           */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_Max (0x7UL)   /*!< Max enumerator value of LDSW2GPISEL field.                           */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_NOTUSED1 (0x0UL) /*!< no GPI selected                                                   */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_GPIO0 (0x1UL) /*!< GPI_0 selected                                                       */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_GPIO1 (0x2UL) /*!< GPI_1 selected                                                       */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_GPIO2 (0x3UL) /*!< GPI_2 selected                                                       */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_GPIO3 (0x4UL) /*!< GPI_3 selected                                                       */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_GPIO4 (0x5UL) /*!< GPI_4 selected                                                       */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_GPIO5 (0x6UL) /*!< GPI_5 selected                                                       */
  #define LDSW_LDSW2GPISEL_LDSW2GPISEL_NOTUSED2 (0x7UL) /*!< no GPI selected                                                   */

/* LDSW2GPIINV @Bit 3 : Invert the sense of the selected GPIO */
  #define LDSW_LDSW2GPISEL_LDSW2GPIINV_Pos (3UL)     /*!< Position of LDSW2GPIINV field.                                       */
  #define LDSW_LDSW2GPISEL_LDSW2GPIINV_Msk (0x1UL << LDSW_LDSW2GPISEL_LDSW2GPIINV_Pos) /*!< Bit mask of LDSW2GPIINV field.     */
  #define LDSW_LDSW2GPISEL_LDSW2GPIINV_Min (0x0UL)   /*!< Min enumerator value of LDSW2GPIINV field.                           */
  #define LDSW_LDSW2GPISEL_LDSW2GPIINV_Max (0x1UL)   /*!< Max enumerator value of LDSW2GPIINV field.                           */
  #define LDSW_LDSW2GPISEL_LDSW2GPIINV_NORMAL (0x0UL) /*!< not Inverted                                                        */
  #define LDSW_LDSW2GPISEL_LDSW2GPIINV_INVERTED (0x1UL) /*!< Inverted                                                          */


/* LDSW_LDSWCONFIG: Load Switch Configuration */
  #define LDSW_LDSWCONFIG_ResetValue (0x00UL)        /*!< Reset value of LDSWCONFIG register.                                  */

/* LDSW1SOFTSTARTDISABLE @Bit 0 : Load Switch1 Soft Start Disable */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTDISABLE_Pos (0UL) /*!< Position of LDSW1SOFTSTARTDISABLE field.                        */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTDISABLE_Msk (0x1UL << LDSW_LDSWCONFIG_LDSW1SOFTSTARTDISABLE_Pos) /*!< Bit mask of
                                                                            LDSW1SOFTSTARTDISABLE field.*/                        
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTDISABLE_Min (0x0UL) /*!< Min enumerator value of LDSW1SOFTSTARTDISABLE field.          */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTDISABLE_Max (0x1UL) /*!< Max enumerator value of LDSW1SOFTSTARTDISABLE field.          */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTDISABLE_NOEFFECT (0x0UL) /*!< no effect                                                */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTDISABLE_NOSOFTSTART (0x1UL) /*!< Soft Start Disabled                                   */

/* LDSW2SOFTSTARTDISABLE @Bit 1 : Load Switch2 Soft Start Disable */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTDISABLE_Pos (1UL) /*!< Position of LDSW2SOFTSTARTDISABLE field.                        */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTDISABLE_Msk (0x1UL << LDSW_LDSWCONFIG_LDSW2SOFTSTARTDISABLE_Pos) /*!< Bit mask of
                                                                            LDSW2SOFTSTARTDISABLE field.*/                        
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTDISABLE_Min (0x0UL) /*!< Min enumerator value of LDSW2SOFTSTARTDISABLE field.          */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTDISABLE_Max (0x1UL) /*!< Max enumerator value of LDSW2SOFTSTARTDISABLE field.          */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTDISABLE_NOEFFECT (0x0UL) /*!< no effect                                                */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTDISABLE_NOSOFTSTART (0x1UL) /*!< Soft Start Disabled                                   */

/* LDSW1SOFTSTARTSEL @Bits 2..3 : Select Soft Start level for Load Switch1 */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_Pos (2UL) /*!< Position of LDSW1SOFTSTARTSEL field.                                */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_Msk (0x3UL << LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_Pos) /*!< Bit mask of
                                                                            LDSW1SOFTSTARTSEL field.*/                            
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_Min (0x0UL) /*!< Min enumerator value of LDSW1SOFTSTARTSEL field.                  */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_Max (0x3UL) /*!< Max enumerator value of LDSW1SOFTSTARTSEL field.                  */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_25mA (0x0UL) /*!< 25mA                                                             */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_50mA (0x1UL) /*!< 50mA                                                             */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_75mA (0x2UL) /*!< 75mA                                                             */
  #define LDSW_LDSWCONFIG_LDSW1SOFTSTARTSEL_100mA (0x3UL) /*!< 100mA                                                           */

/* LDSW2SOFTSTARTSEL @Bits 4..5 : Select Soft Start level for Load Switch1 */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_Pos (4UL) /*!< Position of LDSW2SOFTSTARTSEL field.                                */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_Msk (0x3UL << LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_Pos) /*!< Bit mask of
                                                                            LDSW2SOFTSTARTSEL field.*/                            
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_Min (0x0UL) /*!< Min enumerator value of LDSW2SOFTSTARTSEL field.                  */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_Max (0x3UL) /*!< Max enumerator value of LDSW2SOFTSTARTSEL field.                  */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_25mA (0x0UL) /*!< 25mA                                                             */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_50mA (0x1UL) /*!< 50mA                                                             */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_75mA (0x2UL) /*!< 75mA                                                             */
  #define LDSW_LDSWCONFIG_LDSW2SOFTSTARTSEL_100mA (0x3UL) /*!< 100mA                                                           */

/* LDSW1ACTIVEDISCHARGE @Bit 6 : Load Switch1 Active discharge Enable */
  #define LDSW_LDSWCONFIG_LDSW1ACTIVEDISCHARGE_Pos (6UL) /*!< Position of LDSW1ACTIVEDISCHARGE field.                          */
  #define LDSW_LDSWCONFIG_LDSW1ACTIVEDISCHARGE_Msk (0x1UL << LDSW_LDSWCONFIG_LDSW1ACTIVEDISCHARGE_Pos) /*!< Bit mask of
                                                                            LDSW1ACTIVEDISCHARGE field.*/                         
  #define LDSW_LDSWCONFIG_LDSW1ACTIVEDISCHARGE_Min (0x0UL) /*!< Min enumerator value of LDSW1ACTIVEDISCHARGE field.            */
  #define LDSW_LDSWCONFIG_LDSW1ACTIVEDISCHARGE_Max (0x1UL) /*!< Max enumerator value of LDSW1ACTIVEDISCHARGE field.            */
  #define LDSW_LDSWCONFIG_LDSW1ACTIVEDISCHARGE_NODISCHARGE (0x0UL) /*!< No Discharge                                           */
  #define LDSW_LDSWCONFIG_LDSW1ACTIVEDISCHARGE_ACTIVE (0x1UL) /*!< Active Discharge Enabled                                    */

/* LDSW2ACTIVEDISCHARGE @Bit 7 : Load Switch2 Active discharge Enable */
  #define LDSW_LDSWCONFIG_LDSW2ACTIVEDISCHARGE_Pos (7UL) /*!< Position of LDSW2ACTIVEDISCHARGE field.                          */
  #define LDSW_LDSWCONFIG_LDSW2ACTIVEDISCHARGE_Msk (0x1UL << LDSW_LDSWCONFIG_LDSW2ACTIVEDISCHARGE_Pos) /*!< Bit mask of
                                                                            LDSW2ACTIVEDISCHARGE field.*/                         
  #define LDSW_LDSWCONFIG_LDSW2ACTIVEDISCHARGE_Min (0x0UL) /*!< Min enumerator value of LDSW2ACTIVEDISCHARGE field.            */
  #define LDSW_LDSWCONFIG_LDSW2ACTIVEDISCHARGE_Max (0x1UL) /*!< Max enumerator value of LDSW2ACTIVEDISCHARGE field.            */
  #define LDSW_LDSWCONFIG_LDSW2ACTIVEDISCHARGE_NODISCHARGE (0x0UL) /*!< No Discharge                                           */
  #define LDSW_LDSWCONFIG_LDSW2ACTIVEDISCHARGE_ACTIVE (0x1UL) /*!< Active Discharge Enabled                                    */


/* LDSW_LDSW1LDOSEL: Load Switch1 / LDO Select */
  #define LDSW_LDSW1LDOSEL_ResetValue (0x00UL)       /*!< Reset value of LDSW1LDOSEL register.                                 */

/* LDSW1LDOSEL @Bit 0 : Select LdswLdo0 to configure either as LDSW or LDO */
  #define LDSW_LDSW1LDOSEL_LDSW1LDOSEL_Pos (0UL)     /*!< Position of LDSW1LDOSEL field.                                       */
  #define LDSW_LDSW1LDOSEL_LDSW1LDOSEL_Msk (0x1UL << LDSW_LDSW1LDOSEL_LDSW1LDOSEL_Pos) /*!< Bit mask of LDSW1LDOSEL field.     */
  #define LDSW_LDSW1LDOSEL_LDSW1LDOSEL_Min (0x0UL)   /*!< Min enumerator value of LDSW1LDOSEL field.                           */
  #define LDSW_LDSW1LDOSEL_LDSW1LDOSEL_Max (0x1UL)   /*!< Max enumerator value of LDSW1LDOSEL field.                           */
  #define LDSW_LDSW1LDOSEL_LDSW1LDOSEL_LDSW (0x0UL)  /*!< Load Switch                                                          */
  #define LDSW_LDSW1LDOSEL_LDSW1LDOSEL_LDO (0x1UL)   /*!< LDO                                                                  */


/* LDSW_LDSW2LDOSEL: Load Switch2 / LDO Select */
  #define LDSW_LDSW2LDOSEL_ResetValue (0x00UL)       /*!< Reset value of LDSW2LDOSEL register.                                 */

/* LDSW2LDOSEL @Bit 0 : Select LdswLdo1 to configure either as LDSW or LDO */
  #define LDSW_LDSW2LDOSEL_LDSW2LDOSEL_Pos (0UL)     /*!< Position of LDSW2LDOSEL field.                                       */
  #define LDSW_LDSW2LDOSEL_LDSW2LDOSEL_Msk (0x1UL << LDSW_LDSW2LDOSEL_LDSW2LDOSEL_Pos) /*!< Bit mask of LDSW2LDOSEL field.     */
  #define LDSW_LDSW2LDOSEL_LDSW2LDOSEL_Min (0x0UL)   /*!< Min enumerator value of LDSW2LDOSEL field.                           */
  #define LDSW_LDSW2LDOSEL_LDSW2LDOSEL_Max (0x1UL)   /*!< Max enumerator value of LDSW2LDOSEL field.                           */
  #define LDSW_LDSW2LDOSEL_LDSW2LDOSEL_LDSW (0x0UL)  /*!< Load Switch                                                          */
  #define LDSW_LDSW2LDOSEL_LDSW2LDOSEL_LDO (0x1UL)   /*!< LDO                                                                  */


/* LDSW_LDSW1TRIMULPFBCKRES: LDO1 output voltage trimming NOTE: Reset value from OTP, value listed in this table may not be
                              correct. */                                                                                         
                                                                                                                                  
  #define LDSW_LDSW1TRIMULPFBCKRES_ResetValue (0x00UL) /*!< Reset value of LDSW1TRIMULPFBCKRES register.                       */

/* LDSW1TRIMULPFBCKRES @Bits 0..4 : Low-dropout regulator 1 output voltage trimming */
  #define LDSW_LDSW1TRIMULPFBCKRES_LDSW1TRIMULPFBCKRES_Pos (0UL) /*!< Position of LDSW1TRIMULPFBCKRES field.                   */
  #define LDSW_LDSW1TRIMULPFBCKRES_LDSW1TRIMULPFBCKRES_Msk (0x1FUL << LDSW_LDSW1TRIMULPFBCKRES_LDSW1TRIMULPFBCKRES_Pos) /*!< Bit
                                                                            mask of LDSW1TRIMULPFBCKRES field.*/                  


/* LDSW_LDSW2TRIMULPFBCKRES: LDO2 output voltage trimming NOTE: Reset value from OTP, value listed in this table may not be
                              correct. */                                                                                         
                                                                                                                                  
  #define LDSW_LDSW2TRIMULPFBCKRES_ResetValue (0x00UL) /*!< Reset value of LDSW2TRIMULPFBCKRES register.                       */

/* LDSW2TRIMULPFBCKRES @Bits 0..4 : Low-dropout regulator 2 output voltage trimming */
  #define LDSW_LDSW2TRIMULPFBCKRES_LDSW2TRIMULPFBCKRES_Pos (0UL) /*!< Position of LDSW2TRIMULPFBCKRES field.                   */
  #define LDSW_LDSW2TRIMULPFBCKRES_LDSW2TRIMULPFBCKRES_Msk (0x1FUL << LDSW_LDSW2TRIMULPFBCKRES_LDSW2TRIMULPFBCKRES_Pos) /*!< Bit
                                                                            mask of LDSW2TRIMULPFBCKRES field.*/                  


/* LDSW_LDSW1VOUTSEL: LDO1 programmable output voltage */
  #define LDSW_LDSW1VOUTSEL_ResetValue (0x00UL)      /*!< Reset value of LDSW1VOUTSEL register.                                */

/* LDSW1VOUTSEL @Bits 0..4 : Low-dropout regulator 1 programmable output voltage */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_Pos (0UL)   /*!< Position of LDSW1VOUTSEL field.                                      */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_Msk (0x1FUL << LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_Pos) /*!< Bit mask of LDSW1VOUTSEL
                                                                            field.*/                                              
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_Min (0x0UL) /*!< Min enumerator value of LDSW1VOUTSEL field.                          */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_Max (0x17UL) /*!< Max enumerator value of LDSW1VOUTSEL field.                         */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V (0x00UL) /*!< 1V                                                                   */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V1 (0x01UL) /*!< 1.1V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V2 (0x02UL) /*!< 1.2V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V3 (0x03UL) /*!< 1.3V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V4 (0x04UL) /*!< 1.4V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V5 (0x05UL) /*!< 1.5V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V6 (0x06UL) /*!< 1.6V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V7 (0x07UL) /*!< 1.7V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V8 (0x08UL) /*!< 1.8V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_1V9 (0x09UL) /*!< 1.9V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V (0x0AUL) /*!< 2V                                                                   */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V1 (0x0BUL) /*!< 2.1V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V2 (0x0CUL) /*!< 2.2V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V3 (0x0DUL) /*!< 2.3V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V4 (0x0EUL) /*!< 2.4V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V5 (0x0FUL) /*!< 2.5V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V6 (0x10UL) /*!< 2.6V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V7 (0x11UL) /*!< 2.7V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V8 (0x12UL) /*!< 2.8V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_2V9 (0x13UL) /*!< 2.9V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_3V (0x14UL) /*!< 3V                                                                   */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_3V1 (0x15UL) /*!< 3.1V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_3V2 (0x16UL) /*!< 3.2V                                                                */
  #define LDSW_LDSW1VOUTSEL_LDSW1VOUTSEL_3V3 (0x17UL) /*!< 3.3V                                                                */


/* LDSW_LDSW2VOUTSEL: LDO2 programmable output voltage */
  #define LDSW_LDSW2VOUTSEL_ResetValue (0x00UL)      /*!< Reset value of LDSW2VOUTSEL register.                                */

/* LDSW2VOUTSEL @Bits 0..4 : Low-dropout regulator 2 programmable output voltage */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_Pos (0UL)   /*!< Position of LDSW2VOUTSEL field.                                      */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_Msk (0x1FUL << LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_Pos) /*!< Bit mask of LDSW2VOUTSEL
                                                                            field.*/                                              
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_Min (0x0UL) /*!< Min enumerator value of LDSW2VOUTSEL field.                          */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_Max (0x17UL) /*!< Max enumerator value of LDSW2VOUTSEL field.                         */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V (0x00UL) /*!< 1V                                                                   */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V1 (0x01UL) /*!< 1.1V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V2 (0x02UL) /*!< 1.2V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V3 (0x03UL) /*!< 1.3V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V4 (0x04UL) /*!< 1.4V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V5 (0x05UL) /*!< 1.5V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V6 (0x06UL) /*!< 1.6V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V7 (0x07UL) /*!< 1.7V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V8 (0x08UL) /*!< 1.8V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_1V9 (0x09UL) /*!< 1.9V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V (0x0AUL) /*!< 2V                                                                   */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V1 (0x0BUL) /*!< 2.1V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V2 (0x0CUL) /*!< 2.2V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V3 (0x0DUL) /*!< 2.3V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V4 (0x0EUL) /*!< 2.4V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V5 (0x0FUL) /*!< 2.5V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V6 (0x10UL) /*!< 2.6V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V7 (0x11UL) /*!< 2.7V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V8 (0x12UL) /*!< 2.8V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_2V9 (0x13UL) /*!< 2.9V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_3V (0x14UL) /*!< 3V                                                                   */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_3V1 (0x15UL) /*!< 3.1V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_3V2 (0x16UL) /*!< 3.2V                                                                */
  #define LDSW_LDSW2VOUTSEL_LDSW2VOUTSEL_3V3 (0x17UL) /*!< 3.3V                                                                */


/* LDSW_LDSWATE: Analog testbus control */
  #define LDSW_LDSWATE_ResetValue (0x00UL)           /*!< Reset value of LDSWATE register.                                     */

/* LDSWATE @Bits 0..4 : Analog testbus control */
  #define LDSW_LDSWATE_LDSWATE_Pos (0UL)             /*!< Position of LDSWATE field.                                           */
  #define LDSW_LDSWATE_LDSWATE_Msk (0x1FUL << LDSW_LDSWATE_LDSWATE_Pos) /*!< Bit mask of LDSWATE field.                        */


/* LDSW_LDSWDTE: Digital testbus control */
  #define LDSW_LDSWDTE_ResetValue (0x00UL)           /*!< Reset value of LDSWDTE register.                                     */

/* LDSWDTE @Bits 0..2 : Digital testbus control */
  #define LDSW_LDSWDTE_LDSWDTE_Pos (0UL)             /*!< Position of LDSWDTE field.                                           */
  #define LDSW_LDSWDTE_LDSWDTE_Msk (0x7UL << LDSW_LDSWDTE_LDSWDTE_Pos) /*!< Bit mask of LDSWDTE field.                         */


/* LDSW_LDSW1HPREFFORCE: Force HPREF LDO1 */
  #define LDSW_LDSW1HPREFFORCE_ResetValue (0x00UL)   /*!< Reset value of LDSW1HPREFFORCE register.                             */

/* LDSW1HPREFFORCE @Bit 0 : Force HPREF LDO1 */
  #define LDSW_LDSW1HPREFFORCE_LDSW1HPREFFORCE_Pos (0UL) /*!< Position of LDSW1HPREFFORCE field.                               */
  #define LDSW_LDSW1HPREFFORCE_LDSW1HPREFFORCE_Msk (0x1UL << LDSW_LDSW1HPREFFORCE_LDSW1HPREFFORCE_Pos) /*!< Bit mask of
                                                                            LDSW1HPREFFORCE field.*/                              


/* LDSW_LDSW2HPREFFORCE: Force HPREF LDO2 */
  #define LDSW_LDSW2HPREFFORCE_ResetValue (0x00UL)   /*!< Reset value of LDSW2HPREFFORCE register.                             */

/* LDSW2HPREFFORCE @Bit 0 : Force HPREF LDO2 */
  #define LDSW_LDSW2HPREFFORCE_LDSW2HPREFFORCE_Pos (0UL) /*!< Position of LDSW2HPREFFORCE field.                               */
  #define LDSW_LDSW2HPREFFORCE_LDSW2HPREFFORCE_Msk (0x1UL << LDSW_LDSW2HPREFFORCE_LDSW2HPREFFORCE_Pos) /*!< Bit mask of
                                                                            LDSW2HPREFFORCE field.*/                              

/* =========================================================================================================================== */
/* ================                                            POF                                            ================ */
/* =========================================================================================================================== */

/* ======================================================= Struct POF ======================================================== */
/**
  * @brief Neutrino POF registers
  */
typedef struct {                                     /*!< POF Structure                                                        */
  __IOM uint8_t   POFCONFIG;                         /*!< (@ 0x00000000) Power Failure Detection block configuration           */
} __PACKED NPM_POF_Type;                             /*!< Size = 1 (0x001)                                                     */

/* POF_POFCONFIG: Power Failure Detection block configuration */
  #define POF_POFCONFIG_ResetValue (0x00UL)          /*!< Reset value of POFCONFIG register.                                   */

/* POFENA @Bit 0 : Enable Power Failure feature */
  #define POF_POFCONFIG_POFENA_Pos (0UL)             /*!< Position of POFENA field.                                            */
  #define POF_POFCONFIG_POFENA_Msk (0x1UL << POF_POFCONFIG_POFENA_Pos) /*!< Bit mask of POFENA field.                          */
  #define POF_POFCONFIG_POFENA_Min (0x0UL)           /*!< Min enumerator value of POFENA field.                                */
  #define POF_POFCONFIG_POFENA_Max (0x1UL)           /*!< Max enumerator value of POFENA field.                                */
  #define POF_POFCONFIG_POFENA_OFF (0x0UL)           /*!< Off                                                                  */
  #define POF_POFCONFIG_POFENA_ENABLED (0x1UL)       /*!< WarningEnabled                                                       */

/* POFWARNPOLARITY @Bit 1 : Power Failure Warning polarity */
  #define POF_POFCONFIG_POFWARNPOLARITY_Pos (1UL)    /*!< Position of POFWARNPOLARITY field.                                   */
  #define POF_POFCONFIG_POFWARNPOLARITY_Msk (0x1UL << POF_POFCONFIG_POFWARNPOLARITY_Pos) /*!< Bit mask of POFWARNPOLARITY
                                                                            field.*/                                              
  #define POF_POFCONFIG_POFWARNPOLARITY_Min (0x0UL)  /*!< Min enumerator value of POFWARNPOLARITY field.                       */
  #define POF_POFCONFIG_POFWARNPOLARITY_Max (0x1UL)  /*!< Max enumerator value of POFWARNPOLARITY field.                       */
  #define POF_POFCONFIG_POFWARNPOLARITY_HIACTIVE (0x0UL) /*!< HiActive                                                         */
  #define POF_POFCONFIG_POFWARNPOLARITY_LOACTIVE (0x1UL) /*!< LoActive                                                         */

/* POFVSYSTHRESHSEL @Bits 2..5 : Vsys Comparator Threshold Select */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_Pos (2UL)   /*!< Position of POFVSYSTHRESHSEL field.                                  */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_Msk (0xFUL << POF_POFCONFIG_POFVSYSTHRESHSEL_Pos) /*!< Bit mask of POFVSYSTHRESHSEL
                                                                            field.*/                                              
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_Min (0x0UL) /*!< Min enumerator value of POFVSYSTHRESHSEL field.                      */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_Max (0xFUL) /*!< Max enumerator value of POFVSYSTHRESHSEL field.                      */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_2V8 (0x0UL) /*!< 2.8V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_2V6 (0x1UL) /*!< 2.6V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_2V7 (0x2UL) /*!< 2.7V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_2V9 (0x3UL) /*!< 2.9V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_3V0 (0x4UL) /*!< 3.0V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_3V1 (0x5UL) /*!< 3.1V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_3V2 (0x6UL) /*!< 3.2V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_3V3 (0x7UL) /*!< 3.3V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_3V4 (0x8UL) /*!< 3.4V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_3V5 (0x9UL) /*!< 3.5V                                                                 */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_unused10 (0xAUL) /*!< set to 2.8V                                                     */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_unused11 (0xBUL) /*!< set to 2.8V                                                     */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_unused12 (0xCUL) /*!< set to 2.8V                                                     */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_unused13 (0xDUL) /*!< set to 2.8V                                                     */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_unused14 (0xEUL) /*!< set to 2.8V                                                     */
  #define POF_POFCONFIG_POFVSYSTHRESHSEL_unused15 (0xFUL) /*!< set to 2.8V                                                     */



/* =========================================================================================================================== */
/* ================                                          LEDDRV                                          ================ */
/* =========================================================================================================================== */

/* ====================================================== Struct LEDDRV ====================================================== */
/**
  * @brief Neutrino LEDDRV registers
  */
typedef struct {                                     /*!< LEDDRV Structure                                                     */
  __IOM uint8_t   LEDDRV0MODESEL;                    /*!< (@ 0x00000000) Select for LED_0 mode                                 */
  __IOM uint8_t   LEDDRV1MODESEL;                    /*!< (@ 0x00000001) Select for LED_1 mode                                 */
  __IOM uint8_t   LEDDRV2MODESEL;                    /*!< (@ 0x00000002) Select for LED_2 mode                                 */
  __OM  uint8_t   LEDDRV0SET;                        /*!< (@ 0x00000003) Set LED_0 to be On                                    */
  __OM  uint8_t   LEDDRV0CLR;                        /*!< (@ 0x00000004) Clear LED_0 to be Off                                 */
  __OM  uint8_t   LEDDRV1SET;                        /*!< (@ 0x00000005) Set LED_1 to be On                                    */
  __OM  uint8_t   LEDDRV1CLR;                        /*!< (@ 0x00000006) Clear LED_1 to be Off                                 */
  __OM  uint8_t   LEDDRV2SET;                        /*!< (@ 0x00000007) Set LED_2 to be On                                    */
  __OM  uint8_t   LEDDRV2CLR;                        /*!< (@ 0x00000008) Clear LED_2 to be Off                                 */
  __IOM uint8_t   LEDDRVUSB2MODE;                    /*!< (@ 0x00000009) Set LED0 and LED1 to be USB2 Detect NOTE: Reset value
                                                                         from OTP, value listed in this table may not be
                                                                         correct.*/                                               
} __PACKED NPM_LEDDRV_Type;                          /*!< Size = 10 (0x00A)                                                    */

/* LEDDRV_LEDDRV0MODESEL: Select for LED_0 mode */
  #define LEDDRV_LEDDRV0MODESEL_ResetValue (0x00UL)  /*!< Reset value of LEDDRV0MODESEL register.                              */

/* LEDDRV0MODESEL @Bits 0..1 : Select for LED_0 mode */
  #define LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_Pos (0UL) /*!< Position of LEDDRV0MODESEL field.                                */
  #define LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_Msk (0x3UL << LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_Pos) /*!< Bit mask of
                                                                            LEDDRV0MODESEL field.*/                               
  #define LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_Min (0x0UL) /*!< Min enumerator value of LEDDRV0MODESEL field.                  */
  #define LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_Max (0x3UL) /*!< Max enumerator value of LEDDRV0MODESEL field.                  */
  #define LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_ERROR (0x0UL) /*!< Error condition from Charger                                 */
  #define LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_CHARGING (0x1UL) /*!< Charging indicator (On during charging)                   */
  #define LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_HOST (0x2UL) /*!< Driven from register LEDDRV_0_SET/CLR                         */
  #define LEDDRV_LEDDRV0MODESEL_LEDDRV0MODESEL_NOTUSED (0x3UL) /*!< Not used                                                   */


/* LEDDRV_LEDDRV1MODESEL: Select for LED_1 mode */
  #define LEDDRV_LEDDRV1MODESEL_ResetValue (0x01UL)  /*!< Reset value of LEDDRV1MODESEL register.                              */

/* LEDDRV1MODESEL @Bits 0..1 : Select for LED_1 mode */
  #define LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_Pos (0UL) /*!< Position of LEDDRV1MODESEL field.                                */
  #define LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_Msk (0x3UL << LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_Pos) /*!< Bit mask of
                                                                            LEDDRV1MODESEL field.*/                               
  #define LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_Min (0x0UL) /*!< Min enumerator value of LEDDRV1MODESEL field.                  */
  #define LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_Max (0x3UL) /*!< Max enumerator value of LEDDRV1MODESEL field.                  */
  #define LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_ERROR (0x0UL) /*!< Error condition from Charger                                 */
  #define LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_CHARGING (0x1UL) /*!< Charging indicator (On during charging)                   */
  #define LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_HOST (0x2UL) /*!< Driven from register LEDDRV_1_SET/CLR                         */
  #define LEDDRV_LEDDRV1MODESEL_LEDDRV1MODESEL_NOTUSED (0x3UL) /*!< Not used                                                   */


/* LEDDRV_LEDDRV2MODESEL: Select for LED_2 mode */
  #define LEDDRV_LEDDRV2MODESEL_ResetValue (0x02UL)  /*!< Reset value of LEDDRV2MODESEL register.                              */

/* LEDDRV2MODESEL @Bits 0..1 : Select for LED_2 mode */
  #define LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_Pos (0UL) /*!< Position of LEDDRV2MODESEL field.                                */
  #define LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_Msk (0x3UL << LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_Pos) /*!< Bit mask of
                                                                            LEDDRV2MODESEL field.*/                               
  #define LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_Min (0x0UL) /*!< Min enumerator value of LEDDRV2MODESEL field.                  */
  #define LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_Max (0x3UL) /*!< Max enumerator value of LEDDRV2MODESEL field.                  */
  #define LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_ERROR (0x0UL) /*!< Error condition from Charger                                 */
  #define LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_CHARGING (0x1UL) /*!< Charging indicator (On during charging)                   */
  #define LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_HOST (0x2UL) /*!< Driven from register LEDDRV_2_SET/CLR                         */
  #define LEDDRV_LEDDRV2MODESEL_LEDDRV2MODESEL_NOTUSED (0x3UL) /*!< Not used                                                   */


/* LEDDRV_LEDDRV0SET: Set LED_0 to be On */
  #define LEDDRV_LEDDRV0SET_ResetValue (0x00UL)      /*!< Reset value of LEDDRV0SET register.                                  */

/* LEDDRV0ON @Bit 0 : Set LED_0 to be On */
  #define LEDDRV_LEDDRV0SET_LEDDRV0ON_Pos (0UL)      /*!< Position of LEDDRV0ON field.                                         */
  #define LEDDRV_LEDDRV0SET_LEDDRV0ON_Msk (0x1UL << LEDDRV_LEDDRV0SET_LEDDRV0ON_Pos) /*!< Bit mask of LEDDRV0ON field.         */
  #define LEDDRV_LEDDRV0SET_LEDDRV0ON_Min (0x0UL)    /*!< Min enumerator value of LEDDRV0ON field.                             */
  #define LEDDRV_LEDDRV0SET_LEDDRV0ON_Max (0x1UL)    /*!< Max enumerator value of LEDDRV0ON field.                             */
  #define LEDDRV_LEDDRV0SET_LEDDRV0ON_NOEFFECT (0x0UL) /*!< no effect                                                          */
  #define LEDDRV_LEDDRV0SET_LEDDRV0ON_SET (0x1UL)    /*!< Used with leddrvModeSel                                              */


/* LEDDRV_LEDDRV0CLR: Clear LED_0 to be Off */
  #define LEDDRV_LEDDRV0CLR_ResetValue (0x00UL)      /*!< Reset value of LEDDRV0CLR register.                                  */

/* LEDDRV0OFF @Bit 0 : Set LED_0 to be Off */
  #define LEDDRV_LEDDRV0CLR_LEDDRV0OFF_Pos (0UL)     /*!< Position of LEDDRV0OFF field.                                        */
  #define LEDDRV_LEDDRV0CLR_LEDDRV0OFF_Msk (0x1UL << LEDDRV_LEDDRV0CLR_LEDDRV0OFF_Pos) /*!< Bit mask of LEDDRV0OFF field.      */
  #define LEDDRV_LEDDRV0CLR_LEDDRV0OFF_Min (0x0UL)   /*!< Min enumerator value of LEDDRV0OFF field.                            */
  #define LEDDRV_LEDDRV0CLR_LEDDRV0OFF_Max (0x1UL)   /*!< Max enumerator value of LEDDRV0OFF field.                            */
  #define LEDDRV_LEDDRV0CLR_LEDDRV0OFF_NOEFFECT (0x0UL) /*!< no effect                                                         */
  #define LEDDRV_LEDDRV0CLR_LEDDRV0OFF_CLR (0x1UL)   /*!< Used with leddrvModeSel                                              */


/* LEDDRV_LEDDRV1SET: Set LED_1 to be On */
  #define LEDDRV_LEDDRV1SET_ResetValue (0x00UL)      /*!< Reset value of LEDDRV1SET register.                                  */

/* LEDDRV1ON @Bit 0 : Set LED_1 to be On */
  #define LEDDRV_LEDDRV1SET_LEDDRV1ON_Pos (0UL)      /*!< Position of LEDDRV1ON field.                                         */
  #define LEDDRV_LEDDRV1SET_LEDDRV1ON_Msk (0x1UL << LEDDRV_LEDDRV1SET_LEDDRV1ON_Pos) /*!< Bit mask of LEDDRV1ON field.         */
  #define LEDDRV_LEDDRV1SET_LEDDRV1ON_Min (0x0UL)    /*!< Min enumerator value of LEDDRV1ON field.                             */
  #define LEDDRV_LEDDRV1SET_LEDDRV1ON_Max (0x1UL)    /*!< Max enumerator value of LEDDRV1ON field.                             */
  #define LEDDRV_LEDDRV1SET_LEDDRV1ON_NOEFFECT (0x0UL) /*!< no effect                                                          */
  #define LEDDRV_LEDDRV1SET_LEDDRV1ON_SET (0x1UL)    /*!< Used with leddrvModeSel                                              */


/* LEDDRV_LEDDRV1CLR: Clear LED_1 to be Off */
  #define LEDDRV_LEDDRV1CLR_ResetValue (0x00UL)      /*!< Reset value of LEDDRV1CLR register.                                  */

/* LEDDRV1OFF @Bit 0 : Set LED_1 to be Off */
  #define LEDDRV_LEDDRV1CLR_LEDDRV1OFF_Pos (0UL)     /*!< Position of LEDDRV1OFF field.                                        */
  #define LEDDRV_LEDDRV1CLR_LEDDRV1OFF_Msk (0x1UL << LEDDRV_LEDDRV1CLR_LEDDRV1OFF_Pos) /*!< Bit mask of LEDDRV1OFF field.      */
  #define LEDDRV_LEDDRV1CLR_LEDDRV1OFF_Min (0x0UL)   /*!< Min enumerator value of LEDDRV1OFF field.                            */
  #define LEDDRV_LEDDRV1CLR_LEDDRV1OFF_Max (0x1UL)   /*!< Max enumerator value of LEDDRV1OFF field.                            */
  #define LEDDRV_LEDDRV1CLR_LEDDRV1OFF_NOEFFECT (0x0UL) /*!< no effect                                                         */
  #define LEDDRV_LEDDRV1CLR_LEDDRV1OFF_CLR (0x1UL)   /*!< Used with leddrvModeSel                                              */


/* LEDDRV_LEDDRV2SET: Set LED_2 to be On */
  #define LEDDRV_LEDDRV2SET_ResetValue (0x00UL)      /*!< Reset value of LEDDRV2SET register.                                  */

/* LEDDRV2ON @Bit 0 : Set LED_2 to be On */
  #define LEDDRV_LEDDRV2SET_LEDDRV2ON_Pos (0UL)      /*!< Position of LEDDRV2ON field.                                         */
  #define LEDDRV_LEDDRV2SET_LEDDRV2ON_Msk (0x1UL << LEDDRV_LEDDRV2SET_LEDDRV2ON_Pos) /*!< Bit mask of LEDDRV2ON field.         */
  #define LEDDRV_LEDDRV2SET_LEDDRV2ON_Min (0x0UL)    /*!< Min enumerator value of LEDDRV2ON field.                             */
  #define LEDDRV_LEDDRV2SET_LEDDRV2ON_Max (0x1UL)    /*!< Max enumerator value of LEDDRV2ON field.                             */
  #define LEDDRV_LEDDRV2SET_LEDDRV2ON_NOEFFECT (0x0UL) /*!< no effect                                                          */
  #define LEDDRV_LEDDRV2SET_LEDDRV2ON_SET (0x1UL)    /*!< Used with leddrvModeSel                                              */


/* LEDDRV_LEDDRV2CLR: Clear LED_2 to be Off */
  #define LEDDRV_LEDDRV2CLR_ResetValue (0x00UL)      /*!< Reset value of LEDDRV2CLR register.                                  */

/* LEDDRV2OFF @Bit 0 : Set LED_2 to be Off */
  #define LEDDRV_LEDDRV2CLR_LEDDRV2OFF_Pos (0UL)     /*!< Position of LEDDRV2OFF field.                                        */
  #define LEDDRV_LEDDRV2CLR_LEDDRV2OFF_Msk (0x1UL << LEDDRV_LEDDRV2CLR_LEDDRV2OFF_Pos) /*!< Bit mask of LEDDRV2OFF field.      */
  #define LEDDRV_LEDDRV2CLR_LEDDRV2OFF_Min (0x0UL)   /*!< Min enumerator value of LEDDRV2OFF field.                            */
  #define LEDDRV_LEDDRV2CLR_LEDDRV2OFF_Max (0x1UL)   /*!< Max enumerator value of LEDDRV2OFF field.                            */
  #define LEDDRV_LEDDRV2CLR_LEDDRV2OFF_NOEFFECT (0x0UL) /*!< no effect                                                         */
  #define LEDDRV_LEDDRV2CLR_LEDDRV2OFF_CLR (0x1UL)   /*!< Used with leddrvModeSel                                              */


/* LEDDRV_LEDDRVUSB2MODE: Set LED0 and LED1 to be USB2 Detect NOTE: Reset value from OTP, value listed in this table may not be
                           correct. */                                                                                            
                                                                                                                                  
  #define LEDDRV_LEDDRVUSB2MODE_ResetValue (0x00UL)  /*!< Reset value of LEDDRVUSB2MODE register.                              */

/* LEDDRVUSB2MODE @Bit 0 : Set LED0 and LED1 to be USB2 Detect */
  #define LEDDRV_LEDDRVUSB2MODE_LEDDRVUSB2MODE_Pos (0UL) /*!< Position of LEDDRVUSB2MODE field.                                */
  #define LEDDRV_LEDDRVUSB2MODE_LEDDRVUSB2MODE_Msk (0x1UL << LEDDRV_LEDDRVUSB2MODE_LEDDRVUSB2MODE_Pos) /*!< Bit mask of
                                                                            LEDDRVUSB2MODE field.*/                               
  #define LEDDRV_LEDDRVUSB2MODE_LEDDRVUSB2MODE_Min (0x0UL) /*!< Min enumerator value of LEDDRVUSB2MODE field.                  */
  #define LEDDRV_LEDDRVUSB2MODE_LEDDRVUSB2MODE_Max (0x1UL) /*!< Max enumerator value of LEDDRVUSB2MODE field.                  */
  #define LEDDRV_LEDDRVUSB2MODE_LEDDRVUSB2MODE_LED (0x0UL) /*!< Use as LED driver                                              */
  #define LEDDRV_LEDDRVUSB2MODE_LEDDRVUSB2MODE_USB2 (0x1UL) /*!< Use as USB2 Detect pins                                       */

/* LEDDRVHPREFDISABLE @Bit 1 : spare */
  #define LEDDRV_LEDDRVUSB2MODE_LEDDRVHPREFDISABLE_Pos (1UL) /*!< Position of LEDDRVHPREFDISABLE field.                        */
  #define LEDDRV_LEDDRVUSB2MODE_LEDDRVHPREFDISABLE_Msk (0x1UL << LEDDRV_LEDDRVUSB2MODE_LEDDRVHPREFDISABLE_Pos) /*!< Bit mask of
                                                                            LEDDRVHPREFDISABLE field.*/                           

/* =========================================================================================================================== */
/* ================                                          SHPHLD                                          ================ */
/* =========================================================================================================================== */

/* ====================================================== Struct SHPHLD ====================================================== */
/**
  * @brief Neutrino SHPHLD registers
  */
typedef struct {                                     /*!< SHPHLD Structure                                                     */
  __OM  uint8_t   TASKENTERHIBERNATE;                /*!< (@ 0x00000000) Task Enter Hibernate                                  */
  __OM  uint8_t   TASKSHPHLDCFGSTROBE;               /*!< (@ 0x00000001) Task Ship Hold config                                 */
  __OM  uint8_t   TASKENTERSHIPMODE;                 /*!< (@ 0x00000002) Task enter ShipMode                                   */
  __OM  uint8_t   TASKRESETCFG;                      /*!< (@ 0x00000003) Request reset config                                  */
  __IOM uint8_t   SHPHLDCONFIG;                      /*!< (@ 0x00000004) Ship Hold button press timer config                   */
  __IM  uint8_t   SHPHLDSTATUS;                      /*!< (@ 0x00000005) Status of the SHPHLD pin                              */
  __IOM uint8_t   LPRESETCONFIG;                     /*!< (@ 0x00000006) Long press reset config register                      */
  __IOM uint8_t   SHPHLDOVERRIDE;                    /*!< (@ 0x00000007) overrrides for shiphold related signals               */
} __PACKED NPM_SHPHLD_Type;                          /*!< Size = 8 (0x008)                                                     */

/* SHPHLD_TASKENTERHIBERNATE: Task Enter Hibernate */
  #define SHPHLD_TASKENTERHIBERNATE_ResetValue (0x00UL) /*!< Reset value of TASKENTERHIBERNATE register.                       */

/* TASKENTERHIBERNATE @Bit 0 : Enter Hibernate (Shipmode with Wakeup Timer) */
  #define SHPHLD_TASKENTERHIBERNATE_TASKENTERHIBERNATE_Pos (0UL) /*!< Position of TASKENTERHIBERNATE field.                    */
  #define SHPHLD_TASKENTERHIBERNATE_TASKENTERHIBERNATE_Msk (0x1UL << SHPHLD_TASKENTERHIBERNATE_TASKENTERHIBERNATE_Pos) /*!< Bit
                                                                            mask of TASKENTERHIBERNATE field.*/                   
  #define SHPHLD_TASKENTERHIBERNATE_TASKENTERHIBERNATE_Min (0x0UL) /*!< Min enumerator value of TASKENTERHIBERNATE field.      */
  #define SHPHLD_TASKENTERHIBERNATE_TASKENTERHIBERNATE_Max (0x1UL) /*!< Max enumerator value of TASKENTERHIBERNATE field.      */
  #define SHPHLD_TASKENTERHIBERNATE_TASKENTERHIBERNATE_NOEFFECT (0x0UL) /*!< no effect                                         */
  #define SHPHLD_TASKENTERHIBERNATE_TASKENTERHIBERNATE_TRIGGER (0x1UL) /*!< trigger task                                       */


/* SHPHLD_TASKSHPHLDCFGSTROBE: Task Ship Hold config */
  #define SHPHLD_TASKSHPHLDCFGSTROBE_ResetValue (0x00UL) /*!< Reset value of TASKSHPHLDCFGSTROBE register.                     */

/* TASKSHPHLDCONFIGSTROBE @Bit 0 : Load the SHPHLD Config */
  #define SHPHLD_TASKSHPHLDCFGSTROBE_TASKSHPHLDCONFIGSTROBE_Pos (0UL) /*!< Position of TASKSHPHLDCONFIGSTROBE field.           */
  #define SHPHLD_TASKSHPHLDCFGSTROBE_TASKSHPHLDCONFIGSTROBE_Msk (0x1UL << SHPHLD_TASKSHPHLDCFGSTROBE_TASKSHPHLDCONFIGSTROBE_Pos)
                                                                            /*!< Bit mask of TASKSHPHLDCONFIGSTROBE field.*/      
  #define SHPHLD_TASKSHPHLDCFGSTROBE_TASKSHPHLDCONFIGSTROBE_Min (0x0UL) /*!< Min enumerator value of TASKSHPHLDCONFIGSTROBE
                                                                            field.*/                                              
  #define SHPHLD_TASKSHPHLDCFGSTROBE_TASKSHPHLDCONFIGSTROBE_Max (0x1UL) /*!< Max enumerator value of TASKSHPHLDCONFIGSTROBE
                                                                            field.*/                                              
  #define SHPHLD_TASKSHPHLDCFGSTROBE_TASKSHPHLDCONFIGSTROBE_NOEFFECT (0x0UL) /*!< no effect                                    */
  #define SHPHLD_TASKSHPHLDCFGSTROBE_TASKSHPHLDCONFIGSTROBE_TRIGGER (0x1UL) /*!< strobe config                                 */


/* SHPHLD_TASKENTERSHIPMODE: Task enter ShipMode */
  #define SHPHLD_TASKENTERSHIPMODE_ResetValue (0x00UL) /*!< Reset value of TASKENTERSHIPMODE register.                         */

/* TASKENTERSHIPMODE @Bit 0 : Enter Shipmode (without Wakeup timer) */
  #define SHPHLD_TASKENTERSHIPMODE_TASKENTERSHIPMODE_Pos (0UL) /*!< Position of TASKENTERSHIPMODE field.                       */
  #define SHPHLD_TASKENTERSHIPMODE_TASKENTERSHIPMODE_Msk (0x1UL << SHPHLD_TASKENTERSHIPMODE_TASKENTERSHIPMODE_Pos) /*!< Bit mask
                                                                            of TASKENTERSHIPMODE field.*/                         
  #define SHPHLD_TASKENTERSHIPMODE_TASKENTERSHIPMODE_Min (0x0UL) /*!< Min enumerator value of TASKENTERSHIPMODE field.         */
  #define SHPHLD_TASKENTERSHIPMODE_TASKENTERSHIPMODE_Max (0x1UL) /*!< Max enumerator value of TASKENTERSHIPMODE field.         */
  #define SHPHLD_TASKENTERSHIPMODE_TASKENTERSHIPMODE_NOEFFECT (0x0UL) /*!< no effect                                           */
  #define SHPHLD_TASKENTERSHIPMODE_TASKENTERSHIPMODE_TRIGGER (0x1UL) /*!< trigger task                                         */


/* SHPHLD_TASKRESETCFG: Request reset config */
  #define SHPHLD_TASKRESETCFG_ResetValue (0x00UL)    /*!< Reset value of TASKRESETCFG register.                                */

/* TASKSHPHLDRSTCONFIG @Bit 0 : Use to reset config settings */
  #define SHPHLD_TASKRESETCFG_TASKSHPHLDRSTCONFIG_Pos (0UL) /*!< Position of TASKSHPHLDRSTCONFIG field.                        */
  #define SHPHLD_TASKRESETCFG_TASKSHPHLDRSTCONFIG_Msk (0x1UL << SHPHLD_TASKRESETCFG_TASKSHPHLDRSTCONFIG_Pos) /*!< Bit mask of
                                                                            TASKSHPHLDRSTCONFIG field.*/                          
  #define SHPHLD_TASKRESETCFG_TASKSHPHLDRSTCONFIG_Min (0x0UL) /*!< Min enumerator value of TASKSHPHLDRSTCONFIG field.          */
  #define SHPHLD_TASKRESETCFG_TASKSHPHLDRSTCONFIG_Max (0x1UL) /*!< Max enumerator value of TASKSHPHLDRSTCONFIG field.          */
  #define SHPHLD_TASKRESETCFG_TASKSHPHLDRSTCONFIG_NOEFFECT (0x0UL) /*!< no effect                                              */
  #define SHPHLD_TASKRESETCFG_TASKSHPHLDRSTCONFIG_TRIGGER (0x1UL) /*!< reset                                                   */


/* SHPHLD_SHPHLDCONFIG: Ship Hold button press timer config */
  #define SHPHLD_SHPHLDCONFIG_ResetValue (0x03UL)    /*!< Reset value of SHPHLDCONFIG register.                                */

/* SHPHLDTIM @Bits 0..2 : Ship-Hold press timer */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_Pos (0UL)    /*!< Position of SHPHLDTIM field.                                         */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_Msk (0x7UL << SHPHLD_SHPHLDCONFIG_SHPHLDTIM_Pos) /*!< Bit mask of SHPHLDTIM field.     */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_Min (0x0UL)  /*!< Min enumerator value of SHPHLDTIM field.                             */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_Max (0x7UL)  /*!< Max enumerator value of SHPHLDTIM field.                             */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_16ms (0x0UL) /*!< 16ms                                                                 */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_32ms (0x1UL) /*!< 32ms                                                                 */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_64ms (0x2UL) /*!< 64ms                                                                 */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_96ms (0x3UL) /*!< 96ms (default)                                                       */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_304ms (0x4UL) /*!< 304ms                                                               */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_608ms (0x5UL) /*!< 608ms                                                               */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_1008ms (0x6UL) /*!< 1008ms                                                             */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDTIM_3008ms (0x7UL) /*!< 3008ms                                                             */

/* SHPHLDPOLARITY @Bit 3 : Polarity of shphld */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDPOLARITY_Pos (3UL) /*!< Position of SHPHLDPOLARITY field.                                  */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDPOLARITY_Msk (0x1UL << SHPHLD_SHPHLDCONFIG_SHPHLDPOLARITY_Pos) /*!< Bit mask of
                                                                            SHPHLDPOLARITY field.*/                               
  #define SHPHLD_SHPHLDCONFIG_SHPHLDPOLARITY_Min (0x0UL) /*!< Min enumerator value of SHPHLDPOLARITY field.                    */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDPOLARITY_Max (0x1UL) /*!< Max enumerator value of SHPHLDPOLARITY field.                    */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDPOLARITY_NOEFFECT (0x0UL) /*!< no effect                                                   */
  #define SHPHLD_SHPHLDCONFIG_SHPHLDPOLARITY_INVERT (0x1UL) /*!< shphld inverted                                               */


/* SHPHLD_SHPHLDSTATUS: Status of the SHPHLD pin */
  #define SHPHLD_SHPHLDSTATUS_ResetValue (0x00UL)    /*!< Reset value of SHPHLDSTATUS register.                                */

/* SHPHLDPINSTATUS @Bit 0 : Ship Hold pin Status */
  #define SHPHLD_SHPHLDSTATUS_SHPHLDPINSTATUS_Pos (0UL) /*!< Position of SHPHLDPINSTATUS field.                                */
  #define SHPHLD_SHPHLDSTATUS_SHPHLDPINSTATUS_Msk (0x1UL << SHPHLD_SHPHLDSTATUS_SHPHLDPINSTATUS_Pos) /*!< Bit mask of
                                                                            SHPHLDPINSTATUS field.*/                              
  #define SHPHLD_SHPHLDSTATUS_SHPHLDPINSTATUS_Min (0x0UL) /*!< Min enumerator value of SHPHLDPINSTATUS field.                  */
  #define SHPHLD_SHPHLDSTATUS_SHPHLDPINSTATUS_Max (0x1UL) /*!< Max enumerator value of SHPHLDPINSTATUS field.                  */
  #define SHPHLD_SHPHLDSTATUS_SHPHLDPINSTATUS_LOW (0x0UL) /*!< Low                                                             */
  #define SHPHLD_SHPHLDSTATUS_SHPHLDPINSTATUS_HIGH (0x1UL) /*!< High                                                           */


/* SHPHLD_LPRESETCONFIG: Long press reset config register */
  #define SHPHLD_LPRESETCONFIG_ResetValue (0x00UL)   /*!< Reset value of LPRESETCONFIG register.                               */

/* LONGTIMRESETDIS @Bit 0 : Long press 10s timer enable */
  #define SHPHLD_LPRESETCONFIG_LONGTIMRESETDIS_Pos (0UL) /*!< Position of LONGTIMRESETDIS field.                               */
  #define SHPHLD_LPRESETCONFIG_LONGTIMRESETDIS_Msk (0x1UL << SHPHLD_LPRESETCONFIG_LONGTIMRESETDIS_Pos) /*!< Bit mask of
                                                                            LONGTIMRESETDIS field.*/                              
  #define SHPHLD_LPRESETCONFIG_LONGTIMRESETDIS_Min (0x0UL) /*!< Min enumerator value of LONGTIMRESETDIS field.                 */
  #define SHPHLD_LPRESETCONFIG_LONGTIMRESETDIS_Max (0x1UL) /*!< Max enumerator value of LONGTIMRESETDIS field.                 */
  #define SHPHLD_LPRESETCONFIG_LONGTIMRESETDIS_ENABLED (0x0UL) /*!< LongPress Enabled                                          */
  #define SHPHLD_LPRESETCONFIG_LONGTIMRESETDIS_DISABLED (0x1UL) /*!< Disabled                                                  */

/* LONGTIMTWOBUTTONSEL @Bit 1 : Select one (default) or two buttons to perform longpress reset */
  #define SHPHLD_LPRESETCONFIG_LONGTIMTWOBUTTONSEL_Pos (1UL) /*!< Position of LONGTIMTWOBUTTONSEL field.                       */
  #define SHPHLD_LPRESETCONFIG_LONGTIMTWOBUTTONSEL_Msk (0x1UL << SHPHLD_LPRESETCONFIG_LONGTIMTWOBUTTONSEL_Pos) /*!< Bit mask of
                                                                            LONGTIMTWOBUTTONSEL field.*/                          
  #define SHPHLD_LPRESETCONFIG_LONGTIMTWOBUTTONSEL_Min (0x0UL) /*!< Min enumerator value of LONGTIMTWOBUTTONSEL field.         */
  #define SHPHLD_LPRESETCONFIG_LONGTIMTWOBUTTONSEL_Max (0x1UL) /*!< Max enumerator value of LONGTIMTWOBUTTONSEL field.         */
  #define SHPHLD_LPRESETCONFIG_LONGTIMTWOBUTTONSEL_SHPHLD (0x0UL) /*!< SHPHLD                                                  */
  #define SHPHLD_LPRESETCONFIG_LONGTIMTWOBUTTONSEL_SHPHLDGPIO0 (0x1UL) /*!< SHPHLD GPIO0                                       */


/* SHPHLD_SHPHLDOVERRIDE: overrrides for shiphold related signals */
  #define SHPHLD_SHPHLDOVERRIDE_ResetValue (0x00UL)  /*!< Reset value of SHPHLDOVERRIDE register.                              */

/* SHPHLDOVERRIDEVALUE @Bit 0 : shphld override value */
  #define SHPHLD_SHPHLDOVERRIDE_SHPHLDOVERRIDEVALUE_Pos (0UL) /*!< Position of SHPHLDOVERRIDEVALUE field.                      */
  #define SHPHLD_SHPHLDOVERRIDE_SHPHLDOVERRIDEVALUE_Msk (0x1UL << SHPHLD_SHPHLDOVERRIDE_SHPHLDOVERRIDEVALUE_Pos) /*!< Bit mask
                                                                            of SHPHLDOVERRIDEVALUE field.*/                       

/* SHPHLDOVERRIDEENA @Bit 1 : shphld override enable */
  #define SHPHLD_SHPHLDOVERRIDE_SHPHLDOVERRIDEENA_Pos (1UL) /*!< Position of SHPHLDOVERRIDEENA field.                          */
  #define SHPHLD_SHPHLDOVERRIDE_SHPHLDOVERRIDEENA_Msk (0x1UL << SHPHLD_SHPHLDOVERRIDE_SHPHLDOVERRIDEENA_Pos) /*!< Bit mask of
                                                                            SHPHLDOVERRIDEENA field.*/                            

/* SHPHLDLONGPRESSOVERRIDEVALUE @Bit 2 : shphldLongPress override value */
  #define SHPHLD_SHPHLDOVERRIDE_SHPHLDLONGPRESSOVERRIDEVALUE_Pos (2UL) /*!< Position of SHPHLDLONGPRESSOVERRIDEVALUE field.    */
  #define SHPHLD_SHPHLDOVERRIDE_SHPHLDLONGPRESSOVERRIDEVALUE_Msk (0x1UL << SHPHLD_SHPHLDOVERRIDE_SHPHLDLONGPRESSOVERRIDEVALUE_Pos)
                                                                            /*!< Bit mask of SHPHLDLONGPRESSOVERRIDEVALUE
                                                                            field.*/                                              

/* SHPHLDLONGPRESSOVERRIDEENA @Bit 3 : shphldLongPress override enable */
  #define SHPHLD_SHPHLDOVERRIDE_SHPHLDLONGPRESSOVERRIDEENA_Pos (3UL) /*!< Position of SHPHLDLONGPRESSOVERRIDEENA field.        */
  #define SHPHLD_SHPHLDOVERRIDE_SHPHLDLONGPRESSOVERRIDEENA_Msk (0x1UL << SHPHLD_SHPHLDOVERRIDE_SHPHLDLONGPRESSOVERRIDEENA_Pos)
                                                                            /*!< Bit mask of SHPHLDLONGPRESSOVERRIDEENA field.*/  

/* VBUSDETOVERRIDEVALUE @Bit 4 : vbusDet override value */
  #define SHPHLD_SHPHLDOVERRIDE_VBUSDETOVERRIDEVALUE_Pos (4UL) /*!< Position of VBUSDETOVERRIDEVALUE field.                    */
  #define SHPHLD_SHPHLDOVERRIDE_VBUSDETOVERRIDEVALUE_Msk (0x1UL << SHPHLD_SHPHLDOVERRIDE_VBUSDETOVERRIDEVALUE_Pos) /*!< Bit mask
                                                                            of VBUSDETOVERRIDEVALUE field.*/                      

/* VBUSDETOVERRIDEENA @Bit 5 : vbusDet override enable */
  #define SHPHLD_SHPHLDOVERRIDE_VBUSDETOVERRIDEENA_Pos (5UL) /*!< Position of VBUSDETOVERRIDEENA field.                        */
  #define SHPHLD_SHPHLDOVERRIDE_VBUSDETOVERRIDEENA_Msk (0x1UL << SHPHLD_SHPHLDOVERRIDE_VBUSDETOVERRIDEENA_Pos) /*!< Bit mask of
                                                                            VBUSDETOVERRIDEENA field.*/                           



/* =========================================================================================================================== */
/* ================                                          ERRLOG                                          ================ */
/* =========================================================================================================================== */

/* ====================================================== Struct ERRLOG ====================================================== */
/**
  * @brief Neutrino ERRLOG registers
  */
typedef struct {                                     /*!< ERRLOG Structure                                                     */
  __OM  uint8_t   TASKCLRERRLOG;                     /*!< (@ 0x00000000) task to clear the Errlog registers                    */
  __IOM uint8_t   SCRATCH0;                          /*!< (@ 0x00000001) Scratch register 0                                    */
  __IOM uint8_t   SCRATCH1;                          /*!< (@ 0x00000002) Scratch register 1                                    */
  __IM  uint8_t   RSTCAUSE;                          /*!< (@ 0x00000003) Error log for internal reset causes. Cleared
                                                                         withTASK_CLR_ERRLOG*/                                    
  __IM  uint8_t   CHARGERERRREASON;                  /*!< (@ 0x00000004) Error log for slowDomain. Cleared with TASK_CLR_ERRLOG*/
  __IM  uint8_t   CHARGERERRSENSOR;                  /*!< (@ 0x00000005) Bcharger Fsm sensor error. Cleared with
                                                                         TASK_CLR_ERRLOG*/                                        
  __IM  uint8_t   CHARGERSTATE;                      /*!< (@ 0x00000006) Current Bcharger state Cleared with TASK_CLR_ERRLOG   */
  __IM  uint8_t   CHARGERPREVSTATE0;                 /*!< (@ 0x00000007) Previous Bcharger state Cleared with TASK_CLR_ERRLOG  */
  __IM  uint8_t   CHARGERPREVSTATE1;                 /*!< (@ 0x00000008) Previous Bcharger state 1 Cleared with TASK_CLR_ERRLOG*/
  __IM  uint8_t   CHARGERPREVSTATE2;                 /*!< (@ 0x00000009) Previous Bcharger state 2 Cleared with TASK_CLR_ERRLOG*/
  __IM  uint8_t   CHARGERPREVSTATE3;                 /*!< (@ 0x0000000A) Previous Bcharger state 3 Cleared with TASK_CLR_ERRLOG*/
} __PACKED NPM_ERRLOG_Type;                          /*!< Size = 11 (0x00B)                                                    */

/* ERRLOG_TASKCLRERRLOG: task to clear the Errlog registers */
  #define ERRLOG_TASKCLRERRLOG_ResetValue (0x00UL)   /*!< Reset value of TASKCLRERRLOG register.                               */

/* TASKCLRERRLOG @Bit 0 : Clear Errlog */
  #define ERRLOG_TASKCLRERRLOG_TASKCLRERRLOG_Pos (0UL) /*!< Position of TASKCLRERRLOG field.                                   */
  #define ERRLOG_TASKCLRERRLOG_TASKCLRERRLOG_Msk (0x1UL << ERRLOG_TASKCLRERRLOG_TASKCLRERRLOG_Pos) /*!< Bit mask of
                                                                            TASKCLRERRLOG field.*/                                


/* ERRLOG_SCRATCH0: Scratch register 0 */
  #define ERRLOG_SCRATCH0_ResetValue (0x00UL)        /*!< Reset value of SCRATCH0 register.                                    */

/* BOOTDISABLE @Bit 0 : Disable Boot Monitor Timer, only cleared by POR */
  #define ERRLOG_SCRATCH0_BOOTDISABLE_Pos (0UL)      /*!< Position of BOOTDISABLE field.                                       */
  #define ERRLOG_SCRATCH0_BOOTDISABLE_Msk (0x1UL << ERRLOG_SCRATCH0_BOOTDISABLE_Pos) /*!< Bit mask of BOOTDISABLE field.       */
  #define ERRLOG_SCRATCH0_BOOTDISABLE_Min (0x0UL)    /*!< Min enumerator value of BOOTDISABLE field.                           */
  #define ERRLOG_SCRATCH0_BOOTDISABLE_Max (0x1UL)    /*!< Max enumerator value of BOOTDISABLE field.                           */
  #define ERRLOG_SCRATCH0_BOOTDISABLE_BOOTMON (0x0UL) /*!< bootMonitor enable                                                  */
  #define ERRLOG_SCRATCH0_BOOTDISABLE_NOBOOTMON (0x1UL) /*!< bootMonitor disable                                               */

/* SCRATCH0 @Bits 1..7 : scratch register, only cleared by POR */
  #define ERRLOG_SCRATCH0_SCRATCH0_Pos (1UL)         /*!< Position of SCRATCH0 field.                                          */
  #define ERRLOG_SCRATCH0_SCRATCH0_Msk (0x7FUL << ERRLOG_SCRATCH0_SCRATCH0_Pos) /*!< Bit mask of SCRATCH0 field.               */


/* ERRLOG_SCRATCH1: Scratch register 1 */
  #define ERRLOG_SCRATCH1_ResetValue (0x00UL)        /*!< Reset value of SCRATCH1 register.                                    */

/* SCRATCH1 @Bits 0..7 : scratch register, only cleared by POR */
  #define ERRLOG_SCRATCH1_SCRATCH1_Pos (0UL)         /*!< Position of SCRATCH1 field.                                          */
  #define ERRLOG_SCRATCH1_SCRATCH1_Msk (0xFFUL << ERRLOG_SCRATCH1_SCRATCH1_Pos) /*!< Bit mask of SCRATCH1 field.               */


/* ERRLOG_RSTCAUSE: Error log for internal reset causes. Cleared withTASK_CLR_ERRLOG */
  #define ERRLOG_RSTCAUSE_ResetValue (0x00UL)        /*!< Reset value of RSTCAUSE register.                                    */

/* SHIPMODEEXIT @Bit 0 : internal reset caused by shipmode exit */
  #define ERRLOG_RSTCAUSE_SHIPMODEEXIT_Pos (0UL)     /*!< Position of SHIPMODEEXIT field.                                      */
  #define ERRLOG_RSTCAUSE_SHIPMODEEXIT_Msk (0x1UL << ERRLOG_RSTCAUSE_SHIPMODEEXIT_Pos) /*!< Bit mask of SHIPMODEEXIT field.    */
  #define ERRLOG_RSTCAUSE_SHIPMODEEXIT_Min (0x0UL)   /*!< Min enumerator value of SHIPMODEEXIT field.                          */
  #define ERRLOG_RSTCAUSE_SHIPMODEEXIT_Max (0x1UL)   /*!< Max enumerator value of SHIPMODEEXIT field.                          */
  #define ERRLOG_RSTCAUSE_SHIPMODEEXIT_NORST (0x0UL) /*!< no shipmode reset                                                    */
  #define ERRLOG_RSTCAUSE_SHIPMODEEXIT_RST (0x1UL)   /*!< reset activated by shipmode exit                                     */

/* BOOTMONITORTIMEOUT @Bit 1 : internal reset caused by boot monitor timeout */
  #define ERRLOG_RSTCAUSE_BOOTMONITORTIMEOUT_Pos (1UL) /*!< Position of BOOTMONITORTIMEOUT field.                              */
  #define ERRLOG_RSTCAUSE_BOOTMONITORTIMEOUT_Msk (0x1UL << ERRLOG_RSTCAUSE_BOOTMONITORTIMEOUT_Pos) /*!< Bit mask of
                                                                            BOOTMONITORTIMEOUT field.*/                           
  #define ERRLOG_RSTCAUSE_BOOTMONITORTIMEOUT_Min (0x0UL) /*!< Min enumerator value of BOOTMONITORTIMEOUT field.                */
  #define ERRLOG_RSTCAUSE_BOOTMONITORTIMEOUT_Max (0x1UL) /*!< Max enumerator value of BOOTMONITORTIMEOUT field.                */
  #define ERRLOG_RSTCAUSE_BOOTMONITORTIMEOUT_NORST (0x0UL) /*!< no bootMonitor reset                                           */
  #define ERRLOG_RSTCAUSE_BOOTMONITORTIMEOUT_RST (0x1UL) /*!< reset activated by bootMonitor                                   */

/* WATCHDOGTIMEOUT @Bit 2 : internal reset caused by watchdog timeout */
  #define ERRLOG_RSTCAUSE_WATCHDOGTIMEOUT_Pos (2UL)  /*!< Position of WATCHDOGTIMEOUT field.                                   */
  #define ERRLOG_RSTCAUSE_WATCHDOGTIMEOUT_Msk (0x1UL << ERRLOG_RSTCAUSE_WATCHDOGTIMEOUT_Pos) /*!< Bit mask of WATCHDOGTIMEOUT
                                                                            field.*/                                              
  #define ERRLOG_RSTCAUSE_WATCHDOGTIMEOUT_Min (0x0UL) /*!< Min enumerator value of WATCHDOGTIMEOUT field.                      */
  #define ERRLOG_RSTCAUSE_WATCHDOGTIMEOUT_Max (0x1UL) /*!< Max enumerator value of WATCHDOGTIMEOUT field.                      */
  #define ERRLOG_RSTCAUSE_WATCHDOGTIMEOUT_NORST (0x0UL) /*!< no watchdog reset                                                 */
  #define ERRLOG_RSTCAUSE_WATCHDOGTIMEOUT_RST (0x1UL) /*!< reset activated by watchdog                                         */

/* LONGPRESSTIMEOUT @Bit 3 : internal reset caused by shphld long press */
  #define ERRLOG_RSTCAUSE_LONGPRESSTIMEOUT_Pos (3UL) /*!< Position of LONGPRESSTIMEOUT field.                                  */
  #define ERRLOG_RSTCAUSE_LONGPRESSTIMEOUT_Msk (0x1UL << ERRLOG_RSTCAUSE_LONGPRESSTIMEOUT_Pos) /*!< Bit mask of LONGPRESSTIMEOUT
                                                                            field.*/                                              
  #define ERRLOG_RSTCAUSE_LONGPRESSTIMEOUT_Min (0x0UL) /*!< Min enumerator value of LONGPRESSTIMEOUT field.                    */
  #define ERRLOG_RSTCAUSE_LONGPRESSTIMEOUT_Max (0x1UL) /*!< Max enumerator value of LONGPRESSTIMEOUT field.                    */
  #define ERRLOG_RSTCAUSE_LONGPRESSTIMEOUT_NORST (0x0UL) /*!< no long press reset                                              */
  #define ERRLOG_RSTCAUSE_LONGPRESSTIMEOUT_RST (0x1UL) /*!< reset activated by long press                                      */

/* THERMALSHUTDOWN @Bit 4 : internal reset caused by TSD */
  #define ERRLOG_RSTCAUSE_THERMALSHUTDOWN_Pos (4UL)  /*!< Position of THERMALSHUTDOWN field.                                   */
  #define ERRLOG_RSTCAUSE_THERMALSHUTDOWN_Msk (0x1UL << ERRLOG_RSTCAUSE_THERMALSHUTDOWN_Pos) /*!< Bit mask of THERMALSHUTDOWN
                                                                            field.*/                                              
  #define ERRLOG_RSTCAUSE_THERMALSHUTDOWN_Min (0x0UL) /*!< Min enumerator value of THERMALSHUTDOWN field.                      */
  #define ERRLOG_RSTCAUSE_THERMALSHUTDOWN_Max (0x1UL) /*!< Max enumerator value of THERMALSHUTDOWN field.                      */
  #define ERRLOG_RSTCAUSE_THERMALSHUTDOWN_NORST (0x0UL) /*!< no TSD reset                                                      */
  #define ERRLOG_RSTCAUSE_THERMALSHUTDOWN_RST (0x1UL) /*!< reset activated by TSD                                              */

/* VSYSLOW @Bit 5 : internal reset caused by POF, VSYS low */
  #define ERRLOG_RSTCAUSE_VSYSLOW_Pos (5UL)          /*!< Position of VSYSLOW field.                                           */
  #define ERRLOG_RSTCAUSE_VSYSLOW_Msk (0x1UL << ERRLOG_RSTCAUSE_VSYSLOW_Pos) /*!< Bit mask of VSYSLOW field.                   */
  #define ERRLOG_RSTCAUSE_VSYSLOW_Min (0x0UL)        /*!< Min enumerator value of VSYSLOW field.                               */
  #define ERRLOG_RSTCAUSE_VSYSLOW_Max (0x1UL)        /*!< Max enumerator value of VSYSLOW field.                               */
  #define ERRLOG_RSTCAUSE_VSYSLOW_NORST (0x0UL)      /*!< no VSYS low reset                                                    */
  #define ERRLOG_RSTCAUSE_VSYSLOW_RST (0x1UL)        /*!< reset activated by VSYS low                                          */

/* SWRESET @Bit 6 : internal reset caused by soft reset */
  #define ERRLOG_RSTCAUSE_SWRESET_Pos (6UL)          /*!< Position of SWRESET field.                                           */
  #define ERRLOG_RSTCAUSE_SWRESET_Msk (0x1UL << ERRLOG_RSTCAUSE_SWRESET_Pos) /*!< Bit mask of SWRESET field.                   */
  #define ERRLOG_RSTCAUSE_SWRESET_Min (0x0UL)        /*!< Min enumerator value of SWRESET field.                               */
  #define ERRLOG_RSTCAUSE_SWRESET_Max (0x1UL)        /*!< Max enumerator value of SWRESET field.                               */
  #define ERRLOG_RSTCAUSE_SWRESET_NORST (0x0UL)      /*!< no s/w reset                                                         */
  #define ERRLOG_RSTCAUSE_SWRESET_RST (0x1UL)        /*!< reset activated by s/w reset                                         */


/* ERRLOG_CHARGERERRREASON: Error log for slowDomain. Cleared with TASK_CLR_ERRLOG */
  #define ERRLOG_CHARGERERRREASON_ResetValue (0x00UL) /*!< Reset value of CHARGERERRREASON register.                           */

/* NTCSENSORERR @Bit 0 : NTC sensor error */
  #define ERRLOG_CHARGERERRREASON_NTCSENSORERR_Pos (0UL) /*!< Position of NTCSENSORERR field.                                  */
  #define ERRLOG_CHARGERERRREASON_NTCSENSORERR_Msk (0x1UL << ERRLOG_CHARGERERRREASON_NTCSENSORERR_Pos) /*!< Bit mask of
                                                                            NTCSENSORERR field.*/                                 

/* VBATSENSORERR @Bit 1 : VBAT Sensor Error */
  #define ERRLOG_CHARGERERRREASON_VBATSENSORERR_Pos (1UL) /*!< Position of VBATSENSORERR field.                                */
  #define ERRLOG_CHARGERERRREASON_VBATSENSORERR_Msk (0x1UL << ERRLOG_CHARGERERRREASON_VBATSENSORERR_Pos) /*!< Bit mask of
                                                                            VBATSENSORERR field.*/                                

/* VBATLOW @Bit 2 : VBAT Low Error */
  #define ERRLOG_CHARGERERRREASON_VBATLOW_Pos (2UL)  /*!< Position of VBATLOW field.                                           */
  #define ERRLOG_CHARGERERRREASON_VBATLOW_Msk (0x1UL << ERRLOG_CHARGERERRREASON_VBATLOW_Pos) /*!< Bit mask of VBATLOW field.   */

/* VTRICKLE @Bit 3 : Vtrickle Error */
  #define ERRLOG_CHARGERERRREASON_VTRICKLE_Pos (3UL) /*!< Position of VTRICKLE field.                                          */
  #define ERRLOG_CHARGERERRREASON_VTRICKLE_Msk (0x1UL << ERRLOG_CHARGERERRREASON_VTRICKLE_Pos) /*!< Bit mask of VTRICKLE field.*/

/* MEASTIMEOUT @Bit 4 : Measurement Timeout Error */
  #define ERRLOG_CHARGERERRREASON_MEASTIMEOUT_Pos (4UL) /*!< Position of MEASTIMEOUT field.                                    */
  #define ERRLOG_CHARGERERRREASON_MEASTIMEOUT_Msk (0x1UL << ERRLOG_CHARGERERRREASON_MEASTIMEOUT_Pos) /*!< Bit mask of
                                                                            MEASTIMEOUT field.*/                                  

/* CHARGETIMEOUT @Bit 5 : Charge Timeout Error */
  #define ERRLOG_CHARGERERRREASON_CHARGETIMEOUT_Pos (5UL) /*!< Position of CHARGETIMEOUT field.                                */
  #define ERRLOG_CHARGERERRREASON_CHARGETIMEOUT_Msk (0x1UL << ERRLOG_CHARGERERRREASON_CHARGETIMEOUT_Pos) /*!< Bit mask of
                                                                            CHARGETIMEOUT field.*/                                

/* TRICKLETIMEOUT @Bit 6 : Trickle Timeout Error */
  #define ERRLOG_CHARGERERRREASON_TRICKLETIMEOUT_Pos (6UL) /*!< Position of TRICKLETIMEOUT field.                              */
  #define ERRLOG_CHARGERERRREASON_TRICKLETIMEOUT_Msk (0x1UL << ERRLOG_CHARGERERRREASON_TRICKLETIMEOUT_Pos) /*!< Bit mask of
                                                                            TRICKLETIMEOUT field.*/                               


/* ERRLOG_CHARGERERRSENSOR: Bcharger Fsm sensor error. Cleared with TASK_CLR_ERRLOG */
  #define ERRLOG_CHARGERERRSENSOR_ResetValue (0x00UL) /*!< Reset value of CHARGERERRSENSOR register.                           */

/* SENSORNTCCOLD @Bit 0 : Ntc Cold sensor value during error */
  #define ERRLOG_CHARGERERRSENSOR_SENSORNTCCOLD_Pos (0UL) /*!< Position of SENSORNTCCOLD field.                                */
  #define ERRLOG_CHARGERERRSENSOR_SENSORNTCCOLD_Msk (0x1UL << ERRLOG_CHARGERERRSENSOR_SENSORNTCCOLD_Pos) /*!< Bit mask of
                                                                            SENSORNTCCOLD field.*/                                

/* SENSORNTCCOOL @Bit 1 : Ntc Cool sensor value during error */
  #define ERRLOG_CHARGERERRSENSOR_SENSORNTCCOOL_Pos (1UL) /*!< Position of SENSORNTCCOOL field.                                */
  #define ERRLOG_CHARGERERRSENSOR_SENSORNTCCOOL_Msk (0x1UL << ERRLOG_CHARGERERRSENSOR_SENSORNTCCOOL_Pos) /*!< Bit mask of
                                                                            SENSORNTCCOOL field.*/                                

/* SENSORNTCWARM @Bit 2 : Ntc Warm sensor value during error */
  #define ERRLOG_CHARGERERRSENSOR_SENSORNTCWARM_Pos (2UL) /*!< Position of SENSORNTCWARM field.                                */
  #define ERRLOG_CHARGERERRSENSOR_SENSORNTCWARM_Msk (0x1UL << ERRLOG_CHARGERERRSENSOR_SENSORNTCWARM_Pos) /*!< Bit mask of
                                                                            SENSORNTCWARM field.*/                                

/* SENSORNTCHOT @Bit 3 : Ntc Hot sensor value during error */
  #define ERRLOG_CHARGERERRSENSOR_SENSORNTCHOT_Pos (3UL) /*!< Position of SENSORNTCHOT field.                                  */
  #define ERRLOG_CHARGERERRSENSOR_SENSORNTCHOT_Msk (0x1UL << ERRLOG_CHARGERERRSENSOR_SENSORNTCHOT_Pos) /*!< Bit mask of
                                                                            SENSORNTCHOT field.*/                                 

/* SENSORVTERM @Bit 4 : Vterm sensor value during error */
  #define ERRLOG_CHARGERERRSENSOR_SENSORVTERM_Pos (4UL) /*!< Position of SENSORVTERM field.                                    */
  #define ERRLOG_CHARGERERRSENSOR_SENSORVTERM_Msk (0x1UL << ERRLOG_CHARGERERRSENSOR_SENSORVTERM_Pos) /*!< Bit mask of
                                                                            SENSORVTERM field.*/                                  

/* SENSORRECHARGE @Bit 5 : Recharge sensor value during error */
  #define ERRLOG_CHARGERERRSENSOR_SENSORRECHARGE_Pos (5UL) /*!< Position of SENSORRECHARGE field.                              */
  #define ERRLOG_CHARGERERRSENSOR_SENSORRECHARGE_Msk (0x1UL << ERRLOG_CHARGERERRSENSOR_SENSORRECHARGE_Pos) /*!< Bit mask of
                                                                            SENSORRECHARGE field.*/                               

/* SENSORVTRICKLE @Bit 6 : Vtrickle sensor value during error */
  #define ERRLOG_CHARGERERRSENSOR_SENSORVTRICKLE_Pos (6UL) /*!< Position of SENSORVTRICKLE field.                              */
  #define ERRLOG_CHARGERERRSENSOR_SENSORVTRICKLE_Msk (0x1UL << ERRLOG_CHARGERERRSENSOR_SENSORVTRICKLE_Pos) /*!< Bit mask of
                                                                            SENSORVTRICKLE field.*/                               

/* SENSORVBATLOW @Bit 7 : VbatLow sensor value during error */
  #define ERRLOG_CHARGERERRSENSOR_SENSORVBATLOW_Pos (7UL) /*!< Position of SENSORVBATLOW field.                                */
  #define ERRLOG_CHARGERERRSENSOR_SENSORVBATLOW_Msk (0x1UL << ERRLOG_CHARGERERRSENSOR_SENSORVBATLOW_Pos) /*!< Bit mask of
                                                                            SENSORVBATLOW field.*/                                


/* ERRLOG_CHARGERSTATE: Current Bcharger state Cleared with TASK_CLR_ERRLOG */
  #define ERRLOG_CHARGERSTATE_ResetValue (0x00UL)    /*!< Reset value of CHARGERSTATE register.                                */

/* CURRENTCHARGERSTATE @Bits 0..4 : state value */
  #define ERRLOG_CHARGERSTATE_CURRENTCHARGERSTATE_Pos (0UL) /*!< Position of CURRENTCHARGERSTATE field.                        */
  #define ERRLOG_CHARGERSTATE_CURRENTCHARGERSTATE_Msk (0x1FUL << ERRLOG_CHARGERSTATE_CURRENTCHARGERSTATE_Pos) /*!< Bit mask of
                                                                            CURRENTCHARGERSTATE field.*/                          


/* ERRLOG_CHARGERPREVSTATE0: Previous Bcharger state Cleared with TASK_CLR_ERRLOG */
  #define ERRLOG_CHARGERPREVSTATE0_ResetValue (0x00UL) /*!< Reset value of CHARGERPREVSTATE0 register.                         */

/* PREVIOUSCHARGERSTATE0 @Bits 0..4 : state value */
  #define ERRLOG_CHARGERPREVSTATE0_PREVIOUSCHARGERSTATE0_Pos (0UL) /*!< Position of PREVIOUSCHARGERSTATE0 field.               */
  #define ERRLOG_CHARGERPREVSTATE0_PREVIOUSCHARGERSTATE0_Msk (0x1FUL << ERRLOG_CHARGERPREVSTATE0_PREVIOUSCHARGERSTATE0_Pos) /*!<
                                                                            Bit mask of PREVIOUSCHARGERSTATE0 field.*/            


/* ERRLOG_CHARGERPREVSTATE1: Previous Bcharger state 1 Cleared with TASK_CLR_ERRLOG */
  #define ERRLOG_CHARGERPREVSTATE1_ResetValue (0x00UL) /*!< Reset value of CHARGERPREVSTATE1 register.                         */

/* PREVIOUSCHARGERSTATE1 @Bits 0..4 : state value */
  #define ERRLOG_CHARGERPREVSTATE1_PREVIOUSCHARGERSTATE1_Pos (0UL) /*!< Position of PREVIOUSCHARGERSTATE1 field.               */
  #define ERRLOG_CHARGERPREVSTATE1_PREVIOUSCHARGERSTATE1_Msk (0x1FUL << ERRLOG_CHARGERPREVSTATE1_PREVIOUSCHARGERSTATE1_Pos) /*!<
                                                                            Bit mask of PREVIOUSCHARGERSTATE1 field.*/            


/* ERRLOG_CHARGERPREVSTATE2: Previous Bcharger state 2 Cleared with TASK_CLR_ERRLOG */
  #define ERRLOG_CHARGERPREVSTATE2_ResetValue (0x00UL) /*!< Reset value of CHARGERPREVSTATE2 register.                         */

/* PREVIOUSCHARGERSTATE2 @Bits 0..4 : state value */
  #define ERRLOG_CHARGERPREVSTATE2_PREVIOUSCHARGERSTATE2_Pos (0UL) /*!< Position of PREVIOUSCHARGERSTATE2 field.               */
  #define ERRLOG_CHARGERPREVSTATE2_PREVIOUSCHARGERSTATE2_Msk (0x1FUL << ERRLOG_CHARGERPREVSTATE2_PREVIOUSCHARGERSTATE2_Pos) /*!<
                                                                            Bit mask of PREVIOUSCHARGERSTATE2 field.*/            


/* ERRLOG_CHARGERPREVSTATE3: Previous Bcharger state 3 Cleared with TASK_CLR_ERRLOG */
  #define ERRLOG_CHARGERPREVSTATE3_ResetValue (0x00UL) /*!< Reset value of CHARGERPREVSTATE3 register.                         */

/* PREVIOUSCHARGERSTATE3 @Bits 0..4 : state value */
  #define ERRLOG_CHARGERPREVSTATE3_PREVIOUSCHARGERSTATE3_Pos (0UL) /*!< Position of PREVIOUSCHARGERSTATE3 field.               */
  #define ERRLOG_CHARGERPREVSTATE3_PREVIOUSCHARGERSTATE3_Msk (0x1FUL << ERRLOG_CHARGERPREVSTATE3_PREVIOUSCHARGERSTATE3_Pos) /*!<
                                                                            Bit mask of PREVIOUSCHARGERSTATE3 field.*/            



/* =========================================================================================================================== */
/* ================                                           FICR                                           ================ */
/* =========================================================================================================================== */

/* ======================================================= Struct FICR ======================================================= */
/**
  * @brief FICR register map
  */
typedef struct {                                     /*!< FICR Structure                                                       */
  __IM  uint8_t   ADCSPARECTRLOTP;                   /*!< (@ 0x00000000) ADC Spare Control register                            */
  __IM  uint8_t   ADCTRIMR110KOTP;                   /*!< (@ 0x00000001) ADC Resistor string TRIM for 10K                      */
  __IM  uint8_t   ADCTRIMR247KOTP;                   /*!< (@ 0x00000002) ADC Resistor string TRIM for 47K                      */
  __IM  uint8_t   ADCTRIMR3100KOTP;                  /*!< (@ 0x00000003) ADC Resistor string TRIM for 100K                     */
  __IM  uint8_t   ADCTRIMGAINOTP;                    /*!< (@ 0x00000004) ADC Gain TRIM                                         */
  __IM  uint8_t   BCHGHYSSELOTP;                     /*!< (@ 0x00000005) VSYSVBAT hysteresis select                            */
  __IM  uint8_t   BCHGTRIM0OTP;                      /*!< (@ 0x00000006) VTERM_TRIM                                            */
  __IM  uint8_t   BCHGTRIM1OTP;                      /*!< (@ 0x00000007) ILIMBATVOS_TRIM                                       */
  __IM  uint8_t   BCHGTRIM2OTP;                      /*!< (@ 0x00000008) ILIMBATREF_TRIM                                       */
  __IM  uint8_t   BCHGTRIM3OTP;                      /*!< (@ 0x00000009) BCHARGER_DROPOUT_TRIM                                 */
  __IM  uint8_t   BCHGTRIM4OTP;                      /*!< (@ 0x0000000A) BCHARGER_ICHARGING_TRIM                               */
  __IM  uint8_t   BCHGTRIM5OTP;                      /*!< (@ 0x0000000B) VSYSVBAT_TRIM                                         */
  __IM  uint8_t   BCHGSPARECTRLOTP;                  /*!< (@ 0x0000000C) BCHARGER _SPARE                                       */
  __IM  uint8_t   BCHGISETBATSOURCEOTP;              /*!< (@ 0x0000000D) Bcharger Iset Battery Source                          */
  __IM  uint8_t   BCHGDEBUGOTP;                      /*!< (@ 0x0000000E) Charger-FSM debug                                     */
  __IM  uint8_t   BCHGDELAYSELOTP;                   /*!< (@ 0x0000000F) Charger-FSM Delay Select                              */
  __IM  uint8_t   BCHGSUPPLEMENTDELAYOTP;            /*!< (@ 0x00000010) Charger-FSM supplement delay select                   */
  __IM  uint8_t   BCHGFGTRIM0OTP;                    /*!< (@ 0x00000011) FUEL GAUGE TRIM0                                      */
  __IM  uint8_t   BCHGFGTRIM1OTP;                    /*!< (@ 0x00000012) FUEL GAUGE TRIM1                                      */
  __IM  uint8_t   BCHGFGTRIM2OTP;                    /*!< (@ 0x00000013) FUEL GAUGE TRIM2                                      */
  __IM  uint8_t   DCDCCTRL2OTP;                      /*!< (@ 0x00000014) DCDC common slew control                              */
  __IM  uint8_t   DCDC1FICR0OTP;                     /*!< (@ 0x00000015) DCDC1 OTP Config0                                     */
  __IM  uint8_t   DCDC1FICR1OTP;                     /*!< (@ 0x00000016) DCDC1 OTP Config1                                     */
  __IM  uint8_t   DCDC2FICR0OTP;                     /*!< (@ 0x00000017) DCDC2 OTP Config0                                     */
  __IM  uint8_t   DCDC2FICR1OTP;                     /*!< (@ 0x00000018) DCDC2 OTP Config1                                     */
  __IM  uint8_t   DCDCFICRSPAREOTP;                  /*!< (@ 0x00000019) DCDC OTP Spare                                        */
  __IM  uint8_t   DCDC1CLKGENTRMOTP;                 /*!< (@ 0x0000001A) DCDC1 ClkGen TRIM                                     */
  __IM  uint8_t   DCDC2CLKGENTRMOTP;                 /*!< (@ 0x0000001B) DCDC2 ClkGen TRIM                                     */
  __IM  uint8_t   DCDC1TRM0OTP;                      /*!< (@ 0x0000001C) DCDC1 VOUT_ULP TRIM                                   */
  __IM  uint8_t   DCDC1TRM1OTP;                      /*!< (@ 0x0000001D) DCDC1_ULP_FEEDBACK_TRM                                */
  __IM  uint8_t   DCDC1TRM2OTP;                      /*!< (@ 0x0000001E) DCDC1_VREF_TRM                                        */
  __IM  uint8_t   DCDC1TRM3OTP;                      /*!< (@ 0x0000001F) DCDC1 OFFSET and VHYST TRIM                           */
  __IM  uint8_t   DCDC1TRM4OTP;                      /*!< (@ 0x00000020) DCDC1 IBNS and EACLAMP HSLIM TRIM                     */
  __IM  uint8_t   DCDC2TRM0OTP;                      /*!< (@ 0x00000021) DCDC2 VOUT_ULP TRIM                                   */
  __IM  uint8_t   DCDC2TRM1OTP;                      /*!< (@ 0x00000022) DCDC2_ULP_FEEDBACK_TRM                                */
  __IM  uint8_t   DCDC2TRM2OTP;                      /*!< (@ 0x00000023) DCDC2_VREF_TRM                                        */
  __IM  uint8_t   DCDC2TRM3OTP;                      /*!< (@ 0x00000024) DCDC2 OFFSET and VHYST TRIM                           */
  __IM  uint8_t   DCDC2TRM4OTP;                      /*!< (@ 0x00000025) DCDC2 IBNS and EACLAMP HSLIM TRIM                     */
  __IM  uint8_t   DCDC1DTEOTP;                       /*!< (@ 0x00000026) Dcdc Digital Testbus Enable                           */
  __IM  uint8_t   DCDC2DTEOTP;                       /*!< (@ 0x00000027) Dcdc Digital Testbus Enable                           */
  __IM  uint8_t   LDSW1TRIMULPFBCKRESOTP;            /*!< (@ 0x00000028) LDO1 output voltage trimming                          */
  __IM  uint8_t   LDSW2TRIMULPFBCKRESOTP;            /*!< (@ 0x00000029) LDO2 output voltage trimming                          */
  __IM  uint8_t   LEDDRVUSB2MODEOTP;                 /*!< (@ 0x0000002A) Set LED0 and LED1 to be USB2 Detect                   */
  __IM  uint8_t   EXTCKSLOWOTP;                      /*!< (@ 0x0000002B) selects External clock for ckSlow                     */
  __IM  uint8_t   ANACORETRIM0OTP;                   /*!< (@ 0x0000002C) VSYS and POR Comp Trim                                */
  __IM  uint8_t   ANACORETRIM1OTP;                   /*!< (@ 0x0000002D) TEMP Comp Trim                                        */
  __IM  uint8_t   ANACORETRIM2OTP;                   /*!< (@ 0x0000002E) ULPBIAS and OSC4M Trim                                */
  __IM  uint8_t   ANACORETRIM3OTP;                   /*!< (@ 0x0000002F) HPREF Trim                                            */
  __IM  uint8_t   ANACORETRIM4OTP;                   /*!< (@ 0x00000030) Bandgap1V5 Trim                                       */
  __IM  uint8_t   RCOSC1KTRIMOTP;                    /*!< (@ 0x00000031) Rc Osc 1k Res Trim                                    */
  __IM  uint8_t   SPARETRIMOTP;                      /*!< (@ 0x00000032) Spare Trim                                            */
  __IM  uint8_t   SYSCONFIGOTP;                      /*!< (@ 0x00000033) Generic Configuration                                 */
  __IM  uint8_t   SYSDELAYSELOTP;                    /*!< (@ 0x00000034) Timer Delay Select                                    */
  __IM  uint8_t   USBCDETRPDTRIMOTP;                 /*!< (@ 0x00000035) USBC Detector RPD Trim                                */
  __IM  uint8_t   USBCDETIREFTRIMOTP;                /*!< (@ 0x00000036) USBC Detector IREF Trim                               */
  __IM  uint8_t   TWIFILTCONFIGOTP;                  /*!< (@ 0x00000037) TWI Filter Configuration                              */
  __IM  uint8_t   SAMPLEDVREFCONFIGOTP;              /*!< (@ 0x00000038) Sampled VREF Configuration                            */
  __IM  uint8_t   HIDDENLABELOTP;                    /*!< (@ 0x00000039) Hidden Label                                          */
  __IM  uint8_t   TIMERCONFIG1OTP;                   /*!< (@ 0x0000003A) Timer Configuration 1                                 */
  __IM  uint8_t   VBUSINILIM0OTP;                    /*!< (@ 0x0000003B) Select Input Current limit for VBUS                   */
  __IM  uint8_t   VBUSINILIMSTARTUPOTP;              /*!< (@ 0x0000003C) Select input Current limit for VBUS at Startup        */
  __IM  uint8_t   VBUSINADJUSTILIMOTP;               /*!< (@ 0x0000003D) ILIM adjustments                                      */
  __IM  uint8_t   ILIMH5V0ILIMTRIM0OTP;              /*!< (@ 0x0000003E) Ilimh5V0 ILIM Trim0                                   */
  __IM  uint8_t   ILIMH5V0ILIMTRIM1OTP;              /*!< (@ 0x0000003F) Ilimh5V0 ILIM Trim1                                   */
  __IM  uint8_t   ILIMH5V0ILIMTRIM2OTP;              /*!< (@ 0x00000040) Ilimh5V0 ILIM Trim2                                   */
  __IM  uint8_t   VSYSVBATHIGHTRIMOTP;               /*!< (@ 0x00000041) VSYS_HIGH and VBAT_HIGH Trim                          */
  __IM  uint8_t   ILIMH5V0OVERVOLTAGETRIMOTP;        /*!< (@ 0x00000042) Ilimh5V0 overvoltage theshold Trim                    */
  __IM  uint8_t   ILIMH5V0OTA1OFFSETTRIMOTP;         /*!< (@ 0x00000043) Ilimh5V0 ota1 offset Trim                             */
  __IM  uint8_t   ILIMH5V0CONFIG0OTP;                /*!< (@ 0x00000044) Ilimh5V0 configuration 0                              */
  __IM  uint8_t   ILIMH5V0CONFIG1OTP;                /*!< (@ 0x00000045) Ilim5V0 Configuration 1                               */
  __IM  uint8_t   ILIMH5V0CTRLOTP;                   /*!< (@ 0x00000046) Ilim5V0 Control                                       */
  __IM  uint8_t   REV0OTP;                           /*!< (@ 0x00000047) Production SW revision                                */
  __IM  uint8_t   REV1OTP;                           /*!< (@ 0x00000048) Production SW revision                                */
  __IM  uint8_t   REV2OTP;                           /*!< (@ 0x00000049) Production SW revision                                */
  __IM  uint8_t   LOTID0OTP;                         /*!< (@ 0x0000004A) Wafer Lot ID                                          */
  __IM  uint8_t   LOTID1OTP;                         /*!< (@ 0x0000004B) Wafer Lot ID                                          */
  __IM  uint8_t   LOTID2OTP;                         /*!< (@ 0x0000004C) Wafer Lot ID                                          */
  __IM  uint8_t   LOTID3OTP;                         /*!< (@ 0x0000004D) Wafer Lot ID                                          */
  __IM  uint8_t   LOTID4OTP;                         /*!< (@ 0x0000004E) Wafer Lot ID                                          */
  __IM  uint8_t   LOTID5OTP;                         /*!< (@ 0x0000004F) Wafer Lot ID                                          */
  __IM  uint8_t   WAFEROTP;                          /*!< (@ 0x00000050) Wafer                                                 */
  __IM  uint8_t   XCOORDOTP;                         /*!< (@ 0x00000051) Wafer X coordinate                                    */
  __IM  uint8_t   YCOORDOTP;                         /*!< (@ 0x00000052) Wafer Y coordinate                                    */
  __IM  uint8_t   OTPSTATUSOTP;                      /*!< (@ 0x00000053) OTP memory status                                     */
} __PACKED NPM_FICR_Type;                            /*!< Size = 84 (0x054)                                                    */

/* FICR_ADCSPARECTRLOTP: ADC Spare Control register */
  #define FICR_ADCSPARECTRLOTP_ResetValue (0x00UL)   /*!< Reset value of ADCSPARECTRLOTP register.                             */

/* ADCSPARECTRL @Bits 0..3 : ADC spare control register */
  #define FICR_ADCSPARECTRLOTP_ADCSPARECTRL_Pos (0UL) /*!< Position of ADCSPARECTRL field.                                     */
  #define FICR_ADCSPARECTRLOTP_ADCSPARECTRL_Msk (0xFUL << FICR_ADCSPARECTRLOTP_ADCSPARECTRL_Pos) /*!< Bit mask of ADCSPARECTRL
                                                                            field.*/                                              


/* FICR_ADCTRIMR110KOTP: ADC Resistor string TRIM for 10K */
  #define FICR_ADCTRIMR110KOTP_ResetValue (0x00UL)   /*!< Reset value of ADCTRIMR110KOTP register.                             */

/* ADCTRIMR10K @Bits 0..4 : ADC Resistor string TRIM for 10K */
  #define FICR_ADCTRIMR110KOTP_ADCTRIMR10K_Pos (0UL) /*!< Position of ADCTRIMR10K field.                                       */
  #define FICR_ADCTRIMR110KOTP_ADCTRIMR10K_Msk (0x1FUL << FICR_ADCTRIMR110KOTP_ADCTRIMR10K_Pos) /*!< Bit mask of ADCTRIMR10K
                                                                            field.*/                                              


/* FICR_ADCTRIMR247KOTP: ADC Resistor string TRIM for 47K */
  #define FICR_ADCTRIMR247KOTP_ResetValue (0x00UL)   /*!< Reset value of ADCTRIMR247KOTP register.                             */

/* ADCTRIMR47K @Bits 0..4 : ADC Resistor string TRIM for 47K */
  #define FICR_ADCTRIMR247KOTP_ADCTRIMR47K_Pos (0UL) /*!< Position of ADCTRIMR47K field.                                       */
  #define FICR_ADCTRIMR247KOTP_ADCTRIMR47K_Msk (0x1FUL << FICR_ADCTRIMR247KOTP_ADCTRIMR47K_Pos) /*!< Bit mask of ADCTRIMR47K
                                                                            field.*/                                              


/* FICR_ADCTRIMR3100KOTP: ADC Resistor string TRIM for 100K */
  #define FICR_ADCTRIMR3100KOTP_ResetValue (0x00UL)  /*!< Reset value of ADCTRIMR3100KOTP register.                            */

/* ADCTRIMR100K @Bits 0..4 : ADC Resistor string TRIM for 100K */
  #define FICR_ADCTRIMR3100KOTP_ADCTRIMR100K_Pos (0UL) /*!< Position of ADCTRIMR100K field.                                    */
  #define FICR_ADCTRIMR3100KOTP_ADCTRIMR100K_Msk (0x1FUL << FICR_ADCTRIMR3100KOTP_ADCTRIMR100K_Pos) /*!< Bit mask of
                                                                            ADCTRIMR100K field.*/                                 


/* FICR_ADCTRIMGAINOTP: ADC Gain TRIM */
  #define FICR_ADCTRIMGAINOTP_ResetValue (0x00UL)    /*!< Reset value of ADCTRIMGAINOTP register.                              */

/* ADCTRIMGAIN @Bits 0..5 : ADC GAIN TRIM */
  #define FICR_ADCTRIMGAINOTP_ADCTRIMGAIN_Pos (0UL)  /*!< Position of ADCTRIMGAIN field.                                       */
  #define FICR_ADCTRIMGAINOTP_ADCTRIMGAIN_Msk (0x3FUL << FICR_ADCTRIMGAINOTP_ADCTRIMGAIN_Pos) /*!< Bit mask of ADCTRIMGAIN
                                                                            field.*/                                              


/* FICR_BCHGHYSSELOTP: VSYSVBAT hysteresis select */
  #define FICR_BCHGHYSSELOTP_ResetValue (0x00UL)     /*!< Reset value of BCHGHYSSELOTP register.                               */

/* BCHGVSYSVBATHYSSELOTP @Bit 0 : Hysteresis selection for VSYSVBAT comparator */
  #define FICR_BCHGHYSSELOTP_BCHGVSYSVBATHYSSELOTP_Pos (0UL) /*!< Position of BCHGVSYSVBATHYSSELOTP field.                     */
  #define FICR_BCHGHYSSELOTP_BCHGVSYSVBATHYSSELOTP_Msk (0x1UL << FICR_BCHGHYSSELOTP_BCHGVSYSVBATHYSSELOTP_Pos) /*!< Bit mask of
                                                                            BCHGVSYSVBATHYSSELOTP field.*/                        
  #define FICR_BCHGHYSSELOTP_BCHGVSYSVBATHYSSELOTP_Min (0x0UL) /*!< Min enumerator value of BCHGVSYSVBATHYSSELOTP field.       */
  #define FICR_BCHGHYSSELOTP_BCHGVSYSVBATHYSSELOTP_Max (0x1UL) /*!< Max enumerator value of BCHGVSYSVBATHYSSELOTP field.       */
  #define FICR_BCHGHYSSELOTP_BCHGVSYSVBATHYSSELOTP_SEL0 (0x0UL) /*!< 50mV(default)                                             */
  #define FICR_BCHGHYSSELOTP_BCHGVSYSVBATHYSSELOTP_SEL1 (0x1UL) /*!< 100mV                                                     */


/* FICR_BCHGTRIM0OTP: VTERM_TRIM */
  #define FICR_BCHGTRIM0OTP_ResetValue (0x00UL)      /*!< Reset value of BCHGTRIM0OTP register.                                */

/* BCHGVTERMTRIM @Bits 0..3 : BCHARGER_VTERM_TRIM */
  #define FICR_BCHGTRIM0OTP_BCHGVTERMTRIM_Pos (0UL)  /*!< Position of BCHGVTERMTRIM field.                                     */
  #define FICR_BCHGTRIM0OTP_BCHGVTERMTRIM_Msk (0xFUL << FICR_BCHGTRIM0OTP_BCHGVTERMTRIM_Pos) /*!< Bit mask of BCHGVTERMTRIM
                                                                            field.*/                                              


/* FICR_BCHGTRIM1OTP: ILIMBATVOS_TRIM */
  #define FICR_BCHGTRIM1OTP_ResetValue (0x00UL)      /*!< Reset value of BCHGTRIM1OTP register.                                */

/* BCHGILIMBATVOSTRIM @Bits 0..3 : BCHARGER_ILIMBATVOS_TRIM */
  #define FICR_BCHGTRIM1OTP_BCHGILIMBATVOSTRIM_Pos (0UL) /*!< Position of BCHGILIMBATVOSTRIM field.                            */
  #define FICR_BCHGTRIM1OTP_BCHGILIMBATVOSTRIM_Msk (0xFUL << FICR_BCHGTRIM1OTP_BCHGILIMBATVOSTRIM_Pos) /*!< Bit mask of
                                                                            BCHGILIMBATVOSTRIM field.*/                           


/* FICR_BCHGTRIM2OTP: ILIMBATREF_TRIM */
  #define FICR_BCHGTRIM2OTP_ResetValue (0x00UL)      /*!< Reset value of BCHGTRIM2OTP register.                                */

/* BCHGILIMBATREFTRIM @Bits 0..3 : BCHARGER_ILIMBATREF_TRIM */
  #define FICR_BCHGTRIM2OTP_BCHGILIMBATREFTRIM_Pos (0UL) /*!< Position of BCHGILIMBATREFTRIM field.                            */
  #define FICR_BCHGTRIM2OTP_BCHGILIMBATREFTRIM_Msk (0xFUL << FICR_BCHGTRIM2OTP_BCHGILIMBATREFTRIM_Pos) /*!< Bit mask of
                                                                            BCHGILIMBATREFTRIM field.*/                           


/* FICR_BCHGTRIM3OTP: BCHARGER_DROPOUT_TRIM */
  #define FICR_BCHGTRIM3OTP_ResetValue (0x00UL)      /*!< Reset value of BCHGTRIM3OTP register.                                */

/* BCHGDROPOUTTRIM @Bits 0..4 : BCHARGER_DROPOUT_TRIM */
  #define FICR_BCHGTRIM3OTP_BCHGDROPOUTTRIM_Pos (0UL) /*!< Position of BCHGDROPOUTTRIM field.                                  */
  #define FICR_BCHGTRIM3OTP_BCHGDROPOUTTRIM_Msk (0x1FUL << FICR_BCHGTRIM3OTP_BCHGDROPOUTTRIM_Pos) /*!< Bit mask of
                                                                            BCHGDROPOUTTRIM field.*/                              


/* FICR_BCHGTRIM4OTP: BCHARGER_ICHARGING_TRIM */
  #define FICR_BCHGTRIM4OTP_ResetValue (0x00UL)      /*!< Reset value of BCHGTRIM4OTP register.                                */

/* BCHGICHARGINGTRIM @Bits 0..4 : BCHARGER_ICHARGING_TRIM */
  #define FICR_BCHGTRIM4OTP_BCHGICHARGINGTRIM_Pos (0UL) /*!< Position of BCHGICHARGINGTRIM field.                              */
  #define FICR_BCHGTRIM4OTP_BCHGICHARGINGTRIM_Msk (0x1FUL << FICR_BCHGTRIM4OTP_BCHGICHARGINGTRIM_Pos) /*!< Bit mask of
                                                                            BCHGICHARGINGTRIM field.*/                            


/* FICR_BCHGTRIM5OTP: VSYSVBAT_TRIM */
  #define FICR_BCHGTRIM5OTP_ResetValue (0x00UL)      /*!< Reset value of BCHGTRIM5OTP register.                                */

/* BCHGVSYSVBATTRIM @Bits 0..3 : BCHARGER_VSYSVBAT_TRIM */
  #define FICR_BCHGTRIM5OTP_BCHGVSYSVBATTRIM_Pos (0UL) /*!< Position of BCHGVSYSVBATTRIM field.                                */
  #define FICR_BCHGTRIM5OTP_BCHGVSYSVBATTRIM_Msk (0xFUL << FICR_BCHGTRIM5OTP_BCHGVSYSVBATTRIM_Pos) /*!< Bit mask of
                                                                            BCHGVSYSVBATTRIM field.*/                             


/* FICR_BCHGSPARECTRLOTP: BCHARGER _SPARE */
  #define FICR_BCHGSPARECTRLOTP_ResetValue (0x00UL)  /*!< Reset value of BCHGSPARECTRLOTP register.                            */

/* BCHGSPARECTRL @Bits 0..7 : BCHARGER_SPARE_CTRL */
  #define FICR_BCHGSPARECTRLOTP_BCHGSPARECTRL_Pos (0UL) /*!< Position of BCHGSPARECTRL field.                                  */
  #define FICR_BCHGSPARECTRLOTP_BCHGSPARECTRL_Msk (0xFFUL << FICR_BCHGSPARECTRLOTP_BCHGSPARECTRL_Pos) /*!< Bit mask of
                                                                            BCHGSPARECTRL field.*/                                


/* FICR_BCHGISETBATSOURCEOTP: Bcharger Iset Battery Source */
  #define FICR_BCHGISETBATSOURCEOTP_ResetValue (0x00UL) /*!< Reset value of BCHGISETBATSOURCEOTP register.                     */

/* BCHGISETBATSOURCESEL @Bits 0..1 : Battery source current select */
  #define FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_Pos (0UL) /*!< Position of BCHGISETBATSOURCESEL field.                */
  #define FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_Msk (0x3UL << FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_Pos) /*!<
                                                                            Bit mask of BCHGISETBATSOURCESEL field.*/             
  #define FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_Min (0x0UL) /*!< Min enumerator value of BCHGISETBATSOURCESEL field.  */
  #define FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_Max (0x3UL) /*!< Max enumerator value of BCHGISETBATSOURCESEL field.  */
  #define FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_SEL0 (0x0UL) /*!< 1mA                                                 */
  #define FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_SEL1 (0x1UL) /*!< 4mA                                                 */
  #define FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_SEL2 (0x2UL) /*!< 10mA                                                */
  #define FICR_BCHGISETBATSOURCEOTP_BCHGISETBATSOURCESEL_SEL3 (0x3UL) /*!< 20mA                                                */


/* FICR_BCHGDEBUGOTP: Charger-FSM debug */
  #define FICR_BCHGDEBUGOTP_ResetValue (0x00UL)      /*!< Reset value of BCHGDEBUGOTP register.                                */

/* ENABLEVBATLOWCHARGE @Bit 0 : Enable Vbatlow Charging */
  #define FICR_BCHGDEBUGOTP_ENABLEVBATLOWCHARGE_Pos (0UL) /*!< Position of ENABLEVBATLOWCHARGE field.                          */
  #define FICR_BCHGDEBUGOTP_ENABLEVBATLOWCHARGE_Msk (0x1UL << FICR_BCHGDEBUGOTP_ENABLEVBATLOWCHARGE_Pos) /*!< Bit mask of
                                                                            ENABLEVBATLOWCHARGE field.*/                          

/* DISABLEVSYSHIGH @Bit 1 : Disable Vsys High from DISCHARGE */
  #define FICR_BCHGDEBUGOTP_DISABLEVSYSHIGH_Pos (1UL) /*!< Position of DISABLEVSYSHIGH field.                                  */
  #define FICR_BCHGDEBUGOTP_DISABLEVSYSHIGH_Msk (0x1UL << FICR_BCHGDEBUGOTP_DISABLEVSYSHIGH_Pos) /*!< Bit mask of
                                                                            DISABLEVSYSHIGH field.*/                              

/* DISABLEBATTERYDETECT @Bit 2 : Disable Battery Detection */
  #define FICR_BCHGDEBUGOTP_DISABLEBATTERYDETECT_Pos (2UL) /*!< Position of DISABLEBATTERYDETECT field.                        */
  #define FICR_BCHGDEBUGOTP_DISABLEBATTERYDETECT_Msk (0x1UL << FICR_BCHGDEBUGOTP_DISABLEBATTERYDETECT_Pos) /*!< Bit mask of
                                                                            DISABLEBATTERYDETECT field.*/                         

/* DISABLESUPPLEMENT @Bit 3 : Disable supplement */
  #define FICR_BCHGDEBUGOTP_DISABLESUPPLEMENT_Pos (3UL) /*!< Position of DISABLESUPPLEMENT field.                              */
  #define FICR_BCHGDEBUGOTP_DISABLESUPPLEMENT_Msk (0x1UL << FICR_BCHGDEBUGOTP_DISABLESUPPLEMENT_Pos) /*!< Bit mask of
                                                                            DISABLESUPPLEMENT field.*/                            

/* ENABLESUPPLEMENTDELAY @Bit 4 : Enable COMP_ON to SUPPLEMENT delay. See register BCHARGER_DELAY to adjust value */
  #define FICR_BCHGDEBUGOTP_ENABLESUPPLEMENTDELAY_Pos (4UL) /*!< Position of ENABLESUPPLEMENTDELAY field.                      */
  #define FICR_BCHGDEBUGOTP_ENABLESUPPLEMENTDELAY_Msk (0x1UL << FICR_BCHGDEBUGOTP_ENABLESUPPLEMENTDELAY_Pos) /*!< Bit mask of
                                                                            ENABLESUPPLEMENTDELAY field.*/                        

/* DISABLEASYNCCTRL @Bit 5 : Disable asynchronous Charger Mode ctrl */
  #define FICR_BCHGDEBUGOTP_DISABLEASYNCCTRL_Pos (5UL) /*!< Position of DISABLEASYNCCTRL field.                                */
  #define FICR_BCHGDEBUGOTP_DISABLEASYNCCTRL_Msk (0x1UL << FICR_BCHGDEBUGOTP_DISABLEASYNCCTRL_Pos) /*!< Bit mask of
                                                                            DISABLEASYNCCTRL field.*/                             

/* DISABLESUSPENDMODE @Bit 6 : Disable SuspendMode from Charger */
  #define FICR_BCHGDEBUGOTP_DISABLESUSPENDMODE_Pos (6UL) /*!< Position of DISABLESUSPENDMODE field.                            */
  #define FICR_BCHGDEBUGOTP_DISABLESUSPENDMODE_Msk (0x1UL << FICR_BCHGDEBUGOTP_DISABLESUSPENDMODE_Pos) /*!< Bit mask of
                                                                            DISABLESUSPENDMODE field.*/                           


/* FICR_BCHGDELAYSELOTP: Charger-FSM Delay Select */
  #define FICR_BCHGDELAYSELOTP_ResetValue (0x00UL)   /*!< Reset value of BCHGDELAYSELOTP register.                             */

/* CHARGERDETECTTSEL @Bit 0 : Battery Detection delay select for debugging and testing purpose */
  #define FICR_BCHGDELAYSELOTP_CHARGERDETECTTSEL_Pos (0UL) /*!< Position of CHARGERDETECTTSEL field.                           */
  #define FICR_BCHGDELAYSELOTP_CHARGERDETECTTSEL_Msk (0x1UL << FICR_BCHGDELAYSELOTP_CHARGERDETECTTSEL_Pos) /*!< Bit mask of
                                                                            CHARGERDETECTTSEL field.*/                            
  #define FICR_BCHGDELAYSELOTP_CHARGERDETECTTSEL_Min (0x0UL) /*!< Min enumerator value of CHARGERDETECTTSEL field.             */
  #define FICR_BCHGDELAYSELOTP_CHARGERDETECTTSEL_Max (0x1UL) /*!< Max enumerator value of CHARGERDETECTTSEL field.             */
  #define FICR_BCHGDELAYSELOTP_CHARGERDETECTTSEL_NORMAL (0x0UL) /*!< Normal                                                    */
  #define FICR_BCHGDELAYSELOTP_CHARGERDETECTTSEL_FAST (0x1UL) /*!< Fast                                                        */

/* CHARGERTRICKLETSEL @Bits 1..2 : Charger Trickle Timer timeout select for debugging and testing purpose */
  #define FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_Pos (1UL) /*!< Position of CHARGERTRICKLETSEL field.                         */
  #define FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_Msk (0x3UL << FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_Pos) /*!< Bit mask of
                                                                            CHARGERTRICKLETSEL field.*/                           
  #define FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_Min (0x0UL) /*!< Min enumerator value of CHARGERTRICKLETSEL field.           */
  #define FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_Max (0x3UL) /*!< Max enumerator value of CHARGERTRICKLETSEL field.           */
  #define FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_NORMAL (0x0UL) /*!< Normal                                                   */
  #define FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_FAST (0x1UL) /*!< Fast                                                       */
  #define FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_MEDIUM (0x2UL) /*!< Medium                                                   */
  #define FICR_BCHGDELAYSELOTP_CHARGERTRICKLETSEL_RFU (0x3UL) /*!< Normal                                                      */

/* CHARGERCHARGETSEL @Bits 3..4 : Charger Charge Timer timeout select for debugging and testing purpose */
  #define FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_Pos (3UL) /*!< Position of CHARGERCHARGETSEL field.                           */
  #define FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_Msk (0x3UL << FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_Pos) /*!< Bit mask of
                                                                            CHARGERCHARGETSEL field.*/                            
  #define FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_Min (0x0UL) /*!< Min enumerator value of CHARGERCHARGETSEL field.             */
  #define FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_Max (0x3UL) /*!< Max enumerator value of CHARGERCHARGETSEL field.             */
  #define FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_NORMAL (0x0UL) /*!< Normal                                                    */
  #define FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_FAST (0x1UL) /*!< Fast                                                        */
  #define FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_MEDIUM (0x2UL) /*!< Medium                                                    */
  #define FICR_BCHGDELAYSELOTP_CHARGERCHARGETSEL_RFU (0x3UL) /*!< Normal                                                       */


/* FICR_BCHGSUPPLEMENTDELAYOTP: Charger-FSM supplement delay select */
  #define FICR_BCHGSUPPLEMENTDELAYOTP_ResetValue (0x00UL) /*!< Reset value of BCHGSUPPLEMENTDELAYOTP register.                 */

/* CHARGERSUPPLDELAYTSEL @Bits 0..1 : Charger-FSM supplement delay select */
  #define FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_Pos (0UL) /*!< Position of CHARGERSUPPLDELAYTSEL field.            */
  #define FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_Msk (0x3UL << FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_Pos)
                                                                            /*!< Bit mask of CHARGERSUPPLDELAYTSEL field.*/       
  #define FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_Min (0x0UL) /*!< Min enumerator value of CHARGERSUPPLDELAYTSEL
                                                                            field.*/                                              
  #define FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_Max (0x3UL) /*!< Max enumerator value of CHARGERSUPPLDELAYTSEL
                                                                            field.*/                                              
  #define FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_SEL2U5 (0x0UL) /*!< Select 2.5us delay (default)                   */
  #define FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_SEL4U0 (0x1UL) /*!< Select 4us delay                               */
  #define FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_SEL8U (0x2UL) /*!< Select 8us delay                                */
  #define FICR_BCHGSUPPLEMENTDELAYOTP_CHARGERSUPPLDELAYTSEL_SEL20U (0x3UL) /*!< Select 20us delay                              */


/* FICR_BCHGFGTRIM0OTP: FUEL GAUGE TRIM0 */
  #define FICR_BCHGFGTRIM0OTP_ResetValue (0x00UL)    /*!< Reset value of BCHGFGTRIM0OTP register.                              */

/* BCHGFGTRIM0 @Bits 0..4 : Fuel Gauge OTA offset trim */
  #define FICR_BCHGFGTRIM0OTP_BCHGFGTRIM0_Pos (0UL)  /*!< Position of BCHGFGTRIM0 field.                                       */
  #define FICR_BCHGFGTRIM0OTP_BCHGFGTRIM0_Msk (0x1FUL << FICR_BCHGFGTRIM0OTP_BCHGFGTRIM0_Pos) /*!< Bit mask of BCHGFGTRIM0
                                                                            field.*/                                              


/* FICR_BCHGFGTRIM1OTP: FUEL GAUGE TRIM1 */
  #define FICR_BCHGFGTRIM1OTP_ResetValue (0x00UL)    /*!< Reset value of BCHGFGTRIM1OTP register.                              */

/* BCHGFGTRIM1 @Bits 0..7 : Fuel Gauge resistor trim for Charge mode */
  #define FICR_BCHGFGTRIM1OTP_BCHGFGTRIM1_Pos (0UL)  /*!< Position of BCHGFGTRIM1 field.                                       */
  #define FICR_BCHGFGTRIM1OTP_BCHGFGTRIM1_Msk (0xFFUL << FICR_BCHGFGTRIM1OTP_BCHGFGTRIM1_Pos) /*!< Bit mask of BCHGFGTRIM1
                                                                            field.*/                                              


/* FICR_BCHGFGTRIM2OTP: FUEL GAUGE TRIM2 */
  #define FICR_BCHGFGTRIM2OTP_ResetValue (0x00UL)    /*!< Reset value of BCHGFGTRIM2OTP register.                              */

/* BCHGFGTRIM2 @Bits 0..7 : Fuel Gauge resistor trim for Discharge mode */
  #define FICR_BCHGFGTRIM2OTP_BCHGFGTRIM2_Pos (0UL)  /*!< Position of BCHGFGTRIM2 field.                                       */
  #define FICR_BCHGFGTRIM2OTP_BCHGFGTRIM2_Msk (0xFFUL << FICR_BCHGFGTRIM2OTP_BCHGFGTRIM2_Pos) /*!< Bit mask of BCHGFGTRIM2
                                                                            field.*/                                              


/* FICR_DCDCCTRL2OTP: DCDC common slew control */
  #define FICR_DCDCCTRL2OTP_ResetValue (0x00UL)      /*!< Reset value of DCDCCTRL2OTP register.                                */

/* DCDC1PRGNSLEW @Bits 0..1 : DCDC1_N_Slew rate control */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_Pos (0UL)  /*!< Position of DCDC1PRGNSLEW field.                                     */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_Msk (0x3UL << FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_Pos) /*!< Bit mask of DCDC1PRGNSLEW
                                                                            field.*/                                              
  #define FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_Min (0x0UL) /*!< Min enumerator value of DCDC1PRGNSLEW field.                        */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_Max (0x3UL) /*!< Max enumerator value of DCDC1PRGNSLEW field.                        */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_TBA (0x0UL) /*!< Un used                                                             */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_1V1 (0x1UL) /*!< 1.1V                                                                */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_1V2 (0x2UL) /*!< 1.2V                                                                */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGNSLEW_1V3 (0x3UL) /*!< 1.3V                                                                */

/* DCDC1PRGPSLEW @Bits 2..3 : DCDC1_P_Slew rate control */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_Pos (2UL)  /*!< Position of DCDC1PRGPSLEW field.                                     */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_Msk (0x3UL << FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_Pos) /*!< Bit mask of DCDC1PRGPSLEW
                                                                            field.*/                                              
  #define FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_Min (0x0UL) /*!< Min enumerator value of DCDC1PRGPSLEW field.                        */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_Max (0x3UL) /*!< Max enumerator value of DCDC1PRGPSLEW field.                        */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_TBA (0x0UL) /*!< Un used                                                             */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_1V1 (0x1UL) /*!< 1.1V                                                                */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_1V2 (0x2UL) /*!< 1.2V                                                                */
  #define FICR_DCDCCTRL2OTP_DCDC1PRGPSLEW_1V4 (0x3UL) /*!< 1.4V                                                                */

/* DCDC2PRGNSLEW @Bits 4..5 : DCDCDC2_N_Slew rate control */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_Pos (4UL)  /*!< Position of DCDC2PRGNSLEW field.                                     */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_Msk (0x3UL << FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_Pos) /*!< Bit mask of DCDC2PRGNSLEW
                                                                            field.*/                                              
  #define FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_Min (0x0UL) /*!< Min enumerator value of DCDC2PRGNSLEW field.                        */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_Max (0x3UL) /*!< Max enumerator value of DCDC2PRGNSLEW field.                        */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_TBA (0x0UL) /*!< Un used                                                             */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_1V1 (0x1UL) /*!< 1.1V                                                                */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_1V2 (0x2UL) /*!< 1.2V                                                                */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGNSLEW_1V5 (0x3UL) /*!< 1.5V                                                                */

/* DCDC2PRGPSLEW @Bits 6..7 : DCDCDC2_P_Slew rate control */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_Pos (6UL)  /*!< Position of DCDC2PRGPSLEW field.                                     */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_Msk (0x3UL << FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_Pos) /*!< Bit mask of DCDC2PRGPSLEW
                                                                            field.*/                                              
  #define FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_Min (0x0UL) /*!< Min enumerator value of DCDC2PRGPSLEW field.                        */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_Max (0x3UL) /*!< Max enumerator value of DCDC2PRGPSLEW field.                        */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_TBA (0x0UL) /*!< Un used                                                             */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_1V1 (0x1UL) /*!< 1.1V                                                                */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_1V2 (0x2UL) /*!< 1.2V                                                                */
  #define FICR_DCDCCTRL2OTP_DCDC2PRGPSLEW_1V6 (0x3UL) /*!< 1.6V                                                                */


/* FICR_DCDC1FICR0OTP: DCDC1 OTP Config0 */
  #define FICR_DCDC1FICR0OTP_ResetValue (0x00UL)     /*!< Reset value of DCDC1FICR0OTP register.                               */

/* DCDC1PRGHSLIMHYST @Bits 0..1 : DCDC1_PRG_HSLIM_HYST */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_Pos (0UL) /*!< Position of DCDC1PRGHSLIMHYST field.                             */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_Msk (0x3UL << FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_Pos) /*!< Bit mask of
                                                                            DCDC1PRGHSLIMHYST field.*/                            
  #define FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_Min (0x0UL) /*!< Min enumerator value of DCDC1PRGHSLIMHYST field.               */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_Max (0x3UL) /*!< Max enumerator value of DCDC1PRGHSLIMHYST field.               */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_SEL0 (0x0UL) /*!< Sel0                                                          */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_SEL1 (0x1UL) /*!< Sel1                                                          */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_SEL2 (0x2UL) /*!< Sel2                                                          */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGHSLIMHYST_SEL3 (0x3UL) /*!< Sel3                                                          */

/* DCDC1PRGVHYST @Bit 2 : DCDC1_PRG_VHYST */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGVHYST_Pos (2UL) /*!< Position of DCDC1PRGVHYST field.                                     */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGVHYST_Msk (0x1UL << FICR_DCDC1FICR0OTP_DCDC1PRGVHYST_Pos) /*!< Bit mask of DCDC1PRGVHYST
                                                                            field.*/                                              
  #define FICR_DCDC1FICR0OTP_DCDC1PRGVHYST_Min (0x0UL) /*!< Min enumerator value of DCDC1PRGVHYST field.                       */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGVHYST_Max (0x1UL) /*!< Max enumerator value of DCDC1PRGVHYST field.                       */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGVHYST_LOW (0x0UL) /*!< Low                                                                */
  #define FICR_DCDC1FICR0OTP_DCDC1PRGVHYST_HIGH (0x1UL) /*!< High                                                              */

/* DCDC1BYPASSSFTSTRT @Bit 3 : DCDC1_BYPASS_SFTSTRT */
  #define FICR_DCDC1FICR0OTP_DCDC1BYPASSSFTSTRT_Pos (3UL) /*!< Position of DCDC1BYPASSSFTSTRT field.                           */
  #define FICR_DCDC1FICR0OTP_DCDC1BYPASSSFTSTRT_Msk (0x1UL << FICR_DCDC1FICR0OTP_DCDC1BYPASSSFTSTRT_Pos) /*!< Bit mask of
                                                                            DCDC1BYPASSSFTSTRT field.*/                           
  #define FICR_DCDC1FICR0OTP_DCDC1BYPASSSFTSTRT_Min (0x0UL) /*!< Min enumerator value of DCDC1BYPASSSFTSTRT field.             */
  #define FICR_DCDC1FICR0OTP_DCDC1BYPASSSFTSTRT_Max (0x1UL) /*!< Max enumerator value of DCDC1BYPASSSFTSTRT field.             */
  #define FICR_DCDC1FICR0OTP_DCDC1BYPASSSFTSTRT_LOW (0x0UL) /*!< Low                                                           */
  #define FICR_DCDC1FICR0OTP_DCDC1BYPASSSFTSTRT_HIGH (0x1UL) /*!< High                                                         */

/* DCDC1DISABLEFEEDFORWARD @Bit 4 : DCDC1_DISABLE FEEDFORWARD */
  #define FICR_DCDC1FICR0OTP_DCDC1DISABLEFEEDFORWARD_Pos (4UL) /*!< Position of DCDC1DISABLEFEEDFORWARD field.                 */
  #define FICR_DCDC1FICR0OTP_DCDC1DISABLEFEEDFORWARD_Msk (0x1UL << FICR_DCDC1FICR0OTP_DCDC1DISABLEFEEDFORWARD_Pos) /*!< Bit mask
                                                                            of DCDC1DISABLEFEEDFORWARD field.*/                   
  #define FICR_DCDC1FICR0OTP_DCDC1DISABLEFEEDFORWARD_Min (0x0UL) /*!< Min enumerator value of DCDC1DISABLEFEEDFORWARD field.   */
  #define FICR_DCDC1FICR0OTP_DCDC1DISABLEFEEDFORWARD_Max (0x1UL) /*!< Max enumerator value of DCDC1DISABLEFEEDFORWARD field.   */
  #define FICR_DCDC1FICR0OTP_DCDC1DISABLEFEEDFORWARD_LOW (0x0UL) /*!< Low                                                      */
  #define FICR_DCDC1FICR0OTP_DCDC1DISABLEFEEDFORWARD_HIGH (0x1UL) /*!< High                                                    */

/* DCDC1PWMFILTERHIGHCAP @Bit 5 : DCDC1_PWM_FILTER_HIGHCAP */
  #define FICR_DCDC1FICR0OTP_DCDC1PWMFILTERHIGHCAP_Pos (5UL) /*!< Position of DCDC1PWMFILTERHIGHCAP field.                     */
  #define FICR_DCDC1FICR0OTP_DCDC1PWMFILTERHIGHCAP_Msk (0x1UL << FICR_DCDC1FICR0OTP_DCDC1PWMFILTERHIGHCAP_Pos) /*!< Bit mask of
                                                                            DCDC1PWMFILTERHIGHCAP field.*/                        
  #define FICR_DCDC1FICR0OTP_DCDC1PWMFILTERHIGHCAP_Min (0x0UL) /*!< Min enumerator value of DCDC1PWMFILTERHIGHCAP field.       */
  #define FICR_DCDC1FICR0OTP_DCDC1PWMFILTERHIGHCAP_Max (0x1UL) /*!< Max enumerator value of DCDC1PWMFILTERHIGHCAP field.       */
  #define FICR_DCDC1FICR0OTP_DCDC1PWMFILTERHIGHCAP_LOW (0x0UL) /*!< Low                                                        */
  #define FICR_DCDC1FICR0OTP_DCDC1PWMFILTERHIGHCAP_HIGH (0x1UL) /*!< High                                                      */


/* FICR_DCDC1FICR1OTP: DCDC1 OTP Config1 */
  #define FICR_DCDC1FICR1OTP_ResetValue (0x00UL)     /*!< Reset value of DCDC1FICR1OTP register.                               */

/* DCDC1PRGHSAVG @Bits 0..2 : DCDC1_PRG_HSAVG */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_Pos (0UL) /*!< Position of DCDC1PRGHSAVG field.                                     */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_Msk (0x7UL << FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_Pos) /*!< Bit mask of DCDC1PRGHSAVG
                                                                            field.*/                                              
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_Min (0x0UL) /*!< Min enumerator value of DCDC1PRGHSAVG field.                       */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_Max (0x7UL) /*!< Max enumerator value of DCDC1PRGHSAVG field.                       */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_SEL0 (0x0UL) /*!< Sel0                                                              */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_SEL1 (0x1UL) /*!< Sel1                                                              */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_SEL2 (0x2UL) /*!< Sel2                                                              */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_SEL3 (0x3UL) /*!< Sel3                                                              */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_SEL4 (0x4UL) /*!< Sel4                                                              */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_SEL5 (0x5UL) /*!< Sel5                                                              */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_SEL6 (0x6UL) /*!< Sel6                                                              */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGHSAVG_SEL7 (0x7UL) /*!< Sel7                                                              */

/* DCDC1DISABLEULPSTARTUP @Bit 3 : DCDC1_DISABLE_ULP_STARTUP */
  #define FICR_DCDC1FICR1OTP_DCDC1DISABLEULPSTARTUP_Pos (3UL) /*!< Position of DCDC1DISABLEULPSTARTUP field.                   */
  #define FICR_DCDC1FICR1OTP_DCDC1DISABLEULPSTARTUP_Msk (0x1UL << FICR_DCDC1FICR1OTP_DCDC1DISABLEULPSTARTUP_Pos) /*!< Bit mask
                                                                            of DCDC1DISABLEULPSTARTUP field.*/                    
  #define FICR_DCDC1FICR1OTP_DCDC1DISABLEULPSTARTUP_Min (0x0UL) /*!< Min enumerator value of DCDC1DISABLEULPSTARTUP field.     */
  #define FICR_DCDC1FICR1OTP_DCDC1DISABLEULPSTARTUP_Max (0x1UL) /*!< Max enumerator value of DCDC1DISABLEULPSTARTUP field.     */
  #define FICR_DCDC1FICR1OTP_DCDC1DISABLEULPSTARTUP_LOW (0x0UL) /*!< Low                                                       */
  #define FICR_DCDC1FICR1OTP_DCDC1DISABLEULPSTARTUP_HIGH (0x1UL) /*!< High                                                     */

/* DCDC1PWRUPOVRDFORCE @Bit 4 : DCDC1_PWRUP_OVRD_FORCE */
  #define FICR_DCDC1FICR1OTP_DCDC1PWRUPOVRDFORCE_Pos (4UL) /*!< Position of DCDC1PWRUPOVRDFORCE field.                         */
  #define FICR_DCDC1FICR1OTP_DCDC1PWRUPOVRDFORCE_Msk (0x1UL << FICR_DCDC1FICR1OTP_DCDC1PWRUPOVRDFORCE_Pos) /*!< Bit mask of
                                                                            DCDC1PWRUPOVRDFORCE field.*/                          
  #define FICR_DCDC1FICR1OTP_DCDC1PWRUPOVRDFORCE_Min (0x0UL) /*!< Min enumerator value of DCDC1PWRUPOVRDFORCE field.           */
  #define FICR_DCDC1FICR1OTP_DCDC1PWRUPOVRDFORCE_Max (0x1UL) /*!< Max enumerator value of DCDC1PWRUPOVRDFORCE field.           */
  #define FICR_DCDC1FICR1OTP_DCDC1PWRUPOVRDFORCE_LOW (0x0UL) /*!< Low                                                          */
  #define FICR_DCDC1FICR1OTP_DCDC1PWRUPOVRDFORCE_HIGH (0x1UL) /*!< High                                                        */

/* DCDC1VOUTSLOPEBYPASS @Bit 5 : DCDC1_VOUT_SLOPE_BYPASS */
  #define FICR_DCDC1FICR1OTP_DCDC1VOUTSLOPEBYPASS_Pos (5UL) /*!< Position of DCDC1VOUTSLOPEBYPASS field.                       */
  #define FICR_DCDC1FICR1OTP_DCDC1VOUTSLOPEBYPASS_Msk (0x1UL << FICR_DCDC1FICR1OTP_DCDC1VOUTSLOPEBYPASS_Pos) /*!< Bit mask of
                                                                            DCDC1VOUTSLOPEBYPASS field.*/                         
  #define FICR_DCDC1FICR1OTP_DCDC1VOUTSLOPEBYPASS_Min (0x0UL) /*!< Min enumerator value of DCDC1VOUTSLOPEBYPASS field.         */
  #define FICR_DCDC1FICR1OTP_DCDC1VOUTSLOPEBYPASS_Max (0x1UL) /*!< Max enumerator value of DCDC1VOUTSLOPEBYPASS field.         */
  #define FICR_DCDC1FICR1OTP_DCDC1VOUTSLOPEBYPASS_NO (0x0UL) /*!< Not bypassed                                                 */
  #define FICR_DCDC1FICR1OTP_DCDC1VOUTSLOPEBYPASS_BYPASS (0x1UL) /*!< Bypassed                                                 */

/* DCDC1PRGVOUTSLOPE @Bits 6..7 : Select the delay (clock cycles) between steps on PWM mode output voltage programming */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_Pos (6UL) /*!< Position of DCDC1PRGVOUTSLOPE field.                             */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_Msk (0x3UL << FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_Pos) /*!< Bit mask of
                                                                            DCDC1PRGVOUTSLOPE field.*/                            
  #define FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_Min (0x0UL) /*!< Min enumerator value of DCDC1PRGVOUTSLOPE field.               */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_Max (0x3UL) /*!< Max enumerator value of DCDC1PRGVOUTSLOPE field.               */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_8CLK (0x0UL) /*!< 8CLK (Default)                                                */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_1CLK (0x1UL) /*!< 1 CLK                                                         */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_32CLK (0x2UL) /*!< 32 CLK                                                       */
  #define FICR_DCDC1FICR1OTP_DCDC1PRGVOUTSLOPE_16CLK (0x3UL) /*!< 16 CLK                                                       */


/* FICR_DCDC2FICR0OTP: DCDC2 OTP Config0 */
  #define FICR_DCDC2FICR0OTP_ResetValue (0x00UL)     /*!< Reset value of DCDC2FICR0OTP register.                               */

/* DCDC2PRGHSLIMHYST @Bits 0..1 : DCDC2_PRG_HSLIM_HYST */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_Pos (0UL) /*!< Position of DCDC2PRGHSLIMHYST field.                             */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_Msk (0x3UL << FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_Pos) /*!< Bit mask of
                                                                            DCDC2PRGHSLIMHYST field.*/                            
  #define FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_Min (0x0UL) /*!< Min enumerator value of DCDC2PRGHSLIMHYST field.               */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_Max (0x3UL) /*!< Max enumerator value of DCDC2PRGHSLIMHYST field.               */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_SEL0 (0x0UL) /*!< Sel0                                                          */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_SEL1 (0x1UL) /*!< Sel1                                                          */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_SEL2 (0x2UL) /*!< Sel2                                                          */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGHSLIMHYST_SEL3 (0x3UL) /*!< Sel3                                                          */

/* DCDC2PRGVHYST @Bit 2 : DCDC2_PRG_VHYST */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGVHYST_Pos (2UL) /*!< Position of DCDC2PRGVHYST field.                                     */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGVHYST_Msk (0x1UL << FICR_DCDC2FICR0OTP_DCDC2PRGVHYST_Pos) /*!< Bit mask of DCDC2PRGVHYST
                                                                            field.*/                                              
  #define FICR_DCDC2FICR0OTP_DCDC2PRGVHYST_Min (0x0UL) /*!< Min enumerator value of DCDC2PRGVHYST field.                       */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGVHYST_Max (0x1UL) /*!< Max enumerator value of DCDC2PRGVHYST field.                       */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGVHYST_LOW (0x0UL) /*!< Low                                                                */
  #define FICR_DCDC2FICR0OTP_DCDC2PRGVHYST_HIGH (0x1UL) /*!< High                                                              */

/* DCDC2BYPASSSFTSTRT @Bit 3 : DCDC2_BYPASS_SFTSTRT */
  #define FICR_DCDC2FICR0OTP_DCDC2BYPASSSFTSTRT_Pos (3UL) /*!< Position of DCDC2BYPASSSFTSTRT field.                           */
  #define FICR_DCDC2FICR0OTP_DCDC2BYPASSSFTSTRT_Msk (0x1UL << FICR_DCDC2FICR0OTP_DCDC2BYPASSSFTSTRT_Pos) /*!< Bit mask of
                                                                            DCDC2BYPASSSFTSTRT field.*/                           
  #define FICR_DCDC2FICR0OTP_DCDC2BYPASSSFTSTRT_Min (0x0UL) /*!< Min enumerator value of DCDC2BYPASSSFTSTRT field.             */
  #define FICR_DCDC2FICR0OTP_DCDC2BYPASSSFTSTRT_Max (0x1UL) /*!< Max enumerator value of DCDC2BYPASSSFTSTRT field.             */
  #define FICR_DCDC2FICR0OTP_DCDC2BYPASSSFTSTRT_LOW (0x0UL) /*!< Low                                                           */
  #define FICR_DCDC2FICR0OTP_DCDC2BYPASSSFTSTRT_HIGH (0x1UL) /*!< High                                                         */

/* DCDC2DISABLEFEEDFORWARD @Bit 4 : DCDC2_DISABLE FEEDFORWARD */
  #define FICR_DCDC2FICR0OTP_DCDC2DISABLEFEEDFORWARD_Pos (4UL) /*!< Position of DCDC2DISABLEFEEDFORWARD field.                 */
  #define FICR_DCDC2FICR0OTP_DCDC2DISABLEFEEDFORWARD_Msk (0x1UL << FICR_DCDC2FICR0OTP_DCDC2DISABLEFEEDFORWARD_Pos) /*!< Bit mask
                                                                            of DCDC2DISABLEFEEDFORWARD field.*/                   
  #define FICR_DCDC2FICR0OTP_DCDC2DISABLEFEEDFORWARD_Min (0x0UL) /*!< Min enumerator value of DCDC2DISABLEFEEDFORWARD field.   */
  #define FICR_DCDC2FICR0OTP_DCDC2DISABLEFEEDFORWARD_Max (0x1UL) /*!< Max enumerator value of DCDC2DISABLEFEEDFORWARD field.   */
  #define FICR_DCDC2FICR0OTP_DCDC2DISABLEFEEDFORWARD_LOW (0x0UL) /*!< Low                                                      */
  #define FICR_DCDC2FICR0OTP_DCDC2DISABLEFEEDFORWARD_HIGH (0x1UL) /*!< High                                                    */

/* DCDC2PWMFILTERHIGHCAP @Bit 5 : DCDC2_PWM_FILTER_HIGHCAP */
  #define FICR_DCDC2FICR0OTP_DCDC2PWMFILTERHIGHCAP_Pos (5UL) /*!< Position of DCDC2PWMFILTERHIGHCAP field.                     */
  #define FICR_DCDC2FICR0OTP_DCDC2PWMFILTERHIGHCAP_Msk (0x1UL << FICR_DCDC2FICR0OTP_DCDC2PWMFILTERHIGHCAP_Pos) /*!< Bit mask of
                                                                            DCDC2PWMFILTERHIGHCAP field.*/                        
  #define FICR_DCDC2FICR0OTP_DCDC2PWMFILTERHIGHCAP_Min (0x0UL) /*!< Min enumerator value of DCDC2PWMFILTERHIGHCAP field.       */
  #define FICR_DCDC2FICR0OTP_DCDC2PWMFILTERHIGHCAP_Max (0x1UL) /*!< Max enumerator value of DCDC2PWMFILTERHIGHCAP field.       */
  #define FICR_DCDC2FICR0OTP_DCDC2PWMFILTERHIGHCAP_LOW (0x0UL) /*!< Low                                                        */
  #define FICR_DCDC2FICR0OTP_DCDC2PWMFILTERHIGHCAP_HIGH (0x1UL) /*!< High                                                      */


/* FICR_DCDC2FICR1OTP: DCDC2 OTP Config1 */
  #define FICR_DCDC2FICR1OTP_ResetValue (0x00UL)     /*!< Reset value of DCDC2FICR1OTP register.                               */

/* DCDC2PRGHSAVG @Bits 0..2 : DCDC2_PRG_HSAVG */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_Pos (0UL) /*!< Position of DCDC2PRGHSAVG field.                                     */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_Msk (0x7UL << FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_Pos) /*!< Bit mask of DCDC2PRGHSAVG
                                                                            field.*/                                              
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_Min (0x0UL) /*!< Min enumerator value of DCDC2PRGHSAVG field.                       */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_Max (0x7UL) /*!< Max enumerator value of DCDC2PRGHSAVG field.                       */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_SEL0 (0x0UL) /*!< Sel0                                                              */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_SEL1 (0x1UL) /*!< Sel1                                                              */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_SEL2 (0x2UL) /*!< Sel2                                                              */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_SEL3 (0x3UL) /*!< Sel3                                                              */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_SEL4 (0x4UL) /*!< Sel4                                                              */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_SEL5 (0x5UL) /*!< Sel5                                                              */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_SEL6 (0x6UL) /*!< Sel6                                                              */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGHSAVG_SEL7 (0x7UL) /*!< Sel7                                                              */

/* DCDC2DISABLEULPSTARTUP @Bit 3 : DCDC2_DISABLE_ULP_STARTUP */
  #define FICR_DCDC2FICR1OTP_DCDC2DISABLEULPSTARTUP_Pos (3UL) /*!< Position of DCDC2DISABLEULPSTARTUP field.                   */
  #define FICR_DCDC2FICR1OTP_DCDC2DISABLEULPSTARTUP_Msk (0x1UL << FICR_DCDC2FICR1OTP_DCDC2DISABLEULPSTARTUP_Pos) /*!< Bit mask
                                                                            of DCDC2DISABLEULPSTARTUP field.*/                    
  #define FICR_DCDC2FICR1OTP_DCDC2DISABLEULPSTARTUP_Min (0x0UL) /*!< Min enumerator value of DCDC2DISABLEULPSTARTUP field.     */
  #define FICR_DCDC2FICR1OTP_DCDC2DISABLEULPSTARTUP_Max (0x1UL) /*!< Max enumerator value of DCDC2DISABLEULPSTARTUP field.     */
  #define FICR_DCDC2FICR1OTP_DCDC2DISABLEULPSTARTUP_LOW (0x0UL) /*!< Low                                                       */
  #define FICR_DCDC2FICR1OTP_DCDC2DISABLEULPSTARTUP_HIGH (0x1UL) /*!< High                                                     */

/* DCDC2PWRUPOVRDFORCE @Bit 4 : DCDC2_PWRUP_OVRD_FORCE */
  #define FICR_DCDC2FICR1OTP_DCDC2PWRUPOVRDFORCE_Pos (4UL) /*!< Position of DCDC2PWRUPOVRDFORCE field.                         */
  #define FICR_DCDC2FICR1OTP_DCDC2PWRUPOVRDFORCE_Msk (0x1UL << FICR_DCDC2FICR1OTP_DCDC2PWRUPOVRDFORCE_Pos) /*!< Bit mask of
                                                                            DCDC2PWRUPOVRDFORCE field.*/                          
  #define FICR_DCDC2FICR1OTP_DCDC2PWRUPOVRDFORCE_Min (0x0UL) /*!< Min enumerator value of DCDC2PWRUPOVRDFORCE field.           */
  #define FICR_DCDC2FICR1OTP_DCDC2PWRUPOVRDFORCE_Max (0x1UL) /*!< Max enumerator value of DCDC2PWRUPOVRDFORCE field.           */
  #define FICR_DCDC2FICR1OTP_DCDC2PWRUPOVRDFORCE_LOW (0x0UL) /*!< Low                                                          */
  #define FICR_DCDC2FICR1OTP_DCDC2PWRUPOVRDFORCE_HIGH (0x1UL) /*!< High                                                        */

/* DCDC2VOUTSLOPEBYPASS @Bit 5 : DCDC2_VOUT_SLOPE_BYPASS */
  #define FICR_DCDC2FICR1OTP_DCDC2VOUTSLOPEBYPASS_Pos (5UL) /*!< Position of DCDC2VOUTSLOPEBYPASS field.                       */
  #define FICR_DCDC2FICR1OTP_DCDC2VOUTSLOPEBYPASS_Msk (0x1UL << FICR_DCDC2FICR1OTP_DCDC2VOUTSLOPEBYPASS_Pos) /*!< Bit mask of
                                                                            DCDC2VOUTSLOPEBYPASS field.*/                         
  #define FICR_DCDC2FICR1OTP_DCDC2VOUTSLOPEBYPASS_Min (0x0UL) /*!< Min enumerator value of DCDC2VOUTSLOPEBYPASS field.         */
  #define FICR_DCDC2FICR1OTP_DCDC2VOUTSLOPEBYPASS_Max (0x1UL) /*!< Max enumerator value of DCDC2VOUTSLOPEBYPASS field.         */
  #define FICR_DCDC2FICR1OTP_DCDC2VOUTSLOPEBYPASS_NO (0x0UL) /*!< Not bypassed                                                 */
  #define FICR_DCDC2FICR1OTP_DCDC2VOUTSLOPEBYPASS_BYPASS (0x1UL) /*!< Bypassed                                                 */

/* DCDC2PRGVOUTSLOPE @Bits 6..7 : Select the delay (clock cycles) between steps on PWM mode output voltage programming */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_Pos (6UL) /*!< Position of DCDC2PRGVOUTSLOPE field.                             */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_Msk (0x3UL << FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_Pos) /*!< Bit mask of
                                                                            DCDC2PRGVOUTSLOPE field.*/                            
  #define FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_Min (0x0UL) /*!< Min enumerator value of DCDC2PRGVOUTSLOPE field.               */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_Max (0x3UL) /*!< Max enumerator value of DCDC2PRGVOUTSLOPE field.               */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_8CLK (0x0UL) /*!< 8CLK (Default)                                                */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_1CLK (0x1UL) /*!< 1 CLK                                                         */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_32CLK (0x2UL) /*!< 32 CLK                                                       */
  #define FICR_DCDC2FICR1OTP_DCDC2PRGVOUTSLOPE_16CLK (0x3UL) /*!< 16 CLK                                                       */


/* FICR_DCDCFICRSPAREOTP: DCDC OTP Spare */
  #define FICR_DCDCFICRSPAREOTP_ResetValue (0x00UL)  /*!< Reset value of DCDCFICRSPAREOTP register.                            */

/* DCDCOTPSPARE @Bits 0..7 : DCDC_OTP_SPARE */
  #define FICR_DCDCFICRSPAREOTP_DCDCOTPSPARE_Pos (0UL) /*!< Position of DCDCOTPSPARE field.                                    */
  #define FICR_DCDCFICRSPAREOTP_DCDCOTPSPARE_Msk (0xFFUL << FICR_DCDCFICRSPAREOTP_DCDCOTPSPARE_Pos) /*!< Bit mask of
                                                                            DCDCOTPSPARE field.*/                                 


/* FICR_DCDC1CLKGENTRMOTP: DCDC1 ClkGen TRIM */
  #define FICR_DCDC1CLKGENTRMOTP_ResetValue (0x00UL) /*!< Reset value of DCDC1CLKGENTRMOTP register.                           */

/* DCDC1TRMCLKGEN @Bits 0..3 : DCDC1 Clock Gen TRIM */
  #define FICR_DCDC1CLKGENTRMOTP_DCDC1TRMCLKGEN_Pos (0UL) /*!< Position of DCDC1TRMCLKGEN field.                               */
  #define FICR_DCDC1CLKGENTRMOTP_DCDC1TRMCLKGEN_Msk (0xFUL << FICR_DCDC1CLKGENTRMOTP_DCDC1TRMCLKGEN_Pos) /*!< Bit mask of
                                                                            DCDC1TRMCLKGEN field.*/                               

/* DCDC1TRMCLKGENSLOPE @Bits 4..6 : DCDC1 Clock Gen Slope TRIM */
  #define FICR_DCDC1CLKGENTRMOTP_DCDC1TRMCLKGENSLOPE_Pos (4UL) /*!< Position of DCDC1TRMCLKGENSLOPE field.                     */
  #define FICR_DCDC1CLKGENTRMOTP_DCDC1TRMCLKGENSLOPE_Msk (0x7UL << FICR_DCDC1CLKGENTRMOTP_DCDC1TRMCLKGENSLOPE_Pos) /*!< Bit mask
                                                                            of DCDC1TRMCLKGENSLOPE field.*/                       


/* FICR_DCDC2CLKGENTRMOTP: DCDC2 ClkGen TRIM */
  #define FICR_DCDC2CLKGENTRMOTP_ResetValue (0x00UL) /*!< Reset value of DCDC2CLKGENTRMOTP register.                           */

/* DCDC2TRMCLKGEN @Bits 0..3 : DCDC2 Clock Gen TRIM */
  #define FICR_DCDC2CLKGENTRMOTP_DCDC2TRMCLKGEN_Pos (0UL) /*!< Position of DCDC2TRMCLKGEN field.                               */
  #define FICR_DCDC2CLKGENTRMOTP_DCDC2TRMCLKGEN_Msk (0xFUL << FICR_DCDC2CLKGENTRMOTP_DCDC2TRMCLKGEN_Pos) /*!< Bit mask of
                                                                            DCDC2TRMCLKGEN field.*/                               

/* DCDC2TRMCLKGENSLOPE @Bits 4..6 : DCDC2 Clock Gen Slope TRIM */
  #define FICR_DCDC2CLKGENTRMOTP_DCDC2TRMCLKGENSLOPE_Pos (4UL) /*!< Position of DCDC2TRMCLKGENSLOPE field.                     */
  #define FICR_DCDC2CLKGENTRMOTP_DCDC2TRMCLKGENSLOPE_Msk (0x7UL << FICR_DCDC2CLKGENTRMOTP_DCDC2TRMCLKGENSLOPE_Pos) /*!< Bit mask
                                                                            of DCDC2TRMCLKGENSLOPE field.*/                       


/* FICR_DCDC1TRM0OTP: DCDC1 VOUT_ULP TRIM */
  #define FICR_DCDC1TRM0OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC1TRM0OTP register.                                */

/* DCDC1VOUTULPTRM @Bits 0..4 : DCDC1_VOUT_ULP_TRM */
  #define FICR_DCDC1TRM0OTP_DCDC1VOUTULPTRM_Pos (0UL) /*!< Position of DCDC1VOUTULPTRM field.                                  */
  #define FICR_DCDC1TRM0OTP_DCDC1VOUTULPTRM_Msk (0x1FUL << FICR_DCDC1TRM0OTP_DCDC1VOUTULPTRM_Pos) /*!< Bit mask of
                                                                            DCDC1VOUTULPTRM field.*/                              


/* FICR_DCDC1TRM1OTP: DCDC1_ULP_FEEDBACK_TRM */
  #define FICR_DCDC1TRM1OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC1TRM1OTP register.                                */

/* DCDC1ULPFBKTRM @Bits 0..4 : DCDC1_ULP_FEEBACK_TRM */
  #define FICR_DCDC1TRM1OTP_DCDC1ULPFBKTRM_Pos (0UL) /*!< Position of DCDC1ULPFBKTRM field.                                    */
  #define FICR_DCDC1TRM1OTP_DCDC1ULPFBKTRM_Msk (0x1FUL << FICR_DCDC1TRM1OTP_DCDC1ULPFBKTRM_Pos) /*!< Bit mask of DCDC1ULPFBKTRM
                                                                            field.*/                                              


/* FICR_DCDC1TRM2OTP: DCDC1_VREF_TRM */
  #define FICR_DCDC1TRM2OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC1TRM2OTP register.                                */

/* DCDC1VREFTRM @Bits 0..4 : DCDC1_VREF_TRM */
  #define FICR_DCDC1TRM2OTP_DCDC1VREFTRM_Pos (0UL)   /*!< Position of DCDC1VREFTRM field.                                      */
  #define FICR_DCDC1TRM2OTP_DCDC1VREFTRM_Msk (0x1FUL << FICR_DCDC1TRM2OTP_DCDC1VREFTRM_Pos) /*!< Bit mask of DCDC1VREFTRM
                                                                            field.*/                                              


/* FICR_DCDC1TRM3OTP: DCDC1 OFFSET and VHYST TRIM */
  #define FICR_DCDC1TRM3OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC1TRM3OTP register.                                */

/* DCDC1OFFSETPWMTRM @Bits 0..3 : DCDC1_OFFSET_PWM_TRM */
  #define FICR_DCDC1TRM3OTP_DCDC1OFFSETPWMTRM_Pos (0UL) /*!< Position of DCDC1OFFSETPWMTRM field.                              */
  #define FICR_DCDC1TRM3OTP_DCDC1OFFSETPWMTRM_Msk (0xFUL << FICR_DCDC1TRM3OTP_DCDC1OFFSETPWMTRM_Pos) /*!< Bit mask of
                                                                            DCDC1OFFSETPWMTRM field.*/                            

/* DCDC1VHYST2PWMTRM @Bits 4..6 : DCDC1_VHYST2PWM_TRM */
  #define FICR_DCDC1TRM3OTP_DCDC1VHYST2PWMTRM_Pos (4UL) /*!< Position of DCDC1VHYST2PWMTRM field.                              */
  #define FICR_DCDC1TRM3OTP_DCDC1VHYST2PWMTRM_Msk (0x7UL << FICR_DCDC1TRM3OTP_DCDC1VHYST2PWMTRM_Pos) /*!< Bit mask of
                                                                            DCDC1VHYST2PWMTRM field.*/                            


/* FICR_DCDC1TRM4OTP: DCDC1 IBNS and EACLAMP HSLIM TRIM */
  #define FICR_DCDC1TRM4OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC1TRM4OTP register.                                */

/* DCDC1IBNSHSLIMTRM @Bits 0..3 : DCDC1_IBNS_HSLIM_TRM */
  #define FICR_DCDC1TRM4OTP_DCDC1IBNSHSLIMTRM_Pos (0UL) /*!< Position of DCDC1IBNSHSLIMTRM field.                              */
  #define FICR_DCDC1TRM4OTP_DCDC1IBNSHSLIMTRM_Msk (0xFUL << FICR_DCDC1TRM4OTP_DCDC1IBNSHSLIMTRM_Pos) /*!< Bit mask of
                                                                            DCDC1IBNSHSLIMTRM field.*/                            


/* FICR_DCDC2TRM0OTP: DCDC2 VOUT_ULP TRIM */
  #define FICR_DCDC2TRM0OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC2TRM0OTP register.                                */

/* DCDC2VOUTULPTRM @Bits 0..4 : DCDC2_VOUT_ULP_TRM */
  #define FICR_DCDC2TRM0OTP_DCDC2VOUTULPTRM_Pos (0UL) /*!< Position of DCDC2VOUTULPTRM field.                                  */
  #define FICR_DCDC2TRM0OTP_DCDC2VOUTULPTRM_Msk (0x1FUL << FICR_DCDC2TRM0OTP_DCDC2VOUTULPTRM_Pos) /*!< Bit mask of
                                                                            DCDC2VOUTULPTRM field.*/                              


/* FICR_DCDC2TRM1OTP: DCDC2_ULP_FEEDBACK_TRM */
  #define FICR_DCDC2TRM1OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC2TRM1OTP register.                                */

/* DCDC2ULPFBKTRM @Bits 0..4 : DCDC2_ULP_FEEBACK_TRM */
  #define FICR_DCDC2TRM1OTP_DCDC2ULPFBKTRM_Pos (0UL) /*!< Position of DCDC2ULPFBKTRM field.                                    */
  #define FICR_DCDC2TRM1OTP_DCDC2ULPFBKTRM_Msk (0x1FUL << FICR_DCDC2TRM1OTP_DCDC2ULPFBKTRM_Pos) /*!< Bit mask of DCDC2ULPFBKTRM
                                                                            field.*/                                              


/* FICR_DCDC2TRM2OTP: DCDC2_VREF_TRM */
  #define FICR_DCDC2TRM2OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC2TRM2OTP register.                                */

/* DCDC2VREFTRM @Bits 0..4 : DCDC2_VREF_TRM */
  #define FICR_DCDC2TRM2OTP_DCDC2VREFTRM_Pos (0UL)   /*!< Position of DCDC2VREFTRM field.                                      */
  #define FICR_DCDC2TRM2OTP_DCDC2VREFTRM_Msk (0x1FUL << FICR_DCDC2TRM2OTP_DCDC2VREFTRM_Pos) /*!< Bit mask of DCDC2VREFTRM
                                                                            field.*/                                              


/* FICR_DCDC2TRM3OTP: DCDC2 OFFSET and VHYST TRIM */
  #define FICR_DCDC2TRM3OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC2TRM3OTP register.                                */

/* DCDC2OFFSETPWMTRM @Bits 0..3 : DCDC2_OFFSET_PWM_TRM */
  #define FICR_DCDC2TRM3OTP_DCDC2OFFSETPWMTRM_Pos (0UL) /*!< Position of DCDC2OFFSETPWMTRM field.                              */
  #define FICR_DCDC2TRM3OTP_DCDC2OFFSETPWMTRM_Msk (0xFUL << FICR_DCDC2TRM3OTP_DCDC2OFFSETPWMTRM_Pos) /*!< Bit mask of
                                                                            DCDC2OFFSETPWMTRM field.*/                            

/* DCDC2VHYST2PWMTRM @Bits 4..6 : DCDC2_VHYST2PWM_TRM */
  #define FICR_DCDC2TRM3OTP_DCDC2VHYST2PWMTRM_Pos (4UL) /*!< Position of DCDC2VHYST2PWMTRM field.                              */
  #define FICR_DCDC2TRM3OTP_DCDC2VHYST2PWMTRM_Msk (0x7UL << FICR_DCDC2TRM3OTP_DCDC2VHYST2PWMTRM_Pos) /*!< Bit mask of
                                                                            DCDC2VHYST2PWMTRM field.*/                            


/* FICR_DCDC2TRM4OTP: DCDC2 IBNS and EACLAMP HSLIM TRIM */
  #define FICR_DCDC2TRM4OTP_ResetValue (0x00UL)      /*!< Reset value of DCDC2TRM4OTP register.                                */

/* DCDC2IBNSHSLIMTRM @Bits 0..3 : DCDC2_IBNS_HSLIM_TRM */
  #define FICR_DCDC2TRM4OTP_DCDC2IBNSHSLIMTRM_Pos (0UL) /*!< Position of DCDC2IBNSHSLIMTRM field.                              */
  #define FICR_DCDC2TRM4OTP_DCDC2IBNSHSLIMTRM_Msk (0xFUL << FICR_DCDC2TRM4OTP_DCDC2IBNSHSLIMTRM_Pos) /*!< Bit mask of
                                                                            DCDC2IBNSHSLIMTRM field.*/                            


/* FICR_DCDC1DTEOTP: Dcdc Digital Testbus Enable */
  #define FICR_DCDC1DTEOTP_ResetValue (0x00UL)       /*!< Reset value of DCDC1DTEOTP register.                                 */

/* DCDC1DTE @Bits 0..4 : DCDC1_DTE */
  #define FICR_DCDC1DTEOTP_DCDC1DTE_Pos (0UL)        /*!< Position of DCDC1DTE field.                                          */
  #define FICR_DCDC1DTEOTP_DCDC1DTE_Msk (0x1FUL << FICR_DCDC1DTEOTP_DCDC1DTE_Pos) /*!< Bit mask of DCDC1DTE field.             */


/* FICR_DCDC2DTEOTP: Dcdc Digital Testbus Enable */
  #define FICR_DCDC2DTEOTP_ResetValue (0x00UL)       /*!< Reset value of DCDC2DTEOTP register.                                 */

/* DCDC2DTE @Bits 0..4 : DCDC2_DTE */
  #define FICR_DCDC2DTEOTP_DCDC2DTE_Pos (0UL)        /*!< Position of DCDC2DTE field.                                          */
  #define FICR_DCDC2DTEOTP_DCDC2DTE_Msk (0x1FUL << FICR_DCDC2DTEOTP_DCDC2DTE_Pos) /*!< Bit mask of DCDC2DTE field.             */


/* FICR_LDSW1TRIMULPFBCKRESOTP: LDO1 output voltage trimming */
  #define FICR_LDSW1TRIMULPFBCKRESOTP_ResetValue (0x00UL) /*!< Reset value of LDSW1TRIMULPFBCKRESOTP register.                 */

/* LDSW1TRIMULPFBCKRES @Bits 0..4 : Low-dropout regulator 1 output voltage trimming */
  #define FICR_LDSW1TRIMULPFBCKRESOTP_LDSW1TRIMULPFBCKRES_Pos (0UL) /*!< Position of LDSW1TRIMULPFBCKRES field.                */
  #define FICR_LDSW1TRIMULPFBCKRESOTP_LDSW1TRIMULPFBCKRES_Msk (0x1FUL << FICR_LDSW1TRIMULPFBCKRESOTP_LDSW1TRIMULPFBCKRES_Pos)
                                                                            /*!< Bit mask of LDSW1TRIMULPFBCKRES field.*/         


/* FICR_LDSW2TRIMULPFBCKRESOTP: LDO2 output voltage trimming */
  #define FICR_LDSW2TRIMULPFBCKRESOTP_ResetValue (0x00UL) /*!< Reset value of LDSW2TRIMULPFBCKRESOTP register.                 */

/* LDSW2TRIMULPFBCKRES @Bits 0..4 : Low-dropout regulator 2 output voltage trimming */
  #define FICR_LDSW2TRIMULPFBCKRESOTP_LDSW2TRIMULPFBCKRES_Pos (0UL) /*!< Position of LDSW2TRIMULPFBCKRES field.                */
  #define FICR_LDSW2TRIMULPFBCKRESOTP_LDSW2TRIMULPFBCKRES_Msk (0x1FUL << FICR_LDSW2TRIMULPFBCKRESOTP_LDSW2TRIMULPFBCKRES_Pos)
                                                                            /*!< Bit mask of LDSW2TRIMULPFBCKRES field.*/         


/* FICR_LEDDRVUSB2MODEOTP: Set LED0 and LED1 to be USB2 Detect */
  #define FICR_LEDDRVUSB2MODEOTP_ResetValue (0x00UL) /*!< Reset value of LEDDRVUSB2MODEOTP register.                           */

/* LEDDRVUSB2MODE @Bit 0 : Set LED0 and LED1 to be USB2 Detect */
  #define FICR_LEDDRVUSB2MODEOTP_LEDDRVUSB2MODE_Pos (0UL) /*!< Position of LEDDRVUSB2MODE field.                               */
  #define FICR_LEDDRVUSB2MODEOTP_LEDDRVUSB2MODE_Msk (0x1UL << FICR_LEDDRVUSB2MODEOTP_LEDDRVUSB2MODE_Pos) /*!< Bit mask of
                                                                            LEDDRVUSB2MODE field.*/                               
  #define FICR_LEDDRVUSB2MODEOTP_LEDDRVUSB2MODE_Min (0x0UL) /*!< Min enumerator value of LEDDRVUSB2MODE field.                 */
  #define FICR_LEDDRVUSB2MODEOTP_LEDDRVUSB2MODE_Max (0x1UL) /*!< Max enumerator value of LEDDRVUSB2MODE field.                 */
  #define FICR_LEDDRVUSB2MODEOTP_LEDDRVUSB2MODE_LED (0x0UL) /*!< Use as LED driver                                             */
  #define FICR_LEDDRVUSB2MODEOTP_LEDDRVUSB2MODE_USB2 (0x1UL) /*!< Use as USB2 Detect pins                                      */

/* LEDDRVHPREFDISABLE @Bit 1 : spare */
  #define FICR_LEDDRVUSB2MODEOTP_LEDDRVHPREFDISABLE_Pos (1UL) /*!< Position of LEDDRVHPREFDISABLE field.                       */
  #define FICR_LEDDRVUSB2MODEOTP_LEDDRVHPREFDISABLE_Msk (0x1UL << FICR_LEDDRVUSB2MODEOTP_LEDDRVHPREFDISABLE_Pos) /*!< Bit mask
                                                                            of LEDDRVHPREFDISABLE field.*/                        


/* FICR_EXTCKSLOWOTP: selects External clock for ckSlow */
  #define FICR_EXTCKSLOWOTP_ResetValue (0x00UL)      /*!< Reset value of EXTCKSLOWOTP register.                                */

/* EXTCKSLOWSELOTP @Bit 0 : selects external pin as source for ckSlow */
  #define FICR_EXTCKSLOWOTP_EXTCKSLOWSELOTP_Pos (0UL) /*!< Position of EXTCKSLOWSELOTP field.                                  */
  #define FICR_EXTCKSLOWOTP_EXTCKSLOWSELOTP_Msk (0x1UL << FICR_EXTCKSLOWOTP_EXTCKSLOWSELOTP_Pos) /*!< Bit mask of
                                                                            EXTCKSLOWSELOTP field.*/                              
  #define FICR_EXTCKSLOWOTP_EXTCKSLOWSELOTP_Min (0x0UL) /*!< Min enumerator value of EXTCKSLOWSELOTP field.                    */
  #define FICR_EXTCKSLOWOTP_EXTCKSLOWSELOTP_Max (0x1UL) /*!< Max enumerator value of EXTCKSLOWSELOTP field.                    */
  #define FICR_EXTCKSLOWOTP_EXTCKSLOWSELOTP_INTERNALCLK (0x0UL) /*!< selects internal 1K oscillator for ckSlow                 */
  #define FICR_EXTCKSLOWOTP_EXTCKSLOWSELOTP_EXTCLK (0x1UL) /*!< selects external clock on GPIO[4] pad for ckSlow               */


/* FICR_ANACORETRIM0OTP: VSYS and POR Comp Trim */
  #define FICR_ANACORETRIM0OTP_ResetValue (0x00UL)   /*!< Reset value of ANACORETRIM0OTP register.                             */

/* VSYSCOMPTRIMOTP @Bits 0..3 : VSYSCOMP_TRIM */
  #define FICR_ANACORETRIM0OTP_VSYSCOMPTRIMOTP_Pos (0UL) /*!< Position of VSYSCOMPTRIMOTP field.                               */
  #define FICR_ANACORETRIM0OTP_VSYSCOMPTRIMOTP_Msk (0xFUL << FICR_ANACORETRIM0OTP_VSYSCOMPTRIMOTP_Pos) /*!< Bit mask of
                                                                            VSYSCOMPTRIMOTP field.*/                              

/* PORCOMPTRIMOTP @Bits 4..7 : PORCOMP_TRIM */
  #define FICR_ANACORETRIM0OTP_PORCOMPTRIMOTP_Pos (4UL) /*!< Position of PORCOMPTRIMOTP field.                                 */
  #define FICR_ANACORETRIM0OTP_PORCOMPTRIMOTP_Msk (0xFUL << FICR_ANACORETRIM0OTP_PORCOMPTRIMOTP_Pos) /*!< Bit mask of
                                                                            PORCOMPTRIMOTP field.*/                               


/* FICR_ANACORETRIM1OTP: TEMP Comp Trim */
  #define FICR_ANACORETRIM1OTP_ResetValue (0x00UL)   /*!< Reset value of ANACORETRIM1OTP register.                             */

/* TSDCOMPTRIMOTP @Bits 0..5 : TSDPCOMP_TRIM */
  #define FICR_ANACORETRIM1OTP_TSDCOMPTRIMOTP_Pos (0UL) /*!< Position of TSDCOMPTRIMOTP field.                                 */
  #define FICR_ANACORETRIM1OTP_TSDCOMPTRIMOTP_Msk (0x3FUL << FICR_ANACORETRIM1OTP_TSDCOMPTRIMOTP_Pos) /*!< Bit mask of
                                                                            TSDCOMPTRIMOTP field.*/                               


/* FICR_ANACORETRIM2OTP: ULPBIAS and OSC4M Trim */
  #define FICR_ANACORETRIM2OTP_ResetValue (0x00UL)   /*!< Reset value of ANACORETRIM2OTP register.                             */

/* ULPBIASTRIMOTP @Bits 0..2 : ULPBIAS_TRIM */
  #define FICR_ANACORETRIM2OTP_ULPBIASTRIMOTP_Pos (0UL) /*!< Position of ULPBIASTRIMOTP field.                                 */
  #define FICR_ANACORETRIM2OTP_ULPBIASTRIMOTP_Msk (0x7UL << FICR_ANACORETRIM2OTP_ULPBIASTRIMOTP_Pos) /*!< Bit mask of
                                                                            ULPBIASTRIMOTP field.*/                               

/* OSC4MTRIMOTP @Bits 3..7 : OSC4M_TRIM */
  #define FICR_ANACORETRIM2OTP_OSC4MTRIMOTP_Pos (3UL) /*!< Position of OSC4MTRIMOTP field.                                     */
  #define FICR_ANACORETRIM2OTP_OSC4MTRIMOTP_Msk (0x1FUL << FICR_ANACORETRIM2OTP_OSC4MTRIMOTP_Pos) /*!< Bit mask of OSC4MTRIMOTP
                                                                            field.*/                                              


/* FICR_ANACORETRIM3OTP: HPREF Trim */
  #define FICR_ANACORETRIM3OTP_ResetValue (0x00UL)   /*!< Reset value of ANACORETRIM3OTP register.                             */

/* HPREFTRIMOTP @Bits 0..3 : HPREF Trim */
  #define FICR_ANACORETRIM3OTP_HPREFTRIMOTP_Pos (0UL) /*!< Position of HPREFTRIMOTP field.                                     */
  #define FICR_ANACORETRIM3OTP_HPREFTRIMOTP_Msk (0xFUL << FICR_ANACORETRIM3OTP_HPREFTRIMOTP_Pos) /*!< Bit mask of HPREFTRIMOTP
                                                                            field.*/                                              


/* FICR_ANACORETRIM4OTP: Bandgap1V5 Trim */
  #define FICR_ANACORETRIM4OTP_ResetValue (0x00UL)   /*!< Reset value of ANACORETRIM4OTP register.                             */

/* BGPTRIMOTP @Bits 0..4 : BGP Trim */
  #define FICR_ANACORETRIM4OTP_BGPTRIMOTP_Pos (0UL)  /*!< Position of BGPTRIMOTP field.                                        */
  #define FICR_ANACORETRIM4OTP_BGPTRIMOTP_Msk (0x1FUL << FICR_ANACORETRIM4OTP_BGPTRIMOTP_Pos) /*!< Bit mask of BGPTRIMOTP
                                                                            field.*/                                              


/* FICR_RCOSC1KTRIMOTP: Rc Osc 1k Res Trim */
  #define FICR_RCOSC1KTRIMOTP_ResetValue (0x00UL)    /*!< Reset value of RCOSC1KTRIMOTP register.                              */

/* RCOSCSLOWTRIMRESOTP @Bits 0..6 : RCOSC1K Res Trim */
  #define FICR_RCOSC1KTRIMOTP_RCOSCSLOWTRIMRESOTP_Pos (0UL) /*!< Position of RCOSCSLOWTRIMRESOTP field.                        */
  #define FICR_RCOSC1KTRIMOTP_RCOSCSLOWTRIMRESOTP_Msk (0x7FUL << FICR_RCOSC1KTRIMOTP_RCOSCSLOWTRIMRESOTP_Pos) /*!< Bit mask of
                                                                            RCOSCSLOWTRIMRESOTP field.*/                          


/* FICR_SPARETRIMOTP: Spare Trim */
  #define FICR_SPARETRIMOTP_ResetValue (0x00UL)      /*!< Reset value of SPARETRIMOTP register.                                */

/* SPARETRIMOTP @Bits 0..3 : SPARE_TRIM_OTP */
  #define FICR_SPARETRIMOTP_SPARETRIMOTP_Pos (0UL)   /*!< Position of SPARETRIMOTP field.                                      */
  #define FICR_SPARETRIMOTP_SPARETRIMOTP_Msk (0xFUL << FICR_SPARETRIMOTP_SPARETRIMOTP_Pos) /*!< Bit mask of SPARETRIMOTP field.*/


/* FICR_SYSCONFIGOTP: Generic Configuration */
  #define FICR_SYSCONFIGOTP_ResetValue (0x00UL)      /*!< Reset value of SYSCONFIGOTP register.                                */

/* DISABLETSDCOMPDATAOTP @Bit 0 : Force IC temperature comparator values to zero */
  #define FICR_SYSCONFIGOTP_DISABLETSDCOMPDATAOTP_Pos (0UL) /*!< Position of DISABLETSDCOMPDATAOTP field.                      */
  #define FICR_SYSCONFIGOTP_DISABLETSDCOMPDATAOTP_Msk (0x1UL << FICR_SYSCONFIGOTP_DISABLETSDCOMPDATAOTP_Pos) /*!< Bit mask of
                                                                            DISABLETSDCOMPDATAOTP field.*/                        
  #define FICR_SYSCONFIGOTP_DISABLETSDCOMPDATAOTP_Min (0x0UL) /*!< Min enumerator value of DISABLETSDCOMPDATAOTP field.        */
  #define FICR_SYSCONFIGOTP_DISABLETSDCOMPDATAOTP_Max (0x1UL) /*!< Max enumerator value of DISABLETSDCOMPDATAOTP field.        */
  #define FICR_SYSCONFIGOTP_DISABLETSDCOMPDATAOTP_NORMAL (0x0UL) /*!< IC thermal comparators operate normally                  */
  #define FICR_SYSCONFIGOTP_DISABLETSDCOMPDATAOTP_FORCE_ZERO (0x1UL) /*!< IC thermal comparator outputs forced low             */

/* DISABLETSDPWMOTP @Bit 1 : Disable TSD-FSM request while in PWM mode */
  #define FICR_SYSCONFIGOTP_DISABLETSDPWMOTP_Pos (1UL) /*!< Position of DISABLETSDPWMOTP field.                                */
  #define FICR_SYSCONFIGOTP_DISABLETSDPWMOTP_Msk (0x1UL << FICR_SYSCONFIGOTP_DISABLETSDPWMOTP_Pos) /*!< Bit mask of
                                                                            DISABLETSDPWMOTP field.*/                             
  #define FICR_SYSCONFIGOTP_DISABLETSDPWMOTP_Min (0x0UL) /*!< Min enumerator value of DISABLETSDPWMOTP field.                  */
  #define FICR_SYSCONFIGOTP_DISABLETSDPWMOTP_Max (0x1UL) /*!< Max enumerator value of DISABLETSDPWMOTP field.                  */
  #define FICR_SYSCONFIGOTP_DISABLETSDPWMOTP_NORMAL (0x0UL) /*!< TSD-FSM is requested ON in PWM mode                           */
  #define FICR_SYSCONFIGOTP_DISABLETSDPWMOTP_NOREQUEST (0x1UL) /*!< TSD-FSM is not requested ON in PWM mode                    */

/* DISABLETSDILIMOTP @Bit 2 : Disable TSD-FSM request by charger ilim active */
  #define FICR_SYSCONFIGOTP_DISABLETSDILIMOTP_Pos (2UL) /*!< Position of DISABLETSDILIMOTP field.                              */
  #define FICR_SYSCONFIGOTP_DISABLETSDILIMOTP_Msk (0x1UL << FICR_SYSCONFIGOTP_DISABLETSDILIMOTP_Pos) /*!< Bit mask of
                                                                            DISABLETSDILIMOTP field.*/                            
  #define FICR_SYSCONFIGOTP_DISABLETSDILIMOTP_Min (0x0UL) /*!< Min enumerator value of DISABLETSDILIMOTP field.                */
  #define FICR_SYSCONFIGOTP_DISABLETSDILIMOTP_Max (0x1UL) /*!< Max enumerator value of DISABLETSDILIMOTP field.                */
  #define FICR_SYSCONFIGOTP_DISABLETSDILIMOTP_NORMAL (0x0UL) /*!< TSD-FSM is requested ON by charger ilim active               */
  #define FICR_SYSCONFIGOTP_DISABLETSDILIMOTP_NOREQUEST (0x1UL) /*!< TSD-FSM is not requested ON by chargewr ilim active       */

/* TSDCOMPDISASAMPLEDMODEOTP @Bit 3 : TSDCOMP sampled mode config (HTOL) */
  #define FICR_SYSCONFIGOTP_TSDCOMPDISASAMPLEDMODEOTP_Pos (3UL) /*!< Position of TSDCOMPDISASAMPLEDMODEOTP field.              */
  #define FICR_SYSCONFIGOTP_TSDCOMPDISASAMPLEDMODEOTP_Msk (0x1UL << FICR_SYSCONFIGOTP_TSDCOMPDISASAMPLEDMODEOTP_Pos) /*!< Bit
                                                                            mask of TSDCOMPDISASAMPLEDMODEOTP field.*/            
  #define FICR_SYSCONFIGOTP_TSDCOMPDISASAMPLEDMODEOTP_Min (0x0UL) /*!< Min enumerator value of TSDCOMPDISASAMPLEDMODEOTP field.*/
  #define FICR_SYSCONFIGOTP_TSDCOMPDISASAMPLEDMODEOTP_Max (0x1UL) /*!< Max enumerator value of TSDCOMPDISASAMPLEDMODEOTP field.*/
  #define FICR_SYSCONFIGOTP_TSDCOMPDISASAMPLEDMODEOTP_ENABLED (0x0UL) /*!< TSD sampled mode enabled                            */
  #define FICR_SYSCONFIGOTP_TSDCOMPDISASAMPLEDMODEOTP_DISABLED (0x1UL) /*!< TSD sampled mode disabled                          */

/* HPREFPRGTCOTP @Bits 4..5 : HPREF temperature coefficent programming */
  #define FICR_SYSCONFIGOTP_HPREFPRGTCOTP_Pos (4UL)  /*!< Position of HPREFPRGTCOTP field.                                     */
  #define FICR_SYSCONFIGOTP_HPREFPRGTCOTP_Msk (0x3UL << FICR_SYSCONFIGOTP_HPREFPRGTCOTP_Pos) /*!< Bit mask of HPREFPRGTCOTP
                                                                            field.*/                                              
  #define FICR_SYSCONFIGOTP_HPREFPRGTCOTP_Min (0x0UL) /*!< Min enumerator value of HPREFPRGTCOTP field.                        */
  #define FICR_SYSCONFIGOTP_HPREFPRGTCOTP_Max (0x1UL) /*!< Max enumerator value of HPREFPRGTCOTP field.                        */
  #define FICR_SYSCONFIGOTP_HPREFPRGTCOTP_NORMAL (0x0UL) /*!< default                                                          */
  #define FICR_SYSCONFIGOTP_HPREFPRGTCOTP_TCPLUS (0x1UL) /*!< increasing PTAT behavior                                         */
  #define FICR_SYSCONFIGOTP_HPREFPRGTCOTP_TCPLUSPLUS (0x1UL) /*!< increasing PTAT behavior                                     */
  #define FICR_SYSCONFIGOTP_HPREFPRGTCOTP_TCPLUSPLUSPLUS (0x1UL) /*!< increasing PTAT behavior                                 */


/* FICR_SYSDELAYSELOTP: Timer Delay Select */
  #define FICR_SYSDELAYSELOTP_ResetValue (0x00UL)    /*!< Reset value of SYSDELAYSELOTP register.                              */

/* USBDETTSEL @Bit 0 : USBDET_TSEL */
  #define FICR_SYSDELAYSELOTP_USBDETTSEL_Pos (0UL)   /*!< Position of USBDETTSEL field.                                        */
  #define FICR_SYSDELAYSELOTP_USBDETTSEL_Msk (0x1UL << FICR_SYSDELAYSELOTP_USBDETTSEL_Pos) /*!< Bit mask of USBDETTSEL field.  */
  #define FICR_SYSDELAYSELOTP_USBDETTSEL_Min (0x0UL) /*!< Min enumerator value of USBDETTSEL field.                            */
  #define FICR_SYSDELAYSELOTP_USBDETTSEL_Max (0x1UL) /*!< Max enumerator value of USBDETTSEL field.                            */
  #define FICR_SYSDELAYSELOTP_USBDETTSEL_NORMAL (0x0UL) /*!< Select Normal 600ms USB-B timer, USB-C debounce 15ms              */
  #define FICR_SYSDELAYSELOTP_USBDETTSEL_FAST (0x1UL) /*!< Select 7.5ms USB-B timer, USB-C debounce 2ms                        */

/* STARTUPTSEL @Bit 1 : STARTUP_TSEL */
  #define FICR_SYSDELAYSELOTP_STARTUPTSEL_Pos (1UL)  /*!< Position of STARTUPTSEL field.                                       */
  #define FICR_SYSDELAYSELOTP_STARTUPTSEL_Msk (0x1UL << FICR_SYSDELAYSELOTP_STARTUPTSEL_Pos) /*!< Bit mask of STARTUPTSEL
                                                                            field.*/                                              
  #define FICR_SYSDELAYSELOTP_STARTUPTSEL_Min (0x0UL) /*!< Min enumerator value of STARTUPTSEL field.                          */
  #define FICR_SYSDELAYSELOTP_STARTUPTSEL_Max (0x1UL) /*!< Max enumerator value of STARTUPTSEL field.                          */
  #define FICR_SYSDELAYSELOTP_STARTUPTSEL_NORMAL (0x0UL) /*!< Select Normal 2ms startup wait delay                             */
  #define FICR_SYSDELAYSELOTP_STARTUPTSEL_FAST (0x1UL) /*!< Select 47us startup wait delay                                     */

/* VBUSPOWEREDTSEL @Bit 2 : VBUSPOWERED_TSEL */
  #define FICR_SYSDELAYSELOTP_VBUSPOWEREDTSEL_Pos (2UL) /*!< Position of VBUSPOWEREDTSEL field.                                */
  #define FICR_SYSDELAYSELOTP_VBUSPOWEREDTSEL_Msk (0x1UL << FICR_SYSDELAYSELOTP_VBUSPOWEREDTSEL_Pos) /*!< Bit mask of
                                                                            VBUSPOWEREDTSEL field.*/                              
  #define FICR_SYSDELAYSELOTP_VBUSPOWEREDTSEL_Min (0x0UL) /*!< Min enumerator value of VBUSPOWEREDTSEL field.                  */
  #define FICR_SYSDELAYSELOTP_VBUSPOWEREDTSEL_Max (0x1UL) /*!< Max enumerator value of VBUSPOWEREDTSEL field.                  */
  #define FICR_SYSDELAYSELOTP_VBUSPOWEREDTSEL_NORMAL (0x0UL) /*!< Select Normal 1ms settling debounce                          */
  #define FICR_SYSDELAYSELOTP_VBUSPOWEREDTSEL_FAST (0x1UL) /*!< Select 20us settling debounce                                  */

/* GPIOTSEL @Bit 3 : GPIO_TSEL */
  #define FICR_SYSDELAYSELOTP_GPIOTSEL_Pos (3UL)     /*!< Position of GPIOTSEL field.                                          */
  #define FICR_SYSDELAYSELOTP_GPIOTSEL_Msk (0x1UL << FICR_SYSDELAYSELOTP_GPIOTSEL_Pos) /*!< Bit mask of GPIOTSEL field.        */
  #define FICR_SYSDELAYSELOTP_GPIOTSEL_Min (0x0UL)   /*!< Min enumerator value of GPIOTSEL field.                              */
  #define FICR_SYSDELAYSELOTP_GPIOTSEL_Max (0x1UL)   /*!< Max enumerator value of GPIOTSEL field.                              */
  #define FICR_SYSDELAYSELOTP_GPIOTSEL_NORMAL (0x0UL) /*!< Select Normal 10ms settling debounce                                */
  #define FICR_SYSDELAYSELOTP_GPIOTSEL_FAST (0x1UL)  /*!< Select 2ms settling debounce                                         */


/* FICR_USBCDETRPDTRIMOTP: USBC Detector RPD Trim */
  #define FICR_USBCDETRPDTRIMOTP_ResetValue (0x00UL) /*!< Reset value of USBCDETRPDTRIMOTP register.                           */

/* USBCDETRPDTRIM @Bits 0..2 : USBCDETECT_RPD_TRIM */
  #define FICR_USBCDETRPDTRIMOTP_USBCDETRPDTRIM_Pos (0UL) /*!< Position of USBCDETRPDTRIM field.                               */
  #define FICR_USBCDETRPDTRIMOTP_USBCDETRPDTRIM_Msk (0x7UL << FICR_USBCDETRPDTRIMOTP_USBCDETRPDTRIM_Pos) /*!< Bit mask of
                                                                            USBCDETRPDTRIM field.*/                               


/* FICR_USBCDETIREFTRIMOTP: USBC Detector IREF Trim */
  #define FICR_USBCDETIREFTRIMOTP_ResetValue (0x00UL) /*!< Reset value of USBCDETIREFTRIMOTP register.                         */

/* USBCDETIREFTRIM @Bits 0..2 : USBCDETECT_IREF_TRIM */
  #define FICR_USBCDETIREFTRIMOTP_USBCDETIREFTRIM_Pos (0UL) /*!< Position of USBCDETIREFTRIM field.                            */
  #define FICR_USBCDETIREFTRIMOTP_USBCDETIREFTRIM_Msk (0x7UL << FICR_USBCDETIREFTRIMOTP_USBCDETIREFTRIM_Pos) /*!< Bit mask of
                                                                            USBCDETIREFTRIM field.*/                              


/* FICR_TWIFILTCONFIGOTP: TWI Filter Configuration */
  #define FICR_TWIFILTCONFIGOTP_ResetValue (0x00UL)  /*!< Reset value of TWIFILTCONFIGOTP register.                            */

/* TWIFILTSHORTDLYOTP @Bit 0 : delay adjustment */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTSHORTDLYOTP_Pos (0UL) /*!< Position of TWIFILTSHORTDLYOTP field.                        */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTSHORTDLYOTP_Msk (0x1UL << FICR_TWIFILTCONFIGOTP_TWIFILTSHORTDLYOTP_Pos) /*!< Bit mask of
                                                                            TWIFILTSHORTDLYOTP field.*/                           
  #define FICR_TWIFILTCONFIGOTP_TWIFILTSHORTDLYOTP_Min (0x0UL) /*!< Min enumerator value of TWIFILTSHORTDLYOTP field.          */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTSHORTDLYOTP_Max (0x1UL) /*!< Max enumerator value of TWIFILTSHORTDLYOTP field.          */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTSHORTDLYOTP_LONGDLY (0x0UL) /*!< 50ns delay (default)                                   */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTSHORTDLYOTP_SHORTDLY (0x1UL) /*!< 10ns delay                                            */

/* TWIFILTBYPASSOTP @Bit 1 : Filter bypass */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTBYPASSOTP_Pos (1UL) /*!< Position of TWIFILTBYPASSOTP field.                            */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTBYPASSOTP_Msk (0x1UL << FICR_TWIFILTCONFIGOTP_TWIFILTBYPASSOTP_Pos) /*!< Bit mask of
                                                                            TWIFILTBYPASSOTP field.*/                             
  #define FICR_TWIFILTCONFIGOTP_TWIFILTBYPASSOTP_Min (0x0UL) /*!< Min enumerator value of TWIFILTBYPASSOTP field.              */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTBYPASSOTP_Max (0x1UL) /*!< Max enumerator value of TWIFILTBYPASSOTP field.              */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTBYPASSOTP_NOBYPASS (0x0UL) /*!< De-glitch function is enabled (default)                 */
  #define FICR_TWIFILTCONFIGOTP_TWIFILTBYPASSOTP_BYPASS (0x1UL) /*!< Bypass de-glitch function                                 */


/* FICR_SAMPLEDVREFCONFIGOTP: Sampled VREF Configuration */
  #define FICR_SAMPLEDVREFCONFIGOTP_ResetValue (0x00UL) /*!< Reset value of SAMPLEDVREFCONFIGOTP register.                     */

/* SAMPLEDVREFENHPOTP @Bit 0 : Allow IBN_5U to bias comparator in HP mode */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFENHPOTP_Pos (0UL) /*!< Position of SAMPLEDVREFENHPOTP field.                    */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFENHPOTP_Msk (0x1UL << FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFENHPOTP_Pos) /*!< Bit
                                                                            mask of SAMPLEDVREFENHPOTP field.*/                   
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFENHPOTP_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFENHPOTP field.      */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFENHPOTP_Max (0x1UL) /*!< Max enumerator value of SAMPLEDVREFENHPOTP field.      */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFENHPOTP_NORMAL (0x0UL) /*!< Even in HP mode only 7.5nA bias                     */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFENHPOTP_HP (0x1UL) /*!< Both 7.5nA + 5uA bias comparator in HP mode             */

/* SAMPLEDVREFULPCOMPTMOTP @Bit 1 : Increase comparator bias current */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFULPCOMPTMOTP_Pos (1UL) /*!< Position of SAMPLEDVREFULPCOMPTMOTP field.          */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFULPCOMPTMOTP_Msk (0x1UL << FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFULPCOMPTMOTP_Pos)
                                                                            /*!< Bit mask of SAMPLEDVREFULPCOMPTMOTP field.*/     
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFULPCOMPTMOTP_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFULPCOMPTMOTP
                                                                            field.*/                                              
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFULPCOMPTMOTP_Max (0x1UL) /*!< Max enumerator value of SAMPLEDVREFULPCOMPTMOTP
                                                                            field.*/                                              
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFULPCOMPTMOTP_NORMAL (0x0UL) /*!< Normal comparator bias current                 */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFULPCOMPTMOTP_INCREASED (0x1UL) /*!< Comparator bias current 1.5x                */

/* SAMPLEDVREFLOADVRFSRTMOTP @Bits 2..3 : Add additional leakage to high voltage reference */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_Pos (2UL) /*!< Position of SAMPLEDVREFLOADVRFSRTMOTP field.      */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_Msk (0x3UL << FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_Pos)
                                                                            /*!< Bit mask of SAMPLEDVREFLOADVRFSRTMOTP field.*/   
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFLOADVRFSRTMOTP
                                                                            field.*/                                              
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_Max (0x3UL) /*!< Max enumerator value of SAMPLEDVREFLOADVRFSRTMOTP
                                                                            field.*/                                              
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_NORMAL0 (0x0UL) /*!< 1x NMOS leaking path                        */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_DOUBLE (0x1UL) /*!< 2x NMOS leaking path                         */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_NONE (0x2UL) /*!< no leaking path                                */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFLOADVRFSRTMOTP_NORMAL3 (0x3UL) /*!< 1x NMOS leaking path                        */

/* SAMPLEDVREFPRGREFRCAPOTP @Bits 4..5 : Change the capacitance in the high voltage reference */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_Pos (4UL) /*!< Position of SAMPLEDVREFPRGREFRCAPOTP field.        */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_Msk (0x3UL << FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_Pos)
                                                                            /*!< Bit mask of SAMPLEDVREFPRGREFRCAPOTP field.*/    
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFPRGREFRCAPOTP
                                                                            field.*/                                              
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_Max (0x3UL) /*!< Max enumerator value of SAMPLEDVREFPRGREFRCAPOTP
                                                                            field.*/                                              
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_TREBLE (0x0UL) /*!< 3x 200fF                                      */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_QUAD (0x1UL) /*!< 4x 200fF                                        */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_SINGLE (0x2UL) /*!< 1x 200fF                                      */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFPRGREFRCAPOTP_DOUBLE (0x3UL) /*!< 2x 200fF                                      */

/* SAMPLEDVREFVREFHCTRLOTP @Bits 6..7 : Change the voltage level of the high leakage node */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_Pos (6UL) /*!< Position of SAMPLEDVREFVREFHCTRLOTP field.          */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_Msk (0x3UL << FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_Pos)
                                                                            /*!< Bit mask of SAMPLEDVREFVREFHCTRLOTP field.*/     
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_Min (0x0UL) /*!< Min enumerator value of SAMPLEDVREFVREFHCTRLOTP
                                                                            field.*/                                              
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_Max (0x3UL) /*!< Max enumerator value of SAMPLEDVREFVREFHCTRLOTP
                                                                            field.*/                                              
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_NOMINAL (0x0UL) /*!< 750mV                                         */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_MIN (0x1UL) /*!< 700mV                                             */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_MAX (0x2UL) /*!< 850mV                                             */
  #define FICR_SAMPLEDVREFCONFIGOTP_SAMPLEDVREFVREFHCTRLOTP_HI (0x3UL) /*!< 800mV                                              */


/* FICR_HIDDENLABELOTP: Hidden Label */
  #define FICR_HIDDENLABELOTP_ResetValue (0x00UL)    /*!< Reset value of HIDDENLABELOTP register.                              */

/* HIDDENLABELOTP @Bits 0..7 : 8 bit field to be used as label (potential OTP revision), read via vsysLabel register */
  #define FICR_HIDDENLABELOTP_HIDDENLABELOTP_Pos (0UL) /*!< Position of HIDDENLABELOTP field.                                  */
  #define FICR_HIDDENLABELOTP_HIDDENLABELOTP_Msk (0xFFUL << FICR_HIDDENLABELOTP_HIDDENLABELOTP_Pos) /*!< Bit mask of
                                                                            HIDDENLABELOTP field.*/                               


/* FICR_TIMERCONFIG1OTP: Timer Configuration 1 */
  #define FICR_TIMERCONFIG1OTP_ResetValue (0x00UL)   /*!< Reset value of TIMERCONFIG1OTP register.                             */

/* BOOTMONITORRSTDISABLE @Bit 0 : BootMonitorRstDisable */
  #define FICR_TIMERCONFIG1OTP_BOOTMONITORRSTDISABLE_Pos (0UL) /*!< Position of BOOTMONITORRSTDISABLE field.                   */
  #define FICR_TIMERCONFIG1OTP_BOOTMONITORRSTDISABLE_Msk (0x1UL << FICR_TIMERCONFIG1OTP_BOOTMONITORRSTDISABLE_Pos) /*!< Bit mask
                                                                            of BOOTMONITORRSTDISABLE field.*/                     
  #define FICR_TIMERCONFIG1OTP_BOOTMONITORRSTDISABLE_Min (0x0UL) /*!< Min enumerator value of BOOTMONITORRSTDISABLE field.     */
  #define FICR_TIMERCONFIG1OTP_BOOTMONITORRSTDISABLE_Max (0x1UL) /*!< Max enumerator value of BOOTMONITORRSTDISABLE field.     */
  #define FICR_TIMERCONFIG1OTP_BOOTMONITORRSTDISABLE_ENABLE (0x0UL) /*!< BootMonitor elapse causes reset                       */
  #define FICR_TIMERCONFIG1OTP_BOOTMONITORRSTDISABLE_DISABLE (0x1UL) /*!< BootMonitor elapse reset disabled                    */

/* SLOWDOMAINTSEL @Bit 1 : speed up for timings (to speed up simulations) */
  #define FICR_TIMERCONFIG1OTP_SLOWDOMAINTSEL_Pos (1UL) /*!< Position of SLOWDOMAINTSEL field.                                 */
  #define FICR_TIMERCONFIG1OTP_SLOWDOMAINTSEL_Msk (0x1UL << FICR_TIMERCONFIG1OTP_SLOWDOMAINTSEL_Pos) /*!< Bit mask of
                                                                            SLOWDOMAINTSEL field.*/                               
  #define FICR_TIMERCONFIG1OTP_SLOWDOMAINTSEL_Min (0x0UL) /*!< Min enumerator value of SLOWDOMAINTSEL field.                   */
  #define FICR_TIMERCONFIG1OTP_SLOWDOMAINTSEL_Max (0x1UL) /*!< Max enumerator value of SLOWDOMAINTSEL field.                   */
  #define FICR_TIMERCONFIG1OTP_SLOWDOMAINTSEL_NORMAL (0x0UL) /*!< normal timings                                               */
  #define FICR_TIMERCONFIG1OTP_SLOWDOMAINTSEL_SPEEDUP (0x1UL) /*!< faster timings (for simulation)                             */


/* FICR_VBUSINILIM0OTP: Select Input Current limit for VBUS */
  #define FICR_VBUSINILIM0OTP_ResetValue (0x00UL)    /*!< Reset value of VBUSINILIM0OTP register.                              */

/* VBUSINILIM0OTP @Bits 0..3 : Input current limit for VBUS selected by Host */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_Pos (0UL) /*!< Position of VBUSINILIM0OTP field.                                  */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_Msk (0xFUL << FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_Pos) /*!< Bit mask of
                                                                            VBUSINILIM0OTP field.*/                               
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_Min (0x0UL) /*!< Min enumerator value of VBUSINILIM0OTP field.                    */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_Max (0xFUL) /*!< Max enumerator value of VBUSINILIM0OTP field.                    */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_500MA (0x0UL) /*!< 500mA                                                          */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_100MA (0x1UL) /*!< 100mA                                                          */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_NOTUSED2 (0x2UL) /*!< 100mA (Not used)                                            */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_NOTUSED3 (0x3UL) /*!< 100mA (Not used)                                            */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_NOTUSED4 (0x4UL) /*!< 100mA (Not used)                                            */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_DEFAULT500MA (0x5UL) /*!< 500mA (default)                                         */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_600MA (0x6UL) /*!< 600mA                                                          */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_700MA (0x7UL) /*!< 700mA                                                          */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_800MA (0x8UL) /*!< 800mA                                                          */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_900MA (0x9UL) /*!< 900mA                                                          */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_1000MA (0xAUL) /*!< 1000mA                                                        */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_1100MA (0xBUL) /*!< 1100mA                                                        */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_1200MA (0xCUL) /*!< 1200mA                                                        */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_1300MA (0xDUL) /*!< 1300mA                                                        */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_1400MA (0xEUL) /*!< 1400mA                                                        */
  #define FICR_VBUSINILIM0OTP_VBUSINILIM0OTP_1500MA (0xFUL) /*!< 1500mA                                                        */


/* FICR_VBUSINILIMSTARTUPOTP: Select input Current limit for VBUS at Startup */
  #define FICR_VBUSINILIMSTARTUPOTP_ResetValue (0x00UL) /*!< Reset value of VBUSINILIMSTARTUPOTP register.                     */

/* VBUSINILIMSTARTUPOTP @Bits 0..3 : Input current selection before negotiation */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_Pos (0UL) /*!< Position of VBUSINILIMSTARTUPOTP field.                */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_Msk (0xFUL << FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_Pos) /*!<
                                                                            Bit mask of VBUSINILIMSTARTUPOTP field.*/             
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_Min (0x0UL) /*!< Min enumerator value of VBUSINILIMSTARTUPOTP field.  */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_Max (0xFUL) /*!< Max enumerator value of VBUSINILIMSTARTUPOTP field.  */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_500MA (0x0UL) /*!< 500mA                                              */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_100MA (0x1UL) /*!< 100mA                                              */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_NOTUSED2 (0x2UL) /*!< 100mA (Not used)                                */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_NOTUSED3 (0x3UL) /*!< 100mA (Not used)                                */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_NOTUSED4 (0x4UL) /*!< 100mA (Not used)                                */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_DEFAULT500MA (0x5UL) /*!< 500mA (default)                             */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_600MA (0x6UL) /*!< 600mA                                              */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_700MA (0x7UL) /*!< 700mA                                              */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_800MA (0x8UL) /*!< 800mA                                              */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_900MA (0x9UL) /*!< 900mA                                              */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_1000MA (0xAUL) /*!< 1000mA                                            */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_1100MA (0xBUL) /*!< 1100mA                                            */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_1200MA (0xCUL) /*!< 1200mA                                            */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_1300MA (0xDUL) /*!< 1300mA                                            */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_1400MA (0xEUL) /*!< 1400mA                                            */
  #define FICR_VBUSINILIMSTARTUPOTP_VBUSINILIMSTARTUPOTP_1500MA (0xFUL) /*!< 1500mA                                            */


/* FICR_VBUSINADJUSTILIMOTP: ILIM adjustments */
  #define FICR_VBUSINADJUSTILIMOTP_ResetValue (0x00UL) /*!< Reset value of VBUSINADJUSTILIMOTP register.                       */

/* VBUSINADJUSTILIMOTP @Bits 0..4 : fine adjustment of ilim */
  #define FICR_VBUSINADJUSTILIMOTP_VBUSINADJUSTILIMOTP_Pos (0UL) /*!< Position of VBUSINADJUSTILIMOTP field.                   */
  #define FICR_VBUSINADJUSTILIMOTP_VBUSINADJUSTILIMOTP_Msk (0x1FUL << FICR_VBUSINADJUSTILIMOTP_VBUSINADJUSTILIMOTP_Pos) /*!< Bit
                                                                            mask of VBUSINADJUSTILIMOTP field.*/                  

/* ILIMOVERRIDEMAPSELOTP @Bits 5..6 : selects between override remaps of ILIM */
  #define FICR_VBUSINADJUSTILIMOTP_ILIMOVERRIDEMAPSELOTP_Pos (5UL) /*!< Position of ILIMOVERRIDEMAPSELOTP field.               */
  #define FICR_VBUSINADJUSTILIMOTP_ILIMOVERRIDEMAPSELOTP_Msk (0x3UL << FICR_VBUSINADJUSTILIMOTP_ILIMOVERRIDEMAPSELOTP_Pos) /*!<
                                                                            Bit mask of ILIMOVERRIDEMAPSELOTP field.*/            


/* FICR_ILIMH5V0ILIMTRIM0OTP: Ilimh5V0 ILIM Trim0 */
  #define FICR_ILIMH5V0ILIMTRIM0OTP_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0ILIMTRIM0OTP register.                     */

/* ILIMTRIM0 @Bits 0..4 : Ilimh5V0 ILIM Trim0 for (100mA) */
  #define FICR_ILIMH5V0ILIMTRIM0OTP_ILIMTRIM0_Pos (0UL) /*!< Position of ILIMTRIM0 field.                                      */
  #define FICR_ILIMH5V0ILIMTRIM0OTP_ILIMTRIM0_Msk (0x1FUL << FICR_ILIMH5V0ILIMTRIM0OTP_ILIMTRIM0_Pos) /*!< Bit mask of ILIMTRIM0
                                                                            field.*/                                              


/* FICR_ILIMH5V0ILIMTRIM1OTP: Ilimh5V0 ILIM Trim1 */
  #define FICR_ILIMH5V0ILIMTRIM1OTP_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0ILIMTRIM1OTP register.                     */

/* ILIMTRIM1 @Bits 0..4 : Ilimh5V0 ILIM Trim for (500mA) */
  #define FICR_ILIMH5V0ILIMTRIM1OTP_ILIMTRIM1_Pos (0UL) /*!< Position of ILIMTRIM1 field.                                      */
  #define FICR_ILIMH5V0ILIMTRIM1OTP_ILIMTRIM1_Msk (0x1FUL << FICR_ILIMH5V0ILIMTRIM1OTP_ILIMTRIM1_Pos) /*!< Bit mask of ILIMTRIM1
                                                                            field.*/                                              


/* FICR_ILIMH5V0ILIMTRIM2OTP: Ilimh5V0 ILIM Trim2 */
  #define FICR_ILIMH5V0ILIMTRIM2OTP_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0ILIMTRIM2OTP register.                     */

/* ILIMTRIM2 @Bits 0..4 : Ilimh5V0 ILIM Trim for (600-1500mA) */
  #define FICR_ILIMH5V0ILIMTRIM2OTP_ILIMTRIM2_Pos (0UL) /*!< Position of ILIMTRIM2 field.                                      */
  #define FICR_ILIMH5V0ILIMTRIM2OTP_ILIMTRIM2_Msk (0x1FUL << FICR_ILIMH5V0ILIMTRIM2OTP_ILIMTRIM2_Pos) /*!< Bit mask of ILIMTRIM2
                                                                            field.*/                                              


/* FICR_VSYSVBATHIGHTRIMOTP: VSYS_HIGH and VBAT_HIGH Trim */
  #define FICR_VSYSVBATHIGHTRIMOTP_ResetValue (0x00UL) /*!< Reset value of VSYSVBATHIGHTRIMOTP register.                       */

/* ILIMH5V0VSYSHIGHTRIMOTP @Bits 0..3 : Ilimh5V0 VSYS_HIGH Trim */
  #define FICR_VSYSVBATHIGHTRIMOTP_ILIMH5V0VSYSHIGHTRIMOTP_Pos (0UL) /*!< Position of ILIMH5V0VSYSHIGHTRIMOTP field.           */
  #define FICR_VSYSVBATHIGHTRIMOTP_ILIMH5V0VSYSHIGHTRIMOTP_Msk (0xFUL << FICR_VSYSVBATHIGHTRIMOTP_ILIMH5V0VSYSHIGHTRIMOTP_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VSYSHIGHTRIMOTP field.*/     

/* ILIMH5V0VBATHIGHTRIMOTP @Bits 4..7 : Ilimh5V0 VBAT_HIGH Trim */
  #define FICR_VSYSVBATHIGHTRIMOTP_ILIMH5V0VBATHIGHTRIMOTP_Pos (4UL) /*!< Position of ILIMH5V0VBATHIGHTRIMOTP field.           */
  #define FICR_VSYSVBATHIGHTRIMOTP_ILIMH5V0VBATHIGHTRIMOTP_Msk (0xFUL << FICR_VSYSVBATHIGHTRIMOTP_ILIMH5V0VBATHIGHTRIMOTP_Pos)
                                                                            /*!< Bit mask of ILIMH5V0VBATHIGHTRIMOTP field.*/     


/* FICR_ILIMH5V0OVERVOLTAGETRIMOTP: Ilimh5V0 overvoltage theshold Trim */
  #define FICR_ILIMH5V0OVERVOLTAGETRIMOTP_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0OVERVOLTAGETRIMOTP register.         */

/* OVERVOLTAGETRIM @Bits 0..4 : Ilimh5V0 Overvoltage threshold Trim */
  #define FICR_ILIMH5V0OVERVOLTAGETRIMOTP_OVERVOLTAGETRIM_Pos (0UL) /*!< Position of OVERVOLTAGETRIM field.                    */
  #define FICR_ILIMH5V0OVERVOLTAGETRIMOTP_OVERVOLTAGETRIM_Msk (0x1FUL << FICR_ILIMH5V0OVERVOLTAGETRIMOTP_OVERVOLTAGETRIM_Pos)
                                                                            /*!< Bit mask of OVERVOLTAGETRIM field.*/             


/* FICR_ILIMH5V0OTA1OFFSETTRIMOTP: Ilimh5V0 ota1 offset Trim */
  #define FICR_ILIMH5V0OTA1OFFSETTRIMOTP_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0OTA1OFFSETTRIMOTP register.           */

/* OTA1OFFSETTRIM @Bits 0..5 : Ilimh5V0 ota offset trim */
  #define FICR_ILIMH5V0OTA1OFFSETTRIMOTP_OTA1OFFSETTRIM_Pos (0UL) /*!< Position of OTA1OFFSETTRIM field.                       */
  #define FICR_ILIMH5V0OTA1OFFSETTRIMOTP_OTA1OFFSETTRIM_Msk (0x3FUL << FICR_ILIMH5V0OTA1OFFSETTRIMOTP_OTA1OFFSETTRIM_Pos) /*!<
                                                                            Bit mask of OTA1OFFSETTRIM field.*/                   


/* FICR_ILIMH5V0CONFIG0OTP: Ilimh5V0 configuration 0 */
  #define FICR_ILIMH5V0CONFIG0OTP_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0CONFIG0OTP register.                         */

/* ILIMH5V0AUTODISABLEOTP @Bits 0..1 : ILIMH5V0_AUTO_DISABLE */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_Pos (0UL) /*!< Position of ILIMH5V0AUTODISABLEOTP field.              */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_Msk (0x3UL << FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_Pos) /*!<
                                                                            Bit mask of ILIMH5V0AUTODISABLEOTP field.*/           
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0AUTODISABLEOTP field.*/
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0AUTODISABLEOTP field.*/
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_SEL0 (0x0UL) /*!< Overvoltage or undervoltage                         */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_SEL1 (0x1UL) /*!< Overvoltage                                         */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_SEL2 (0x2UL) /*!< Overvoltage, undervoltage, vbat_high, vsys_high     */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0AUTODISABLEOTP_SEL3 (0x3UL) /*!< None                                                */

/* ILIMH5V0HYSTCTRLOTP @Bits 2..3 : ILIMH5V0_HYST_CTRL */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_Pos (2UL) /*!< Position of ILIMH5V0HYSTCTRLOTP field.                    */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_Msk (0x3UL << FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_Pos) /*!< Bit
                                                                            mask of ILIMH5V0HYSTCTRLOTP field.*/                  
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0HYSTCTRLOTP field.      */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0HYSTCTRLOTP field.      */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_SEL0 (0x0UL) /*!< Hysteresis active                                      */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_SEL1 (0x1UL) /*!< Comparators use lower threshold only                   */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_SEL2 (0x2UL) /*!< Comparators use higher threshold only                  */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0HYSTCTRLOTP_SEL3 (0x3UL) /*!< Comparators use higher threshold only                  */

/* ILIMH5V0UNDERVOLTAGESELOTP @Bits 4..5 : ILIMH5V0_UNDERVOLTAGE_SEL */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_Pos (4UL) /*!< Position of ILIMH5V0UNDERVOLTAGESELOTP field.      */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_Msk (0x3UL << FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_Pos)
                                                                            /*!< Bit mask of ILIMH5V0UNDERVOLTAGESELOTP field.*/  
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0UNDERVOLTAGESELOTP
                                                                            field.*/                                              
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0UNDERVOLTAGESELOTP
                                                                            field.*/                                              
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_SEL0 (0x0UL) /*!< Select 3.57V                                    */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_SEL1 (0x1UL) /*!< Select 3.49V                                    */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_SEL2 (0x2UL) /*!< Select 3.65V                                    */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0UNDERVOLTAGESELOTP_SEL3 (0x3UL) /*!< Select 3.75V                                    */

/* ILIMH5V0VBUSHIGHSELOTP @Bits 6..7 : ILIMH5V0_VBUS_HIGH_SEL */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_Pos (6UL) /*!< Position of ILIMH5V0VBUSHIGHSELOTP field.              */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_Msk (0x3UL << FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_Pos) /*!<
                                                                            Bit mask of ILIMH5V0VBUSHIGHSELOTP field.*/           
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0VBUSHIGHSELOTP field.*/
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0VBUSHIGHSELOTP field.*/
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_SEL0 (0x0UL) /*!< Select 4.50V                                        */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_SEL1 (0x1UL) /*!< Select 4.45V                                        */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_SEL2 (0x2UL) /*!< Select 4.40V                                        */
  #define FICR_ILIMH5V0CONFIG0OTP_ILIMH5V0VBUSHIGHSELOTP_SEL3 (0x3UL) /*!< Select 4.35V                                        */


/* FICR_ILIMH5V0CONFIG1OTP: Ilim5V0 Configuration 1 */
  #define FICR_ILIMH5V0CONFIG1OTP_ResetValue (0x00UL) /*!< Reset value of ILIMH5V0CONFIG1OTP register.                         */

/* ILIMH5V0ILIMENAOTP @Bit 0 : ILIMH5V0_ILIM_ENA */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0ILIMENAOTP_Pos (0UL) /*!< Position of ILIMH5V0ILIMENAOTP field.                      */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0ILIMENAOTP_Msk (0x1UL << FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0ILIMENAOTP_Pos) /*!< Bit mask
                                                                            of ILIMH5V0ILIMENAOTP field.*/                        
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0ILIMENAOTP_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0ILIMENAOTP field.        */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0ILIMENAOTP_Max (0x1UL) /*!< Max enumerator value of ILIMH5V0ILIMENAOTP field.        */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0ILIMENAOTP_SEL0 (0x0UL) /*!< ILIM control enabled                                    */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0ILIMENAOTP_SEL1 (0x1UL) /*!< ILIM control disabled                                   */

/* ILIMH5V0OVERVOLTAGESELOTP @Bits 1..2 : ILIMH5V0_OVERVOLTAGE_SEL */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_Pos (1UL) /*!< Position of ILIMH5V0OVERVOLTAGESELOTP field.        */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_Msk (0x3UL << FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_Pos)
                                                                            /*!< Bit mask of ILIMH5V0OVERVOLTAGESELOTP field.*/   
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_Min (0x0UL) /*!< Min enumerator value of ILIMH5V0OVERVOLTAGESELOTP
                                                                            field.*/                                              
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_Max (0x3UL) /*!< Max enumerator value of ILIMH5V0OVERVOLTAGESELOTP
                                                                            field.*/                                              
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_SEL0 (0x0UL) /*!< Select 5.5V                                      */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_SEL1 (0x1UL) /*!< Select 5.3V                                      */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_SEL2 (0x2UL) /*!< Select 5.4V                                      */
  #define FICR_ILIMH5V0CONFIG1OTP_ILIMH5V0OVERVOLTAGESELOTP_SEL3 (0x3UL) /*!< Select 7.0V (for voltage regulation enabled mode)*/


/* FICR_ILIMH5V0CTRLOTP: Ilim5V0 Control */
  #define FICR_ILIMH5V0CTRLOTP_ResetValue (0x00UL)   /*!< Reset value of ILIMH5V0CTRLOTP register.                             */

/* ILIMH5V0CTRL @Bits 0..7 : ILIMH5V0_CTRL_VAOD[7:0] */
  #define FICR_ILIMH5V0CTRLOTP_ILIMH5V0CTRL_Pos (0UL) /*!< Position of ILIMH5V0CTRL field.                                     */
  #define FICR_ILIMH5V0CTRLOTP_ILIMH5V0CTRL_Msk (0xFFUL << FICR_ILIMH5V0CTRLOTP_ILIMH5V0CTRL_Pos) /*!< Bit mask of ILIMH5V0CTRL
                                                                            field.*/                                              


/* FICR_REV0OTP: Production SW revision */
  #define FICR_REV0OTP_ResetValue (0x00UL)           /*!< Reset value of REV0OTP register.                                     */

/* REV0 @Bits 0..7 : Production SW revision, read-only OTP */
  #define FICR_REV0OTP_REV0_Pos (0UL)                /*!< Position of REV0 field.                                              */
  #define FICR_REV0OTP_REV0_Msk (0xFFUL << FICR_REV0OTP_REV0_Pos) /*!< Bit mask of REV0 field.                                 */


/* FICR_REV1OTP: Production SW revision */
  #define FICR_REV1OTP_ResetValue (0x00UL)           /*!< Reset value of REV1OTP register.                                     */

/* REV1 @Bits 0..7 : Production SW revision, read-only OTP */
  #define FICR_REV1OTP_REV1_Pos (0UL)                /*!< Position of REV1 field.                                              */
  #define FICR_REV1OTP_REV1_Msk (0xFFUL << FICR_REV1OTP_REV1_Pos) /*!< Bit mask of REV1 field.                                 */


/* FICR_REV2OTP: Production SW revision */
  #define FICR_REV2OTP_ResetValue (0x00UL)           /*!< Reset value of REV2OTP register.                                     */

/* REV2 @Bits 0..7 : Production SW revision, read-only OTP */
  #define FICR_REV2OTP_REV2_Pos (0UL)                /*!< Position of REV2 field.                                              */
  #define FICR_REV2OTP_REV2_Msk (0xFFUL << FICR_REV2OTP_REV2_Pos) /*!< Bit mask of REV2 field.                                 */


/* FICR_LOTID0OTP: Wafer Lot ID */
  #define FICR_LOTID0OTP_ResetValue (0x00UL)         /*!< Reset value of LOTID0OTP register.                                   */

/* LOTID0 @Bits 0..7 : Wafer Lot ID, read-only OTP */
  #define FICR_LOTID0OTP_LOTID0_Pos (0UL)            /*!< Position of LOTID0 field.                                            */
  #define FICR_LOTID0OTP_LOTID0_Msk (0xFFUL << FICR_LOTID0OTP_LOTID0_Pos) /*!< Bit mask of LOTID0 field.                       */


/* FICR_LOTID1OTP: Wafer Lot ID */
  #define FICR_LOTID1OTP_ResetValue (0x00UL)         /*!< Reset value of LOTID1OTP register.                                   */

/* LOTID1 @Bits 0..7 : Wafer Lot ID, read-only OTP */
  #define FICR_LOTID1OTP_LOTID1_Pos (0UL)            /*!< Position of LOTID1 field.                                            */
  #define FICR_LOTID1OTP_LOTID1_Msk (0xFFUL << FICR_LOTID1OTP_LOTID1_Pos) /*!< Bit mask of LOTID1 field.                       */


/* FICR_LOTID2OTP: Wafer Lot ID */
  #define FICR_LOTID2OTP_ResetValue (0x00UL)         /*!< Reset value of LOTID2OTP register.                                   */

/* LOTID2 @Bits 0..7 : Wafer Lot ID, read-only OTP */
  #define FICR_LOTID2OTP_LOTID2_Pos (0UL)            /*!< Position of LOTID2 field.                                            */
  #define FICR_LOTID2OTP_LOTID2_Msk (0xFFUL << FICR_LOTID2OTP_LOTID2_Pos) /*!< Bit mask of LOTID2 field.                       */


/* FICR_LOTID3OTP: Wafer Lot ID */
  #define FICR_LOTID3OTP_ResetValue (0x00UL)         /*!< Reset value of LOTID3OTP register.                                   */

/* LOTID3 @Bits 0..7 : Wafer Lot ID, read-only OTP */
  #define FICR_LOTID3OTP_LOTID3_Pos (0UL)            /*!< Position of LOTID3 field.                                            */
  #define FICR_LOTID3OTP_LOTID3_Msk (0xFFUL << FICR_LOTID3OTP_LOTID3_Pos) /*!< Bit mask of LOTID3 field.                       */


/* FICR_LOTID4OTP: Wafer Lot ID */
  #define FICR_LOTID4OTP_ResetValue (0x00UL)         /*!< Reset value of LOTID4OTP register.                                   */

/* LOTID4 @Bits 0..7 : Wafer Lot ID, read-only OTP */
  #define FICR_LOTID4OTP_LOTID4_Pos (0UL)            /*!< Position of LOTID4 field.                                            */
  #define FICR_LOTID4OTP_LOTID4_Msk (0xFFUL << FICR_LOTID4OTP_LOTID4_Pos) /*!< Bit mask of LOTID4 field.                       */


/* FICR_LOTID5OTP: Wafer Lot ID */
  #define FICR_LOTID5OTP_ResetValue (0x00UL)         /*!< Reset value of LOTID5OTP register.                                   */

/* LOTID5 @Bits 0..7 : Wafer Lot ID, read-only OTP */
  #define FICR_LOTID5OTP_LOTID5_Pos (0UL)            /*!< Position of LOTID5 field.                                            */
  #define FICR_LOTID5OTP_LOTID5_Msk (0xFFUL << FICR_LOTID5OTP_LOTID5_Pos) /*!< Bit mask of LOTID5 field.                       */


/* FICR_WAFEROTP: Wafer */
  #define FICR_WAFEROTP_ResetValue (0x00UL)          /*!< Reset value of WAFEROTP register.                                    */

/* WAFER @Bits 0..7 : Wafer, read-only OTP */
  #define FICR_WAFEROTP_WAFER_Pos (0UL)              /*!< Position of WAFER field.                                             */
  #define FICR_WAFEROTP_WAFER_Msk (0xFFUL << FICR_WAFEROTP_WAFER_Pos) /*!< Bit mask of WAFER field.                            */


/* FICR_XCOORDOTP: Wafer X coordinate */
  #define FICR_XCOORDOTP_ResetValue (0x00UL)         /*!< Reset value of XCOORDOTP register.                                   */

/* XCOORD @Bits 0..7 : Wafer X coordinate, read-only OTP */
  #define FICR_XCOORDOTP_XCOORD_Pos (0UL)            /*!< Position of XCOORD field.                                            */
  #define FICR_XCOORDOTP_XCOORD_Msk (0xFFUL << FICR_XCOORDOTP_XCOORD_Pos) /*!< Bit mask of XCOORD field.                       */


/* FICR_YCOORDOTP: Wafer Y coordinate */
  #define FICR_YCOORDOTP_ResetValue (0x00UL)         /*!< Reset value of YCOORDOTP register.                                   */

/* YCOORD @Bits 0..7 : Wafer Y coordinate, read-only OTP */
  #define FICR_YCOORDOTP_YCOORD_Pos (0UL)            /*!< Position of YCOORD field.                                            */
  #define FICR_YCOORDOTP_YCOORD_Msk (0xFFUL << FICR_YCOORDOTP_YCOORD_Pos) /*!< Bit mask of YCOORD field.                       */


/* FICR_OTPSTATUSOTP: OTP memory status */
  #define FICR_OTPSTATUSOTP_ResetValue (0x00UL)      /*!< Reset value of OTPSTATUSOTP register.                                */

/* OTPSTATUS @Bit 0 : Otp memory status, read-only OTP */
  #define FICR_OTPSTATUSOTP_OTPSTATUS_Pos (0UL)      /*!< Position of OTPSTATUS field.                                         */
  #define FICR_OTPSTATUSOTP_OTPSTATUS_Msk (0x1UL << FICR_OTPSTATUSOTP_OTPSTATUS_Pos) /*!< Bit mask of OTPSTATUS field.         */
  #define FICR_OTPSTATUSOTP_OTPSTATUS_Min (0x0UL)    /*!< Min enumerator value of OTPSTATUS field.                             */
  #define FICR_OTPSTATUSOTP_OTPSTATUS_Max (0x1UL)    /*!< Max enumerator value of OTPSTATUS field.                             */
  #define FICR_OTPSTATUSOTP_OTPSTATUS_NOTBURNED (0x0UL) /*!< OTP bits are not burned                                           */
  #define FICR_OTPSTATUSOTP_OTPSTATUS_BURNED (0x1UL) /*!< OTP bits are burned                                                  */

/* OTPSTATUSSPARE @Bits 1..7 : Otp memory status spare, read-only OTP */
  #define FICR_OTPSTATUSOTP_OTPSTATUSSPARE_Pos (1UL) /*!< Position of OTPSTATUSSPARE field.                                    */
  #define FICR_OTPSTATUSOTP_OTPSTATUSSPARE_Msk (0x7FUL << FICR_OTPSTATUSOTP_OTPSTATUSSPARE_Pos) /*!< Bit mask of OTPSTATUSSPARE
                                                                            field.*/                                              



/* =========================================================================================================================== */
/* ================                                  Peripheral Address Map                                  ================ */
/* =========================================================================================================================== */

#define NPM_ABS_BASE                      0x00000000UL
#define NPM_MAIN_BASE                     0x00000000UL
#define NPM_SYSTEM_BASE                   0x00000100UL
#define NPM_VBUSIN_BASE                   0x00000200UL
#define NPM_BCHARGER_BASE                 0x00000300UL
#define NPM_BUCK_BASE                     0x00000400UL
#define NPM_ADC_BASE                      0x00000500UL
#define NPM_GPIOS_BASE                    0x00000600UL
#define NPM_TIMER_BASE                    0x00000700UL
#define NPM_LDSW_BASE                     0x00000800UL
#define NPM_POF_BASE                      0x00000900UL
#define NPM_LEDDRV_BASE                   0x00000A00UL
#define NPM_SHIP_BASE                     0x00000B00UL
#define NPM_ERRLOG_BASE                   0x00000C00UL
#define NPM_FICR_BASE                     0x00000D00UL

/* =========================================================================================================================== */
/* ================                                  Peripheral Declaration                                  ================ */
/* =========================================================================================================================== */

#define NPM_ABS                           ((NPM_ABSMAXRATINGS_Type*)            NPM_ABS_BASE)
#define NPM_MAIN                          ((NPM_MAIN_Type*)                     NPM_MAIN_BASE)
#define NPM_SYSTEM                        ((NPM_SYSTEM_Type*)                   NPM_SYSTEM_BASE)
#define NPM_VBUSIN                        ((NPM_VBUSIN_Type*)                   NPM_VBUSIN_BASE)
#define NPM_BCHARGER                      ((NPM_BCHARGER_Type*)                 NPM_BCHARGER_BASE)
#define NPM_BUCK                          ((NPM_DCDC_Type*)                     NPM_BUCK_BASE)
#define NPM_ADC                           ((NPM_ADC_Type*)                      NPM_ADC_BASE)
#define NPM_GPIOS                         ((NPM_GPIOS_Type*)                    NPM_GPIOS_BASE)
#define NPM_TIMER                         ((NPM_TIMER_Type*)                    NPM_TIMER_BASE)
#define NPM_LDSW                          ((NPM_LDSW_Type*)                     NPM_LDSW_BASE)
#define NPM_POF                           ((NPM_POF_Type*)                      NPM_POF_BASE)
#define NPM_LEDDRV                        ((NPM_LEDDRV_Type*)                   NPM_LEDDRV_BASE)
#define NPM_SHIP                          ((NPM_SHPHLD_Type*)                   NPM_SHIP_BASE)
#define NPM_ERRLOG                        ((NPM_ERRLOG_Type*)                   NPM_ERRLOG_BASE)
#define NPM_FICR                          ((NPM_FICR_Type*)                     NPM_FICR_BASE)

/* ========================================== End of section using anonymous unions ========================================== */

#if defined (__CC_ARM)
  #pragma pop
#elif defined (__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic pop
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning restore
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#endif


#ifdef __cplusplus
}
#endif
#endif /* NPM1300_H */

