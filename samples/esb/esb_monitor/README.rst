.. _esb_monitor:

Enhanced ShockBurst: Monitor
#############################

.. contents::
   :local:
   :depth: 2

The Monitor sample shows how to use the :ref:`ug_esb` protocol in Monitor mode.
It demonstrates how to configure the Enhanced ShockBurst protocol to receive all the traffic generated on the configured channel and pipes.

Requirements
************

The sample supports the following development kits:

.. table-from-sample-yaml::

Overview
********

The sample consist of one receiver configured as a monitor that uses the :ref:`esb_README` library.
After building and programming each sample on a DK, you can monitor the traffic generated by the kits programmed with the :ref:`Transmitter <esb_ptx>` and :ref:`Receiver <esb_prx>` samples, respectively.
You can see the received traffic in real time using the `Serial Terminal app`_.
Successful monitoring is also indicated by the LEDs that should be in sync on all kits.

User interface
***************

All LEDs:

   Indicate that packets are received.

   When used together with the :ref:`Transmitter <esb_ptx>` sample:

       The first four packets turn on the LEDs sequentially.

       The next four packets turn them off again in the same order.

   To disable LEDs, unset the :kconfig:option:`CONFIG_LED_ENABLE` Kconfig option.

Configuration
*************

|config|

Building and running
********************

The Monitor sample is located in the :file:`samples/esb/esb_monitor` folder in the |NCS| folder structure.

See :ref:`building` and :ref:`programming` for information on how to build and program the application, respectively.

.. include:: /includes/nRF54H20_erase_UICR.txt

FEM support
===========

.. include:: /includes/sample_fem_support.txt

Testing
=======

After programming the DKs with the Monitor, Transmitter, and Receiver samples, you can test their functionality.

Complete the following steps to test the samples:

1. Power on all kits.
#. Observe that the LEDs change synchronously on all kits.
#. Connect to the monitor DK with a terminal emulator (for example, the `Serial Terminal app`_).
   See :ref:`test_and_optimize` for the required settings and steps.
#. Observe the logged traffic of the DK programmed with the Monitor sample.

Dependencies
************

This sample uses the following |NCS| library:

* :ref:`esb_readme`

In addition, it uses the following Zephyr libraries:

* :file:`include/zephyr/types.h`
* :ref:`zephyr:logging_api`
* :ref:`zephyr:kernel_api`:

  * :file:`include/kernel.h`
  * :file:`include/irq.h`

* :ref:`zephyr:api_peripherals`:

   * :file:`include/gpio.h`
