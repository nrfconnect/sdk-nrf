syntax = "proto2";

option java_multiple_files = true;
option java_package = "no.nordicsemi.android.wifi.provisioning";

// Common ENUMs

/* The Op Code for requests. */
enum OpCode {
  // Cannot be used in request.
  // In the response it means that decoding the Op Code
  // in the request has failed.
  RESERVED      = 0;

  // Returns the device status.
  //
  // Request parameters:
  //  - none
  // Response parameters:
  //  - DeviceStatus
  GET_STATUS    = 1;

  // Starts Wifi scan.
  //
  // Request parameters:
  //  - ScanParams
  // Response parameters:
  //  - none
  START_SCAN    = 2;

  // Manually stops Wifi scan.
  //
  // Request parameters:
  //  - none
  // Response parameters:
  //  - none
  STOP_SCAN     = 3;

  // Used to provision the Host to the given WiFi network.
  //
  // Request parameters:
  //  - WifiConfig
  // Response parameters:
  //  - none
  SET_CONFIG    = 4;

  // Erases previously saved configuration.
  //
  // Request parameters:
  //  - none
  // Response parameters:
  //  - none
  FORGET_CONFIG = 5;
}

/* Response status code. */
enum Status {
  // Returned when the request was successfully processed.
  SUCCESS                 = 0;
  // Returned when the request cannot be processed due to invalid arguments.
  // For example, if the required argument is missing.
  INVALID_ARGUMENT        = 1;
  // Returned when failed to decode the request.
  INVALID_PROTO           = 2;
  // Returned in case of internal error. Hopefully never.
  INTERNAL_ERROR          = 3;
}

/* The state of Wi-Fi station. */
enum ConnectionState {
  DISCONNECTED            = 0;
  AUTHENTICATION          = 1;
  ASSOCIATION             = 2;
  OBTAINING_IP            = 3;
  CONNECTED               = 4;
  CONNECTION_FAILED       = 5;
}

/* Connection failure reason. */
enum ConnectionFailureReason {
  // Authentication error.
  AUTH_ERROR              = 0;
  // The specified network could not be find.
  NETWORK_NOT_FOUND       = 1;
  // Timeout occurred.
  TIMEOUT                 = 2;
  // Could not obtain IP from provided provisioning information.
  FAIL_IP                 = 3;
  // Could not connect to provisioned network.
  FAIL_CONN               = 4;
}

/* Wi-Fi Band. */
enum Band {
  BAND_ANY    = 0;
  BAND_2_4_GH = 1;
  BAND_5_GH   = 2;
}

/* Wi-Fi Authentication Mode. */
enum AuthMode {
  OPEN                    = 0;
  WEP                     = 1;
  WPA_PSK                 = 2;
  WPA2_PSK                = 3;
  WPA_WPA2_PSK            = 4;
  WPA2_ENTERPRISE         = 5;
  WPA3_PSK                = 6;
  // Note: More modes can be added in the future.
}

/* Scanning parameters. */
message ScanParams {
  optional Band band              = 1 [default = BAND_ANY];
  optional bool passive           = 2 [default = false];
  optional uint32 period_ms       = 3 [default = 0]; // 0 - no timeout
  optional uint32 group_channels  = 4;
}

/* Wi-Fi details. */
message WifiInfo {
  required bytes ssid     = 1;
  required bytes bssid    = 2;
  optional Band band      = 3;
  required uint32 channel = 4;
  optional AuthMode auth  = 5;
}