/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_VERSION_PB_H_INCLUDED
#define PB_VERSION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Response payload for returned from Version characteristic. */
typedef struct _Info { 
    /* The fw version as integer. */
    uint8_t version;
} Info;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Info_init_default                        {0}
#define Info_init_zero                           {0}

/* Field tags (for use in manual encoding/decoding) */
#define Info_version_tag                         1

/* Struct field encoding specification for nanopb */
#define Info_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   version,           1)
#define Info_CALLBACK NULL
#define Info_DEFAULT NULL

extern const pb_msgdesc_t Info_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Info_fields &Info_msg

/* Maximum encoded size of messages (where known) */
#define Info_size                                3

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
