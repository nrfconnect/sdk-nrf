.. |NCS| replace:: nRF Connect SDK

.. |release| replace:: v1.4.2
.. |release_tt| replace:: ``v1.4.2``
.. |release_number_tt| replace:: ``1.4.2``

.. |SES| replace:: SEGGER Embedded Studio

.. |config| replace:: See :ref:`configure_application` for information about how to permanently or temporarily change the configuration.

.. |test_sample| replace:: After programming the sample to your development kit, test it by performing the following steps:


.. |connect_kit| replace:: Connect the kit to the computer using a USB cable.
   The kit is assigned a COM port (Windows) or ttyACM device (Linux), which is visible in the Device Manager.

.. |connect_terminal| replace:: Connect to the kit with a terminal emulator (for example, PuTTY).
   See :ref:`putty` for the required settings.

.. |connect_terminal_specific| replace:: Connect to the kit that runs this sample with a terminal emulator (for example, PuTTY).
   See :ref:`putty` for the required settings.

.. |connect_terminal_both| replace:: Connect to both kits with a terminal emulator (for example, PuTTY).
   See :ref:`putty` for the required settings.

.. |GSA| replace:: Getting Started Assistant

.. |nRF5340DKnoref| replace:: nRF5340 DK board (PCA10095)

.. |nRF9160DK| replace:: nRF9160 DK board (PCA10090) - see :ref:`ug_nrf9160`
.. |nRF5340DK| replace:: nRF5340 DK board (PCA10095) - see :ref:`ug_nrf5340`
.. |nRF52840DK| replace:: nRF52840 DK board (PCA10056) - see :ref:`ug_nrf52`
.. |nRF52833DK| replace:: nRF52833 DK board (PCA10100) - see :ref:`ug_nrf52`
.. |nRF51DK| replace:: nRF51 DK board (PCA10028)
.. |nRF52DK| replace:: nRF52 DK board (PCA10040) - see :ref:`ug_nrf52`
.. |nRF52840Dongle| replace:: nRF52840 Dongle (PCA10059) - see :ref:`ug_nrf52`
.. |Thingy91| replace:: Thingy:91 (PCA20035) - see :ref:`ug_thingy91`
.. |nRF21540DK| replace:: nRF21540 DK board (PCA10112)

.. |fota_upgrades_def| replace:: You can upgrade the firmware of the device over the air, thus without a wired connection.
   Such an upgrade is called a FOTA (firmware over-the-air) upgrade.

.. |fota_upgrades_req_mcuboot| replace:: To upgrade the application, you must use :doc:`mcuboot:index` as the upgradable bootloader (:option:`CONFIG_BOOTLOADER_MCUBOOT` must be enabled).

.. |fota_upgrades_building| replace:: To create a binary file for an application upgrade, make sure that :option:`CONFIG_BOOTLOADER_MCUBOOT` is enabled and build the application as usual.
   The build will create several binary files (see :ref:`mcuboot:mcuboot_ncs`).

.. |Google_CCLicense| replace:: Portions of this page are reproduced from work created and `shared by Google`_, and used according to terms described in the `Creative Commons 4.0 Attribution License`_.

.. |enable_thread_before_testing| replace:: Make sure to enable the OpenThread stack before building and testing this sample.
   See :ref:`ug_thread` for more information.
.. |thread_hwfc_enabled| replace:: This sample has Hardware Flow Control mechanism enabled by default in serial communication.
   When enabled, it allows devices to manage transmission by informing each other about their current state, and ensures more reliable connection in high-speed communication scenarios.

.. |zigbee_version| replace:: Zigbee 3.0
.. |zigbee_description| replace:: Zigbee is a portable, low-power software networking protocol that provides connectivity over an 802.15.4-based mesh network.
.. |enable_zigbee_before_testing| replace:: Make sure to enable the Zigbee stack before building and testing this sample.
   See :ref:`ug_zigbee` for more information.
.. |zigbee_library| replace:: This is a Zigbee library.
   See :ref:`ug_zigbee_configuring_libraries` for information about how to configure it for you Zigbee application.
.. |zigbee_ncp_package| replace:: It contains the full development-ready source code for host and evaluation-ready firmware for the nRF52840 DK and the nRF52840 Dongle (nRF SoC; not subject to modification), which is not yet feature-complete.
   The reference examples are provided for a Linux-based host.
.. |zigbee_shell_config| replace:: You can add support for Zigbee shell commands to any of the available :ref:`Zigbee samples <zigbee_samples>`.
   Some of the commands use an endpoint for sending packets, so no endpoint handler is allowed to be registered for this endpoint.

.. |nrf_desktop_module_event_note| replace:: See the :ref:`nrf_desktop_architecture` for more information about the event-based communication in the nRF Desktop application and about how to read this table.

.. |how_to_configure| replace:: See :ref:`configure_application` for information on how to set the required configuration options temporarily or permanently.

.. |trusted_execution| replace:: nRF5340 and nRF9160
