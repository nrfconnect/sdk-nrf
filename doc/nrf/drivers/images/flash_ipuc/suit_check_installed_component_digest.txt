@startuml
autonumber
participant ssf
participant sdfw_ipuc
participant ipuc_entry
participant suit_utils
participant generic_address_streamer

--> ssf ++ : suit_check_installed_component_digest(\n    component_id,\n    alg_id,\n    digest\n)

opt component_id declared as IPUC
ssf -> sdfw_ipuc ++ : suit_ipuc_sdfw_digest_compare(\n    component_id,\n    alg_id,\n    digest\n)

sdfw_ipuc -> ipuc_entry ** : ipuc_entry_from_component_id(component_id)
rnote over ipuc_entry
  IPUC_IPC_IN_PLACE_UPDATE
end note
note right
  IPUC must be in the IPUC_IPC_IN_PLACE_UPDATE state.
  Remote ID is not checked.
end note

sdfw_ipuc -> ipuc_entry ++ : << check if last chunk stored >>
deactivate ipuc_entry
note right
  Last chunk flag set.
  If not set, exits with an error code.
end note

sdfw_ipuc -> suit_utils ++ : suit_plat_decode_component_type(component_id)
deactivate suit_utils
sdfw_ipuc -> suit_utils ++ : suit_plat_decode_address_size(component_id)
deactivate suit_utils

sdfw_ipuc -> digest_sink ** : suit_digest_sink_get(alg_id, digest)
sdfw_ipuc -> generic_address_streamer ++: suit_generic_address_streamer_stream(address, size)
generic_address_streamer -> digest_sink ++ : write(data)
deactivate digest_sink
deactivate generic_address_streamer
sdfw_ipuc -> digest_sink ++ : digest_match()
deactivate digest_sink
sdfw_ipuc -> digest_sink : release()
destroy digest_sink

deactivate sdfw_ipuc
end
opt IPUC not found
ssf -> digest_cache ++ : suit_plat_digest_cache_compare(component_id, alg_id, digest)
deactivate digest_cache
end

deactivate sdfw_ipuc
deactivate ssf

@enduml
