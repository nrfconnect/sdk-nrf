<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="gzp_8h" kind="file" language="C++">
    <compoundname>gzp.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">nrf_gzll.h</includes>
    <includes refid="gzp__config_8h" local="yes">gzp_config.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/gzp.h</label>
        <link refid="gzp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>gzp_config.h</label>
        <link refid="gzp__config_8h"/>
      </node>
      <node id="4">
        <label>nrf_gzll.h</label>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>Pairing configuration defines</header>
      <memberdef kind="define" id="group__gzp_ga182a74e6f09944e693cde1be08fdacfc_1ga182a74e6f09944e693cde1be08fdacfc" prot="public" static="no">
        <name>GZP_PAIRING_PIPE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pipe reserved for initial pairing communication. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="38" column="9" bodyfile="include/gzp.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga5061300f8d940942b9794fdbcb97b403_1ga5061300f8d940942b9794fdbcb97b403" prot="public" static="no">
        <name>GZP_DATA_PIPE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pipe reserved for GZP encrypted data communication (one pipe only). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="40" column="9" bodyfile="include/gzp.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga6ba06ffcdb5c467a19e0a220f30c11db_1ga6ba06ffcdb5c467a19e0a220f30c11db" prot="public" static="no">
        <name>GZP_TX_RX_TRANS_DELAY</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Time to wait between request and fetch packets in RX_PERIODS (2 timeslot periods) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="42" column="9" bodyfile="include/gzp.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga50ae5998a3561c07f92f95aa35d9bf61_1ga50ae5998a3561c07f92f95aa35d9bf61" prot="public" static="no">
        <name>GZP_SYSTEM_ADDRESS_WIDTH</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Must equal Gazell base address length. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="44" column="9" bodyfile="include/gzp.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gacffd37db5819d10e659089277021d55f_1gacffd37db5819d10e659089277021d55f" prot="public" static="no">
        <name>GZP_VALIDATION_ID</name>
        <initializer>{0x32, 0x53, 0x66}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Validation ID. Required to be shared by Host and Device. Not a secret. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="48" column="9" bodyfile="include/gzp.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" prot="public" static="no">
        <name>GZP_VALIDATION_ID_LENGTH</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Validation ID length in bytes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="50" column="9" bodyfile="include/gzp.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gaf35410042a151241941ca98c33f23b88_1gaf35410042a151241941ca98c33f23b88" prot="public" static="no">
        <name>GZP_HOST_ID_LENGTH</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Host ID length in bytes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="52" column="9" bodyfile="include/gzp.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gac5fd1ba6e4b161953182cfc099d1ad03_1gac5fd1ba6e4b161953182cfc099d1ad03" prot="public" static="no">
        <name>GZP_SESSION_TOKEN_LENGTH</name>
        <initializer><ref refid="group__gzp_gaf35410042a151241941ca98c33f23b88_1gaf35410042a151241941ca98c33f23b88" kindref="member">GZP_HOST_ID_LENGTH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Session token length in bytes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="54" column="9" bodyfile="include/gzp.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga18cd8f5df0c0a0eee57850d09a452fb6_1ga18cd8f5df0c0a0eee57850d09a452fb6" prot="public" static="no">
        <name>GZP_DYN_KEY_LENGTH</name>
        <initializer>(16 - <ref refid="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" kindref="member">GZP_VALIDATION_ID_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dynamic key length in bytes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="56" column="9" bodyfile="include/gzp.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gaa957841254817c0a239fd1f99506294d_1gaa957841254817c0a239fd1f99506294d" prot="public" static="no">
        <name>GZP_HOST_RX_POWER_THRESHOLD</name>
        <initializer>-64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RSSI threshold for when signal strength in RX packet power is high enough. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="59" column="9" bodyfile="include/gzp.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Device -&gt; Host packet definitions</header>
      <memberdef kind="define" id="group__gzp_ga52c1cfd2eda5d86a27b710d453c526b3_1ga52c1cfd2eda5d86a27b710d453c526b3" prot="public" static="no">
        <name>GZP_CMD_HOST_ADDRESS_REQ_PAYLOAD_LENGTH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host address request&quot; packet, payload length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="71" column="9" bodyfile="include/gzp.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga72f37ba7b90e25d00b4ae2cbfe5d7de2_1ga72f37ba7b90e25d00b4ae2cbfe5d7de2" prot="public" static="no">
        <name>GZP_CMD_HOST_ADDRESS_FETCH_PAYLOAD_LENGTH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host address fetch&quot; packet, payload length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="74" column="9" bodyfile="include/gzp.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga1bfeb56e6e24c8156db61c0c6719df01_1ga1bfeb56e6e24c8156db61c0c6719df01" prot="public" static="no">
        <name>GZP_CMD_HOST_ID_REQ_SESSION_TOKEN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host ID request&quot; packet, session token position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="77" column="9" bodyfile="include/gzp.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga9ddbedd035c7dde3d0d4110d184f1157_1ga9ddbedd035c7dde3d0d4110d184f1157" prot="public" static="no">
        <name>GZP_CMD_HOST_ID_REQ_PAYLOAD_LENGTH</name>
        <initializer>					    (<ref refid="group__gzp_ga1bfeb56e6e24c8156db61c0c6719df01_1ga1bfeb56e6e24c8156db61c0c6719df01" kindref="member">GZP_CMD_HOST_ID_REQ_SESSION_TOKEN</ref> + \
					    <ref refid="group__gzp_gac5fd1ba6e4b161953182cfc099d1ad03_1gac5fd1ba6e4b161953182cfc099d1ad03" kindref="member">GZP_SESSION_TOKEN_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="79" column="9" bodyfile="include/gzp.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga063e4ea2fe7de7ff03e2bb6f33811325_1ga063e4ea2fe7de7ff03e2bb6f33811325" prot="public" static="no">
        <name>GZP_CMD_HOST_ID_FETCH_VALIDATION_ID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host ID fetch&quot; packet </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="87" column="9" bodyfile="include/gzp.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gab7d8c0fcac47a02517e8830d56855077_1gab7d8c0fcac47a02517e8830d56855077" prot="public" static="no">
        <name>GZP_CMD_HOST_ID_FETCH_PAYLOAD_LENGTH</name>
        <initializer>					      (<ref refid="group__gzp_ga063e4ea2fe7de7ff03e2bb6f33811325_1ga063e4ea2fe7de7ff03e2bb6f33811325" kindref="member">GZP_CMD_HOST_ID_FETCH_VALIDATION_ID</ref> + \
					      <ref refid="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" kindref="member">GZP_VALIDATION_ID_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host ID fetch&quot; payload length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="89" column="9" bodyfile="include/gzp.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga5e563fa9e6f5d3e5a8476ff4d78cf2fa_1ga5e563fa9e6f5d3e5a8476ff4d78cf2fa" prot="public" static="no">
        <name>GZP_CMD_KEY_UPDATE_PREPARE_PAYLOAD_LENGTH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Key update prepare&quot; payload length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="97" column="9" bodyfile="include/gzp.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga479c9971d0c8418a52eb75fd8950dbed_1ga479c9971d0c8418a52eb75fd8950dbed" prot="public" static="no">
        <name>GZP_CMD_KEY_UPDATE_VALIDATION_ID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Key update&quot; packet, validation ID position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="100" column="9" bodyfile="include/gzp.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga5909e15084f425c7cb7a94a13ae9f2ba_1ga5909e15084f425c7cb7a94a13ae9f2ba" prot="public" static="no">
        <name>GZP_CMD_KEY_UPDATE_NEW_KEY</name>
        <initializer>(<ref refid="group__gzp_ga479c9971d0c8418a52eb75fd8950dbed_1ga479c9971d0c8418a52eb75fd8950dbed" kindref="member">GZP_CMD_KEY_UPDATE_VALIDATION_ID</ref> + <ref refid="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" kindref="member">GZP_VALIDATION_ID_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Key update&quot; packet, new key position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="102" column="9" bodyfile="include/gzp.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gaac13bfd1ba828af3f717a5804568b520_1gaac13bfd1ba828af3f717a5804568b520" prot="public" static="no">
        <name>GZP_CMD_KEY_UPDATE_PAYLOAD_LENGTH</name>
        <initializer>(<ref refid="group__gzp_ga5909e15084f425c7cb7a94a13ae9f2ba_1ga5909e15084f425c7cb7a94a13ae9f2ba" kindref="member">GZP_CMD_KEY_UPDATE_NEW_KEY</ref> + <ref refid="group__gzp_ga18cd8f5df0c0a0eee57850d09a452fb6_1ga18cd8f5df0c0a0eee57850d09a452fb6" kindref="member">GZP_DYN_KEY_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Key update&quot; packet, payload length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="104" column="9" bodyfile="include/gzp.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga4eebdb5ccff8a3092679717ce2fbad95_1ga4eebdb5ccff8a3092679717ce2fbad95" prot="public" static="no">
        <name>GZP_CMD_ENCRYPTED_USER_DATA_VALIDATION_ID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Encrypted user data&quot; packet, validation ID position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="112" column="9" bodyfile="include/gzp.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gaa7bd5f7db3733cfd3574b9c1f4d37c5b_1gaa7bd5f7db3733cfd3574b9c1f4d37c5b" prot="public" static="no">
        <name>GZP_CMD_ENCRYPTED_USER_DATA_PAYLOAD</name>
        <initializer>					     (<ref refid="group__gzp_ga4eebdb5ccff8a3092679717ce2fbad95_1ga4eebdb5ccff8a3092679717ce2fbad95" kindref="member">GZP_CMD_ENCRYPTED_USER_DATA_VALIDATION_ID</ref> + \
					     <ref refid="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" kindref="member">GZP_VALIDATION_ID_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Encrypted user data&quot; packet, user data position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="114" column="9" bodyfile="include/gzp.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gac669b5eb6087018e56e105bae4321a89_1gac669b5eb6087018e56e105bae4321a89" prot="public" static="no">
        <name>GZP_ENCRYPTED_USER_DATA_PACKET_OVERHEAD</name>
        <initializer>						 (<ref refid="group__gzp_ga4eebdb5ccff8a3092679717ce2fbad95_1ga4eebdb5ccff8a3092679717ce2fbad95" kindref="member">GZP_CMD_ENCRYPTED_USER_DATA_VALIDATION_ID</ref> + \
						 <ref refid="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" kindref="member">GZP_VALIDATION_ID_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Encrypted user data&quot; packet, packet overhead length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="117" column="9" bodyfile="include/gzp.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga669cc0042151389183656fcc270b62cb_1ga669cc0042151389183656fcc270b62cb" prot="public" static="no">
        <name>GZP_ENCRYPTED_USER_DATA_MAX_LENGTH</name>
        <initializer>(17 - <ref refid="group__gzp_gac669b5eb6087018e56e105bae4321a89_1gac669b5eb6087018e56e105bae4321a89" kindref="member">GZP_ENCRYPTED_USER_DATA_PACKET_OVERHEAD</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Encrypted user data&quot; packet, max payload length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="120" column="9" bodyfile="include/gzp.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gae77600de42fcef5deaa2dffc27345e74_1gae77600de42fcef5deaa2dffc27345e74" prot="public" static="no">
        <name>GZP_CMD_FETCH_RESP_PAYLOAD_LENGTH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>General &quot;fetch response&quot; packet, payload_length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="127" column="9" bodyfile="include/gzp.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Host -&gt; Device packet definitions</header>
      <memberdef kind="define" id="group__gzp_ga18628801a88eb1c282775f998d159cc0_1ga18628801a88eb1c282775f998d159cc0" prot="public" static="no">
        <name>GZP_CMD_HOST_ADDRESS_RESP_ADDRESS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host address fetch&quot; response packet, address position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="139" column="9" bodyfile="include/gzp.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gad9b6ecc88f95c014382564b104517689_1gad9b6ecc88f95c014382564b104517689" prot="public" static="no">
        <name>GZP_CMD_HOST_ADDRESS_RESP_PAYLOAD_LENGTH</name>
        <initializer>						  (<ref refid="group__gzp_ga18628801a88eb1c282775f998d159cc0_1ga18628801a88eb1c282775f998d159cc0" kindref="member">GZP_CMD_HOST_ADDRESS_RESP_ADDRESS</ref> + \
						  <ref refid="group__gzp_ga50ae5998a3561c07f92f95aa35d9bf61_1ga50ae5998a3561c07f92f95aa35d9bf61" kindref="member">GZP_SYSTEM_ADDRESS_WIDTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host address fetch&quot; response packet, payload length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="141" column="9" bodyfile="include/gzp.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga4adce983868b4568c6a06b8fc1340b20_1ga4adce983868b4568c6a06b8fc1340b20" prot="public" static="no">
        <name>GZP_CMD_HOST_ID_FETCH_RESP_VALIDATION_ID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host ID fetch&quot; response packet, validation ID position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="151" column="9" bodyfile="include/gzp.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gaec0bfafc1920d42985e8132dba546326_1gaec0bfafc1920d42985e8132dba546326" prot="public" static="no">
        <name>GZP_CMD_HOST_ID_FETCH_RESP_STATUS</name>
        <initializer>					   (<ref refid="group__gzp_ga4adce983868b4568c6a06b8fc1340b20_1ga4adce983868b4568c6a06b8fc1340b20" kindref="member">GZP_CMD_HOST_ID_FETCH_RESP_VALIDATION_ID</ref> + \
					   <ref refid="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" kindref="member">GZP_VALIDATION_ID_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host ID fetch&quot; response packet, status position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="153" column="9" bodyfile="include/gzp.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gac8b8df05a07c695bb2564d271170331f_1gac8b8df05a07c695bb2564d271170331f" prot="public" static="no">
        <name>GZP_CMD_HOST_ID_FETCH_RESP_HOST_ID</name>
        <initializer>(<ref refid="group__gzp_gaec0bfafc1920d42985e8132dba546326_1gaec0bfafc1920d42985e8132dba546326" kindref="member">GZP_CMD_HOST_ID_FETCH_RESP_STATUS</ref> + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host ID fetch&quot; response packet, Host ID position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="156" column="9" bodyfile="include/gzp.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga08c17bcbaf5f24b83f627bd1ae103844_1ga08c17bcbaf5f24b83f627bd1ae103844" prot="public" static="no">
        <name>GZP_CMD_HOST_ID_FETCH_RESP_PAYLOAD_LENGTH</name>
        <initializer>						   (<ref refid="group__gzp_gac8b8df05a07c695bb2564d271170331f_1gac8b8df05a07c695bb2564d271170331f" kindref="member">GZP_CMD_HOST_ID_FETCH_RESP_HOST_ID</ref> + \
						   <ref refid="group__gzp_gaf35410042a151241941ca98c33f23b88_1gaf35410042a151241941ca98c33f23b88" kindref="member">GZP_HOST_ID_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Host ID fetch&quot; response packet, payload length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="158" column="9" bodyfile="include/gzp.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gaa70c4659d3b486579e063568965be3fe_1gaa70c4659d3b486579e063568965be3fe" prot="public" static="no">
        <name>GZP_CMD_KEY_UPDATE_PREPARE_RESP_SESSION_TOKEN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Key update prepare&quot; response packet, session token position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="168" column="9" bodyfile="include/gzp.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga31baf44d94376a31d67308b4a4f844d1_1ga31baf44d94376a31d67308b4a4f844d1" prot="public" static="no">
        <name>GZP_CMD_KEY_UPDATE_PREPARE_RESP_PAYLOAD_LENGTH</name>
        <initializer>		(<ref refid="group__gzp_gaa70c4659d3b486579e063568965be3fe_1gaa70c4659d3b486579e063568965be3fe" kindref="member">GZP_CMD_KEY_UPDATE_PREPARE_RESP_SESSION_TOKEN</ref> + \
		 <ref refid="group__gzp_gac5fd1ba6e4b161953182cfc099d1ad03_1gac5fd1ba6e4b161953182cfc099d1ad03" kindref="member">GZP_SESSION_TOKEN_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Key update prepare&quot; response packet, payload length position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="170" column="9" bodyfile="include/gzp.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gaad84c1d02372740ccf1b07e73268cc5e_1gaad84c1d02372740ccf1b07e73268cc5e" prot="public" static="no">
        <name>GZP_CMD_ENCRYPTED_USER_DATA_RESP_SESSION_TOKEN</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Encrypted user data&quot; response packet, session token position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="181" column="9" bodyfile="include/gzp.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_ga92ba501194b56cdb08eaea364ee23c56_1ga92ba501194b56cdb08eaea364ee23c56" prot="public" static="no">
        <name>GZP_CMD_ENCRYPTED_USER_DATA_RESP_VALIDATION_ID</name>
        <initializer>		(<ref refid="group__gzp_gaad84c1d02372740ccf1b07e73268cc5e_1gaad84c1d02372740ccf1b07e73268cc5e" kindref="member">GZP_CMD_ENCRYPTED_USER_DATA_RESP_SESSION_TOKEN</ref> + \
		 <ref refid="group__gzp_gac5fd1ba6e4b161953182cfc099d1ad03_1gac5fd1ba6e4b161953182cfc099d1ad03" kindref="member">GZP_SESSION_TOKEN_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Encrypted user data&quot; response packet, validation ID position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="183" column="9" bodyfile="include/gzp.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__gzp_gaa0711e1199e7ae89677b40d3322053b7_1gaa0711e1199e7ae89677b40d3322053b7" prot="public" static="no">
        <name>GZP_CMD_ENCRYPTED_USER_DATA_RESP_PAYLOAD_LENGTH</name>
        <initializer>		(<ref refid="group__gzp_ga92ba501194b56cdb08eaea364ee23c56_1ga92ba501194b56cdb08eaea364ee23c56" kindref="member">GZP_CMD_ENCRYPTED_USER_DATA_RESP_VALIDATION_ID</ref> + \
		 <ref refid="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" kindref="member">GZP_VALIDATION_ID_LENGTH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&quot;Encrypted user data&quot; response packet, payload length position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="187" column="9" bodyfile="include/gzp.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Typedefs</header>
      <memberdef kind="enum" id="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1ga201bf34f8352ac1993d9d00744e717bc" prot="public" static="no" strong="no">
        <type></type>
        <name>gzp_key_select</name>
        <enumvalue id="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bcaba266e310cf7180b8ed1d680a63aec76" prot="public">
          <name>GZP_ID_EXCHANGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&quot;Secret key&quot; only </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bcace965aae3e636886a3a20ac7bcebb5e4" prot="public">
          <name>GZP_KEY_EXCHANGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&quot;Secret key&quot; and &quot;Host ID&quot; </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bca0fdbb345d7a7cffa0f5d33d27aadbc8f" prot="public">
          <name>GZP_DATA_EXCHANGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>&quot;Dynamic key&quot; and &quot;Host ID&quot; </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator used for selecting the key to be used for encryption. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="219" column="1" bodyfile="include/gzp.h" bodystart="219" bodyend="226"/>
      </memberdef>
      <memberdef kind="enum" id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1gaa90da7a20553fe9d779d417299a04049" prot="public" static="no" strong="no">
        <type></type>
        <name>gzp_cmd</name>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049aa1786d3611a799488779c6e970c2e3c3" prot="public">
          <name>GZP_CMD_HOST_ADDRESS_REQ</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Host address request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049abdc3cefd52154e54291fc2f00d8c7efe" prot="public">
          <name>GZP_CMD_HOST_ADDRESS_FETCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Host address fetch </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a778c2e2368270ba4aa28caf562368537" prot="public">
          <name>GZP_CMD_HOST_ID_REQ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Host ID request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a96b914a5a540eecf14281789ff94180e" prot="public">
          <name>GZP_CMD_HOST_ID_FETCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Host ID fetch request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049aa8a05e54b39b1d48992ffe178dfd896f" prot="public">
          <name>GZP_CMD_KEY_UPDATE_PREPARE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Key update prepare </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a5fea4a9050e98dbf6794e2026a85edd7" prot="public">
          <name>GZP_CMD_KEY_UPDATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Key update </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a31ae37999e3ce41fd804fb94488655f4" prot="public">
          <name>GZP_CMD_ENCRYPTED_USER_DATA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Encrypted user data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a99645f1af1c229488420310c520a27c7" prot="public">
          <name>GZP_CMD_FETCH_RESP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Fetch response </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a138bd6ac53e0d228f1b8788e8d958873" prot="public">
          <name>GZP_CMD_HOST_ADDRESS_RESP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Host address response </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a60833e51ad70995e2022c00c8a9b50ae" prot="public">
          <name>GZP_CMD_HOST_ID_FETCH_RESP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Host ID fetch response </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a37adb9b73f7abba535ee08b3a71d5dda" prot="public">
          <name>GZP_CMD_KEY_UPDATE_PREPARE_RESP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Key update prepare </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049ac78d9e06d9021b21f0cf9a9588814864" prot="public">
          <name>GZP_CMD_ENCRYPTED_USER_DATA_RESP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Encrypted user data response </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator used in the first payload byte of each packet to indicate the packet type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="234" column="1" bodyfile="include/gzp.h" bodystart="234" bodyend="259"/>
      </memberdef>
      <memberdef kind="enum" id="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1ga8176d0ee414adb4dddaf83fd5e9ea9b4" prot="public" static="no" strong="no">
        <type></type>
        <name>gzp_id_req_res</name>
        <enumvalue id="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4ab51f874fa9692b24ac18f9536a14914b" prot="public">
          <name>GZP_ID_RESP_PENDING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ID response pending </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a1d29b203c80fc64360929d55a5cdae38" prot="public">
          <name>GZP_ID_RESP_GRANTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ID response granted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a102d54e19b17d381c3bc7bcf97b14f16" prot="public">
          <name>GZP_ID_RESP_REJECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ID response rejected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a41000e655f952a6055b2aca3283a453d" prot="public">
          <name>GZP_ID_RESP_FAILED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ID response failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a820b18e010210a5b7792369ab7db90ce" prot="public">
          <name>GZP_ID_RESP_NO_REQUEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Default value. No ID request has yet been received. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator used to identify the state of the current Host ID request. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="267" column="1" bodyfile="include/gzp.h" bodystart="267" bodyend="278"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gzp_ga06db45942dad29b67add91609ce70ca2_1ga06db45942dad29b67add91609ce70ca2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* gzp_tx_result_callback) (bool success, uint32_t pipe, const nrf_gzll_device_tx_info_t *tx_info)</definition>
        <argsstring>)(bool success, uint32_t pipe, const nrf_gzll_device_tx_info_t *tx_info)</argsstring>
        <name>gzp_tx_result_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function for reporting packet transmit result</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>success</parametername>
</parameternamelist>
<parameterdescription>
<para>is the packet transmit result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipe</parametername>
</parameternamelist>
<parameterdescription>
<para>is the pipe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tx_info</parametername>
</parameternamelist>
<parameterdescription>
<para>struct is the information about the packet transmission. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="288" column="9" bodyfile="include/gzp.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gzp_gab740a3b0b08688c20f0e3db7827280cd_1gab740a3b0b08688c20f0e3db7827280cd" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* gzp_address_req_callback) (bool result, void *context)</definition>
        <argsstring>)(bool result, void *context)</argsstring>
        <name>gzp_address_req_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function for reporting &quot;system address&quot; request result</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>corresponds to <ref refid="group__gzp_gaf0789378179910143ee80f7fc54eeede_1gaf0789378179910143ee80f7fc54eeede" kindref="member">gzp_address_req_send()</ref> return value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the user context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="299" column="9" bodyfile="include/gzp.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gzp_gab30ed0df53835f21804f53430f0715aa_1gab30ed0df53835f21804f53430f0715aa" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* gzp_id_req_callback) (enum gzp_id_req_res result, void *context)</definition>
        <argsstring>)(enum gzp_id_req_res result, void *context)</argsstring>
        <name>gzp_id_req_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function for reporting Host ID request result</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>corresponds to <ref refid="group__gzp_ga33c5b33085f18d259f0e4ba22b8747e0_1ga33c5b33085f18d259f0e4ba22b8747e0" kindref="member">gzp_id_req_send()</ref> return value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the user context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="308" column="9" bodyfile="include/gzp.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gzp_ga9ac5c54b97b59878e89eef6a62dc0f49_1ga9ac5c54b97b59878e89eef6a62dc0f49" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* gzp_crypt_data_send_callback) (bool result, void *context)</definition>
        <argsstring>)(bool result, void *context)</argsstring>
        <name>gzp_crypt_data_send_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function for reporting encrypted user data transmit result</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>corresponds to <ref refid="group__gzp_ga4994083175f26dbffef2d1c934a01248_1ga4994083175f26dbffef2d1c934a01248" kindref="member">gzp_crypt_data_send()</ref> return value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the user context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="317" column="9" bodyfile="include/gzp.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Misc. function prototypes</header>
      <memberdef kind="function" id="group__gzp_gadcea82d07590c71cc8cc07b6133638a7_1gadcea82d07590c71cc8cc07b6133638a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_crypt_set_session_token</definition>
        <argsstring>(const uint8_t *token)</argsstring>
        <name>gzp_crypt_set_session_token</name>
        <param>
          <type>const uint8_t *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the session token.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the session token to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="334" column="6" declfile="include/gzp.h" declline="334" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gab8b2d42a795185e9dd970d5ab988fa67_1gab8b2d42a795185e9dd970d5ab988fa67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_crypt_get_session_token</definition>
        <argsstring>(uint8_t *dst_token)</argsstring>
        <name>gzp_crypt_get_session_token</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst_token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the session token.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_token</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to write the session token. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="342" column="6" declfile="include/gzp.h" declline="342" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gab4e21e991abe75ebf2ae3a765be0cb06_1gab4e21e991abe75ebf2ae3a765be0cb06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_crypt_set_dyn_key</definition>
        <argsstring>(const uint8_t *dyn_key)</argsstring>
        <name>gzp_crypt_set_dyn_key</name>
        <param>
          <type>const uint8_t *</type>
          <declname>dyn_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the dynamic key.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dyn_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the dynamic key to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="350" column="6" declfile="include/gzp.h" declline="350" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga26a6e65daa12818457e9626fdfcdc16d_1ga26a6e65daa12818457e9626fdfcdc16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_crypt_get_dyn_key</definition>
        <argsstring>(uint8_t *dst_key)</argsstring>
        <name>gzp_crypt_get_dyn_key</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dynamic key.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to write the dynamic key too. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="358" column="6" declfile="include/gzp.h" declline="358" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga4fa57ac9f1c50f90b6ba3fe7eb51c080_1ga4fa57ac9f1c50f90b6ba3fe7eb51c080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_set_host_id</definition>
        <argsstring>(const uint8_t *src)</argsstring>
        <name>gzp_set_host_id</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the Host ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Host ID to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="366" column="6" declfile="include/gzp.h" declline="366" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga5db495082721e37dc1302f85834d9230_1ga5db495082721e37dc1302f85834d9230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_get_host_id</definition>
        <argsstring>(uint8_t *dst)</argsstring>
        <name>gzp_get_host_id</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Host ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to write the Host ID to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="374" column="6" declfile="include/gzp.h" declline="374" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga9023719a3ee68f82f2b6d9deda083a66_1ga9023719a3ee68f82f2b6d9deda083a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_crypt_select_key</definition>
        <argsstring>(enum gzp_key_select key_select)</argsstring>
        <name>gzp_crypt_select_key</name>
        <param>
          <type>enum <ref refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1ga201bf34f8352ac1993d9d00744e717bc" kindref="member">gzp_key_select</ref></type>
          <declname>key_select</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Selecting what key-set that should be used when encrypting data using <ref refid="group__gzp_gaab80c20738dc7bebba95704536e82e38_1gaab80c20738dc7bebba95704536e82e38" kindref="member">gzp_crypt()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key_select</parametername>
</parameternamelist>
<parameterdescription>
<para>Key-set to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="383" column="6" declfile="include/gzp.h" declline="383" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gaab80c20738dc7bebba95704536e82e38_1gaab80c20738dc7bebba95704536e82e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_crypt</definition>
        <argsstring>(uint8_t *dst, const uint8_t *src, uint8_t length)</argsstring>
        <name>gzp_crypt</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encypt / decrypt data.</para>
<para>The current &quot;session token&quot; will be used as initialization vector (IV). The AES key to be used is selected by <ref refid="group__gzp_ga9023719a3ee68f82f2b6d9deda083a66_1ga9023719a3ee68f82f2b6d9deda083a66" kindref="member">gzp_crypt_select_key()</ref>. AES is a symmetric encryption scheme, this function can be used to perform both encryption and decryption.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination to write encrypted data to. Should be 16 bytes long. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source data to encrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length in bytes of src. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="398" column="6" declfile="include/gzp.h" declline="398" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga288cb74335df9d0f81f29b632a27c254_1ga288cb74335df9d0f81f29b632a27c254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gzp_validate_id</definition>
        <argsstring>(const uint8_t *src_id)</argsstring>
        <name>gzp_validate_id</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare the *src_id with a pre-defined validation ID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the source validation ID to compare to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If *src_id equals the pre-defined ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>If *src_id does not equal the pre-defined ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="409" column="6" declfile="include/gzp.h" declline="409" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gafdf97aef9c54208cde14f91206d4fd3a_1gafdf97aef9c54208cde14f91206d4fd3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_add_validation_id</definition>
        <argsstring>(uint8_t *dst_id)</argsstring>
        <name>gzp_add_validation_id</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add the pre-defined validation ID to dst_id. GZP_VALIDATION_ID_LENGTH bytes will be added.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to add the GZP validation ID to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="418" column="6" declfile="include/gzp.h" declline="418" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga739fa1981fe1606f79dfbc305652e50c_1ga739fa1981fe1606f79dfbc305652e50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_random_numbers_generate</definition>
        <argsstring>(uint8_t *dst, uint8_t n)</argsstring>
        <name>gzp_random_numbers_generate</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate random bytes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination to write the random bytes to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to generate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="427" column="6" declfile="include/gzp.h" declline="427" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga6c2fd95c5a3c45e1a3bceebf72f5c990_1ga6c2fd95c5a3c45e1a3bceebf72f5c990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gzp_update_radio_params</definition>
        <argsstring>(const uint8_t *system_address)</argsstring>
        <name>gzp_update_radio_params</name>
        <param>
          <type>const uint8_t *</type>
          <declname>system_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the channel table and the system address.</para>
<para>The channel table is updated to pseudo-random set generated using the system address. The channel table still includes GZP_CHANNEL_MAX and GZP_CHANNEL_MIN. The system address is applied to base address 1 and therefore applies to pipes 1-7.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>system_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the system_address to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If the radio parameters were updated successfully. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>If there was an error updated the radio parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="444" column="6" declfile="include/gzp.h" declline="444" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga3cb2e9557ff22e0c6dfe552e59e226cc_1ga3cb2e9557ff22e0c6dfe552e59e226cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_generate_channels</definition>
        <argsstring>(uint8_t *ch_dst, const uint8_t *address, uint8_t channel_set_size)</argsstring>
        <name>gzp_generate_channels</name>
        <param>
          <type>uint8_t *</type>
          <declname>ch_dst</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_set_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a set of channels from a 4 byte address.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ch_dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination to write the channel set to. The channel set includes GZP_CHANNEL_MAX and GZP_CHANNEL_MIN. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>Four byte address to generate the channel set from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_set_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the channel set to generate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="455" column="6" declfile="include/gzp.h" declline="455" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga2b720c2fcfa4a0df48da14d88e58fe67_1ga2b720c2fcfa4a0df48da14d88e58fe67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_xor_cipher</definition>
        <argsstring>(uint8_t *dst, const uint8_t *src, const uint8_t *pad, uint8_t length)</argsstring>
        <name>gzp_xor_cipher</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform an XOR on two byte strings.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination to write the result to. Should be of size length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pad</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to perform the XOR operation on. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="466" column="6" declfile="include/gzp.h" declline="466" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Common Device and Host functions</header>
      <memberdef kind="function" id="group__gzp_gae0c59c904a0ea56323274885ac3da45a_1gae0c59c904a0ea56323274885ac3da45a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_init</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialization function. This function initializes the Gazell Pairing Library.</para>
<para>This function must be called before any of the other Gazell Pairing Library functions are used and must be called <bold>after</bold> gzll_init() is called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="482" column="6" declfile="include/gzp.h" declline="482" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga0374790d09eb34436ae22618bac6b8f3_1ga0374790d09eb34436ae22618bac6b8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_erase_pairing_data</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_erase_pairing_data</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for erasing all pairing data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="487" column="6" declfile="include/gzp.h" declline="487" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga82d40c440e1f046de35269527cece57b_1ga82d40c440e1f046de35269527cece57b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_gzp_disable_gzll</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_gzp_disable_gzll</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable Gazell and sleep while waiting for nrf_gzll_disabled callback. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="492" column="6" declfile="include/gzp.h" declline="492" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga9da69761034ee9fa836e14cb4f08ada3_1ga9da69761034ee9fa836e14cb4f08ada3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_id_req_cancel</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_id_req_cancel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for cancelling an ongoing (pending) &quot;Host ID request&quot;.</para>
<para>After calling this function the &quot;Host ID request&quot; status will go to &quot;ID request Idle&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="500" column="6" declfile="include/gzp.h" declline="500" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga8078977f492aab495d8228445e1156ca_1ga8078977f492aab495d8228445e1156ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_gzp_flush_rx_fifo</definition>
        <argsstring>(uint32_t pipe)</argsstring>
        <name>nrf_gzp_flush_rx_fifo</name>
        <param>
          <type>uint32_t</type>
          <declname>pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flush the GZLL RX FIFO for a specific pipe while GZLL is disabled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pipe</parametername>
</parameternamelist>
<parameterdescription>
<para>Pipe. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="507" column="6" declfile="include/gzp.h" declline="507" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Device functions</header>
      <memberdef kind="function" id="group__gzp_ga2fe74b0a71628c105ca29fe6141cd47a_1ga2fe74b0a71628c105ca29fe6141cd47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_tx_result_callback_register</definition>
        <argsstring>(gzp_tx_result_callback callback)</argsstring>
        <name>gzp_tx_result_callback_register</name>
        <param>
          <type><ref refid="group__gzp_ga06db45942dad29b67add91609ce70ca2_1ga06db45942dad29b67add91609ce70ca2" kindref="member">gzp_tx_result_callback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for registering callback to be called on transmit done.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>is the callback function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="518" column="6" declfile="include/gzp.h" declline="518" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gad67a8c4ac5e533604d5e5e8aab149a58_1gad67a8c4ac5e533604d5e5e8aab149a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t gzp_get_pairing_status</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_get_pairing_status</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to check whether a Device has existing pairing data, implying that it is paired to a Host.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-2</parametername>
</parameternamelist>
<parameterdescription>
<para>The pairing database is empty. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has a system address but no Host ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;=0</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has a system address and Host ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="528" column="8" declfile="include/gzp.h" declline="528" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gaf0789378179910143ee80f7fc54eeede_1gaf0789378179910143ee80f7fc54eeede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gzp_address_req_send</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_address_req_send</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for sending a &quot;system address&quot; request to a Host.</para>
<para>When calling this function the Device will attempt acquiring the &quot;system address&quot; from any Host within close proximity.</para>
<para>If a host is located within close proximity and pairing is enabled in the Host, a &quot;system address&quot; will be sent in return to the Device.</para>
<para>The new &quot;system address&quot; will apply immediately in the Device, and the new &quot;system address&quot; will be stored in non volatile (NV) memory.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if new &quot;system address&quot; was received from a Host. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if no &quot;system address&quot; was received from a Host. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="545" column="6" declfile="include/gzp.h" declline="545" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga4b70afd03e46026ff3a5a2a08db5c243_1ga4b70afd03e46026ff3a5a2a08db5c243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_address_req_send_async</definition>
        <argsstring>(gzp_address_req_callback callback, void *context)</argsstring>
        <name>gzp_address_req_send_async</name>
        <param>
          <type><ref refid="group__gzp_gab740a3b0b08688c20f0e3db7827280cd_1gab740a3b0b08688c20f0e3db7827280cd" kindref="member">gzp_address_req_callback</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for sending a &quot;system address&quot; request to a Host. Asynchronized fashion.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>is the callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to be passed to the callback function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="553" column="6" declfile="include/gzp.h" declline="553" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga33c5b33085f18d259f0e4ba22b8747e0_1ga33c5b33085f18d259f0e4ba22b8747e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1ga8176d0ee414adb4dddaf83fd5e9ea9b4" kindref="member">gzp_id_req_res</ref></type>
        <definition>enum gzp_id_req_res gzp_id_req_send</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_id_req_send</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for sending a &quot;Host ID request&quot; to a Host.</para>
<para>The &quot;Host ID&quot; is needed to be able to send encrypted data using <ref refid="group__gzp_ga4994083175f26dbffef2d1c934a01248_1ga4994083175f26dbffef2d1c934a01248" kindref="member">gzp_crypt_data_send()</ref>.</para>
<para>The request will be sent using the &quot;system address&quot; previously received using <ref refid="group__gzp_gaf0789378179910143ee80f7fc54eeede_1gaf0789378179910143ee80f7fc54eeede" kindref="member">gzp_address_req_send()</ref>.</para>
<para>It is not required that the Host is within close proximity in order to acquire the &quot;Host ID&quot;.</para>
<para>The new &quot;Host ID&quot; will apply immediately for the Device, and the new &quot;Host ID&quot; will be stored in non volatile (NV) memory.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>GZP_ID_RESP_PENDING</parametername>
</parameternamelist>
<parameterdescription>
<para>if a &quot;Host ID request&quot; has been sent to the Host, but the Host application has not yet decided whether to Grant or Reject the &quot;ID request&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GZP_ID_RESP_GRANTED</parametername>
</parameternamelist>
<parameterdescription>
<para>if the &quot;Host ID&quot; has been received from the Host. The received &quot;Host ID&quot; will be stored in non volatile memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GZP_ID_RESP_REJECTED</parametername>
</parameternamelist>
<parameterdescription>
<para>if the Host application has rejected the &quot;Host ID request&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GZP_ID_RESP_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>if failing to send a request or receive a response from the Host. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="578" column="20" declfile="include/gzp.h" declline="578" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga05f69e5c5ee24e4e4f98570398e3cf21_1ga05f69e5c5ee24e4e4f98570398e3cf21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_id_req_send_async</definition>
        <argsstring>(gzp_id_req_callback callback, void *context)</argsstring>
        <name>gzp_id_req_send_async</name>
        <param>
          <type><ref refid="group__gzp_gab30ed0df53835f21804f53430f0715aa_1gab30ed0df53835f21804f53430f0715aa" kindref="member">gzp_id_req_callback</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for sending a &quot;Host ID request&quot; to a Host. Asynchronized fashion.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>is the callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to be passed to the callback function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="586" column="6" declfile="include/gzp.h" declline="586" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga4994083175f26dbffef2d1c934a01248_1ga4994083175f26dbffef2d1c934a01248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gzp_crypt_data_send</definition>
        <argsstring>(const uint8_t *src, uint8_t length)</argsstring>
        <name>gzp_crypt_data_send</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for sending encrypted user data to the Host.</para>
<para>Before any data can be sent the Device must acquire both the Host&apos;s &quot;system address&quot; by using <ref refid="group__gzp_gaf0789378179910143ee80f7fc54eeede_1gaf0789378179910143ee80f7fc54eeede" kindref="member">gzp_address_req_send()</ref> and the &quot;Host ID&quot; by using <ref refid="group__gzp_ga33c5b33085f18d259f0e4ba22b8747e0_1ga33c5b33085f18d259f0e4ba22b8747e0" kindref="member">gzp_id_req_send()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to the data packet to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>is the length of the data packet to be sent.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if the data was successfully transmitted and decrypted by the Host. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if data transmission failed or Host failed to decryption data correctly. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="601" column="6" declfile="include/gzp.h" declline="601" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gabc5842c824ce4b68e247fabd5b3eca21_1gabc5842c824ce4b68e247fabd5b3eca21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_crypt_data_send_async</definition>
        <argsstring>(const uint8_t *src, uint8_t length, gzp_crypt_data_send_callback callback, void *context)</argsstring>
        <name>gzp_crypt_data_send_async</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="group__gzp_ga9ac5c54b97b59878e89eef6a62dc0f49_1ga9ac5c54b97b59878e89eef6a62dc0f49" kindref="member">gzp_crypt_data_send_callback</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for sending encrypted user data to the Host. Asynchronized fashion.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to the data packet to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>is the length of the data packet to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>is the callback function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to be passed to the callback function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="611" column="6" declfile="include/gzp.h" declline="611" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Host functions</header>
      <memberdef kind="function" id="group__gzp_gaa00479ce99d1b3f598e02562b1bc5f20_1gaa00479ce99d1b3f598e02562b1bc5f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_pairing_enable</definition>
        <argsstring>(bool enable)</argsstring>
        <name>gzp_pairing_enable</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for enabling/disabling pairing in a host. When pairing is enabled the host will be monitoring for &quot;system address&quot; and &quot;Host ID&quot; requests from Devices.</para>
<para>A &quot;system address request&quot; received from a Device will always be granted. When a &quot;host ID request&quot; has been received, the Host application have to grant, reject or cancel this by using one of the following functions:</para>
<para><itemizedlist>
<listitem><para><ref refid="group__gzp_ga587ecf4915c37fc22dbb6354931d2386_1ga587ecf4915c37fc22dbb6354931d2386" kindref="member">gzp_id_req_grant()</ref></para>
</listitem><listitem><para><ref refid="group__gzp_ga935eef34ede1692180b77d090726b10d_1ga935eef34ede1692180b77d090726b10d" kindref="member">gzp_id_req_reject()</ref></para>
</listitem><listitem><para><ref refid="group__gzp_ga9da69761034ee9fa836e14cb4f08ada3_1ga9da69761034ee9fa836e14cb4f08ada3" kindref="member">gzp_id_req_cancel()</ref></para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem><para>true enables pairing. </para>
</listitem>
<listitem><para>false disables pairing. </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="637" column="6" declfile="include/gzp.h" declline="637" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gaedcecd51c981397d95b28409ce8caad6_1gaedcecd51c981397d95b28409ce8caad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_host_execute</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_host_execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute the Gazell Pairing Library Host operation.</para>
<para>This function must be called regularly by the Host application. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="644" column="6" declfile="include/gzp.h" declline="644" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga0ed91ce26125fb5ce911d8966e816362_1ga0ed91ce26125fb5ce911d8966e816362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gzp_address_exchanged</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_address_exchanged</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Address exchanged check.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If a &quot;system address&quot; was delivered to a requesting Device during the previous call to <ref refid="group__gzp_gaedcecd51c981397d95b28409ce8caad6_1gaedcecd51c981397d95b28409ce8caad6" kindref="member">gzp_host_execute()</ref>; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="653" column="6" declfile="include/gzp.h" declline="653" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga66b2bebd71fc8007817cfe6d71d330d8_1ga66b2bebd71fc8007817cfe6d71d330d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gzp_id_req_received</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_id_req_received</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for checking if a &quot;Host ID request&quot; has been received from a Device.</para>
<para>If a request has been received, the Pairing library will enter &quot;ID request pending&quot; state.</para>
<para>The application is responsible for responding to this request by calling one of the following functions:</para>
<para><itemizedlist>
<listitem><para><ref refid="group__gzp_ga587ecf4915c37fc22dbb6354931d2386_1ga587ecf4915c37fc22dbb6354931d2386" kindref="member">gzp_id_req_grant()</ref></para>
</listitem><listitem><para><ref refid="group__gzp_ga935eef34ede1692180b77d090726b10d_1ga935eef34ede1692180b77d090726b10d" kindref="member">gzp_id_req_reject()</ref></para>
</listitem><listitem><para><ref refid="group__gzp_ga9da69761034ee9fa836e14cb4f08ada3_1ga9da69761034ee9fa836e14cb4f08ada3" kindref="member">gzp_id_req_cancel()</ref></para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if a &quot;Host ID request&quot; has been received (internal state is &quot;ID request pending&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if no &quot;Host ID request&quot; has been received (internal state is &quot;ID request idle&quot;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="671" column="6" declfile="include/gzp.h" declline="671" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga935eef34ede1692180b77d090726b10d_1ga935eef34ede1692180b77d090726b10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_id_req_reject</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_id_req_reject</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for rejecting the previously received &quot;Host ID request&quot;. This function should be called only when a &quot;Host ID request&quot; has been received (internal state is &quot;ID request pending&quot;).</para>
<para>The internal state of the Pairing library will remain &quot;ID request pending&quot; until the a &quot;reject&quot; message has been successfully transmitted to the requesting Device. After this the internal state will change to &quot;ID request idle&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="681" column="6" declfile="include/gzp.h" declline="681" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga587ecf4915c37fc22dbb6354931d2386_1ga587ecf4915c37fc22dbb6354931d2386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzp_id_req_grant</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_id_req_grant</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for granting the previously received &quot;Host ID request&quot;. This function should be called only when a &quot;Host ID request&quot; has been received (internal state is &quot;ID request pending&quot;).</para>
<para>The internal state of the Pairing library will remain &quot;ID request pending&quot; until the &quot;Host ID&quot; has been successfully transmitted to the requesting Device. After this the internal state will change to &quot;ID request idle&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="691" column="6" declfile="include/gzp.h" declline="691" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_gab5a1932563fe2b3c2a0712fe7baa46e3_1gab5a1932563fe2b3c2a0712fe7baa46e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gzp_crypt_user_data_received</definition>
        <argsstring>(void)</argsstring>
        <name>gzp_crypt_user_data_received</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if user data has been received.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If encrypted user data has been received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="700" column="6" declfile="include/gzp.h" declline="700" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga6e357d81ff267ff79ad6bd462eff1ec0_1ga6e357d81ff267ff79ad6bd462eff1ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gzp_crypt_user_data_read</definition>
        <argsstring>(uint8_t *dst, uint8_t *length)</argsstring>
        <name>gzp_crypt_user_data_read</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for reading encrypted user data.</para>
<para>Note that the read user data will be automatically decrypted. Only data that was decrypted correctly will be presented.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to where the received data will be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer for returning the number of bytes received. Only 1 byte will be writtem to length*.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if data has been received and is written to dst* </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if no data has been received. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="715" column="6" declfile="include/gzp.h" declline="715" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gzp_ga1f738e1b3b9df01c5ed72cf8851083d0_1ga1f738e1b3b9df01c5ed72cf8851083d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gzll_rx_start</definition>
        <argsstring>(void)</argsstring>
        <name>gzll_rx_start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function emulating behavior of <ref refid="group__gzp_ga1f738e1b3b9df01c5ed72cf8851083d0_1ga1f738e1b3b9df01c5ed72cf8851083d0" kindref="member">gzll_rx_start()</ref> in legeacy nRF24xx Gazell library.</para>
<para>This function sets Gazell in Host mode and starts reception (enable). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/gzp.h" line="724" column="6" declfile="include/gzp.h" declline="724" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Gazell Pairing API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__GZP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GZP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nrf_gzll.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gzp__config_8h" kindref="compound">gzp_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__gzp_ga182a74e6f09944e693cde1be08fdacfc_1ga182a74e6f09944e693cde1be08fdacfc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_PAIRING_PIPE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__gzp_ga5061300f8d940942b9794fdbcb97b403_1ga5061300f8d940942b9794fdbcb97b403" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_DATA_PIPE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__gzp_ga6ba06ffcdb5c467a19e0a220f30c11db_1ga6ba06ffcdb5c467a19e0a220f30c11db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_TX_RX_TRANS_DELAY<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__gzp_ga50ae5998a3561c07f92f95aa35d9bf61_1ga50ae5998a3561c07f92f95aa35d9bf61" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_SYSTEM_ADDRESS_WIDTH<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__gzp_gacffd37db5819d10e659089277021d55f_1gacffd37db5819d10e659089277021d55f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_VALIDATION_ID<sp/>{0x32,<sp/>0x53,<sp/>0x66}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="group__gzp_ga3fcbd0b9d26bf7c76d375beb57238757_1ga3fcbd0b9d26bf7c76d375beb57238757" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_VALIDATION_ID_LENGTH<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__gzp_gaf35410042a151241941ca98c33f23b88_1gaf35410042a151241941ca98c33f23b88" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_HOST_ID_LENGTH<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__gzp_gac5fd1ba6e4b161953182cfc099d1ad03_1gac5fd1ba6e4b161953182cfc099d1ad03" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_SESSION_TOKEN_LENGTH<sp/>GZP_HOST_ID_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__gzp_ga18cd8f5df0c0a0eee57850d09a452fb6_1ga18cd8f5df0c0a0eee57850d09a452fb6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_DYN_KEY_LENGTH<sp/>(16<sp/>-<sp/>GZP_VALIDATION_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__gzp_gaa957841254817c0a239fd1f99506294d_1gaa957841254817c0a239fd1f99506294d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_HOST_RX_POWER_THRESHOLD<sp/>-64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__gzp_ga52c1cfd2eda5d86a27b710d453c526b3_1ga52c1cfd2eda5d86a27b710d453c526b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ADDRESS_REQ_PAYLOAD_LENGTH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group__gzp_ga72f37ba7b90e25d00b4ae2cbfe5d7de2_1ga72f37ba7b90e25d00b4ae2cbfe5d7de2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ADDRESS_FETCH_PAYLOAD_LENGTH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="group__gzp_ga1bfeb56e6e24c8156db61c0c6719df01_1ga1bfeb56e6e24c8156db61c0c6719df01" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ID_REQ_SESSION_TOKEN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&quot;Host<sp/>ID<sp/>request&quot;<sp/>payload<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group__gzp_ga9ddbedd035c7dde3d0d4110d184f1157_1ga9ddbedd035c7dde3d0d4110d184f1157" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ID_REQ_PAYLOAD_LENGTH<sp/>(GZP_CMD_HOST_ID_REQ_SESSION_TOKEN<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_SESSION_TOKEN_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_CMD_HOST_ID_REQ_PAYLOAD_LENGTH<sp/>&gt;<sp/>17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_SESSION_TOKEN_LENGTH<sp/>too<sp/>long.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="group__gzp_ga063e4ea2fe7de7ff03e2bb6f33811325_1ga063e4ea2fe7de7ff03e2bb6f33811325" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ID_FETCH_VALIDATION_ID<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="group__gzp_gab7d8c0fcac47a02517e8830d56855077_1gab7d8c0fcac47a02517e8830d56855077" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ID_FETCH_PAYLOAD_LENGTH<sp/>(GZP_CMD_HOST_ID_FETCH_VALIDATION_ID<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_VALIDATION_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_CMD_HOST_ID_FETCH_PAYLOAD_LENGTH<sp/>&gt;<sp/>17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_VALIDATION_ID_LENGTH<sp/>set<sp/>too<sp/>long.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__gzp_ga5e563fa9e6f5d3e5a8476ff4d78cf2fa_1ga5e563fa9e6f5d3e5a8476ff4d78cf2fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_KEY_UPDATE_PREPARE_PAYLOAD_LENGTH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__gzp_ga479c9971d0c8418a52eb75fd8950dbed_1ga479c9971d0c8418a52eb75fd8950dbed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_KEY_UPDATE_VALIDATION_ID<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="group__gzp_ga5909e15084f425c7cb7a94a13ae9f2ba_1ga5909e15084f425c7cb7a94a13ae9f2ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_KEY_UPDATE_NEW_KEY<sp/>(GZP_CMD_KEY_UPDATE_VALIDATION_ID<sp/>+<sp/>GZP_VALIDATION_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group__gzp_gaac13bfd1ba828af3f717a5804568b520_1gaac13bfd1ba828af3f717a5804568b520" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_KEY_UPDATE_PAYLOAD_LENGTH<sp/>(GZP_CMD_KEY_UPDATE_NEW_KEY<sp/>+<sp/>GZP_DYN_KEY_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_CMD_KEY_UPDATE_PAYLOAD_LENGTH<sp/>&gt;<sp/>17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Sum<sp/>(GZP_VALIDATION_ID_LENGTH<sp/>+<sp/>GZP_DYN_KEY_LENGTH)<sp/>too<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="group__gzp_ga4eebdb5ccff8a3092679717ce2fbad95_1ga4eebdb5ccff8a3092679717ce2fbad95" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_ENCRYPTED_USER_DATA_VALIDATION_ID<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group__gzp_gaa7bd5f7db3733cfd3574b9c1f4d37c5b_1gaa7bd5f7db3733cfd3574b9c1f4d37c5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_ENCRYPTED_USER_DATA_PAYLOAD<sp/>(GZP_CMD_ENCRYPTED_USER_DATA_VALIDATION_ID<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_VALIDATION_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="group__gzp_gac669b5eb6087018e56e105bae4321a89_1gac669b5eb6087018e56e105bae4321a89" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_ENCRYPTED_USER_DATA_PACKET_OVERHEAD<sp/>(GZP_CMD_ENCRYPTED_USER_DATA_VALIDATION_ID<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_VALIDATION_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="group__gzp_ga669cc0042151389183656fcc270b62cb_1ga669cc0042151389183656fcc270b62cb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_ENCRYPTED_USER_DATA_MAX_LENGTH<sp/>(17<sp/>-<sp/>GZP_ENCRYPTED_USER_DATA_PACKET_OVERHEAD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_MAX_FW_PAYLOAD_LENGTH<sp/>&lt;<sp/>17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_MAX_FW_PAYLOAD_LENGTH<sp/>must<sp/>be<sp/>greater<sp/>or<sp/>equal<sp/>to<sp/>17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group__gzp_gae77600de42fcef5deaa2dffc27345e74_1gae77600de42fcef5deaa2dffc27345e74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_FETCH_RESP_PAYLOAD_LENGTH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="group__gzp_ga18628801a88eb1c282775f998d159cc0_1ga18628801a88eb1c282775f998d159cc0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ADDRESS_RESP_ADDRESS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="group__gzp_gad9b6ecc88f95c014382564b104517689_1gad9b6ecc88f95c014382564b104517689" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ADDRESS_RESP_PAYLOAD_LENGTH<sp/>(GZP_CMD_HOST_ADDRESS_RESP_ADDRESS<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_SYSTEM_ADDRESS_WIDTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_MAX_ACK_PAYLOAD_LENGTH<sp/>&lt;<sp/>GZP_CMD_HOST_ADDRESS_RESP_PAYLOAD_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_MAX_ACK_PAYLOAD_LENGTH<sp/>must<sp/>be<sp/>greater<sp/>or<sp/>equal<sp/>to<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_CMD_HOST_ADDRESS_RESP_PAYLOAD_LENGTH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group__gzp_ga4adce983868b4568c6a06b8fc1340b20_1ga4adce983868b4568c6a06b8fc1340b20" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ID_FETCH_RESP_VALIDATION_ID<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="group__gzp_gaec0bfafc1920d42985e8132dba546326_1gaec0bfafc1920d42985e8132dba546326" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ID_FETCH_RESP_STATUS<sp/>(GZP_CMD_HOST_ID_FETCH_RESP_VALIDATION_ID<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_VALIDATION_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="group__gzp_gac8b8df05a07c695bb2564d271170331f_1gac8b8df05a07c695bb2564d271170331f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ID_FETCH_RESP_HOST_ID<sp/>(GZP_CMD_HOST_ID_FETCH_RESP_STATUS<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="group__gzp_ga08c17bcbaf5f24b83f627bd1ae103844_1ga08c17bcbaf5f24b83f627bd1ae103844" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_HOST_ID_FETCH_RESP_PAYLOAD_LENGTH<sp/>(GZP_CMD_HOST_ID_FETCH_RESP_HOST_ID<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_HOST_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_MAX_ACK_PAYLOAD_LENGTH<sp/>&lt;<sp/>GZP_CMD_HOST_ID_FETCH_RESP_PAYLOAD_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_MAX_ACK_PAYLOAD_LENGTH<sp/>must<sp/>be<sp/>greater<sp/>or<sp/>equal<sp/>to<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_CMD_HOST_ID_FETCH_RESP_PAYLOAD_LENGTH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="group__gzp_gaa70c4659d3b486579e063568965be3fe_1gaa70c4659d3b486579e063568965be3fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_KEY_UPDATE_PREPARE_RESP_SESSION_TOKEN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="group__gzp_ga31baf44d94376a31d67308b4a4f844d1_1ga31baf44d94376a31d67308b4a4f844d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_KEY_UPDATE_PREPARE_RESP_PAYLOAD_LENGTH<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GZP_CMD_KEY_UPDATE_PREPARE_RESP_SESSION_TOKEN<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_SESSION_TOKEN_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_MAX_ACK_PAYLOAD_LENGTH<sp/>&lt;<sp/>GZP_CMD_KEY_UPDATE_PREPARE_RESP_PAYLOAD_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_MAX_ACK_PAYLOAD_LENGTH<sp/>must<sp/>be<sp/>greater<sp/>or<sp/>equal<sp/>to<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_CMD_KEY_UPDATE_PREPARE_RESP_PAYLOAD_LENGTH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="group__gzp_gaad84c1d02372740ccf1b07e73268cc5e_1gaad84c1d02372740ccf1b07e73268cc5e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_ENCRYPTED_USER_DATA_RESP_SESSION_TOKEN<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="group__gzp_ga92ba501194b56cdb08eaea364ee23c56_1ga92ba501194b56cdb08eaea364ee23c56" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_ENCRYPTED_USER_DATA_RESP_VALIDATION_ID<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GZP_CMD_ENCRYPTED_USER_DATA_RESP_SESSION_TOKEN<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_SESSION_TOKEN_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="group__gzp_gaa0711e1199e7ae89677b40d3322053b7_1gaa0711e1199e7ae89677b40d3322053b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GZP_CMD_ENCRYPTED_USER_DATA_RESP_PAYLOAD_LENGTH<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(GZP_CMD_ENCRYPTED_USER_DATA_RESP_VALIDATION_ID<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_VALIDATION_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_MAX_ACK_PAYLOAD_LENGTH<sp/>&lt;<sp/>GZP_CMD_ENCRYPTED_USER_DATA_RESP_PAYLOAD_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_MAX_ACK_PAYLOAD_LENGTH<sp/>must<sp/>be<sp/>greater<sp/>or<sp/>equal<sp/>to<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_CMD_ENCRYPTED_USER_DATA_RESP_PAYLOAD_LENGTH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_VALIDATION_ID_LENGTH<sp/>&gt;<sp/>GZP_HOST_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_HOST_ID_LENGTH<sp/>should<sp/>be<sp/>greater<sp/>or<sp/>equal<sp/>to<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GZP_VALIDATION_ID_LENGTH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(GZP_SESSION_TOKEN_LENGTH<sp/>!=<sp/>GZP_HOST_ID_LENGTH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>GZP_SESSION_TOKEN_LENGTH<sp/>must<sp/>equal<sp/>GZP_HOST_ID_LENGTH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1ga201bf34f8352ac1993d9d00744e717bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1ga201bf34f8352ac1993d9d00744e717bc" kindref="member">gzp_key_select</ref><sp/>{</highlight></codeline>
<codeline lineno="221" refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bcaba266e310cf7180b8ed1d680a63aec76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bcaba266e310cf7180b8ed1d680a63aec76" kindref="member">GZP_ID_EXCHANGE</ref>,</highlight></codeline>
<codeline lineno="223" refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bcace965aae3e636886a3a20ac7bcebb5e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bcace965aae3e636886a3a20ac7bcebb5e4" kindref="member">GZP_KEY_EXCHANGE</ref>,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bca0fdbb345d7a7cffa0f5d33d27aadbc8f" kindref="member">GZP_DATA_EXCHANGE</ref></highlight></codeline>
<codeline lineno="226" refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1gga201bf34f8352ac1993d9d00744e717bca0fdbb345d7a7cffa0f5d33d27aadbc8f" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1gaa90da7a20553fe9d779d417299a04049" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1gaa90da7a20553fe9d779d417299a04049" kindref="member">gzp_cmd</ref><sp/>{</highlight></codeline>
<codeline lineno="236" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049aa1786d3611a799488779c6e970c2e3c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049aa1786d3611a799488779c6e970c2e3c3" kindref="member">GZP_CMD_HOST_ADDRESS_REQ</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="238" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049abdc3cefd52154e54291fc2f00d8c7efe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049abdc3cefd52154e54291fc2f00d8c7efe" kindref="member">GZP_CMD_HOST_ADDRESS_FETCH</ref>,</highlight></codeline>
<codeline lineno="240" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a778c2e2368270ba4aa28caf562368537" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a778c2e2368270ba4aa28caf562368537" kindref="member">GZP_CMD_HOST_ID_REQ</ref>,</highlight></codeline>
<codeline lineno="242" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a96b914a5a540eecf14281789ff94180e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a96b914a5a540eecf14281789ff94180e" kindref="member">GZP_CMD_HOST_ID_FETCH</ref>,</highlight></codeline>
<codeline lineno="244" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049aa8a05e54b39b1d48992ffe178dfd896f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049aa8a05e54b39b1d48992ffe178dfd896f" kindref="member">GZP_CMD_KEY_UPDATE_PREPARE</ref>,</highlight></codeline>
<codeline lineno="246" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a5fea4a9050e98dbf6794e2026a85edd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a5fea4a9050e98dbf6794e2026a85edd7" kindref="member">GZP_CMD_KEY_UPDATE</ref>,</highlight></codeline>
<codeline lineno="248" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a31ae37999e3ce41fd804fb94488655f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a31ae37999e3ce41fd804fb94488655f4" kindref="member">GZP_CMD_ENCRYPTED_USER_DATA</ref>,</highlight></codeline>
<codeline lineno="250" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a99645f1af1c229488420310c520a27c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a99645f1af1c229488420310c520a27c7" kindref="member">GZP_CMD_FETCH_RESP</ref>,</highlight></codeline>
<codeline lineno="252" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a138bd6ac53e0d228f1b8788e8d958873" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a138bd6ac53e0d228f1b8788e8d958873" kindref="member">GZP_CMD_HOST_ADDRESS_RESP</ref>,</highlight></codeline>
<codeline lineno="254" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a60833e51ad70995e2022c00c8a9b50ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a60833e51ad70995e2022c00c8a9b50ae" kindref="member">GZP_CMD_HOST_ID_FETCH_RESP</ref>,</highlight></codeline>
<codeline lineno="256" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a37adb9b73f7abba535ee08b3a71d5dda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049a37adb9b73f7abba535ee08b3a71d5dda" kindref="member">GZP_CMD_KEY_UPDATE_PREPARE_RESP</ref>,</highlight></codeline>
<codeline lineno="258" refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049ac78d9e06d9021b21f0cf9a9588814864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_gaa90da7a20553fe9d779d417299a04049_1ggaa90da7a20553fe9d779d417299a04049ac78d9e06d9021b21f0cf9a9588814864" kindref="member">GZP_CMD_ENCRYPTED_USER_DATA_RESP</ref>,</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1ga8176d0ee414adb4dddaf83fd5e9ea9b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1ga8176d0ee414adb4dddaf83fd5e9ea9b4" kindref="member">gzp_id_req_res</ref><sp/>{</highlight></codeline>
<codeline lineno="269" refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4ab51f874fa9692b24ac18f9536a14914b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4ab51f874fa9692b24ac18f9536a14914b" kindref="member">GZP_ID_RESP_PENDING</ref>,</highlight></codeline>
<codeline lineno="271" refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a1d29b203c80fc64360929d55a5cdae38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a1d29b203c80fc64360929d55a5cdae38" kindref="member">GZP_ID_RESP_GRANTED</ref>,</highlight></codeline>
<codeline lineno="273" refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a102d54e19b17d381c3bc7bcf97b14f16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a102d54e19b17d381c3bc7bcf97b14f16" kindref="member">GZP_ID_RESP_REJECTED</ref>,</highlight></codeline>
<codeline lineno="275" refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a41000e655f952a6055b2aca3283a453d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a41000e655f952a6055b2aca3283a453d" kindref="member">GZP_ID_RESP_FAILED</ref>,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a820b18e010210a5b7792369ab7db90ce" kindref="member">GZP_ID_RESP_NO_REQUEST</ref></highlight></codeline>
<codeline lineno="278" refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1gga8176d0ee414adb4dddaf83fd5e9ea9b4a820b18e010210a5b7792369ab7db90ce" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group__gzp_ga06db45942dad29b67add91609ce70ca2_1ga06db45942dad29b67add91609ce70ca2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__gzp_ga06db45942dad29b67add91609ce70ca2_1ga06db45942dad29b67add91609ce70ca2" kindref="member">gzp_tx_result_callback</ref>)(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>pipe,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nrf_gzll_device_tx_info_t<sp/>*tx_info);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="group__gzp_gab740a3b0b08688c20f0e3db7827280cd_1gab740a3b0b08688c20f0e3db7827280cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__gzp_gab740a3b0b08688c20f0e3db7827280cd_1gab740a3b0b08688c20f0e3db7827280cd" kindref="member">gzp_address_req_callback</ref>)(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="group__gzp_gab30ed0df53835f21804f53430f0715aa_1gab30ed0df53835f21804f53430f0715aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__gzp_gab30ed0df53835f21804f53430f0715aa_1gab30ed0df53835f21804f53430f0715aa" kindref="member">gzp_id_req_callback</ref>)(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1ga8176d0ee414adb4dddaf83fd5e9ea9b4" kindref="member">gzp_id_req_res</ref><sp/>result,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="group__gzp_ga9ac5c54b97b59878e89eef6a62dc0f49_1ga9ac5c54b97b59878e89eef6a62dc0f49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__gzp_ga9ac5c54b97b59878e89eef6a62dc0f49_1ga9ac5c54b97b59878e89eef6a62dc0f49" kindref="member">gzp_crypt_data_send_callback</ref>)(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="group__gzp_gadcea82d07590c71cc8cc07b6133638a7_1gadcea82d07590c71cc8cc07b6133638a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gadcea82d07590c71cc8cc07b6133638a7_1gadcea82d07590c71cc8cc07b6133638a7" kindref="member">gzp_crypt_set_session_token</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*token);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="group__gzp_gab8b2d42a795185e9dd970d5ab988fa67_1gab8b2d42a795185e9dd970d5ab988fa67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gab8b2d42a795185e9dd970d5ab988fa67_1gab8b2d42a795185e9dd970d5ab988fa67" kindref="member">gzp_crypt_get_session_token</ref>(uint8_t<sp/>*dst_token);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="group__gzp_gab4e21e991abe75ebf2ae3a765be0cb06_1gab4e21e991abe75ebf2ae3a765be0cb06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gab4e21e991abe75ebf2ae3a765be0cb06_1gab4e21e991abe75ebf2ae3a765be0cb06" kindref="member">gzp_crypt_set_dyn_key</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*dyn_key);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="group__gzp_ga26a6e65daa12818457e9626fdfcdc16d_1ga26a6e65daa12818457e9626fdfcdc16d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga26a6e65daa12818457e9626fdfcdc16d_1ga26a6e65daa12818457e9626fdfcdc16d" kindref="member">gzp_crypt_get_dyn_key</ref>(uint8_t<sp/>*dst_key);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="group__gzp_ga4fa57ac9f1c50f90b6ba3fe7eb51c080_1ga4fa57ac9f1c50f90b6ba3fe7eb51c080" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga4fa57ac9f1c50f90b6ba3fe7eb51c080_1ga4fa57ac9f1c50f90b6ba3fe7eb51c080" kindref="member">gzp_set_host_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="group__gzp_ga5db495082721e37dc1302f85834d9230_1ga5db495082721e37dc1302f85834d9230" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga5db495082721e37dc1302f85834d9230_1ga5db495082721e37dc1302f85834d9230" kindref="member">gzp_get_host_id</ref>(uint8_t<sp/>*dst);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="group__gzp_ga9023719a3ee68f82f2b6d9deda083a66_1ga9023719a3ee68f82f2b6d9deda083a66" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga9023719a3ee68f82f2b6d9deda083a66_1ga9023719a3ee68f82f2b6d9deda083a66" kindref="member">gzp_crypt_select_key</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga201bf34f8352ac1993d9d00744e717bc_1ga201bf34f8352ac1993d9d00744e717bc" kindref="member">gzp_key_select</ref><sp/>key_select);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="group__gzp_gaab80c20738dc7bebba95704536e82e38_1gaab80c20738dc7bebba95704536e82e38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gaab80c20738dc7bebba95704536e82e38_1gaab80c20738dc7bebba95704536e82e38" kindref="member">gzp_crypt</ref>(uint8_t<sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/>uint8_t<sp/>length);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="group__gzp_ga288cb74335df9d0f81f29b632a27c254_1ga288cb74335df9d0f81f29b632a27c254" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga288cb74335df9d0f81f29b632a27c254_1ga288cb74335df9d0f81f29b632a27c254" kindref="member">gzp_validate_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src_id);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="group__gzp_gafdf97aef9c54208cde14f91206d4fd3a_1gafdf97aef9c54208cde14f91206d4fd3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gafdf97aef9c54208cde14f91206d4fd3a_1gafdf97aef9c54208cde14f91206d4fd3a" kindref="member">gzp_add_validation_id</ref>(uint8_t<sp/>*dst_id);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="group__gzp_ga739fa1981fe1606f79dfbc305652e50c_1ga739fa1981fe1606f79dfbc305652e50c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga739fa1981fe1606f79dfbc305652e50c_1ga739fa1981fe1606f79dfbc305652e50c" kindref="member">gzp_random_numbers_generate</ref>(uint8_t<sp/>*dst,<sp/>uint8_t<sp/>n);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="group__gzp_ga6c2fd95c5a3c45e1a3bceebf72f5c990_1ga6c2fd95c5a3c45e1a3bceebf72f5c990" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga6c2fd95c5a3c45e1a3bceebf72f5c990_1ga6c2fd95c5a3c45e1a3bceebf72f5c990" kindref="member">gzp_update_radio_params</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*system_address);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="group__gzp_ga3cb2e9557ff22e0c6dfe552e59e226cc_1ga3cb2e9557ff22e0c6dfe552e59e226cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga3cb2e9557ff22e0c6dfe552e59e226cc_1ga3cb2e9557ff22e0c6dfe552e59e226cc" kindref="member">gzp_generate_channels</ref>(uint8_t<sp/>*ch_dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*address,<sp/>uint8_t<sp/>channel_set_size);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="group__gzp_ga2b720c2fcfa4a0df48da14d88e58fe67_1ga2b720c2fcfa4a0df48da14d88e58fe67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga2b720c2fcfa4a0df48da14d88e58fe67_1ga2b720c2fcfa4a0df48da14d88e58fe67" kindref="member">gzp_xor_cipher</ref>(uint8_t<sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*pad,<sp/>uint8_t<sp/>length);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="group__gzp_gae0c59c904a0ea56323274885ac3da45a_1gae0c59c904a0ea56323274885ac3da45a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gae0c59c904a0ea56323274885ac3da45a_1gae0c59c904a0ea56323274885ac3da45a" kindref="member">gzp_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="group__gzp_ga0374790d09eb34436ae22618bac6b8f3_1ga0374790d09eb34436ae22618bac6b8f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga0374790d09eb34436ae22618bac6b8f3_1ga0374790d09eb34436ae22618bac6b8f3" kindref="member">gzp_erase_pairing_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="group__gzp_ga82d40c440e1f046de35269527cece57b_1ga82d40c440e1f046de35269527cece57b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga82d40c440e1f046de35269527cece57b_1ga82d40c440e1f046de35269527cece57b" kindref="member">nrf_gzp_disable_gzll</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="group__gzp_ga9da69761034ee9fa836e14cb4f08ada3_1ga9da69761034ee9fa836e14cb4f08ada3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga9da69761034ee9fa836e14cb4f08ada3_1ga9da69761034ee9fa836e14cb4f08ada3" kindref="member">gzp_id_req_cancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="group__gzp_ga8078977f492aab495d8228445e1156ca_1ga8078977f492aab495d8228445e1156ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga8078977f492aab495d8228445e1156ca_1ga8078977f492aab495d8228445e1156ca" kindref="member">nrf_gzp_flush_rx_fifo</ref>(uint32_t<sp/>pipe);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="group__gzp_ga2fe74b0a71628c105ca29fe6141cd47a_1ga2fe74b0a71628c105ca29fe6141cd47a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga2fe74b0a71628c105ca29fe6141cd47a_1ga2fe74b0a71628c105ca29fe6141cd47a" kindref="member">gzp_tx_result_callback_register</ref>(<ref refid="group__gzp_ga06db45942dad29b67add91609ce70ca2_1ga06db45942dad29b67add91609ce70ca2" kindref="member">gzp_tx_result_callback</ref><sp/>callback);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="group__gzp_gad67a8c4ac5e533604d5e5e8aab149a58_1gad67a8c4ac5e533604d5e5e8aab149a58" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group__gzp_gad67a8c4ac5e533604d5e5e8aab149a58_1gad67a8c4ac5e533604d5e5e8aab149a58" kindref="member">gzp_get_pairing_status</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="group__gzp_gaf0789378179910143ee80f7fc54eeede_1gaf0789378179910143ee80f7fc54eeede" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gaf0789378179910143ee80f7fc54eeede_1gaf0789378179910143ee80f7fc54eeede" kindref="member">gzp_address_req_send</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="group__gzp_ga4b70afd03e46026ff3a5a2a08db5c243_1ga4b70afd03e46026ff3a5a2a08db5c243" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga4b70afd03e46026ff3a5a2a08db5c243_1ga4b70afd03e46026ff3a5a2a08db5c243" kindref="member">gzp_address_req_send_async</ref>(<ref refid="group__gzp_gab740a3b0b08688c20f0e3db7827280cd_1gab740a3b0b08688c20f0e3db7827280cd" kindref="member">gzp_address_req_callback</ref><sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="group__gzp_ga33c5b33085f18d259f0e4ba22b8747e0_1ga33c5b33085f18d259f0e4ba22b8747e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga8176d0ee414adb4dddaf83fd5e9ea9b4_1ga8176d0ee414adb4dddaf83fd5e9ea9b4" kindref="member">gzp_id_req_res</ref><sp/><ref refid="group__gzp_ga33c5b33085f18d259f0e4ba22b8747e0_1ga33c5b33085f18d259f0e4ba22b8747e0" kindref="member">gzp_id_req_send</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="group__gzp_ga05f69e5c5ee24e4e4f98570398e3cf21_1ga05f69e5c5ee24e4e4f98570398e3cf21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga05f69e5c5ee24e4e4f98570398e3cf21_1ga05f69e5c5ee24e4e4f98570398e3cf21" kindref="member">gzp_id_req_send_async</ref>(<ref refid="group__gzp_gab30ed0df53835f21804f53430f0715aa_1gab30ed0df53835f21804f53430f0715aa" kindref="member">gzp_id_req_callback</ref><sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="group__gzp_ga4994083175f26dbffef2d1c934a01248_1ga4994083175f26dbffef2d1c934a01248" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga4994083175f26dbffef2d1c934a01248_1ga4994083175f26dbffef2d1c934a01248" kindref="member">gzp_crypt_data_send</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,<sp/>uint8_t<sp/>length);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="group__gzp_gabc5842c824ce4b68e247fabd5b3eca21_1gabc5842c824ce4b68e247fabd5b3eca21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gabc5842c824ce4b68e247fabd5b3eca21_1gabc5842c824ce4b68e247fabd5b3eca21" kindref="member">gzp_crypt_data_send_async</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>length,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gzp_ga9ac5c54b97b59878e89eef6a62dc0f49_1ga9ac5c54b97b59878e89eef6a62dc0f49" kindref="member">gzp_crypt_data_send_callback</ref><sp/>callback,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="group__gzp_gaa00479ce99d1b3f598e02562b1bc5f20_1gaa00479ce99d1b3f598e02562b1bc5f20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gaa00479ce99d1b3f598e02562b1bc5f20_1gaa00479ce99d1b3f598e02562b1bc5f20" kindref="member">gzp_pairing_enable</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="group__gzp_gaedcecd51c981397d95b28409ce8caad6_1gaedcecd51c981397d95b28409ce8caad6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gaedcecd51c981397d95b28409ce8caad6_1gaedcecd51c981397d95b28409ce8caad6" kindref="member">gzp_host_execute</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="group__gzp_ga0ed91ce26125fb5ce911d8966e816362_1ga0ed91ce26125fb5ce911d8966e816362" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga0ed91ce26125fb5ce911d8966e816362_1ga0ed91ce26125fb5ce911d8966e816362" kindref="member">gzp_address_exchanged</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="group__gzp_ga66b2bebd71fc8007817cfe6d71d330d8_1ga66b2bebd71fc8007817cfe6d71d330d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga66b2bebd71fc8007817cfe6d71d330d8_1ga66b2bebd71fc8007817cfe6d71d330d8" kindref="member">gzp_id_req_received</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="group__gzp_ga935eef34ede1692180b77d090726b10d_1ga935eef34ede1692180b77d090726b10d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga935eef34ede1692180b77d090726b10d_1ga935eef34ede1692180b77d090726b10d" kindref="member">gzp_id_req_reject</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="group__gzp_ga587ecf4915c37fc22dbb6354931d2386_1ga587ecf4915c37fc22dbb6354931d2386" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga587ecf4915c37fc22dbb6354931d2386_1ga587ecf4915c37fc22dbb6354931d2386" kindref="member">gzp_id_req_grant</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="700" refid="group__gzp_gab5a1932563fe2b3c2a0712fe7baa46e3_1gab5a1932563fe2b3c2a0712fe7baa46e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gzp_gab5a1932563fe2b3c2a0712fe7baa46e3_1gab5a1932563fe2b3c2a0712fe7baa46e3" kindref="member">gzp_crypt_user_data_received</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="group__gzp_ga6e357d81ff267ff79ad6bd462eff1ec0_1ga6e357d81ff267ff79ad6bd462eff1ec0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga6e357d81ff267ff79ad6bd462eff1ec0_1ga6e357d81ff267ff79ad6bd462eff1ec0" kindref="member">gzp_crypt_user_data_read</ref>(uint8_t<sp/>*dst,<sp/>uint8_t<sp/>*length);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="group__gzp_ga1f738e1b3b9df01c5ed72cf8851083d0_1ga1f738e1b3b9df01c5ed72cf8851083d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gzp_ga1f738e1b3b9df01c5ed72cf8851083d0_1ga1f738e1b3b9df01c5ed72cf8851083d0" kindref="member">gzll_rx_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__GZP_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/gzp.h"/>
  </compounddef>
</doxygen>
