<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__cpu__load" kind="group">
    <compoundname>cpu_load</compoundname>
    <title>CPU load</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__cpu__load_1ga8681ce0fe8066b513d2ba3bab22c004c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cpu_load_init</definition>
        <argsstring>(void)</argsstring>
        <name>cpu_load_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the CPU load measurement module. </para>
        </briefdescription>
        <detaileddescription>
<para>The TIMER driver and PPI channels are allocated during the initialization of this module.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>The initialization is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENODEV</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI channels could not be allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EBUSY</parametername>
</parameternamelist>
<parameterdescription>
<para>TIMER instance is busy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/cpu_load.h" line="31" column="5" declfile="include/debug/cpu_load.h" declline="31" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__cpu__load_1ga3f7eb5267193498c3510cfcf56a350ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cpu_load_reset</definition>
        <argsstring>(void)</argsstring>
        <name>cpu_load_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset measurement. </para>
        </briefdescription>
        <detaileddescription>
<para>Measurement must be reset at least every 4294 seconds. If not, results are invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/cpu_load.h" line="38" column="6" declfile="include/debug/cpu_load.h" declline="38" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__cpu__load_1gabdd157071eb13d6adeac29b34cc632b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cpu_load_get</definition>
        <argsstring>(void)</argsstring>
        <name>cpu_load_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the CPU load measurement value. </para>
        </briefdescription>
        <detaileddescription>
<para>The CPU load is represented in 0,001% units where a 100000 value represents 100% load (e.g. 12345 represents 12,345% load).</para>
<para><simplesect kind="return"><para>The current CPU load value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/debug/cpu_load.h" line="47" column="10" declfile="include/debug/cpu_load.h" declline="47" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Module for measuring CPU load. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
