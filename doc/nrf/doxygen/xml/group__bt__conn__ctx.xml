<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__conn__ctx" kind="group">
    <compoundname>bt_conn_ctx</compoundname>
    <title>Bluetooth connection context library API</title>
    <innerclass refid="structbt__conn__ctx" prot="public">bt_conn_ctx</innerclass>
    <innerclass refid="structbt__conn__ctx__lib" prot="public">bt_conn_ctx_lib</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__conn__ctx_1ga293ec160f970cf2429395194fce3304d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t bt_conn_ctx_block_size_get</definition>
        <argsstring>(struct bt_conn_ctx_lib *ctx_lib)</argsstring>
        <name>bt_conn_ctx_block_size_get</name>
        <param>
          <type>struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> *</type>
          <declname>ctx_lib</declname>
        </param>
        <briefdescription>
<para>Get the block size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx_lib</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection context library instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Block size in bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="72" column="22" bodyfile="include/bluetooth/conn_ctx.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__conn__ctx_1gab0288933c0bbd698c105957ecc587789" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t bt_conn_ctx_count</definition>
        <argsstring>(struct bt_conn_ctx_lib *ctx_lib)</argsstring>
        <name>bt_conn_ctx_count</name>
        <param>
          <type>struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> *</type>
          <declname>ctx_lib</declname>
        </param>
        <briefdescription>
<para>Get the number of connection contexts that are managed by the library. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx_lib</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection context library instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of connection contexts that are managed by the library. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="84" column="22" bodyfile="include/bluetooth/conn_ctx.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__conn__ctx_1ga2c3c1af7b865d6443409843ff66f3222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * bt_conn_ctx_alloc</definition>
        <argsstring>(struct bt_conn_ctx_lib *ctx_lib, struct bt_conn *conn)</argsstring>
        <name>bt_conn_ctx_alloc</name>
        <param>
          <type>struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> *</type>
          <declname>ctx_lib</declname>
        </param>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Allocate memory for the connection context data. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can set the pointer to the allocated memory.</para>
<para>This function should be used in conjunction with <ref refid="group__bt__conn__ctx_ga5b279a272cfd4441147c579ac2e4e6a2_1ga5b279a272cfd4441147c579ac2e4e6a2" kindref="member">bt_conn_ctx_release</ref> to ensure proper operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx_lib</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection context library instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the connection context data if the operation was successful. Otherwise NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="103" column="6" declfile="include/bluetooth/conn_ctx.h" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__conn__ctx_1gac5c54faaea49025cc338245dc9ba9588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_conn_ctx_free</definition>
        <argsstring>(struct bt_conn_ctx_lib *ctx_lib, struct bt_conn *conn)</argsstring>
        <name>bt_conn_ctx_free</name>
        <param>
          <type>struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> *</type>
          <declname>ctx_lib</declname>
        </param>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Free the allocated memory for a connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx_lib</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection context library instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="114" column="5" declfile="include/bluetooth/conn_ctx.h" declline="114" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__conn__ctx_1gab3f6abfe7f674228d07d0547dc2edae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_conn_ctx_free_all</definition>
        <argsstring>(struct bt_conn_ctx_lib *ctx_lib)</argsstring>
        <name>bt_conn_ctx_free_all</name>
        <param>
          <type>struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> *</type>
          <declname>ctx_lib</declname>
        </param>
        <briefdescription>
<para>Free all allocated context data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx_lib</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection context library instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="121" column="6" declfile="include/bluetooth/conn_ctx.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__conn__ctx_1ga705c8134d2c5b60bd547e29c2cbb4aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * bt_conn_ctx_get</definition>
        <argsstring>(struct bt_conn_ctx_lib *ctx_lib, struct bt_conn *conn)</argsstring>
        <name>bt_conn_ctx_get</name>
        <param>
          <type>struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> *</type>
          <declname>ctx_lib</declname>
        </param>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Get the context data of a connection from the memory pool. </para>
        </briefdescription>
        <detaileddescription>
<para>This function finds a connection&apos;s context data in the memory pool. The link to find is identified by the connection object.</para>
<para>This function should be used in conjunction with <ref refid="group__bt__conn__ctx_ga5b279a272cfd4441147c579ac2e4e6a2_1ga5b279a272cfd4441147c579ac2e4e6a2" kindref="member">bt_conn_ctx_release</ref> to ensure proper operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx_lib</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection context library instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the connection context data if the operation was successful. Otherwise NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="138" column="6" declfile="include/bluetooth/conn_ctx.h" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__conn__ctx_1ga29cce50dc861324e4b60dd534dbf825b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__conn__ctx" kindref="compound">bt_conn_ctx</ref> *</type>
        <definition>const struct bt_conn_ctx * bt_conn_ctx_get_by_id</definition>
        <argsstring>(struct bt_conn_ctx_lib *ctx_lib, uint8_t id)</argsstring>
        <name>bt_conn_ctx_get_by_id</name>
        <param>
          <type>struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> *</type>
          <declname>ctx_lib</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get a specific connection context from the memory pool. </para>
        </briefdescription>
        <detaileddescription>
<para>This function finds the connection context and the associated connection object in the memory pool. The link to find is identified by its index in the connection context array.</para>
<para>This function should be used in conjunction with <ref refid="group__bt__conn__ctx_ga5b279a272cfd4441147c579ac2e4e6a2_1ga5b279a272cfd4441147c579ac2e4e6a2" kindref="member">bt_conn_ctx_release</ref> to ensure proper operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx_lib</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection context library instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection context index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the <ref refid="group__bt__conn__ctx" kindref="compound">Bluetooth connection context library API</ref> struct if the operation was successful. Otherwise NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="156" column="24" declfile="include/bluetooth/conn_ctx.h" declline="156" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__conn__ctx_1ga5b279a272cfd4441147c579ac2e4e6a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_conn_ctx_release</definition>
        <argsstring>(struct bt_conn_ctx_lib *ctx_lib, void *data)</argsstring>
        <name>bt_conn_ctx_release</name>
        <param>
          <type>struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> *</type>
          <declname>ctx_lib</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Release a connection context from the memory pool. </para>
        </briefdescription>
        <detaileddescription>
<para>This function finds and releases a connection context in the memory pool. The link to find is identified by its context data.</para>
<para>This function should be used in conjunction with <ref refid="group__bt__conn__ctx_ga2c3c1af7b865d6443409843ff66f3222_1ga2c3c1af7b865d6443409843ff66f3222" kindref="member">bt_conn_ctx_alloc</ref>, <ref refid="group__bt__conn__ctx_ga705c8134d2c5b60bd547e29c2cbb4aa1_1ga705c8134d2c5b60bd547e29c2cbb4aa1" kindref="member">bt_conn_ctx_get</ref>, or <ref refid="group__bt__conn__ctx_ga29cce50dc861324e4b60dd534dbf825b_1ga29cce50dc861324e4b60dd534dbf825b" kindref="member">bt_conn_ctx_get_by_id</ref> to ensure proper operation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx_lib</parametername>
</parameternamelist>
<parameterdescription>
<para>Bluetooth connection context library instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Context data for the connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="171" column="6" declfile="include/bluetooth/conn_ctx.h" declline="171" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__conn__ctx_1ga57125acafeeaffd4f853ca58eb7513af" prot="public" static="no">
        <name>BT_CONN_CTX_DEF</name>
        <param><defname>_name</defname></param>
        <param><defname>_max_clients</defname></param>
        <param><defname>_ctx_sz</defname></param>
        <initializer>	K_MEM_SLAB_DEFINE(_name##_mem_slab,                                    \
			  ROUND_UP(_ctx_sz, CONFIG_BT_CONN_CTX_MEM_BUF_ALIGN), \
			  (_max_clients),                                      \
			  CONFIG_BT_CONN_CTX_MEM_BUF_ALIGN);                   \
	K_MUTEX_DEFINE(_name##_mutex);                                         \
	static struct <ref refid="structbt__conn__ctx__lib" kindref="compound">bt_conn_ctx_lib</ref> CONCAT(_name, _ctx_lib) =                \
	{                                                                      \
		.mem_slab = &amp;CONCAT(_name, _mem_slab),                         \
		.mutex = &amp;_name##_mutex                                        \
	}</initializer>
        <briefdescription>
<para>Macro for defining a Bluetooth connection context library instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_max_clients</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of clients connected at a time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_ctx_sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Context size in bytes for a single connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/conn_ctx.h" line="31" column="9" bodyfile="include/bluetooth/conn_ctx.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>API for the Bluetooth connection context library. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
