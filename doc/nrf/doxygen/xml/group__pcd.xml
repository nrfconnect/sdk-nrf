<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__pcd" kind="group">
    <compoundname>pcd</compoundname>
    <title>Peripheral Core DFU</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__pcd_1ga2bc7843bc0ce97c186e764c8d7fc1679" prot="public" static="no" strong="no">
        <type></type>
        <name>pcd_status</name>
        <enumvalue id="group__pcd_ga2bc7843bc0ce97c186e764c8d7fc1679_1gga2bc7843bc0ce97c186e764c8d7fc1679a600bdd49bbf504268f2411c236286bc3" prot="public">
          <name>PCD_STATUS_COPY</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pcd_ga2bc7843bc0ce97c186e764c8d7fc1679_1gga2bc7843bc0ce97c186e764c8d7fc1679a41cb8688971d78894d35a33222a9f449" prot="public">
          <name>PCD_STATUS_COPY_DONE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pcd_ga2bc7843bc0ce97c186e764c8d7fc1679_1gga2bc7843bc0ce97c186e764c8d7fc1679a8ab409c4e650b2c709605413c0827d84" prot="public">
          <name>PCD_STATUS_COPY_FAILED</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="54" column="1" bodyfile="include/dfu/pcd.h" bodystart="54" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__pcd_1ga27dfedbccc9f95a944b2ef16715f1d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pcd_network_core_update</definition>
        <argsstring>(const void *src_addr, size_t len)</argsstring>
        <name>pcd_network_core_update</name>
        <param>
          <type>const void *</type>
          <declname>src_addr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Sets up the PCD command structure with the location and size of the firmware update. Then boots the network core and checks if the update completed successfully. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Start address of the data which is to be copied into the network core. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data which is to be copied into the network core.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success, -1 on failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="70" column="5" declfile="include/dfu/pcd.h" declline="70" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__pcd_1gac288f8ee3c0c7cad58bac956d063c698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pcd_network_core_update_initiate</definition>
        <argsstring>(const void *src_addr, size_t len)</argsstring>
        <name>pcd_network_core_update_initiate</name>
        <param>
          <type>const void *</type>
          <declname>src_addr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Sets up the PCD command structure with the location and size of the firmware update. Then boots the network core and initiates the update procedure. The function will return before the update procedure on the network core has completed or failed, and will indicate succes as long as the initialization of the update procedure was successful. The network core will still be in a powered on state when this function returns. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Start address of the data which is to be copied into the network core. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data which is to be copied into the network core.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success, an error code on failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="86" column="5" declfile="include/dfu/pcd.h" declline="86" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__pcd_1ga5e43a24db19098f2cdb3c6b0c926a3a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pcd_lock_ram</definition>
        <argsstring>(void)</argsstring>
        <name>pcd_lock_ram</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Lock the RAM section used for IPC with the network core bootloader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="90" column="6" declfile="include/dfu/pcd.h" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pcd_1gab0bc0dabe6e12732afa01025be5587a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pcd_fw_copy_done</definition>
        <argsstring>(void)</argsstring>
        <name>pcd_fw_copy_done</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update the PCD CMD to indicate that the copy operation has completed successfully. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="95" column="6" declfile="include/dfu/pcd.h" declline="95" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pcd_1ga4ad0d337f1aebe029b9ded42ab7197c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pcd_fw_copy_invalidate</definition>
        <argsstring>(void)</argsstring>
        <name>pcd_fw_copy_invalidate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Invalidate the PCD CMD, indicating that the copy failed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="99" column="6" declfile="include/dfu/pcd.h" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pcd_1gaea0a6912c0ac01baf59772b45d82fc60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__pcd_ga2bc7843bc0ce97c186e764c8d7fc1679_1ga2bc7843bc0ce97c186e764c8d7fc1679" kindref="member">pcd_status</ref></type>
        <definition>enum pcd_status pcd_fw_copy_status_get</definition>
        <argsstring>(void)</argsstring>
        <name>pcd_fw_copy_status_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check the PCD CMD to find the status of the update. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>PCD_STATUS_COPY if update is pending </para>
</simplesect>
<simplesect kind="return"><para>PCD_STATUS_COPY_DONE if update has completed successfully </para>
</simplesect>
<simplesect kind="return"><para>PCD_STATUS_COPY_FAILED if update has completed unsuccessfully </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="107" column="16" declfile="include/dfu/pcd.h" declline="107" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__pcd_1gacb724004c64e2175855cf4fa421fb016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * pcd_cmd_data_ptr_get</definition>
        <argsstring>(void)</argsstring>
        <name>pcd_cmd_data_ptr_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get value of &apos;data&apos; member of pcd cmd. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>of &apos;data&apos; member. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="113" column="12" declfile="include/dfu/pcd.h" declline="113" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pcd_1ga9e926c79cd2a08dd35cea11a2fde2375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pcd_fw_copy</definition>
        <argsstring>(const struct device *fdev)</argsstring>
        <name>pcd_fw_copy</name>
        <param>
          <type>const struct device *</type>
          <declname>fdev</declname>
        </param>
        <briefdescription>
<para>Perform the DFU image transfer. </para>
        </briefdescription>
        <detaileddescription>
<para>Use the information in the PCD CMD to load a DFU image to the provided flash device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fdev</parametername>
</parameternamelist>
<parameterdescription>
<para>The flash device to transfer the DFU image to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>non-negative</parametername>
</parameternamelist>
<parameterdescription>
<para>integer on success, negative errno code on failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/pcd.h" line="124" column="5" declfile="include/dfu/pcd.h" declline="124" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>API for handling DFU of peripheral cores. </para>
    </briefdescription>
    <detaileddescription>
<para>The PCD API provides functions for transferring DFU images from a generic core to a peripheral core to which there is no flash access from the generic core.</para>
<para>The cores communicate through a command structure (CMD) which is stored in a shared memory location.</para>
<para>The nRF5340 is an example of a system with these properties. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
