<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="light__sensor_8h" kind="file" language="C++">
    <compoundname>light_sensor.h</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes local="no">drivers/sensor.h</includes>
    <includedby refid="src_2cloud__codec_2cloud__codec_8h" local="yes">applications/asset_tracker/src/cloud_codec/cloud_codec.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>applications/asset_tracker/src/light_sensor/light_sensor.h</label>
        <link refid="light__sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>drivers/sensor.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>applications/asset_tracker/src/cloud_codec/cloud_codec.h</label>
        <link refid="src_2cloud__codec_2cloud__codec_8h"/>
      </node>
      <node id="1">
        <label>applications/asset_tracker/src/light_sensor/light_sensor.h</label>
        <link refid="light__sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structlight__sensor__data" prot="public">light_sensor_data</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__light__sensors_ga6a77284f3712563c84609ff29a27177c_1ga6a77284f3712563c84609ff29a27177c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* light_sensor_data_ready_cb) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>light_sensor_data_ready_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker/src/light_sensor/light_sensor.h" line="36" column="9" bodyfile="applications/asset_tracker/src/light_sensor/light_sensor.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__light__sensors_gaa6b4689d7998e758620b63b1022dc042_1gaa6b4689d7998e758620b63b1022dc042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int light_sensor_init_and_start</definition>
        <argsstring>(struct k_work_q *work_q, const light_sensor_data_ready_cb cb)</argsstring>
        <name>light_sensor_init_and_start</name>
        <param>
          <type>struct k_work_q *</type>
          <declname>work_q</declname>
        </param>
        <param>
          <type>const <ref refid="group__light__sensors_ga6a77284f3712563c84609ff29a27177c_1ga6a77284f3712563c84609ff29a27177c" kindref="member">light_sensor_data_ready_cb</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Initialize and start sampling the light sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if the operation was successful, otherwise a (negative) error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker/src/light_sensor/light_sensor.h" line="43" column="5" declfile="applications/asset_tracker/src/light_sensor/light_sensor.h" declline="43" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__light__sensors_gad3899ad52764b0dd24408536347756f0_1gad3899ad52764b0dd24408536347756f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int light_sensor_get_data</definition>
        <argsstring>(struct light_sensor_data *const data)</argsstring>
        <name>light_sensor_get_data</name>
        <param>
          <type>struct <ref refid="structlight__sensor__data" kindref="compound">light_sensor_data</ref> *const</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Get latest sampled light data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to memory to store latest light sensor data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the operation was successful, otherwise a (negative) error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker/src/light_sensor/light_sensor.h" line="53" column="5" declfile="applications/asset_tracker/src/light_sensor/light_sensor.h" declline="53" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__light__sensors_ga135d45cc6c04196fab251d7535202845_1ga135d45cc6c04196fab251d7535202845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void light_sensor_set_send_interval</definition>
        <argsstring>(const uint32_t interval_s)</argsstring>
        <name>light_sensor_set_send_interval</name>
        <param>
          <type>const uint32_t</type>
          <declname>interval_s</declname>
        </param>
        <briefdescription>
<para>Set light sensor&apos;s poll/send interval. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interval_s</parametername>
</parameternamelist>
<parameterdescription>
<para>Interval, in seconds. 0 to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker/src/light_sensor/light_sensor.h" line="61" column="6" declfile="applications/asset_tracker/src/light_sensor/light_sensor.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__light__sensors_gaeeb3e3815395db6a0769966d9fd69a0d_1gaeeb3e3815395db6a0769966d9fd69a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t light_sensor_get_send_interval</definition>
        <argsstring>(void)</argsstring>
        <name>light_sensor_get_send_interval</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get light sensor&apos;s poll/send interval. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Interval, in seconds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker/src/light_sensor/light_sensor.h" line="68" column="10" declfile="applications/asset_tracker/src/light_sensor/light_sensor.h" declline="68" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__light__sensors_gaa2f181aaac126273deb8b886c26da066_1gaa2f181aaac126273deb8b886c26da066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int light_sensor_poll</definition>
        <argsstring>(void)</argsstring>
        <name>light_sensor_poll</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Perform an immediate poll of the light sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if the operation was successful, otherwise a (negative) error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applications/asset_tracker/src/light_sensor/light_sensor.h" line="75" column="5" declfile="applications/asset_tracker/src/light_sensor/light_sensor.h" declline="75" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIGHT_SENSOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIGHT_SENSOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;drivers/sensor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structlight__sensor__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlight__sensor__data" kindref="compound">light_sensor_data</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>light<sp/>levels<sp/>in<sp/>lux<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structlight__sensor__data_a69cfd75115714389c66176d921cfcdea_1a69cfd75115714389c66176d921cfcdea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structlight__sensor__data_a69cfd75115714389c66176d921cfcdea_1a69cfd75115714389c66176d921cfcdea" kindref="member">red</ref>;</highlight></codeline>
<codeline lineno="29" refid="structlight__sensor__data_ae12bf1b85cff1c923f68006c1f5cc2d9_1ae12bf1b85cff1c923f68006c1f5cc2d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structlight__sensor__data_ae12bf1b85cff1c923f68006c1f5cc2d9_1ae12bf1b85cff1c923f68006c1f5cc2d9" kindref="member">green</ref>;</highlight></codeline>
<codeline lineno="30" refid="structlight__sensor__data_a54b9b44b61107753d5c87ded399354cd_1a54b9b44b61107753d5c87ded399354cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structlight__sensor__data_a54b9b44b61107753d5c87ded399354cd_1a54b9b44b61107753d5c87ded399354cd" kindref="member">blue</ref>;</highlight></codeline>
<codeline lineno="31" refid="structlight__sensor__data_a4567a2145ba2af49fa19764079981917_1a4567a2145ba2af49fa19764079981917" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structlight__sensor__data_a4567a2145ba2af49fa19764079981917_1a4567a2145ba2af49fa19764079981917" kindref="member">ir</ref>;</highlight></codeline>
<codeline lineno="33" refid="structlight__sensor__data_acbac79b541a2b4566cee5e3736fa7cad_1acbac79b541a2b4566cee5e3736fa7cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="structlight__sensor__data_acbac79b541a2b4566cee5e3736fa7cad_1acbac79b541a2b4566cee5e3736fa7cad" kindref="member">ts</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__light__sensors_ga6a77284f3712563c84609ff29a27177c_1ga6a77284f3712563c84609ff29a27177c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__light__sensors_ga6a77284f3712563c84609ff29a27177c_1ga6a77284f3712563c84609ff29a27177c" kindref="member">light_sensor_data_ready_cb</ref>)(void);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__light__sensors_gaa6b4689d7998e758620b63b1022dc042_1gaa6b4689d7998e758620b63b1022dc042" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__light__sensors_gaa6b4689d7998e758620b63b1022dc042_1gaa6b4689d7998e758620b63b1022dc042" kindref="member">light_sensor_init_and_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>k_work_q<sp/>*work_q,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__light__sensors_ga6a77284f3712563c84609ff29a27177c_1ga6a77284f3712563c84609ff29a27177c" kindref="member">light_sensor_data_ready_cb</ref><sp/>cb);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__light__sensors_gad3899ad52764b0dd24408536347756f0_1gad3899ad52764b0dd24408536347756f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__light__sensors_gad3899ad52764b0dd24408536347756f0_1gad3899ad52764b0dd24408536347756f0" kindref="member">light_sensor_get_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlight__sensor__data" kindref="compound">light_sensor_data</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__light__sensors_ga135d45cc6c04196fab251d7535202845_1ga135d45cc6c04196fab251d7535202845" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__light__sensors_ga135d45cc6c04196fab251d7535202845_1ga135d45cc6c04196fab251d7535202845" kindref="member">light_sensor_set_send_interval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>interval_s);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__light__sensors_gaeeb3e3815395db6a0769966d9fd69a0d_1gaeeb3e3815395db6a0769966d9fd69a0d" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__light__sensors_gaeeb3e3815395db6a0769966d9fd69a0d_1gaeeb3e3815395db6a0769966d9fd69a0d" kindref="member">light_sensor_get_send_interval</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__light__sensors_gaa2f181aaac126273deb8b886c26da066_1gaa2f181aaac126273deb8b886c26da066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__light__sensors_gaa2f181aaac126273deb8b886c26da066_1gaa2f181aaac126273deb8b886c26da066" kindref="member">light_sensor_poll</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIGHT_SENSOR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="applications/asset_tracker/src/light_sensor/light_sensor.h"/>
  </compounddef>
</doxygen>
