<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__mesh__light__ctl__cli" kind="group">
    <compoundname>bt_mesh_light_ctl_cli</compoundname>
    <title>Light CTL Client model</title>
    <innerclass refid="structbt__mesh__light__ctl__cli__handlers" prot="public">bt_mesh_light_ctl_cli_handlers</innerclass>
    <innerclass refid="structbt__mesh__light__ctl__cli" prot="public">bt_mesh_light_ctl_cli</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga59570be79641131237802978ece7dbc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_ctl_get</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_ctl_status *rsp)</argsstring>
        <name>bt_mesh_light_ctl_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__status" kindref="compound">bt_mesh_light_ctl_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the Light CTL state of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="132" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="132" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga1d133a264bf131682ad8a9390b4f57d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_ctl_set</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_ctl_set *set, struct bt_mesh_light_ctl_status *rsp)</argsstring>
        <name>bt_mesh_light_ctl_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__ctl__set" kindref="compound">bt_mesh_light_ctl_set</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__status" kindref="compound">bt_mesh_light_ctl_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the CTL state of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL state to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="154" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="154" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga868f29b75a3e1acad0faf3012c8ac479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_ctl_set_unack</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_ctl_set *set)</argsstring>
        <name>bt_mesh_light_ctl_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__ctl__set" kindref="compound">bt_mesh_light_ctl_set</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the CTL state of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL state to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="171" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="171" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1gac04a092b22a954bd3413843346ed9c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_temp_get</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_temp_status *rsp)</argsstring>
        <name>bt_mesh_light_temp_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__temp__status" kindref="compound">bt_mesh_light_temp_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the Light CTL Temperature state of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><simplesect kind="note"><para>In order to use this call, the user must ensure that the client instance is set to publish messages to the Light Temperature associated with the target Light CTL server. This server will be located in another element than the Light CTL server.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="197" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="197" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1gaa11d60b58e5b799e9cc5a3a909b4e8a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_temp_set</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp_set *set, struct bt_mesh_light_temp_status *rsp)</argsstring>
        <name>bt_mesh_light_temp_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__temp__set" kindref="compound">bt_mesh_light_temp_set</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__temp__status" kindref="compound">bt_mesh_light_temp_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the CTL Temperature state of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><simplesect kind="note"><para>In order to use this call, the user must ensure that the client instance is set to publish messages to the Light Temperature associated with the target Light CTL server. This server will be located in another element than the Light CTL server.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL Temperature state to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="224" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="224" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga78946f1b1755bceaf572903e67e42e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_temp_set_unack</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp_set *set)</argsstring>
        <name>bt_mesh_light_temp_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__temp__set" kindref="compound">bt_mesh_light_temp_set</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the CTL Temperature state of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>In order to use this call, the user must ensure that the client instance is set to publish messages to the Light Temperature associated with the target Light CTL server. This server will be located in another element than the Light CTL server.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL Temperature state to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="247" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="247" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1gaa767c612d6f8052561179dd02f827aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_ctl_default_get</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_ctl *rsp)</argsstring>
        <name>bt_mesh_light_ctl_default_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl" kindref="compound">bt_mesh_light_ctl</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the default CTL value of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="268" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="268" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga2d273b45bde5733c1a60f8f95f257c0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_ctl_default_set</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_ctl *set, struct bt_mesh_light_ctl *rsp)</argsstring>
        <name>bt_mesh_light_ctl_default_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__ctl" kindref="compound">bt_mesh_light_ctl</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl" kindref="compound">bt_mesh_light_ctl</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the default CTL value of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Default CTL value to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="290" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="290" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga6550bec4009f58e28570e42d739e9b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_ctl_default_set_unack</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_ctl *set)</argsstring>
        <name>bt_mesh_light_ctl_default_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__ctl" kindref="compound">bt_mesh_light_ctl</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the default CTL value of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Default CTL value to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="308" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="308" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga6b0fa8af9dc4705bbe21265ac69493db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_temp_range_get</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_temp_range_status *rsp)</argsstring>
        <name>bt_mesh_light_temp_range_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__temp__range__status" kindref="compound">bt_mesh_light_temp_range_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the Light CTL Range state of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="329" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="329" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga8ebc77bd16725820c6f1ce3bf805e193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_temp_range_set</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp_range *set, struct bt_mesh_light_temp_range_status *rsp)</argsstring>
        <name>bt_mesh_light_temp_range_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__temp__range" kindref="compound">bt_mesh_light_temp_range</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__temp__range__status" kindref="compound">bt_mesh_light_temp_range_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the CTL Range of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Range to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="351" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="351" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__ctl__cli_1ga6e3445116a43cee8e2f1ec05eb4dfb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_temp_range_set_unack</definition>
        <argsstring>(struct bt_mesh_light_ctl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp_range *set)</argsstring>
        <name>bt_mesh_light_temp_range_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__temp__range" kindref="compound">bt_mesh_light_temp_range</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the CTL Range of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Range state to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="369" column="5" declfile="include/bluetooth/mesh/light_ctl_cli.h" declline="369" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__mesh__light__ctl__cli_1ga7b0cd3c59728b5d1cf0f269d9b9c9102" prot="public" static="no">
        <name>BT_MESH_LIGHT_CTL_CLI_INIT</name>
        <param><defname>_handlers</defname></param>
        <initializer>	{                                                                      \
		.handlers = _handlers,                                         \
	}</initializer>
        <briefdescription>
<para>Initialization parameters for a <ref refid="group__bt__mesh__light__ctl__cli" kindref="compound">Light CTL Client model</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="30" column="9" bodyfile="include/bluetooth/mesh/light_ctl_cli.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__light__ctl__cli_1gaf4395f1b21b92e8ad183baadd954ef3d" prot="public" static="no">
        <name>BT_MESH_MODEL_LIGHT_CTL_CLI</name>
        <param><defname>_cli</defname></param>
        <initializer>	BT_MESH_MODEL_CB(BT_MESH_MODEL_ID_LIGHT_CTL_CLI,                       \
			 _bt_mesh_light_ctl_cli_op, &amp;(_cli)-&gt;pub,              \
			 BT_MESH_MODEL_USER_DATA(struct <ref refid="structbt__mesh__light__ctl__cli" kindref="compound">bt_mesh_light_ctl_cli</ref>, \
						 _cli),                        \
			 &amp;_bt_mesh_light_ctl_cli_cb)</initializer>
        <briefdescription>
<para>Light CTL Client model composition data entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="group__bt__mesh__light__ctl__cli" kindref="compound">Light CTL Client model</ref> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_ctl_cli.h" line="41" column="9" bodyfile="include/bluetooth/mesh/light_ctl_cli.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>API for the Light CTL Client model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
