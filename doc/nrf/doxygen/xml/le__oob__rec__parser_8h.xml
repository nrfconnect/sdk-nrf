<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="le__oob__rec__parser_8h" kind="file" language="C++">
    <compoundname>le_oob_rec_parser.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">zephyr/types.h</includes>
    <includes refid="le__oob__rec_8h" local="no">nfc/ndef/le_oob_rec.h</includes>
    <incdepgraph>
      <node id="4">
        <label>nfc/ndef/le_oob_rec.h</label>
        <link refid="le__oob__rec_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/nfc/ndef/le_oob_rec_parser.h</label>
        <link refid="le__oob__rec__parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>nfc/ndef/payload_type_common.h</label>
        <link refid="payload__type__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>nfc/ndef/record.h</label>
        <link refid="record_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>bluetooth/bluetooth.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nfc__ndef__le__oob__rec__parser_gaad4242dc5fb9e51801a47c7d74e5f62a_1gaad4242dc5fb9e51801a47c7d74e5f62a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nfc_ndef_le_oob_rec_check</definition>
        <argsstring>(const struct nfc_ndef_record_desc *rec_desc)</argsstring>
        <name>nfc_ndef_le_oob_rec_check</name>
        <param>
          <type>const struct <ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref> *</type>
          <declname>rec_desc</declname>
        </param>
        <briefdescription>
<para>Check if an NDEF Record is the LE OOB Record. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rec_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>General NDEF Record descriptor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If the NDEF Record Type is LE OOB </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>If the NDEF Record Type is different. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/le_oob_rec_parser.h" line="31" column="6" declfile="include/nfc/ndef/le_oob_rec_parser.h" declline="31" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nfc__ndef__le__oob__rec__parser_gae4d219d0fe25eb94482e5bacfc56795d_1gae4d219d0fe25eb94482e5bacfc56795d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfc_ndef_le_oob_rec_parse</definition>
        <argsstring>(const struct nfc_ndef_record_desc *rec_desc, uint8_t *result_buf, uint32_t *result_buf_len)</argsstring>
        <name>nfc_ndef_le_oob_rec_parse</name>
        <param>
          <type>const struct <ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref> *</type>
          <declname>rec_desc</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>result_buf</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>result_buf_len</declname>
        </param>
        <briefdescription>
<para>Parse an NDEF LE OOB Record. </para>
        </briefdescription>
        <detaileddescription>
<para>This function only parses NDEF Record descriptors with LE OOB Record Type. Parsing results are stored in the LE OOB Record descriptor (<ref refid="structnfc__ndef__le__oob__rec__payload__desc" kindref="compound">nfc_ndef_le_oob_rec_payload_desc</ref>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rec_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>General NDEF Record descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer that will be used to hold the LE OOB Record descriptor. After parsing is completed successfully, the first address in the buffer is filled by the NDEF Record descriptor (<ref refid="structnfc__ndef__le__oob__rec__payload__desc" kindref="compound">nfc_ndef_le_oob_rec_payload_desc</ref>), which provides a full description of the parsed NDEF Record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">result_buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>As input: size of the <computeroutput>result_buf</computeroutput> buffer As output: size of the reserved (used) part of the <computeroutput>result_buf</computeroutput> buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/le_oob_rec_parser.h" line="54" column="5" declfile="include/nfc/ndef/le_oob_rec_parser.h" declline="54" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nfc__ndef__le__oob__rec__parser_ga752a6fd7b62a16b0b68050dfe7be77cb_1ga752a6fd7b62a16b0b68050dfe7be77cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfc_ndef_le_oob_rec_printout</definition>
        <argsstring>(const struct nfc_ndef_le_oob_rec_payload_desc *le_oob_rec_desc)</argsstring>
        <name>nfc_ndef_le_oob_rec_printout</name>
        <param>
          <type>const struct <ref refid="structnfc__ndef__le__oob__rec__payload__desc" kindref="compound">nfc_ndef_le_oob_rec_payload_desc</ref> *</type>
          <declname>le_oob_rec_desc</declname>
        </param>
        <briefdescription>
<para>Print the parsed contents of an NDEF LE OOB Record. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">le_oob_rec_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor of the LE OOB Record that should be printed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/le_oob_rec_parser.h" line="62" column="6" declfile="include/nfc/ndef/le_oob_rec_parser.h" declline="62" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NFC_NDEF_LE_OOB_REC_PARSER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NFC_NDEF_LE_OOB_REC_PARSER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="le__oob__rec_8h" kindref="compound">nfc/ndef/le_oob_rec.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__nfc__ndef__le__oob__rec__parser_gaad4242dc5fb9e51801a47c7d74e5f62a_1gaad4242dc5fb9e51801a47c7d74e5f62a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__nfc__ndef__le__oob__rec__parser_gaad4242dc5fb9e51801a47c7d74e5f62a_1gaad4242dc5fb9e51801a47c7d74e5f62a" kindref="member">nfc_ndef_le_oob_rec_check</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref><sp/>*rec_desc);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__nfc__ndef__le__oob__rec__parser_gae4d219d0fe25eb94482e5bacfc56795d_1gae4d219d0fe25eb94482e5bacfc56795d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__nfc__ndef__le__oob__rec__parser_gae4d219d0fe25eb94482e5bacfc56795d_1gae4d219d0fe25eb94482e5bacfc56795d" kindref="member">nfc_ndef_le_oob_rec_parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref><sp/>*rec_desc,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*result_buf,<sp/>uint32_t<sp/>*result_buf_len);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__nfc__ndef__le__oob__rec__parser_ga752a6fd7b62a16b0b68050dfe7be77cb_1ga752a6fd7b62a16b0b68050dfe7be77cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__nfc__ndef__le__oob__rec__parser_ga752a6fd7b62a16b0b68050dfe7be77cb_1ga752a6fd7b62a16b0b68050dfe7be77cb" kindref="member">nfc_ndef_le_oob_rec_printout</ref>(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structnfc__ndef__le__oob__rec__payload__desc" kindref="compound">nfc_ndef_le_oob_rec_payload_desc</ref><sp/>*le_oob_rec_desc);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>NFC_NDEF_LE_OOB_REC_PARSER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/nfc/ndef/le_oob_rec_parser.h"/>
  </compounddef>
</doxygen>
