<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="secure__services_8h" kind="file" language="C++">
    <compoundname>secure_services.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">zephyr/types.h</includes>
    <includes local="no">zephyr.h</includes>
    <includes refid="fw__info_8h" local="no">fw_info.h</includes>
    <includes local="no">../arch/arm/include/aarch32/cortex_m/tz_ns.h</includes>
    <incdepgraph>
      <node id="11">
        <label>../arch/arm/include/aarch32/cortex_m/tz_ns.h</label>
      </node>
      <node id="5">
        <label>fw_info.h</label>
        <link refid="fw__info_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/secure_services.h</label>
        <link refid="secure__services_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>linker/sections.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>string.h</label>
      </node>
      <node id="8">
        <label>sys/__assert.h</label>
      </node>
      <node id="7">
        <label>sys/util.h</label>
      </node>
      <node id="6">
        <label>toolchain.h</label>
      </node>
      <node id="4">
        <label>zephyr.h</label>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__secure__services_ga6df735b1393b8b8791eaae8df2dadfe3_1ga6df735b1393b8b8791eaae8df2dadfe3" prot="public" static="no">
        <name>NRF_NSE</name>
        <param><defname>ret</defname></param>
        <param><defname>name</defname></param>
        <param><defname>...</defname></param>
        <initializer>ret name ## _nse(__VA_ARGS__); \
ret __attribute__((naked)) name(__VA_ARGS__) \
{ \
	__TZ_WRAP_FUNC(<ref refid="group__secure__services_ga1af38eec5ec0c815187ec042dadbdaf9_1ga1af38eec5ec0c815187ec042dadbdaf9" kindref="member">before_nse</ref>, name ## _nse, <ref refid="group__secure__services_ga5fdeeb143c51f3147aace2a72710032f_1ga5fdeeb143c51f3147aace2a72710032f" kindref="member">after_nse</ref>); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implement a wrapper function around a secure_service.</para>
<para>This function must reside in the non-secure binary. It makes the secure service thread safe by locking the scheduler while the service is running. The scheduler locking is done via TZ_THREAD_SAFE_NONSECURE_ENTRY_FUNC().</para>
<para>The macro implements of the wrapper function. The wrapper function has the same function signature as the secure service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ret</parametername>
</parameternamelist>
<parameterdescription>
<para>The return type of the secure service and the wrapper function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the wrapper function. The secure service is assumed to be named the same, but with the suffix &apos;_nse&apos;. E.g. the wrapper function foo() wraps the secure service foo_nse(). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments of the secure service and the wrapper function, as they would appear in a function signature, i.e. type and name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="52" column="9" bodyfile="include/secure_services.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__secure__services_gaa89d06d8dfae1da6f47ead1452c993bf_1gaa89d06d8dfae1da6f47ead1452c993bf" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* spm_ns_on_fatal_error_t) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>spm_ns_on_fatal_error_t</name>
        <briefdescription>
<para>Prototype of the function that is called in non-secure context from secure fault handler context. </para>
        </briefdescription>
        <detaileddescription>
<para>Function can be used to print pending logging data before reboot. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="140" column="9" bodyfile="include/secure_services.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__secure__services_ga1af38eec5ec0c815187ec042dadbdaf9_1ga1af38eec5ec0c815187ec042dadbdaf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void before_nse</definition>
        <argsstring>(void)</argsstring>
        <name>before_nse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="33" column="6" declfile="include/secure_services.h" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_ga5fdeeb143c51f3147aace2a72710032f_1ga5fdeeb143c51f3147aace2a72710032f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void after_nse</definition>
        <argsstring>(void)</argsstring>
        <name>after_nse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="34" column="6" declfile="include/secure_services.h" declline="34" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_gabc4500c9cc54b1a74cc62556aea0f8a8_1gabc4500c9cc54b1a74cc62556aea0f8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spm_request_system_reboot</definition>
        <argsstring>(void)</argsstring>
        <name>spm_request_system_reboot</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a system reboot from the Secure Firmware.</para>
<para>Rebooting is not available from the Non-Secure Firmware. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="63" column="6" declfile="include/secure_services.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_gabff963332c50a4f48b873b3f8e9c3619_1gabff963332c50a4f48b873b3f8e9c3619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int spm_request_random_number</definition>
        <argsstring>(uint8_t *output, size_t len, size_t *olen)</argsstring>
        <name>spm_request_random_number</name>
        <param>
          <type>uint8_t *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>olen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a random number from the Secure Firmware.</para>
<para>This provides a CTR_DRBG number from the CC3XX platform libraries.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>The CTR_DRBG number. Must be at least <computeroutput>len</computeroutput> long. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the output array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">olen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the random number provided.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-negative on success, negative errno code on fail </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="75" column="5" declfile="include/secure_services.h" declline="75" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_gaea4c57d39527dc9feb0522ad0a3874d7_1gaea4c57d39527dc9feb0522ad0a3874d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int spm_request_read</definition>
        <argsstring>(void *destination, uint32_t addr, size_t len)</argsstring>
        <name>spm_request_read</name>
        <param>
          <type>void *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a read operation to be executed from Secure Firmware.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">destination</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to destination array where the content is to be copied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address to be copied from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to copy.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If destination is NULL, or if len is &lt;= 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>If source is outside of allowed ranges. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="88" column="5" declfile="include/secure_services.h" declline="88" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_gad67788235b8f0e120bb3d73ab077c6b9_1gad67788235b8f0e120bb3d73ab077c6b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int spm_s0_active</definition>
        <argsstring>(uint32_t s0_address, uint32_t s1_address, bool *s0_active)</argsstring>
        <name>spm_s0_active</name>
        <param>
          <type>uint32_t</type>
          <declname>s0_address</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>s1_address</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>s0_active</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if S0 is the active B1 slot.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s0_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of s0 slot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">s1_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of s1 slot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">s0_active</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to &apos;true&apos; if s0 is active slot, &apos;false&apos; otherwise</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If info for both slots are NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="99" column="5" declfile="include/secure_services.h" declline="99" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_ga6aa3b232f37a6f59bea869e9751302e5_1ga6aa3b232f37a6f59bea869e9751302e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int spm_firmware_info</definition>
        <argsstring>(uint32_t fw_address, struct fw_info *info)</argsstring>
        <name>spm_firmware_info</name>
        <param>
          <type>uint32_t</type>
          <declname>fw_address</declname>
        </param>
        <param>
          <type>struct <ref refid="structfw__info" kindref="compound">fw_info</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search for the <ref refid="structfw__info" kindref="compound">fw_info</ref> structure in firmware image located at address.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fw_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address where firmware image is stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to where found info is stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>If info is NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EFAULT</parametername>
</parameternamelist>
<parameterdescription>
<para>If no info is found. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="110" column="5" declfile="include/secure_services.h" declline="110" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_ga5b1bc7211d57001597add87050c6a728_1ga5b1bc7211d57001597add87050c6a728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int spm_prevalidate_b1_upgrade</definition>
        <argsstring>(uint32_t dst_addr, uint32_t src_addr)</argsstring>
        <name>spm_prevalidate_b1_upgrade</name>
        <param>
          <type>uint32_t</type>
          <declname>dst_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prevalidate a B1 update</para>
<para>This is performed by the B0 bootloader.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dst_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Target location for the upgrade. This will typically be the start address of either S0 or S1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Current location of the upgrade.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>If the upgrade is valid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the upgrade is invalid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>If the functionality is unavailable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="124" column="5" declfile="include/secure_services.h" declline="124" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_gaf65750860c11726c7bbb4fd4af4711ca_1gaf65750860c11726c7bbb4fd4af4711ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spm_busy_wait</definition>
        <argsstring>(uint32_t busy_wait_us)</argsstring>
        <name>spm_busy_wait</name>
        <param>
          <type>uint32_t</type>
          <declname>busy_wait_us</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Busy wait in secure mode (debug function)</para>
<para>This function is for writing tests that require the execution to be in secure mode</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">busy_wait_us</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of microseconds to wait for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="133" column="6" declfile="include/secure_services.h" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_gaedfdf28a6d00c63309336d5f303938c5_1gaedfdf28a6d00c63309336d5f303938c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int spm_set_ns_fatal_error_handler</definition>
        <argsstring>(spm_ns_on_fatal_error_t handler)</argsstring>
        <name>spm_set_ns_fatal_error_handler</name>
        <param>
          <type><ref refid="group__secure__services_gaa89d06d8dfae1da6f47ead1452c993bf_1gaa89d06d8dfae1da6f47ead1452c993bf" kindref="member">spm_ns_on_fatal_error_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set handler which is called by the SPM fault handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Handler can be used to print out any pending log data before reset.</para>
<para><simplesect kind="note"><para>It is only for debugging purposes!</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Handler.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>if feature is disabled. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="153" column="5" declfile="include/secure_services.h" declline="153" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__secure__services_ga47c08461a6f598ae95ad2b9109d90bf9_1ga47c08461a6f598ae95ad2b9109d90bf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void z_spm_ns_fatal_error_handler</definition>
        <argsstring>(void)</argsstring>
        <name>z_spm_ns_fatal_error_handler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Call non-secure fatal error handler. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be called from fatal error handler. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/secure_services.h" line="159" column="6" declfile="include/secure_services.h" declline="159" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Secure Services header. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SECURE_SERVICES_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECURE_SERVICES_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fw__info_8h" kindref="compound">fw_info.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;../arch/arm/include/aarch32/cortex_m/tz_ns.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group__secure__services_ga1af38eec5ec0c815187ec042dadbdaf9_1ga1af38eec5ec0c815187ec042dadbdaf9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_ga1af38eec5ec0c815187ec042dadbdaf9_1ga1af38eec5ec0c815187ec042dadbdaf9" kindref="member">before_nse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34" refid="group__secure__services_ga5fdeeb143c51f3147aace2a72710032f_1ga5fdeeb143c51f3147aace2a72710032f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_ga5fdeeb143c51f3147aace2a72710032f_1ga5fdeeb143c51f3147aace2a72710032f" kindref="member">after_nse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="group__secure__services_ga6df735b1393b8b8791eaae8df2dadfe3_1ga6df735b1393b8b8791eaae8df2dadfe3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NRF_NSE(ret,<sp/>name,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor">ret<sp/>name<sp/>##<sp/>_nse(__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor">ret<sp/>__attribute__((naked))<sp/>name(__VA_ARGS__)<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__TZ_WRAP_FUNC(before_nse,<sp/>name<sp/>##<sp/>_nse,<sp/>after_nse);<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__secure__services_gabc4500c9cc54b1a74cc62556aea0f8a8_1gabc4500c9cc54b1a74cc62556aea0f8a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_gabc4500c9cc54b1a74cc62556aea0f8a8_1gabc4500c9cc54b1a74cc62556aea0f8a8" kindref="member">spm_request_system_reboot</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="group__secure__services_gabff963332c50a4f48b873b3f8e9c3619_1gabff963332c50a4f48b873b3f8e9c3619" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_gabff963332c50a4f48b873b3f8e9c3619_1gabff963332c50a4f48b873b3f8e9c3619" kindref="member">spm_request_random_number</ref>(uint8_t<sp/>*output,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*olen);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="group__secure__services_gaea4c57d39527dc9feb0522ad0a3874d7_1gaea4c57d39527dc9feb0522ad0a3874d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_gaea4c57d39527dc9feb0522ad0a3874d7_1gaea4c57d39527dc9feb0522ad0a3874d7" kindref="member">spm_request_read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*destination,<sp/>uint32_t<sp/>addr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group__secure__services_gad67788235b8f0e120bb3d73ab077c6b9_1gad67788235b8f0e120bb3d73ab077c6b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_gad67788235b8f0e120bb3d73ab077c6b9_1gad67788235b8f0e120bb3d73ab077c6b9" kindref="member">spm_s0_active</ref>(uint32_t<sp/>s0_address,<sp/>uint32_t<sp/>s1_address,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*s0_active);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__secure__services_ga6aa3b232f37a6f59bea869e9751302e5_1ga6aa3b232f37a6f59bea869e9751302e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_ga6aa3b232f37a6f59bea869e9751302e5_1ga6aa3b232f37a6f59bea869e9751302e5" kindref="member">spm_firmware_info</ref>(uint32_t<sp/>fw_address,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfw__info" kindref="compound">fw_info</ref><sp/>*info);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="group__secure__services_ga5b1bc7211d57001597add87050c6a728_1ga5b1bc7211d57001597add87050c6a728" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_ga5b1bc7211d57001597add87050c6a728_1ga5b1bc7211d57001597add87050c6a728" kindref="member">spm_prevalidate_b1_upgrade</ref>(uint32_t<sp/>dst_addr,<sp/>uint32_t<sp/>src_addr);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="group__secure__services_gaf65750860c11726c7bbb4fd4af4711ca_1gaf65750860c11726c7bbb4fd4af4711ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_gaf65750860c11726c7bbb4fd4af4711ca_1gaf65750860c11726c7bbb4fd4af4711ca" kindref="member">spm_busy_wait</ref>(uint32_t<sp/>busy_wait_us);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="group__secure__services_gaa89d06d8dfae1da6f47ead1452c993bf_1gaa89d06d8dfae1da6f47ead1452c993bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__secure__services_gaa89d06d8dfae1da6f47ead1452c993bf_1gaa89d06d8dfae1da6f47ead1452c993bf" kindref="member">spm_ns_on_fatal_error_t</ref>)(void);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="group__secure__services_gaedfdf28a6d00c63309336d5f303938c5_1gaedfdf28a6d00c63309336d5f303938c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_gaedfdf28a6d00c63309336d5f303938c5_1gaedfdf28a6d00c63309336d5f303938c5" kindref="member">spm_set_ns_fatal_error_handler</ref>(<ref refid="group__secure__services_gaa89d06d8dfae1da6f47ead1452c993bf_1gaa89d06d8dfae1da6f47ead1452c993bf" kindref="member">spm_ns_on_fatal_error_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="group__secure__services_ga47c08461a6f598ae95ad2b9109d90bf9_1ga47c08461a6f598ae95ad2b9109d90bf9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__secure__services_ga47c08461a6f598ae95ad2b9109d90bf9_1ga47c08461a6f598ae95ad2b9109d90bf9" kindref="member">z_spm_ns_fatal_error_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SECURE_SERVICES_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/secure_services.h"/>
  </compounddef>
</doxygen>
