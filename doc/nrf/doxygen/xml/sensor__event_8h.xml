<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="sensor__event_8h" kind="file" language="C++">
    <compoundname>sensor_event.h</compoundname>
    <includes refid="event__manager_8h" local="no">event_manager.h</includes>
    <includes refid="event__manager__profiler_8h" local="no">event_manager_profiler.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/caf/events/sensor_event.h</label>
        <link refid="sensor__event_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>event_manager.h</label>
        <link refid="event__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>event_manager_profiler.h</label>
        <link refid="event__manager__profiler_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>profiler.h</label>
        <link refid="profiler_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>event_manager_priv.h</label>
      </node>
      <node id="12">
        <label>event_manager_profiler_priv.h</label>
      </node>
      <node id="7">
        <label>logging/log_ctrl.h</label>
      </node>
      <node id="6">
        <label>sys/__assert.h</label>
      </node>
      <node id="5">
        <label>sys/reboot.h</label>
      </node>
      <node id="10">
        <label>sys/util.h</label>
      </node>
      <node id="3">
        <label>zephyr.h</label>
      </node>
      <node id="4">
        <label>zephyr/types.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structsensor__state__event" prot="public">sensor_state_event</innerclass>
    <innerclass refid="structsensor__event" prot="public">sensor_event</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1ga3d6bbbd93d481807bf4beff831216749" prot="public" static="no" strong="no">
        <type></type>
        <name>sensor_state</name>
        <enumvalue id="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a3cff3d7d8a46a3d790e7c4b1dcd21d54" prot="public">
          <name>SENSOR_STATE_DISABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Initial state of the sensor. The state is used only before sensor is initialized and it should not be broadcasted using <ref refid="structsensor__state__event" kindref="compound">sensor_state_event</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749ab4553ab3a3a4d00c3abf3c53016ac51d" prot="public">
          <name>SENSOR_STATE_SLEEP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sensor is sleeping and no sampling is performed. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a84f8aec695718fe8a5e3f65e231ae022" prot="public">
          <name>SENSOR_STATE_ACTIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sensor is sampled periodically. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a926a047d10a2309d2e7ea68e318a2d9a" prot="public">
          <name>SENSOR_STATE_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sensor error occurred. The sensor is no longer sampled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749aac79648a569c05c45ab9139f356b14cb" prot="public">
          <name>SENSOR_STATE_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Number of sensor states. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Sensor states. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/events/sensor_event.h" line="25" column="1" bodyfile="include/caf/events/sensor_event.h" bodystart="25" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__caf__sensor__event_gaf92d41c8319140c932cf0781a819407f_1gaf92d41c8319140c932cf0781a819407f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t sensor_event_get_data_cnt</definition>
        <argsstring>(const struct sensor_event *event)</argsstring>
        <name>sensor_event_get_data_cnt</name>
        <param>
          <type>const struct <ref refid="structsensor__event" kindref="compound">sensor_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Get size of sensor data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structsensor__event" kindref="compound">sensor_event</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size of the sensor data, expressed as a number of floating-point values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/events/sensor_event.h" line="93" column="22" bodyfile="include/caf/events/sensor_event.h" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="group__caf__sensor__event_ga91156904173e28396c783c3ff14f2ce6_1ga91156904173e28396c783c3ff14f2ce6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float *</type>
        <definition>static float * sensor_event_get_data_ptr</definition>
        <argsstring>(const struct sensor_event *event)</argsstring>
        <name>sensor_event_get_data_ptr</name>
        <param>
          <type>const struct <ref refid="structsensor__event" kindref="compound">sensor_event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Get pointer to the sensor data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structsensor__event" kindref="compound">sensor_event</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the sensor data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/events/sensor_event.h" line="106" column="21" bodyfile="include/caf/events/sensor_event.h" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="sensor__event_8h_a69c50fba9c2154ed6713eefaccf5ef9d_1a69c50fba9c2154ed6713eefaccf5ef9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EVENT_TYPE_DYNDATA_DECLARE</definition>
        <argsstring>(sensor_event)</argsstring>
        <name>EVENT_TYPE_DYNDATA_DECLARE</name>
        <param>
          <type><ref refid="structsensor__event" kindref="compound">sensor_event</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/caf/events/sensor_event.h" line="123" column="1" declfile="include/caf/events/sensor_event.h" declline="123" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SENSOR_EVENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SENSOR_EVENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="event__manager_8h" kindref="compound">event_manager.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="event__manager__profiler_8h" kindref="compound">event_manager_profiler.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1ga3d6bbbd93d481807bf4beff831216749" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1ga3d6bbbd93d481807bf4beff831216749" kindref="member">sensor_state</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a3cff3d7d8a46a3d790e7c4b1dcd21d54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a3cff3d7d8a46a3d790e7c4b1dcd21d54" kindref="member">SENSOR_STATE_DISABLED</ref>,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749ab4553ab3a3a4d00c3abf3c53016ac51d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749ab4553ab3a3a4d00c3abf3c53016ac51d" kindref="member">SENSOR_STATE_SLEEP</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a84f8aec695718fe8a5e3f65e231ae022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a84f8aec695718fe8a5e3f65e231ae022" kindref="member">SENSOR_STATE_ACTIVE</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a926a047d10a2309d2e7ea68e318a2d9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749a926a047d10a2309d2e7ea68e318a2d9a" kindref="member">SENSOR_STATE_ERROR</ref>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749aac79648a569c05c45ab9139f356b14cb" kindref="member">SENSOR_STATE_COUNT</ref></highlight></codeline>
<codeline lineno="42" refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1gga3d6bbbd93d481807bf4beff831216749aac79648a569c05c45ab9139f356b14cb" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structsensor__state__event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__state__event" kindref="compound">sensor_state_event</ref><sp/>{</highlight></codeline>
<codeline lineno="56" refid="structsensor__state__event_a6a9f80c44444244623580391d56b1635_1a6a9f80c44444244623580391d56b1635" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__header" kindref="compound">event_header</ref><sp/><ref refid="structsensor__state__event_a6a9f80c44444244623580391d56b1635_1a6a9f80c44444244623580391d56b1635" kindref="member">header</ref>;<sp/></highlight></codeline>
<codeline lineno="58" refid="structsensor__state__event_a84374a4cd4a0e7b40c646fa047414a13_1a84374a4cd4a0e7b40c646fa047414a13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structsensor__state__event_a84374a4cd4a0e7b40c646fa047414a13_1a84374a4cd4a0e7b40c646fa047414a13" kindref="member">descr</ref>;<sp/></highlight></codeline>
<codeline lineno="59" refid="structsensor__state__event_a05206095618aa974b391ade5d02349f4_1a05206095618aa974b391ade5d02349f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__caf__sensor__event_ga3d6bbbd93d481807bf4beff831216749_1ga3d6bbbd93d481807bf4beff831216749" kindref="member">sensor_state</ref><sp/><ref refid="structsensor__state__event_a05206095618aa974b391ade5d02349f4_1a05206095618aa974b391ade5d02349f4" kindref="member">state</ref>;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="group__event__manager_gade0652b21cddf1a6b4d58e668b402caa_1gade0652b21cddf1a6b4d58e668b402caa" kindref="member">EVENT_TYPE_DECLARE</ref>(<ref refid="structsensor__state__event" kindref="compound">sensor_state_event</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structsensor__event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsensor__event" kindref="compound">sensor_event</ref><sp/>{</highlight></codeline>
<codeline lineno="81" refid="structsensor__event_a27202915ec55244a7c150c91c32ac016_1a27202915ec55244a7c150c91c32ac016" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__header" kindref="compound">event_header</ref><sp/><ref refid="structsensor__event_a27202915ec55244a7c150c91c32ac016_1a27202915ec55244a7c150c91c32ac016" kindref="member">header</ref>;<sp/></highlight></codeline>
<codeline lineno="83" refid="structsensor__event_a937521ac26922ff0e6c2b82193b93804_1a937521ac26922ff0e6c2b82193b93804" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structsensor__event_a937521ac26922ff0e6c2b82193b93804_1a937521ac26922ff0e6c2b82193b93804" kindref="member">descr</ref>;<sp/></highlight></codeline>
<codeline lineno="84" refid="structsensor__event_ade63153fb96ccf8b3a4fed52b96cea92_1ade63153fb96ccf8b3a4fed52b96cea92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__dyndata" kindref="compound">event_dyndata</ref><sp/><ref refid="structsensor__event_ade63153fb96ccf8b3a4fed52b96cea92_1ade63153fb96ccf8b3a4fed52b96cea92" kindref="member">dyndata</ref>;<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__caf__sensor__event_gaf92d41c8319140c932cf0781a819407f_1gaf92d41c8319140c932cf0781a819407f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__caf__sensor__event_gaf92d41c8319140c932cf0781a819407f_1gaf92d41c8319140c932cf0781a819407f" kindref="member">sensor_event_get_data_cnt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__event" kindref="compound">sensor_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG((event-&gt;<ref refid="structsensor__event_ade63153fb96ccf8b3a4fed52b96cea92_1ade63153fb96ccf8b3a4fed52b96cea92" kindref="member">dyndata</ref>.<ref refid="structevent__dyndata_a554c78e4d3964df414018072fe32fb0f_1a554c78e4d3964df414018072fe32fb0f" kindref="member">size</ref><sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">))<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(event-&gt;<ref refid="structsensor__event_ade63153fb96ccf8b3a4fed52b96cea92_1ade63153fb96ccf8b3a4fed52b96cea92" kindref="member">dyndata</ref>.<ref refid="structevent__dyndata_a554c78e4d3964df414018072fe32fb0f_1a554c78e4d3964df414018072fe32fb0f" kindref="member">size</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="group__caf__sensor__event_ga91156904173e28396c783c3ff14f2ce6_1ga91156904173e28396c783c3ff14f2ce6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="group__caf__sensor__event_ga91156904173e28396c783c3ff14f2ce6_1ga91156904173e28396c783c3ff14f2ce6" kindref="member">sensor_event_get_data_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structsensor__event" kindref="compound">sensor_event</ref><sp/>*event)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;dyndata.data;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="sensor__event_8h_a69c50fba9c2154ed6713eefaccf5ef9d_1a69c50fba9c2154ed6713eefaccf5ef9d" refkind="member"><highlight class="normal"><ref refid="sensor__event_8h_a69c50fba9c2154ed6713eefaccf5ef9d_1a69c50fba9c2154ed6713eefaccf5ef9d" kindref="member">EVENT_TYPE_DYNDATA_DECLARE</ref>(<ref refid="structsensor__event" kindref="compound">sensor_event</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SENSOR_EVENT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/caf/events/sensor_event.h"/>
  </compounddef>
</doxygen>
