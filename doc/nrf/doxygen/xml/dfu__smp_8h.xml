<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="dfu__smp_8h" kind="file" language="C++">
    <compoundname>dfu_smp.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">bluetooth/gatt.h</includes>
    <includes local="no">bluetooth/conn.h</includes>
    <includes refid="gatt__dm_8h" local="no">bluetooth/gatt_dm.h</includes>
    <incdepgraph>
      <node id="5">
        <label>bluetooth/gatt_dm.h</label>
        <link refid="gatt__dm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/bluetooth/services/dfu_smp.h</label>
        <link refid="dfu__smp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>bluetooth/conn.h</label>
      </node>
      <node id="3">
        <label>bluetooth/gatt.h</label>
      </node>
      <node id="6">
        <label>bluetooth/uuid.h</label>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structbt__dfu__smp__header" prot="public">bt_dfu_smp_header</innerclass>
    <innerclass refid="structbt__dfu__smp__rsp__state" prot="public">bt_dfu_smp_rsp_state</innerclass>
    <innerclass refid="structbt__dfu__smp__init__params" prot="public">bt_dfu_smp_init_params</innerclass>
    <innerclass refid="structbt__dfu__smp" prot="public">bt_dfu_smp</innerclass>
    <innerclass refid="structbt__dfu__smp_1_1bt__dfu__smp__handles" prot="public">bt_dfu_smp::bt_dfu_smp_handles</innerclass>
    <innerclass refid="structbt__dfu__smp_1_1bt__dfu__smp__cbs" prot="public">bt_dfu_smp::bt_dfu_smp_cbs</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__dfu__smp_ga420abb2aa80e0d17921a30f694658222_1ga420abb2aa80e0d17921a30f694658222" prot="public" static="no">
        <name>BT_UUID_DFU_SMP_SERVICE_VAL</name>
        <initializer>	BT_UUID_128_ENCODE(0x8D53DC1D, 0x1DB7, 0x4CD3, 0x868B, 0x8A527460AA84)</initializer>
        <briefdescription>
<para>SMP Service. </para>
        </briefdescription>
        <detaileddescription>
<para>The 128-bit service UUID is 8D53DC1D-1DB7-4CD3-868B-8A527460AA84. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="31" column="9" bodyfile="include/bluetooth/services/dfu_smp.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__dfu__smp_gab392d9da380a59778b06a4397aa3684b_1gab392d9da380a59778b06a4397aa3684b" prot="public" static="no">
        <name>BT_UUID_DFU_SMP_SERVICE</name>
        <initializer>BT_UUID_DECLARE_128(<ref refid="group__bt__dfu__smp_ga420abb2aa80e0d17921a30f694658222_1ga420abb2aa80e0d17921a30f694658222" kindref="member">BT_UUID_DFU_SMP_SERVICE_VAL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="34" column="9" bodyfile="include/bluetooth/services/dfu_smp.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__dfu__smp_ga9e7d149da0fb3c32c83ea074ab84649a_1ga9e7d149da0fb3c32c83ea074ab84649a" prot="public" static="no">
        <name>BT_UUID_DFU_SMP_CHAR_VAL</name>
        <initializer>	BT_UUID_128_ENCODE(0xDA2E7828, 0xFBCE, 0x4E01, 0xAE9E, 0x261174997C48)</initializer>
        <briefdescription>
<para>SMP Characteristic. </para>
        </briefdescription>
        <detaileddescription>
<para>The characteristic is used for both requests and responses. The UUID is DA2E7828-FBCE-4E01-AE9E-261174997C48. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="41" column="9" bodyfile="include/bluetooth/services/dfu_smp.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__dfu__smp_gac28f5e542bd238054d171a3c056c37ed_1gac28f5e542bd238054d171a3c056c37ed" prot="public" static="no">
        <name>BT_UUID_DFU_SMP_CHAR</name>
        <initializer>BT_UUID_DECLARE_128(<ref refid="group__bt__dfu__smp_ga9e7d149da0fb3c32c83ea074ab84649a_1ga9e7d149da0fb3c32c83ea074ab84649a" kindref="member">BT_UUID_DFU_SMP_CHAR_VAL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="45" column="9" bodyfile="include/bluetooth/services/dfu_smp.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__bt__dfu__smp_gaebfee109791f03135019a8af056543f3_1gaebfee109791f03135019a8af056543f3" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_dfu_smp_rsp_part_cb) (struct bt_dfu_smp *dfu_smp)</definition>
        <argsstring>)(struct bt_dfu_smp *dfu_smp)</argsstring>
        <name>bt_dfu_smp_rsp_part_cb</name>
        <briefdescription>
<para>Handle part of the response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dfu_smp</parametername>
</parameternamelist>
<parameterdescription>
<para>DFU SMP Client instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="93" column="9" bodyfile="include/bluetooth/services/dfu_smp.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__bt__dfu__smp_ga0cb485283d5d22cedb8b968b2c36a059_1ga0cb485283d5d22cedb8b968b2c36a059" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_dfu_smp_error_cb) (struct bt_dfu_smp *dfu_smp, int err)</definition>
        <argsstring>)(struct bt_dfu_smp *dfu_smp, int err)</argsstring>
        <name>bt_dfu_smp_error_cb</name>
        <briefdescription>
<para>Global function that is called when an error occurs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dfu_smp</parametername>
</parameternamelist>
<parameterdescription>
<para>DFU SMP Client instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Negative internal error code or positive GATT error code. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="100" column="9" bodyfile="include/bluetooth/services/dfu_smp.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__dfu__smp_ga5dcc9695fc6904a1336b0865fe1fc1a1_1ga5dcc9695fc6904a1336b0865fe1fc1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_dfu_smp_init</definition>
        <argsstring>(struct bt_dfu_smp *dfu_smp, const struct bt_dfu_smp_init_params *params)</argsstring>
        <name>bt_dfu_smp_init</name>
        <param>
          <type>struct <ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref> *</type>
          <declname>dfu_smp</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__dfu__smp__init__params" kindref="compound">bt_dfu_smp_init_params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Initialize the DFU SMP Client module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dfu_smp</parametername>
</parameternamelist>
<parameterdescription>
<para>DFU SMP Client instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="162" column="5" declfile="include/bluetooth/services/dfu_smp.h" declline="162" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__dfu__smp_gaed5cb0d405302c6c0c9e2a10e9abd8e8_1gaed5cb0d405302c6c0c9e2a10e9abd8e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_dfu_smp_handles_assign</definition>
        <argsstring>(struct bt_gatt_dm *dm, struct bt_dfu_smp *dfu_smp)</argsstring>
        <name>bt_dfu_smp_handles_assign</name>
        <param>
          <type>struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref> *</type>
          <declname>dfu_smp</declname>
        </param>
        <briefdescription>
<para>Assign handles to the DFU SMP Client instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dfu_smp</parametername>
</parameternamelist>
<parameterdescription>
<para>DFU SMP Client instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(-ENOTSUP)</parametername>
</parameternamelist>
<parameterdescription>
<para>Special error code used when the UUID of the service does not match the expected UUID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="175" column="5" declfile="include/bluetooth/services/dfu_smp.h" declline="175" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__dfu__smp_ga8307223846219139dc605c9cb398b1a5_1ga8307223846219139dc605c9cb398b1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_dfu_smp_command</definition>
        <argsstring>(struct bt_dfu_smp *dfu_smp, bt_dfu_smp_rsp_part_cb rsp_cb, size_t cmd_size, const void *cmd_data)</argsstring>
        <name>bt_dfu_smp_command</name>
        <param>
          <type>struct <ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref> *</type>
          <declname>dfu_smp</declname>
        </param>
        <param>
          <type><ref refid="group__bt__dfu__smp_gaebfee109791f03135019a8af056543f3_1gaebfee109791f03135019a8af056543f3" kindref="member">bt_dfu_smp_rsp_part_cb</ref></type>
          <declname>rsp_cb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cmd_size</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>cmd_data</declname>
        </param>
        <briefdescription>
<para>Execute a command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dfu_smp</parametername>
</parameternamelist>
<parameterdescription>
<para>DFU SMP Client instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function to process the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the command data buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="188" column="5" declfile="include/bluetooth/services/dfu_smp.h" declline="188" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__dfu__smp_ga8765b27f2fd43465ae2c94c5482b648a_1ga8765b27f2fd43465ae2c94c5482b648a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bt_conn *</type>
        <definition>struct bt_conn * bt_dfu_smp_conn</definition>
        <argsstring>(const struct bt_dfu_smp *dfu_smp)</argsstring>
        <name>bt_dfu_smp_conn</name>
        <param>
          <type>const struct <ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref> *</type>
          <declname>dfu_smp</declname>
        </param>
        <briefdescription>
<para>Get the connection object that is used with the DFU SMP Client. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dfu_smp</parametername>
</parameternamelist>
<parameterdescription>
<para>DFU SMP Client instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Connection object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="198" column="14" declfile="include/bluetooth/services/dfu_smp.h" declline="198" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__dfu__smp_ga9c01f83ca8124fe3ee6b46e8fc94099e_1ga9c01f83ca8124fe3ee6b46e8fc94099e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__dfu__smp__rsp__state" kindref="compound">bt_dfu_smp_rsp_state</ref> *</type>
        <definition>const struct bt_dfu_smp_rsp_state * bt_dfu_smp_rsp_state</definition>
        <argsstring>(const struct bt_dfu_smp *dfu_smp)</argsstring>
        <name>bt_dfu_smp_rsp_state</name>
        <param>
          <type>const struct <ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref> *</type>
          <declname>dfu_smp</declname>
        </param>
        <briefdescription>
<para>Get the current response state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function should be used inside a response callback function that is provided to <ref refid="group__bt__dfu__smp_ga8307223846219139dc605c9cb398b1a5_1ga8307223846219139dc605c9cb398b1a5" kindref="member">bt_dfu_smp_command</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dfu_smp</parametername>
</parameternamelist>
<parameterdescription>
<para>DFU SMP Client instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the response state structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="210" column="33" declfile="include/bluetooth/services/dfu_smp.h" declline="210" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__dfu__smp_ga587bb5b1446eda02e434a51500799975_1ga587bb5b1446eda02e434a51500799975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool bt_dfu_smp_rsp_total_check</definition>
        <argsstring>(const struct bt_dfu_smp *dfu_smp)</argsstring>
        <name>bt_dfu_smp_rsp_total_check</name>
        <param>
          <type>const struct <ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref> *</type>
          <declname>dfu_smp</declname>
        </param>
        <briefdescription>
<para>Check if all response parts have been received. </para>
        </briefdescription>
        <detaileddescription>
<para>This auxiliary function checks if the current response part is the final one.</para>
<para><simplesect kind="note"><para>This function should be used inside a response callback function that is provided to <ref refid="group__bt__dfu__smp_ga8307223846219139dc605c9cb398b1a5_1ga8307223846219139dc605c9cb398b1a5" kindref="member">bt_dfu_smp_command</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dfu_smp</parametername>
</parameternamelist>
<parameterdescription>
<para>DFU SMP Client instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current part is the final one. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>If the current part is not the final one. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/services/dfu_smp.h" line="227" column="6" declfile="include/bluetooth/services/dfu_smp.h" declline="227" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BT_DFU_SMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_DFU_SMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bluetooth/gatt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bluetooth/conn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gatt__dm_8h" kindref="compound">bluetooth/gatt_dm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__bt__dfu__smp_ga420abb2aa80e0d17921a30f694658222_1ga420abb2aa80e0d17921a30f694658222" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_UUID_DFU_SMP_SERVICE_VAL<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_UUID_128_ENCODE(0x8D53DC1D,<sp/>0x1DB7,<sp/>0x4CD3,<sp/>0x868B,<sp/>0x8A527460AA84)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group__bt__dfu__smp_gab392d9da380a59778b06a4397aa3684b_1gab392d9da380a59778b06a4397aa3684b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_UUID_DFU_SMP_SERVICE<sp/>BT_UUID_DECLARE_128(BT_UUID_DFU_SMP_SERVICE_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__bt__dfu__smp_ga9e7d149da0fb3c32c83ea074ab84649a_1ga9e7d149da0fb3c32c83ea074ab84649a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_UUID_DFU_SMP_CHAR_VAL<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_UUID_128_ENCODE(0xDA2E7828,<sp/>0xFBCE,<sp/>0x4E01,<sp/>0xAE9E,<sp/>0x261174997C48)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__bt__dfu__smp_gac28f5e542bd238054d171a3c056c37ed_1gac28f5e542bd238054d171a3c056c37ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_UUID_DFU_SMP_CHAR<sp/>BT_UUID_DECLARE_128(BT_UUID_DFU_SMP_CHAR_VAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Forward<sp/>declaration<sp/>required<sp/>for<sp/>function<sp/>handlers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structbt__dfu__smp__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp__header" kindref="compound">bt_dfu_smp_header</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="structbt__dfu__smp__header_a8a1c00b7051e1e952e17557f12e469fa_1a8a1c00b7051e1e952e17557f12e469fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__dfu__smp__header_a8a1c00b7051e1e952e17557f12e469fa_1a8a1c00b7051e1e952e17557f12e469fa" kindref="member">op</ref>;</highlight></codeline>
<codeline lineno="56" refid="structbt__dfu__smp__header_a8e87d57e7aec8ee11a1f57e8494aeaa5_1a8e87d57e7aec8ee11a1f57e8494aeaa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__dfu__smp__header_a8e87d57e7aec8ee11a1f57e8494aeaa5_1a8e87d57e7aec8ee11a1f57e8494aeaa5" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="58" refid="structbt__dfu__smp__header_a06e3e1284c4982ac1d552a2498b9f691_1a06e3e1284c4982ac1d552a2498b9f691" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__dfu__smp__header_a06e3e1284c4982ac1d552a2498b9f691_1a06e3e1284c4982ac1d552a2498b9f691" kindref="member">len_h8</ref>;</highlight></codeline>
<codeline lineno="60" refid="structbt__dfu__smp__header_aa1c55ea86ce0835f8b4a924bec8979b4_1aa1c55ea86ce0835f8b4a924bec8979b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__dfu__smp__header_aa1c55ea86ce0835f8b4a924bec8979b4_1aa1c55ea86ce0835f8b4a924bec8979b4" kindref="member">len_l8</ref>;</highlight></codeline>
<codeline lineno="62" refid="structbt__dfu__smp__header_a08c2afadc8e75dc6f061ba087589bbbf_1a08c2afadc8e75dc6f061ba087589bbbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__dfu__smp__header_a08c2afadc8e75dc6f061ba087589bbbf_1a08c2afadc8e75dc6f061ba087589bbbf" kindref="member">group_h8</ref>;</highlight></codeline>
<codeline lineno="64" refid="structbt__dfu__smp__header_ada55ccf734817f0f642142d2bb721c79_1ada55ccf734817f0f642142d2bb721c79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__dfu__smp__header_ada55ccf734817f0f642142d2bb721c79_1ada55ccf734817f0f642142d2bb721c79" kindref="member">group_l8</ref>;</highlight></codeline>
<codeline lineno="66" refid="structbt__dfu__smp__header_ac7d2d60516b4db0d2334a12bf01b860a_1ac7d2d60516b4db0d2334a12bf01b860a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__dfu__smp__header_ac7d2d60516b4db0d2334a12bf01b860a_1ac7d2d60516b4db0d2334a12bf01b860a" kindref="member">seq</ref>;</highlight></codeline>
<codeline lineno="68" refid="structbt__dfu__smp__header_aa51f531c02a36ebab9418b47aad5337d_1aa51f531c02a36ebab9418b47aad5337d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__dfu__smp__header_aa51f531c02a36ebab9418b47aad5337d_1aa51f531c02a36ebab9418b47aad5337d" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structbt__dfu__smp__rsp__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp__rsp__state" kindref="compound">bt_dfu_smp_rsp_state</ref><sp/>{</highlight></codeline>
<codeline lineno="80" refid="structbt__dfu__smp__rsp__state_a9e9d3254f0f03c61dedccc3120e42b36_1a9e9d3254f0f03c61dedccc3120e42b36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp__rsp__state_a9e9d3254f0f03c61dedccc3120e42b36_1a9e9d3254f0f03c61dedccc3120e42b36" kindref="member">total_size</ref>;</highlight></codeline>
<codeline lineno="82" refid="structbt__dfu__smp__rsp__state_ab664dd366c38b72903624a47a75cb8df_1ab664dd366c38b72903624a47a75cb8df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp__rsp__state_ab664dd366c38b72903624a47a75cb8df_1ab664dd366c38b72903624a47a75cb8df" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="84" refid="structbt__dfu__smp__rsp__state_ac183ff5aed7a43a2aa36aa1688b1f31d_1ac183ff5aed7a43a2aa36aa1688b1f31d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp__rsp__state_ac183ff5aed7a43a2aa36aa1688b1f31d_1ac183ff5aed7a43a2aa36aa1688b1f31d" kindref="member">chunk_size</ref>;</highlight></codeline>
<codeline lineno="86" refid="structbt__dfu__smp__rsp__state_aea9b468e08d717f9dca22d9c8820167e_1aea9b468e08d717f9dca22d9c8820167e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="structbt__dfu__smp__rsp__state_aea9b468e08d717f9dca22d9c8820167e_1aea9b468e08d717f9dca22d9c8820167e" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__bt__dfu__smp_gaebfee109791f03135019a8af056543f3_1gaebfee109791f03135019a8af056543f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__dfu__smp_gaebfee109791f03135019a8af056543f3_1gaebfee109791f03135019a8af056543f3" kindref="member">bt_dfu_smp_rsp_part_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>*dfu_smp);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__bt__dfu__smp_ga0cb485283d5d22cedb8b968b2c36a059_1ga0cb485283d5d22cedb8b968b2c36a059" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__bt__dfu__smp_ga0cb485283d5d22cedb8b968b2c36a059_1ga0cb485283d5d22cedb8b968b2c36a059" kindref="member">bt_dfu_smp_error_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>*dfu_smp,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="structbt__dfu__smp__init__params" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp__init__params" kindref="compound">bt_dfu_smp_init_params</ref><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structbt__dfu__smp__init__params_ab3725457f7a123c557fdbd6d1bbdd5df_1ab3725457f7a123c557fdbd6d1bbdd5df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__dfu__smp_ga0cb485283d5d22cedb8b968b2c36a059_1ga0cb485283d5d22cedb8b968b2c36a059" kindref="member">bt_dfu_smp_error_cb</ref><sp/><ref refid="structbt__dfu__smp__init__params_ab3725457f7a123c557fdbd6d1bbdd5df_1ab3725457f7a123c557fdbd6d1bbdd5df" kindref="member">error_cb</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structbt__dfu__smp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>{</highlight></codeline>
<codeline lineno="119" refid="structbt__dfu__smp_aefd40c290d903fdf132fac279f2c8696_1aefd40c290d903fdf132fac279f2c8696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*<ref refid="structbt__dfu__smp_aefd40c290d903fdf132fac279f2c8696_1aefd40c290d903fdf132fac279f2c8696" kindref="member">conn</ref>;</highlight></codeline>
<codeline lineno="121" refid="structbt__dfu__smp_1_1bt__dfu__smp__handles" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp_1_1bt__dfu__smp__handles" kindref="compound">bt_dfu_smp_handles</ref><sp/>{</highlight></codeline>
<codeline lineno="123" refid="structbt__dfu__smp_1_1bt__dfu__smp__handles_a063af8077b80ff1635552062b9c8539b_1a063af8077b80ff1635552062b9c8539b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structbt__dfu__smp_1_1bt__dfu__smp__handles_a063af8077b80ff1635552062b9c8539b_1a063af8077b80ff1635552062b9c8539b" kindref="member">smp</ref>;</highlight></codeline>
<codeline lineno="125" refid="structbt__dfu__smp_1_1bt__dfu__smp__handles_ae9da22de9a84fef4b9c4943c19e464e5_1ae9da22de9a84fef4b9c4943c19e464e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structbt__dfu__smp_1_1bt__dfu__smp__handles_ae9da22de9a84fef4b9c4943c19e464e5_1ae9da22de9a84fef4b9c4943c19e464e5" kindref="member">smp_ccc</ref>;</highlight></codeline>
<codeline lineno="126" refid="structbt__dfu__smp_ab33c7965f015f685d62c573c730904ed_1ab33c7965f015f685d62c573c730904ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structbt__dfu__smp_ab33c7965f015f685d62c573c730904ed_1ab33c7965f015f685d62c573c730904ed" kindref="member">handles</ref>;</highlight></codeline>
<codeline lineno="128" refid="structbt__dfu__smp_a82ce2b68ed56d49403f8503d03711aee_1a82ce2b68ed56d49403f8503d03711aee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp__rsp__state" kindref="compound">bt_dfu_smp_rsp_state</ref><sp/><ref refid="structbt__dfu__smp_a82ce2b68ed56d49403f8503d03711aee_1a82ce2b68ed56d49403f8503d03711aee" kindref="member">rsp_state</ref>;</highlight></codeline>
<codeline lineno="130" refid="structbt__dfu__smp_1_1bt__dfu__smp__cbs" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp_1_1bt__dfu__smp__cbs" kindref="compound">bt_dfu_smp_cbs</ref><sp/>{</highlight></codeline>
<codeline lineno="135" refid="structbt__dfu__smp_1_1bt__dfu__smp__cbs_a5583df12846ee390446311391bfdddbb_1a5583df12846ee390446311391bfdddbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__dfu__smp_ga0cb485283d5d22cedb8b968b2c36a059_1ga0cb485283d5d22cedb8b968b2c36a059" kindref="member">bt_dfu_smp_error_cb</ref><sp/><ref refid="structbt__dfu__smp_1_1bt__dfu__smp__cbs_a5583df12846ee390446311391bfdddbb_1a5583df12846ee390446311391bfdddbb" kindref="member">error_cb</ref>;</highlight></codeline>
<codeline lineno="141" refid="structbt__dfu__smp_1_1bt__dfu__smp__cbs_a473e9cf813d0be89cc550d6c9b67ad75_1a473e9cf813d0be89cc550d6c9b67ad75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__dfu__smp_gaebfee109791f03135019a8af056543f3_1gaebfee109791f03135019a8af056543f3" kindref="member">bt_dfu_smp_rsp_part_cb</ref><sp/><ref refid="structbt__dfu__smp_1_1bt__dfu__smp__cbs_a473e9cf813d0be89cc550d6c9b67ad75_1a473e9cf813d0be89cc550d6c9b67ad75" kindref="member">rsp_part</ref>;</highlight></codeline>
<codeline lineno="142" refid="structbt__dfu__smp_a566642980f86abeff0eea0da98504059_1a566642980f86abeff0eea0da98504059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structbt__dfu__smp_a566642980f86abeff0eea0da98504059_1a566642980f86abeff0eea0da98504059" kindref="member">cbs</ref>;</highlight></codeline>
<codeline lineno="151" refid="structbt__dfu__smp_a930d11f5bf0aaf3cac9618f93d30594d_1a930d11f5bf0aaf3cac9618f93d30594d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_gatt_subscribe_params<sp/><ref refid="structbt__dfu__smp_a930d11f5bf0aaf3cac9618f93d30594d_1a930d11f5bf0aaf3cac9618f93d30594d" kindref="member">notification_params</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="group__bt__dfu__smp_ga5dcc9695fc6904a1336b0865fe1fc1a1_1ga5dcc9695fc6904a1336b0865fe1fc1a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__dfu__smp_ga5dcc9695fc6904a1336b0865fe1fc1a1_1ga5dcc9695fc6904a1336b0865fe1fc1a1" kindref="member">bt_dfu_smp_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>*dfu_smp,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp__init__params" kindref="compound">bt_dfu_smp_init_params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="group__bt__dfu__smp_gaed5cb0d405302c6c0c9e2a10e9abd8e8_1gaed5cb0d405302c6c0c9e2a10e9abd8e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__dfu__smp_gaed5cb0d405302c6c0c9e2a10e9abd8e8_1gaed5cb0d405302c6c0c9e2a10e9abd8e8" kindref="member">bt_dfu_smp_handles_assign</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_gatt_dm<sp/>*dm,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>*dfu_smp);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="group__bt__dfu__smp_ga8307223846219139dc605c9cb398b1a5_1ga8307223846219139dc605c9cb398b1a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__dfu__smp_ga8307223846219139dc605c9cb398b1a5_1ga8307223846219139dc605c9cb398b1a5" kindref="member">bt_dfu_smp_command</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>*dfu_smp,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__bt__dfu__smp_gaebfee109791f03135019a8af056543f3_1gaebfee109791f03135019a8af056543f3" kindref="member">bt_dfu_smp_rsp_part_cb</ref><sp/>rsp_cb,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cmd_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cmd_data);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="group__bt__dfu__smp_ga8765b27f2fd43465ae2c94c5482b648a_1ga8765b27f2fd43465ae2c94c5482b648a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*<ref refid="group__bt__dfu__smp_ga8765b27f2fd43465ae2c94c5482b648a_1ga8765b27f2fd43465ae2c94c5482b648a" kindref="member">bt_dfu_smp_conn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>*dfu_smp);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="group__bt__dfu__smp_ga9c01f83ca8124fe3ee6b46e8fc94099e_1ga9c01f83ca8124fe3ee6b46e8fc94099e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__dfu__smp__rsp__state" kindref="compound">bt_dfu_smp_rsp_state</ref><sp/>*<ref refid="group__bt__dfu__smp_ga9c01f83ca8124fe3ee6b46e8fc94099e_1ga9c01f83ca8124fe3ee6b46e8fc94099e" kindref="member">bt_dfu_smp_rsp_state</ref>(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>*dfu_smp);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="group__bt__dfu__smp_ga587bb5b1446eda02e434a51500799975_1ga587bb5b1446eda02e434a51500799975" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__bt__dfu__smp_ga587bb5b1446eda02e434a51500799975_1ga587bb5b1446eda02e434a51500799975" kindref="member">bt_dfu_smp_rsp_total_check</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__dfu__smp" kindref="compound">bt_dfu_smp</ref><sp/>*dfu_smp);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BT_DFU_SMP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/services/dfu_smp.h"/>
  </compounddef>
</doxygen>
