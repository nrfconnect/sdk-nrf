<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__nfc__ndef__ch__msg" kind="group">
    <compoundname>nfc_ndef_ch_msg</compoundname>
    <title>NFC Connection Hanover messages</title>
    <innerclass refid="structnfc__ndef__ch__msg__records" prot="public">nfc_ndef_ch_msg_records</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nfc__ndef__ch__msg_1ga3177df93eb0294ef581d40bee47702ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfc_ndef_ch_msg_le_oob_encode</definition>
        <argsstring>(const struct nfc_ndef_le_oob_rec_payload_desc *oob, uint8_t *buf, size_t *len)</argsstring>
        <name>nfc_ndef_ch_msg_le_oob_encode</name>
        <param>
          <type>const struct <ref refid="structnfc__ndef__le__oob__rec__payload__desc" kindref="compound">nfc_ndef_le_oob_rec_payload_desc</ref> *</type>
          <declname>oob</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Encode an NFC NDEF LE OOB message. </para>
        </briefdescription>
        <detaileddescription>
<para>This function encodes an NFC NDEF message into a buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">oob</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the LE OOB Record payload descriptor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer for the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the available memory for the message as input. Size of the generated message as output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/ch_msg.h" line="62" column="5" declfile="include/nfc/ndef/ch_msg.h" declline="62" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nfc__ndef__ch__msg_1ga0f5bc870aab55885540cf4de2e744806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfc_ndef_ch_msg_hs_create</definition>
        <argsstring>(struct nfc_ndef_msg_desc *msg, struct nfc_ndef_record_desc *hs_rec, const struct nfc_ndef_ch_msg_records *records)</argsstring>
        <name>nfc_ndef_ch_msg_hs_create</name>
        <param>
          <type>struct <ref refid="structnfc__ndef__msg__desc" kindref="compound">nfc_ndef_msg_desc</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>struct <ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref> *</type>
          <declname>hs_rec</declname>
        </param>
        <param>
          <type>const struct <ref refid="structnfc__ndef__ch__msg__records" kindref="compound">nfc_ndef_ch_msg_records</ref> *</type>
          <declname>records</declname>
        </param>
        <briefdescription>
<para>Create an NFC NDEF Handover Select message. </para>
        </briefdescription>
        <detaileddescription>
<para>This function create an NFC NDEF message. It create a nested NDEF message with the Alternative Carrier Records. Next the Records with the Carrier data are added into the main Connection Hanover Select message. Number of the Alternative Carrier Records must be equal to the number of the Carrier Records.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to NDEF message. This message is initialized with Connection Handover Record. The message must be able to keep at least count of the Alternative Carrier Records + 1 records. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">hs_rec</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Handover Select Record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">records</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to structure which contains the Alternative Carrier Records and the Carrier Records</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/ch_msg.h" line="85" column="5" declfile="include/nfc/ndef/ch_msg.h" declline="85" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nfc__ndef__ch__msg_1ga414c6150e5843da0f8bdaca8f93f3ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfc_ndef_ch_msg_hr_create</definition>
        <argsstring>(struct nfc_ndef_msg_desc *msg, struct nfc_ndef_record_desc *hr_rec, const struct nfc_ndef_record_desc *cr_rec, const struct nfc_ndef_ch_msg_records *records)</argsstring>
        <name>nfc_ndef_ch_msg_hr_create</name>
        <param>
          <type>struct <ref refid="structnfc__ndef__msg__desc" kindref="compound">nfc_ndef_msg_desc</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>struct <ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref> *</type>
          <declname>hr_rec</declname>
        </param>
        <param>
          <type>const struct <ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref> *</type>
          <declname>cr_rec</declname>
        </param>
        <param>
          <type>const struct <ref refid="structnfc__ndef__ch__msg__records" kindref="compound">nfc_ndef_ch_msg_records</ref> *</type>
          <declname>records</declname>
        </param>
        <briefdescription>
<para>Encode an NFC NDEF Handover Request message. </para>
        </briefdescription>
        <detaileddescription>
<para>This function create an NFC NDEF message. It create a nested NDEF message with the Alternative Carrier Records. Next the Records with the Carrier data are added into the main Connection Hanover Request message. Number of the Alternative Carrier Records must be equal to the number of the Carrier Records.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to NDEF message. This message is initialized with Connection Handover Record. The message must be able to keep at least count of the Alternative Carrier Records + 1 records. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">hr_rec</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Handover Request Record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cr_rec</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Collision Resolution Record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">records</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to structure which contains the Alternative Carrier Records and the Carrier Records</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/ch_msg.h" line="110" column="5" declfile="include/nfc/ndef/ch_msg.h" declline="110" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nfc__ndef__ch__msg_1gaa09d0edf5da83025bd5840ea86022f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfc_ndef_ch_msg_hm_create</definition>
        <argsstring>(struct nfc_ndef_msg_desc *msg, struct nfc_ndef_record_desc *hm_rec, const struct nfc_ndef_ch_msg_records *records)</argsstring>
        <name>nfc_ndef_ch_msg_hm_create</name>
        <param>
          <type>struct <ref refid="structnfc__ndef__msg__desc" kindref="compound">nfc_ndef_msg_desc</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>struct <ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref> *</type>
          <declname>hm_rec</declname>
        </param>
        <param>
          <type>const struct <ref refid="structnfc__ndef__ch__msg__records" kindref="compound">nfc_ndef_ch_msg_records</ref> *</type>
          <declname>records</declname>
        </param>
        <briefdescription>
<para>Create an NFC NDEF Handover Mediation message. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates an NFC NDEF message. It create a nested NDEF message with the Alternative Carrier Records. Next the Records with the Carrier data are added into the main Connection Hanover Mediation message. Number of the Alternative Carrier Records must be equal to the number of the Carrier Records.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to NDEF message. This message is initialized with Connection Handover Record. The message must be able to keep at least count of the Alternative Carrier Records + 1 records. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">hm_rec</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Handover Mediation Record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">records</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to structure which contains the Alternative Carrier Records and the Carrier Records</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/ch_msg.h" line="135" column="5" declfile="include/nfc/ndef/ch_msg.h" declline="135" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nfc__ndef__ch__msg_1gaa33649cb5b349af31d808e8ca93080af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfc_ndef_ch_msg_hi_create</definition>
        <argsstring>(struct nfc_ndef_msg_desc *msg, struct nfc_ndef_record_desc *hi_rec, const struct nfc_ndef_ch_msg_records *records)</argsstring>
        <name>nfc_ndef_ch_msg_hi_create</name>
        <param>
          <type>struct <ref refid="structnfc__ndef__msg__desc" kindref="compound">nfc_ndef_msg_desc</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>struct <ref refid="structnfc__ndef__record__desc" kindref="compound">nfc_ndef_record_desc</ref> *</type>
          <declname>hi_rec</declname>
        </param>
        <param>
          <type>const struct <ref refid="structnfc__ndef__ch__msg__records" kindref="compound">nfc_ndef_ch_msg_records</ref> *</type>
          <declname>records</declname>
        </param>
        <briefdescription>
<para>Create an NFC NDEF Handover Initiate message. </para>
        </briefdescription>
        <detaileddescription>
<para>This function creates an NFC NDEF message. It create a nested NDEF message with the Alternative Carrier Records. Next the Records with the Carrier data are added into the main Connection Hanover Initiate message. Number of the Alternative Carrier Records must be equal to the number of the Carrier Records.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to NDEF message. This message is initialized with Connection Handover Record. The message must be able to keep at least count of the Alternative Carrier Records + 1 records. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">hi_rec</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Handover Initiate Record. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">records</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to structure which contains the Alternative Carrier Records and the Carrier Records</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/ch_msg.h" line="159" column="5" declfile="include/nfc/ndef/ch_msg.h" declline="159" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nfc__ndef__ch__msg_1gafb5c0d9a5e876fab9098771f109cd202" prot="public" static="no">
        <name>NFC_NDEF_CH_MSG_MAJOR_VER</name>
        <initializer>CONFIG_NFC_NDEF_CH_MAJOR_VERSION</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/ch_msg.h" line="30" column="9" bodyfile="include/nfc/ndef/ch_msg.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nfc__ndef__ch__msg_1ga7bf35c812a36ad804bc6db740330bda0" prot="public" static="no">
        <name>NFC_NDEF_CH_MSG_MINOR_VER</name>
        <initializer>CONFIG_NFC_NDEF_CH_MINOR_VERSION</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/ch_msg.h" line="31" column="9" bodyfile="include/nfc/ndef/ch_msg.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generation of The Connection Handover NDEF messages. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
