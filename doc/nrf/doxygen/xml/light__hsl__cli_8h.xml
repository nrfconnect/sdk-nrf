<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="light__hsl__cli_8h" kind="file" language="C++">
    <compoundname>light_hsl_cli.h</compoundname>
    <includes refid="light__hsl_8h" local="no">bluetooth/mesh/light_hsl.h</includes>
    <includes refid="model__types_8h" local="no">bluetooth/mesh/model_types.h</includes>
    <includedby refid="models_8h" local="no">include/bluetooth/mesh/models.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>bluetooth/mesh/light_hsl.h</label>
        <link refid="light__hsl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/bluetooth/mesh/light_hsl_cli.h</label>
        <link refid="light__hsl__cli_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>bluetooth/mesh/model_types.h</label>
        <link refid="model__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bluetooth/mesh.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/bluetooth/mesh/light_hsl_cli.h</label>
        <link refid="light__hsl__cli_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/bluetooth/mesh/models.h</label>
        <link refid="models_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/bluetooth/mesh/vnd/silvair_enocean_srv.h</label>
        <link refid="silvair__enocean__srv_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbt__mesh__light__hsl__cli__handlers" prot="public">bt_mesh_light_hsl_cli_handlers</innerclass>
    <innerclass refid="structbt__mesh__light__hsl__cli" prot="public">bt_mesh_light_hsl_cli</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__mesh__light__hsl__cli_gaab2b8580547b1fa51243f5531e2db688_1gaab2b8580547b1fa51243f5531e2db688" prot="public" static="no">
        <name>BT_MESH_MODEL_LIGHT_HSL_CLI</name>
        <param><defname>_cli</defname></param>
        <initializer>	BT_MESH_MODEL_CB(BT_MESH_MODEL_ID_LIGHT_HSL_CLI,                       \
			 _bt_mesh_light_hsl_cli_op, &amp;(_cli)-&gt;pub,              \
			 BT_MESH_MODEL_USER_DATA(struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref>, \
						 _cli),                        \
			 &amp;_bt_mesh_light_hsl_cli_cb)</initializer>
        <briefdescription>
<para>Light HSL Client model composition data entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="group__bt__mesh__light__hsl__cli" kindref="compound">Light HSL Client model</ref> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="32" column="9" bodyfile="include/bluetooth/mesh/light_hsl_cli.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga5cf7d4ca4adf48ccaa9569b40e921cf5_1ga5cf7d4ca4adf48ccaa9569b40e921cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_get</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_hsl_status *rsp)</argsstring>
        <name>bt_mesh_light_hsl_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__status" kindref="compound">bt_mesh_light_hsl_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the Light HSL state of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="145" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="145" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga1d2c4976e834d376b07111f317c70d12_1ga1d2c4976e834d376b07111f317c70d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_set</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_hsl_params *set, struct bt_mesh_light_hsl_status *rsp)</argsstring>
        <name>bt_mesh_light_hsl_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__hsl__params" kindref="compound">bt_mesh_light_hsl_params</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__status" kindref="compound">bt_mesh_light_hsl_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the Light HSL state of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>HSL state to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="167" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="167" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga633a15924d8a8e04c8dc87b657db29cd_1ga633a15924d8a8e04c8dc87b657db29cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_set_unack</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_hsl_params *set)</argsstring>
        <name>bt_mesh_light_hsl_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__hsl__params" kindref="compound">bt_mesh_light_hsl_params</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the Light HSL state of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>HSL state to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="184" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="184" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga27bb359913ff868ac282c4a4a4cbf8da_1ga27bb359913ff868ac282c4a4a4cbf8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_target_get</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_hsl_status *rsp)</argsstring>
        <name>bt_mesh_light_hsl_target_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__status" kindref="compound">bt_mesh_light_hsl_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the Light HSL target state of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="205" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="205" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga5d1b96f81cd1ef1108f82f387f32ea07_1ga5d1b96f81cd1ef1108f82f387f32ea07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_default_get</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_hsl *rsp)</argsstring>
        <name>bt_mesh_light_hsl_default_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the default HSL value of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="226" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="226" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga3b5f49598b789d18c30a5017b4a5ae59_1ga3b5f49598b789d18c30a5017b4a5ae59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_default_set</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_hsl *set, struct bt_mesh_light_hsl *rsp)</argsstring>
        <name>bt_mesh_light_hsl_default_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the default HSL value of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Default HSL value to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="248" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="248" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_gabc5728909fa2cd90f3c9b65b7ae5092f_1gabc5728909fa2cd90f3c9b65b7ae5092f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_default_set_unack</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_hsl *set)</argsstring>
        <name>bt_mesh_light_hsl_default_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the default HSL value of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Default HSL value to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="266" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="266" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga195cb46b5546fc2a9db21c64645bd070_1ga195cb46b5546fc2a9db21c64645bd070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_range_get</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_hsl_range_status *rsp)</argsstring>
        <name>bt_mesh_light_hsl_range_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__range__status" kindref="compound">bt_mesh_light_hsl_range_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the Light HSL Range state of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="287" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="287" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_gad90e6e4b35d77d803725b961ae4134d4_1gad90e6e4b35d77d803725b961ae4134d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_range_set</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_hue_sat_range *set, struct bt_mesh_light_hsl_range_status *rsp)</argsstring>
        <name>bt_mesh_light_hsl_range_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__hue__sat__range" kindref="compound">bt_mesh_light_hue_sat_range</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__range__status" kindref="compound">bt_mesh_light_hsl_range_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the Light HSL Range of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Range to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="309" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="309" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga0d7ffbfdd365cc2c4158720dd485fc8f_1ga0d7ffbfdd365cc2c4158720dd485fc8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hsl_range_set_unack</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_hue_sat_range *set)</argsstring>
        <name>bt_mesh_light_hsl_range_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__hue__sat__range" kindref="compound">bt_mesh_light_hue_sat_range</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the Light HSL Range of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Range state to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="327" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="327" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_gaaf2f4b928da416cad45e5d0cc0ac6bdc_1gaaf2f4b928da416cad45e5d0cc0ac6bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hue_get</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_hue_status *rsp)</argsstring>
        <name>bt_mesh_light_hue_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hue__status" kindref="compound">bt_mesh_light_hue_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the Light Hue state of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="348" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="348" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_gac83d52f21d1a73a4e6a7ed06633da69d_1gac83d52f21d1a73a4e6a7ed06633da69d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hue_set</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_hue *set, struct bt_mesh_light_hue_status *rsp)</argsstring>
        <name>bt_mesh_light_hue_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__hue" kindref="compound">bt_mesh_light_hue</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hue__status" kindref="compound">bt_mesh_light_hue_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the Light Hue state of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Light Hue state to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="370" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="370" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga9b410853b4819b33bc03d33127934147_1ga9b410853b4819b33bc03d33127934147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_hue_set_unack</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_hue *set)</argsstring>
        <name>bt_mesh_light_hue_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__hue" kindref="compound">bt_mesh_light_hue</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the Light Hue state of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Light Hue state to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="387" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="387" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_gaa56b5aef119b859fc9e2765e3782a2c0_1gaa56b5aef119b859fc9e2765e3782a2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_saturation_get</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_sat_status *rsp)</argsstring>
        <name>bt_mesh_light_saturation_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__sat__status" kindref="compound">bt_mesh_light_sat_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the Light Saturation state of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Status response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="408" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="408" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_ga33f2c9924ece721359f885e208d7d906_1ga33f2c9924ece721359f885e208d7d906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_saturation_set</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_sat *set, struct bt_mesh_light_sat_status *rsp)</argsstring>
        <name>bt_mesh_light_saturation_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__sat" kindref="compound">bt_mesh_light_sat</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__light__sat__status" kindref="compound">bt_mesh_light_sat_status</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the Light Saturation state of the server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Light Saturation state to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="430" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="430" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__light__hsl__cli_gad580e700ad439c1a81b35f3544e039dc_1gad580e700ad439c1a81b35f3544e039dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_light_saturation_set_unack</definition>
        <argsstring>(struct bt_mesh_light_hsl_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_sat *set)</argsstring>
        <name>bt_mesh_light_saturation_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__light__sat" kindref="compound">bt_mesh_light_sat</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Set the Light Saturation state of the server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Light Saturation state to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_hsl_cli.h" line="448" column="5" declfile="include/bluetooth/mesh/light_hsl_cli.h" declline="448" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BT_MESH_LIGHT_HSL_CLI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_LIGHT_HSL_CLI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="light__hsl_8h" kindref="compound">bluetooth/mesh/light_hsl.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="model__types_8h" kindref="compound">bluetooth/mesh/model_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__bt__mesh__light__hsl__cli_gaab2b8580547b1fa51243f5531e2db688_1gaab2b8580547b1fa51243f5531e2db688" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_MODEL_LIGHT_HSL_CLI(_cli)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_MODEL_CB(BT_MESH_MODEL_ID_LIGHT_HSL_CLI,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_bt_mesh_light_hsl_cli_op,<sp/>&amp;(_cli)-&gt;pub,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_MODEL_USER_DATA(struct<sp/>bt_mesh_light_hsl_cli,<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cli),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_bt_mesh_light_hsl_cli_cb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structbt__mesh__light__hsl__cli__handlers" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli__handlers" kindref="compound">bt_mesh_light_hsl_cli_handlers</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structbt__mesh__light__hsl__cli__handlers_a658b2c240d5f72f038952e72cc5334ba_1a658b2c240d5f72f038952e72cc5334ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli__handlers_a658b2c240d5f72f038952e72cc5334ba_1a658b2c240d5f72f038952e72cc5334ba" kindref="member">status</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__status" kindref="compound">bt_mesh_light_hsl_status</ref><sp/>*<ref refid="structbt__mesh__light__hsl__cli__handlers_a658b2c240d5f72f038952e72cc5334ba_1a658b2c240d5f72f038952e72cc5334ba" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="structbt__mesh__light__hsl__cli__handlers_ac434576d7f8e21f5d44abc6f9db73a64_1ac434576d7f8e21f5d44abc6f9db73a64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli__handlers_ac434576d7f8e21f5d44abc6f9db73a64_1ac434576d7f8e21f5d44abc6f9db73a64" kindref="member">target_status</ref>)(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__status" kindref="compound">bt_mesh_light_hsl_status</ref><sp/>*<ref refid="structbt__mesh__light__hsl__cli__handlers_a658b2c240d5f72f038952e72cc5334ba_1a658b2c240d5f72f038952e72cc5334ba" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structbt__mesh__light__hsl__cli__handlers_ae0fadb749e7bbd5ec1438e0f5c7c768d_1ae0fadb749e7bbd5ec1438e0f5c7c768d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli__handlers_ae0fadb749e7bbd5ec1438e0f5c7c768d_1ae0fadb749e7bbd5ec1438e0f5c7c768d" kindref="member">default_status</ref>)(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref><sp/>*<ref refid="structbt__mesh__light__hsl__cli__handlers_a658b2c240d5f72f038952e72cc5334ba_1a658b2c240d5f72f038952e72cc5334ba" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structbt__mesh__light__hsl__cli__handlers_abc486ac0bc80e8a019d30b119f3ace4f_1abc486ac0bc80e8a019d30b119f3ace4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli__handlers_abc486ac0bc80e8a019d30b119f3ace4f_1abc486ac0bc80e8a019d30b119f3ace4f" kindref="member">range_status</ref>)(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__range__status" kindref="compound">bt_mesh_light_hsl_range_status</ref><sp/>*<ref refid="structbt__mesh__light__hsl__cli__handlers_a658b2c240d5f72f038952e72cc5334ba_1a658b2c240d5f72f038952e72cc5334ba" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structbt__mesh__light__hsl__cli__handlers_a208546b5fb52d71f2a51131cc6a94ac3_1a208546b5fb52d71f2a51131cc6a94ac3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli__handlers_a208546b5fb52d71f2a51131cc6a94ac3_1a208546b5fb52d71f2a51131cc6a94ac3" kindref="member">hue_status</ref>)(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hue__status" kindref="compound">bt_mesh_light_hue_status</ref><sp/>*<ref refid="structbt__mesh__light__hsl__cli__handlers_a658b2c240d5f72f038952e72cc5334ba_1a658b2c240d5f72f038952e72cc5334ba" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structbt__mesh__light__hsl__cli__handlers_a43b1ba5242cf43dd150978893670e4af_1a43b1ba5242cf43dd150978893670e4af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli__handlers_a43b1ba5242cf43dd150978893670e4af_1a43b1ba5242cf43dd150978893670e4af" kindref="member">saturation_status</ref>)(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__sat__status" kindref="compound">bt_mesh_light_sat_status</ref><sp/>*<ref refid="structbt__mesh__light__hsl__cli__handlers_a658b2c240d5f72f038952e72cc5334ba_1a658b2c240d5f72f038952e72cc5334ba" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structbt__mesh__light__hsl__cli" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structbt__mesh__light__hsl__cli_ae189e9cf887d43fe2138d1eccb14b5bf_1ae189e9cf887d43fe2138d1eccb14b5bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__light__hsl__cli__handlers" kindref="compound">bt_mesh_light_hsl_cli_handlers</ref><sp/>*<ref refid="structbt__mesh__light__hsl__cli_ae189e9cf887d43fe2138d1eccb14b5bf_1ae189e9cf887d43fe2138d1eccb14b5bf" kindref="member">handlers</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structbt__mesh__light__hsl__cli_ad10d1278e80fd37dccb81e617da35220_1ad10d1278e80fd37dccb81e617da35220" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_model<sp/>*<ref refid="structbt__mesh__light__hsl__cli_ad10d1278e80fd37dccb81e617da35220_1ad10d1278e80fd37dccb81e617da35220" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="116" refid="structbt__mesh__light__hsl__cli_af20a399991988227d43169b5a846e96e_1af20a399991988227d43169b5a846e96e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_model_pub<sp/><ref refid="structbt__mesh__light__hsl__cli_af20a399991988227d43169b5a846e96e_1af20a399991988227d43169b5a846e96e" kindref="member">pub</ref>;</highlight></codeline>
<codeline lineno="118" refid="structbt__mesh__light__hsl__cli_a9e6decd4e3b014b4aa85fd19c00d3183_1a9e6decd4e3b014b4aa85fd19c00d3183" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">net_buf_simple<sp/><ref refid="structbt__mesh__light__hsl__cli_a9e6decd4e3b014b4aa85fd19c00d3183_1a9e6decd4e3b014b4aa85fd19c00d3183" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="120" refid="structbt__mesh__light__hsl__cli_aafc23b9e4bafbf0d1ced84c1a11b50b1_1aafc23b9e4bafbf0d1ced84c1a11b50b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__mesh__light__hsl__cli_aafc23b9e4bafbf0d1ced84c1a11b50b1_1aafc23b9e4bafbf0d1ced84c1a11b50b1" kindref="member">pub_data</ref>[BT_MESH_MODEL_BUF_LEN(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_LIGHT_HSL_OP_SET,<sp/>BT_MESH_LIGHT_HSL_MSG_MAXLEN_SET)];</highlight></codeline>
<codeline lineno="123" refid="structbt__mesh__light__hsl__cli_af4ff20623633154510d069ea06bea389_1af4ff20623633154510d069ea06bea389" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ack_ctx<sp/><ref refid="structbt__mesh__light__hsl__cli_af4ff20623633154510d069ea06bea389_1af4ff20623633154510d069ea06bea389" kindref="member">ack_ctx</ref>;</highlight></codeline>
<codeline lineno="125" refid="structbt__mesh__light__hsl__cli_aff76eac2065d43dbdeddd0d4f4a0d29b_1aff76eac2065d43dbdeddd0d4f4a0d29b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__mesh__light__hsl__cli_aff76eac2065d43dbdeddd0d4f4a0d29b_1aff76eac2065d43dbdeddd0d4f4a0d29b" kindref="member">tid</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="group__bt__mesh__light__hsl__cli_ga5cf7d4ca4adf48ccaa9569b40e921cf5_1ga5cf7d4ca4adf48ccaa9569b40e921cf5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga5cf7d4ca4adf48ccaa9569b40e921cf5_1ga5cf7d4ca4adf48ccaa9569b40e921cf5" kindref="member">bt_mesh_light_hsl_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__status" kindref="compound">bt_mesh_light_hsl_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="group__bt__mesh__light__hsl__cli_ga1d2c4976e834d376b07111f317c70d12_1ga1d2c4976e834d376b07111f317c70d12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga1d2c4976e834d376b07111f317c70d12_1ga1d2c4976e834d376b07111f317c70d12" kindref="member">bt_mesh_light_hsl_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__params" kindref="compound">bt_mesh_light_hsl_params</ref><sp/>*set,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__status" kindref="compound">bt_mesh_light_hsl_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group__bt__mesh__light__hsl__cli_ga633a15924d8a8e04c8dc87b657db29cd_1ga633a15924d8a8e04c8dc87b657db29cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga633a15924d8a8e04c8dc87b657db29cd_1ga633a15924d8a8e04c8dc87b657db29cd" kindref="member">bt_mesh_light_hsl_set_unack</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__params" kindref="compound">bt_mesh_light_hsl_params</ref><sp/>*set);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="group__bt__mesh__light__hsl__cli_ga27bb359913ff868ac282c4a4a4cbf8da_1ga27bb359913ff868ac282c4a4a4cbf8da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga27bb359913ff868ac282c4a4a4cbf8da_1ga27bb359913ff868ac282c4a4a4cbf8da" kindref="member">bt_mesh_light_hsl_target_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__status" kindref="compound">bt_mesh_light_hsl_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="group__bt__mesh__light__hsl__cli_ga5d1b96f81cd1ef1108f82f387f32ea07_1ga5d1b96f81cd1ef1108f82f387f32ea07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga5d1b96f81cd1ef1108f82f387f32ea07_1ga5d1b96f81cd1ef1108f82f387f32ea07" kindref="member">bt_mesh_light_hsl_default_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group__bt__mesh__light__hsl__cli_ga3b5f49598b789d18c30a5017b4a5ae59_1ga3b5f49598b789d18c30a5017b4a5ae59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga3b5f49598b789d18c30a5017b4a5ae59_1ga3b5f49598b789d18c30a5017b4a5ae59" kindref="member">bt_mesh_light_hsl_default_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref><sp/>*set,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group__bt__mesh__light__hsl__cli_gabc5728909fa2cd90f3c9b65b7ae5092f_1gabc5728909fa2cd90f3c9b65b7ae5092f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_gabc5728909fa2cd90f3c9b65b7ae5092f_1gabc5728909fa2cd90f3c9b65b7ae5092f" kindref="member">bt_mesh_light_hsl_default_set_unack</ref>(</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl" kindref="compound">bt_mesh_light_hsl</ref><sp/>*set);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="group__bt__mesh__light__hsl__cli_ga195cb46b5546fc2a9db21c64645bd070_1ga195cb46b5546fc2a9db21c64645bd070" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga195cb46b5546fc2a9db21c64645bd070_1ga195cb46b5546fc2a9db21c64645bd070" kindref="member">bt_mesh_light_hsl_range_get</ref>(</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__range__status" kindref="compound">bt_mesh_light_hsl_range_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="group__bt__mesh__light__hsl__cli_gad90e6e4b35d77d803725b961ae4134d4_1gad90e6e4b35d77d803725b961ae4134d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_gad90e6e4b35d77d803725b961ae4134d4_1gad90e6e4b35d77d803725b961ae4134d4" kindref="member">bt_mesh_light_hsl_range_set</ref>(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hue__sat__range" kindref="compound">bt_mesh_light_hue_sat_range</ref><sp/>*set,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__range__status" kindref="compound">bt_mesh_light_hsl_range_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group__bt__mesh__light__hsl__cli_ga0d7ffbfdd365cc2c4158720dd485fc8f_1ga0d7ffbfdd365cc2c4158720dd485fc8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga0d7ffbfdd365cc2c4158720dd485fc8f_1ga0d7ffbfdd365cc2c4158720dd485fc8f" kindref="member">bt_mesh_light_hsl_range_set_unack</ref>(</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hue__sat__range" kindref="compound">bt_mesh_light_hue_sat_range</ref><sp/>*set);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="group__bt__mesh__light__hsl__cli_gaaf2f4b928da416cad45e5d0cc0ac6bdc_1gaaf2f4b928da416cad45e5d0cc0ac6bdc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_gaaf2f4b928da416cad45e5d0cc0ac6bdc_1gaaf2f4b928da416cad45e5d0cc0ac6bdc" kindref="member">bt_mesh_light_hue_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hue__status" kindref="compound">bt_mesh_light_hue_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="group__bt__mesh__light__hsl__cli_gac83d52f21d1a73a4e6a7ed06633da69d_1gac83d52f21d1a73a4e6a7ed06633da69d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_gac83d52f21d1a73a4e6a7ed06633da69d_1gac83d52f21d1a73a4e6a7ed06633da69d" kindref="member">bt_mesh_light_hue_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hue" kindref="compound">bt_mesh_light_hue</ref><sp/>*set,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hue__status" kindref="compound">bt_mesh_light_hue_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="group__bt__mesh__light__hsl__cli_ga9b410853b4819b33bc03d33127934147_1ga9b410853b4819b33bc03d33127934147" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga9b410853b4819b33bc03d33127934147_1ga9b410853b4819b33bc03d33127934147" kindref="member">bt_mesh_light_hue_set_unack</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hue" kindref="compound">bt_mesh_light_hue</ref><sp/>*set);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="group__bt__mesh__light__hsl__cli_gaa56b5aef119b859fc9e2765e3782a2c0_1gaa56b5aef119b859fc9e2765e3782a2c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_gaa56b5aef119b859fc9e2765e3782a2c0_1gaa56b5aef119b859fc9e2765e3782a2c0" kindref="member">bt_mesh_light_saturation_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__sat__status" kindref="compound">bt_mesh_light_sat_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="group__bt__mesh__light__hsl__cli_ga33f2c9924ece721359f885e208d7d906_1ga33f2c9924ece721359f885e208d7d906" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_ga33f2c9924ece721359f885e208d7d906_1ga33f2c9924ece721359f885e208d7d906" kindref="member">bt_mesh_light_saturation_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__sat" kindref="compound">bt_mesh_light_sat</ref><sp/>*set,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__sat__status" kindref="compound">bt_mesh_light_sat_status</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="group__bt__mesh__light__hsl__cli_gad580e700ad439c1a81b35f3544e039dc_1gad580e700ad439c1a81b35f3544e039dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__light__hsl__cli_gad580e700ad439c1a81b35f3544e039dc_1gad580e700ad439c1a81b35f3544e039dc" kindref="member">bt_mesh_light_saturation_set_unack</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__hsl__cli" kindref="compound">bt_mesh_light_hsl_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__light__sat" kindref="compound">bt_mesh_light_sat</ref><sp/>*set);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_model_op<sp/>_bt_mesh_light_hsl_cli_op[];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_model_cb<sp/>_bt_mesh_light_hsl_cli_cb;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BT_MESH_LIGHT_HSL_CLI_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/mesh/light_hsl_cli.h"/>
  </compounddef>
</doxygen>
