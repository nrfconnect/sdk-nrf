<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__bt__gatt__dm" kind="group">
    <compoundname>bt_gatt_dm</compoundname>
    <title>GATT Discovery Manager API</title>
    <innerclass refid="structbt__gatt__dm__attr" prot="public">bt_gatt_dm_attr</innerclass>
    <innerclass refid="structbt__gatt__dm__cb" prot="public">bt_gatt_dm_cb</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__gatt__dm_1ga9709fa5d23f397128f875d5ccfb7042f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bt_gatt_service_val *</type>
        <definition>struct bt_gatt_service_val * bt_gatt_dm_attr_service_val</definition>
        <argsstring>(const struct bt_gatt_dm_attr *attr)</argsstring>
        <name>bt_gatt_dm_attr_service_val</name>
        <param>
          <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Access service value saved with service attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>This function access the service value parsed and saved previously in the user_data attribute field.</para>
<para><simplesect kind="note"><para>Use it only on the attribute parsed in this module. To access service attribute use <ref refid="group__bt__gatt__dm_gab973fee7e07072342cbb1bf63a56e655_1gab973fee7e07072342cbb1bf63a56e655" kindref="member">bt_gatt_dm_service_get</ref> function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Service attribute</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The service value from the parsed attribute or NULL when attribute UUID value is unexpected. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="104" column="26" declfile="include/bluetooth/gatt_dm.h" declline="104" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1gac5044c09a62ab11eb6e38680c594c362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bt_gatt_chrc *</type>
        <definition>struct bt_gatt_chrc * bt_gatt_dm_attr_chrc_val</definition>
        <argsstring>(const struct bt_gatt_dm_attr *attr)</argsstring>
        <name>bt_gatt_dm_attr_chrc_val</name>
        <param>
          <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Access characteristic value saved with characteristic attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>This function access the characteristic value parsed and saved previously in the user_data attribute field.</para>
<para><simplesect kind="note"><para>Use it only on the attribute parsed in this module. To access characteristic attribute use <ref refid="group__bt__gatt__dm_gaeb6c1dbc4182b1da7bb5fd498cde4ddb_1gaeb6c1dbc4182b1da7bb5fd498cde4ddb" kindref="member">bt_gatt_dm_char_next</ref> function.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Characteristic attribute</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The characteristic value from parser attribute or NULL when attribute UUID value is unexpected. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="121" column="19" declfile="include/bluetooth/gatt_dm.h" declline="121" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga0da89dbfb87606a352be11370a2bd301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bt_conn *</type>
        <definition>struct bt_conn * bt_gatt_dm_conn_get</definition>
        <argsstring>(struct bt_gatt_dm *dm)</argsstring>
        <name>bt_gatt_dm_conn_get</name>
        <param>
          <type>struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <briefdescription>
<para>Get the connection object. </para>
        </briefdescription>
        <detaileddescription>
<para>Function returns connection object that is used by given discovery manager instance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Connection object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="133" column="14" declfile="include/bluetooth/gatt_dm.h" declline="133" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga8b99aa2f86e7a76082d0f4b2bd08c485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t bt_gatt_dm_attr_cnt</definition>
        <argsstring>(const struct bt_gatt_dm *dm)</argsstring>
        <name>bt_gatt_dm_attr_cnt</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <briefdescription>
<para>Get total number of attributes decoded. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of attributes including the service attribute. It means that service without any attribute would return 1 here.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Total number of attributes parsed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="144" column="8" declfile="include/bluetooth/gatt_dm.h" declline="144" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1gab973fee7e07072342cbb1bf63a56e655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
        <definition>const struct bt_gatt_dm_attr * bt_gatt_dm_service_get</definition>
        <argsstring>(const struct bt_gatt_dm *dm)</argsstring>
        <name>bt_gatt_dm_service_get</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <briefdescription>
<para>Get service value. </para>
        </briefdescription>
        <detaileddescription>
<para>Function returns the value that contains UUID and attribute end handler of the service found.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer service value structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="155" column="28" declfile="include/bluetooth/gatt_dm.h" declline="155" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1gaeb6c1dbc4182b1da7bb5fd498cde4ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
        <definition>const struct bt_gatt_dm_attr * bt_gatt_dm_char_next</definition>
        <argsstring>(const struct bt_gatt_dm *dm, const struct bt_gatt_dm_attr *prev)</argsstring>
        <name>bt_gatt_dm_char_next</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
<para>Get next characteristic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prev</parametername>
</parameternamelist>
<parameterdescription>
<para>An attribute where start to search. If NULL - the first characteristic in the service would be found. Note: It can be the previous characteristic attribute or the last descriptor inside the previous attribute. Function would start searching for the next characteristic from that point.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer for an attribute that describes the characteristic or NULL if no more characteristic is present. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="171" column="28" declfile="include/bluetooth/gatt_dm.h" declline="171" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga59aa8e43d4ad0e927f32b56a0d82363d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
        <definition>const struct bt_gatt_dm_attr * bt_gatt_dm_char_by_uuid</definition>
        <argsstring>(const struct bt_gatt_dm *dm, const struct bt_uuid *uuid)</argsstring>
        <name>bt_gatt_dm_char_by_uuid</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const struct bt_uuid *</type>
          <declname>uuid</declname>
        </param>
        <briefdescription>
<para>Get the characteristic by its UUID. </para>
        </briefdescription>
        <detaileddescription>
<para>Function finds characteristic attribute by the UUID stored in its characteristic value. If the selected characteristic is not found in parsed service it returns NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>The UUID of the characteristic</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The characteristic attribute (the one with UUID set to <emphasis>BT_UUID_GATT_CHRC</emphasis>) with the selected UUID inside the characteristic value. Returns NULL if no such characteristic is present in the current service. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="191" column="28" declfile="include/bluetooth/gatt_dm.h" declline="191" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1gadcaae426fc2c9b7b9d232569801744cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
        <definition>const struct bt_gatt_dm_attr * bt_gatt_dm_attr_by_handle</definition>
        <argsstring>(const struct bt_gatt_dm *dm, uint16_t handle)</argsstring>
        <name>bt_gatt_dm_attr_by_handle</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Get attribute by handle. </para>
        </briefdescription>
        <detaileddescription>
<para>Function returns any type of the attribute using its handle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to find</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the attribute or NULL if there is no attribute with such a pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="205" column="28" declfile="include/bluetooth/gatt_dm.h" declline="205" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga423258eb0c60913ed6324a708906dd17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
        <definition>const struct bt_gatt_dm_attr * bt_gatt_dm_attr_next</definition>
        <argsstring>(const struct bt_gatt_dm *dm, const struct bt_gatt_dm_attr *prev)</argsstring>
        <name>bt_gatt_dm_attr_next</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
<para>Get next attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Function returns the attribute next to the given one. It returns any type of the attribute.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prev</parametername>
</parameternamelist>
<parameterdescription>
<para>Previous attribute or NULL if we wish to get first attribute (just after service).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Attribute next to the <computeroutput>prev</computeroutput> or the first attribute if NULL is given. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="220" column="28" declfile="include/bluetooth/gatt_dm.h" declline="220" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1gabb3f6f0b92360fb46161a9c0c6dab757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
        <definition>const struct bt_gatt_dm_attr * bt_gatt_dm_desc_by_uuid</definition>
        <argsstring>(const struct bt_gatt_dm *dm, const struct bt_gatt_dm_attr *attr_chrc, const struct bt_uuid *uuid)</argsstring>
        <name>bt_gatt_dm_desc_by_uuid</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
          <declname>attr_chrc</declname>
        </param>
        <param>
          <type>const struct bt_uuid *</type>
          <declname>uuid</declname>
        </param>
        <briefdescription>
<para>Search the descriptor by UUID. </para>
        </briefdescription>
        <detaileddescription>
<para>Function searches for the descriptor with given UUID inside given characteristic.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_chrc</parametername>
</parameternamelist>
<parameterdescription>
<para>The characteristic attribute where to search </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>The UUID of the searched descriptor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the attribute or NULL if the attribute cannot be found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="236" column="28" declfile="include/bluetooth/gatt_dm.h" declline="236" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga6ebf76aeaca3f77f936347977498cf2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
        <definition>const struct bt_gatt_dm_attr * bt_gatt_dm_desc_next</definition>
        <argsstring>(const struct bt_gatt_dm *dm, const struct bt_gatt_dm_attr *prev)</argsstring>
        <name>bt_gatt_dm_desc_next</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__dm__attr" kindref="compound">bt_gatt_dm_attr</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
<para>Get next descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para>Function returns next descriptor. The difference between this function and <ref refid="group__bt__gatt__dm_ga423258eb0c60913ed6324a708906dd17_1ga423258eb0c60913ed6324a708906dd17" kindref="member">bt_gatt_dm_attr_next</ref> is that it returns NULL also when returned attribute appears to be next characteristic.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prev</parametername>
</parameternamelist>
<parameterdescription>
<para>Previous attribute. The characteristic if we wish to get first descriptor or previous descriptor. If NULL or pointer to service attribute is given the result is undefined.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the descriptor attribute or NULL if there is no more descriptors in the characteristic. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="258" column="28" declfile="include/bluetooth/gatt_dm.h" declline="258" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga4136dfeba6a514033aeec118c3daf56b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_gatt_dm_start</definition>
        <argsstring>(struct bt_conn *conn, const struct bt_uuid *svc_uuid, const struct bt_gatt_dm_cb *cb, void *context)</argsstring>
        <name>bt_gatt_dm_start</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>const struct bt_uuid *</type>
          <declname>svc_uuid</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__gatt__dm__cb" kindref="compound">bt_gatt_dm_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Start service discovery. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is asynchronous. Discovery results are passed through the supplied callback.</para>
<para><simplesect kind="note"><para>Only one discovery procedure can be started simultaneously. To start another one, wait for the result of the previous procedure to finish and call <ref refid="group__bt__gatt__dm_ga559dac5698864a7c66be8104a673d240_1ga559dac5698864a7c66be8104a673d240" kindref="member">bt_gatt_dm_data_release</ref> if it was successful.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">svc_uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>UUID of target service or NULL if any service should be discovered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context argument to be passed to callback functions.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If <computeroutput>svc_uuid</computeroutput> is set to NULL, all services may be discovered. To process the next service, call <ref refid="group__bt__gatt__dm_ga40270baa5019747f7773e4357d2309ec_1ga40270baa5019747f7773e4357d2309ec" kindref="member">bt_gatt_dm_continue</ref>.</para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="285" column="5" declfile="include/bluetooth/gatt_dm.h" declline="285" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga40270baa5019747f7773e4357d2309ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_gatt_dm_continue</definition>
        <argsstring>(struct bt_gatt_dm *dm, void *context)</argsstring>
        <name>bt_gatt_dm_continue</name>
        <param>
          <type>struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Continue service discovery. </para>
        </briefdescription>
        <detaileddescription>
<para>This function continues service discovery. Call it after the previous data was released by <ref refid="group__bt__gatt__dm_ga559dac5698864a7c66be8104a673d240_1ga559dac5698864a7c66be8104a673d240" kindref="member">bt_gatt_dm_data_release</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context argument to be passed to callback functions.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="302" column="5" declfile="include/bluetooth/gatt_dm.h" declline="302" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga559dac5698864a7c66be8104a673d240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_gatt_dm_data_release</definition>
        <argsstring>(struct bt_gatt_dm *dm)</argsstring>
        <name>bt_gatt_dm_data_release</name>
        <param>
          <type>struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <briefdescription>
<para>Release data associated with service discovery. </para>
        </briefdescription>
        <detaileddescription>
<para>After calling this function, you cannot rely on the discovery data that was passed with the discovery completed callback (see <ref refid="structbt__gatt__dm__cb" kindref="compound">bt_gatt_dm_cb</ref>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="314" column="5" declfile="include/bluetooth/gatt_dm.h" declline="314" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__gatt__dm_1ga3c604b4f59743a5acb3e64a166f6a42d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void bt_gatt_dm_data_print</definition>
        <argsstring>(const struct bt_gatt_dm *dm)</argsstring>
        <name>bt_gatt_dm_data_print</name>
        <param>
          <type>const struct bt_gatt_dm *</type>
          <declname>dm</declname>
        </param>
        <briefdescription>
<para>Print service discovery data. </para>
        </briefdescription>
        <detaileddescription>
<para>This function prints GATT attributes that belong to the discovered service.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Discovery Manager instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/gatt_dm.h" line="325" column="20" bodyfile="include/bluetooth/gatt_dm.h" bodystart="325" bodyend="327"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Module for GATT Discovery Manager. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
