<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="event__manager_8h" kind="file" language="C++">
    <compoundname>event_manager.h</compoundname>
    <includes local="no">zephyr.h</includes>
    <includes local="no">zephyr/types.h</includes>
    <includes local="no">sys/reboot.h</includes>
    <includes local="no">sys/__assert.h</includes>
    <includes local="no">logging/log_ctrl.h</includes>
    <includes local="no">event_manager_priv.h</includes>
    <includes refid="profiler_8h" local="no">profiler.h</includes>
    <includedby refid="app__module__event_8h" local="no">applications/asset_tracker_v2/src/events/app_module_event.h</includedby>
    <includedby refid="cloud__module__event_8h" local="no">applications/asset_tracker_v2/src/events/cloud_module_event.h</includedby>
    <includedby refid="data__module__event_8h" local="no">applications/asset_tracker_v2/src/events/data_module_event.h</includedby>
    <includedby refid="debug__module__event_8h" local="no">applications/asset_tracker_v2/src/events/debug_module_event.h</includedby>
    <includedby refid="gps__module__event_8h" local="no">applications/asset_tracker_v2/src/events/gps_module_event.h</includedby>
    <includedby refid="led__state__event_8h" local="no">applications/asset_tracker_v2/src/events/led_state_event.h</includedby>
    <includedby refid="modem__module__event_8h" local="no">applications/asset_tracker_v2/src/events/modem_module_event.h</includedby>
    <includedby refid="sensor__module__event_8h" local="no">applications/asset_tracker_v2/src/events/sensor_module_event.h</includedby>
    <includedby refid="ui__module__event_8h" local="no">applications/asset_tracker_v2/src/events/ui_module_event.h</includedby>
    <includedby refid="util__module__event_8h" local="no">applications/asset_tracker_v2/src/events/util_module_event.h</includedby>
    <includedby refid="ble__ctrl__event_8h" local="no">applications/connectivity_bridge/src/events/ble_ctrl_event.h</includedby>
    <includedby refid="ble__data__event_8h" local="no">applications/connectivity_bridge/src/events/ble_data_event.h</includedby>
    <includedby refid="cdc__data__event_8h" local="no">applications/connectivity_bridge/src/events/cdc_data_event.h</includedby>
    <includedby refid="fs__event_8h" local="no">applications/connectivity_bridge/src/events/fs_event.h</includedby>
    <includedby refid="peer__conn__event_8h" local="no">applications/connectivity_bridge/src/events/peer_conn_event.h</includedby>
    <includedby refid="applications_2connectivity__bridge_2src_2events_2power__event_8h" local="no">applications/connectivity_bridge/src/events/power_event.h</includedby>
    <includedby refid="uart__data__event_8h" local="no">applications/connectivity_bridge/src/events/uart_data_event.h</includedby>
    <includedby refid="ei__data__forwarder__event_8h" local="no">applications/machine_learning/src/events/ei_data_forwarder_event.h</includedby>
    <includedby refid="ml__result__event_8h" local="no">applications/machine_learning/src/events/ml_result_event.h</includedby>
    <includedby refid="ml__state__event_8h" local="no">applications/machine_learning/src/events/ml_state_event.h</includedby>
    <includedby refid="sensor__sim__event_8h" local="no">applications/machine_learning/src/events/sensor_sim_event.h</includedby>
    <includedby refid="battery__event_8h" local="no">applications/nrf_desktop/src/events/battery_event.h</includedby>
    <includedby refid="ble__event_8h" local="no">applications/nrf_desktop/src/events/ble_event.h</includedby>
    <includedby refid="config__event_8h" local="no">applications/nrf_desktop/src/events/config_event.h</includedby>
    <includedby refid="cpu__load__event_8h" local="no">applications/nrf_desktop/src/events/cpu_load_event.h</includedby>
    <includedby refid="hid__event_8h" local="no">applications/nrf_desktop/src/events/hid_event.h</includedby>
    <includedby refid="hids__event_8h" local="no">applications/nrf_desktop/src/events/hids_event.h</includedby>
    <includedby refid="motion__event_8h" local="no">applications/nrf_desktop/src/events/motion_event.h</includedby>
    <includedby refid="passkey__event_8h" local="no">applications/nrf_desktop/src/events/passkey_event.h</includedby>
    <includedby refid="selector__event_8h" local="no">applications/nrf_desktop/src/events/selector_event.h</includedby>
    <includedby refid="usb__event_8h" local="no">applications/nrf_desktop/src/events/usb_event.h</includedby>
    <includedby refid="wheel__event_8h" local="no">applications/nrf_desktop/src/events/wheel_event.h</includedby>
    <includedby refid="pelion__event_8h" local="no">applications/pelion_client/src/events/pelion_event.h</includedby>
    <includedby refid="ble__common__event_8h" local="no">include/caf/events/ble_common_event.h</includedby>
    <includedby refid="ble__smp__event_8h" local="no">include/caf/events/ble_smp_event.h</includedby>
    <includedby refid="button__event_8h" local="no">include/caf/events/button_event.h</includedby>
    <includedby refid="click__event_8h" local="no">include/caf/events/click_event.h</includedby>
    <includedby refid="factory__reset__event_8h" local="no">include/caf/events/factory_reset_event.h</includedby>
    <includedby refid="force__power__down__event_8h" local="no">include/caf/events/force_power_down_event.h</includedby>
    <includedby refid="keep__alive__event_8h" local="no">include/caf/events/keep_alive_event.h</includedby>
    <includedby refid="led__event_8h" local="no">include/caf/events/led_event.h</includedby>
    <includedby refid="module__state__event_8h" local="no">include/caf/events/module_state_event.h</includedby>
    <includedby refid="net__state__event_8h" local="no">include/caf/events/net_state_event.h</includedby>
    <includedby refid="include_2caf_2events_2power__event_8h" local="no">include/caf/events/power_event.h</includedby>
    <includedby refid="power__manager__event_8h" local="no">include/caf/events/power_manager_event.h</includedby>
    <includedby refid="sensor__event_8h" local="no">include/caf/events/sensor_event.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/event_manager.h</label>
        <link refid="event__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>profiler.h</label>
        <link refid="profiler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>event_manager_priv.h</label>
      </node>
      <node id="6">
        <label>logging/log_ctrl.h</label>
      </node>
      <node id="5">
        <label>sys/__assert.h</label>
      </node>
      <node id="4">
        <label>sys/reboot.h</label>
      </node>
      <node id="9">
        <label>sys/util.h</label>
      </node>
      <node id="2">
        <label>zephyr.h</label>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>applications/asset_tracker_v2/include/nrf9160dk_nrf9160_ns/led_state_def.h</label>
        <link refid="asset__tracker__v2_2include_2nrf9160dk__nrf9160__ns_2led__state__def_8h"/>
      </node>
      <node id="9">
        <label>applications/asset_tracker_v2/include/thingy91_nrf9160_ns/led_state_def.h</label>
        <link refid="asset__tracker__v2_2include_2thingy91__nrf9160__ns_2led__state__def_8h"/>
      </node>
      <node id="2">
        <label>applications/asset_tracker_v2/src/events/app_module_event.h</label>
        <link refid="app__module__event_8h"/>
      </node>
      <node id="3">
        <label>applications/asset_tracker_v2/src/events/cloud_module_event.h</label>
        <link refid="cloud__module__event_8h"/>
      </node>
      <node id="4">
        <label>applications/asset_tracker_v2/src/events/data_module_event.h</label>
        <link refid="data__module__event_8h"/>
      </node>
      <node id="5">
        <label>applications/asset_tracker_v2/src/events/debug_module_event.h</label>
        <link refid="debug__module__event_8h"/>
      </node>
      <node id="6">
        <label>applications/asset_tracker_v2/src/events/gps_module_event.h</label>
        <link refid="gps__module__event_8h"/>
      </node>
      <node id="7">
        <label>applications/asset_tracker_v2/src/events/led_state_event.h</label>
        <link refid="led__state__event_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>applications/asset_tracker_v2/src/events/modem_module_event.h</label>
        <link refid="modem__module__event_8h"/>
      </node>
      <node id="11">
        <label>applications/asset_tracker_v2/src/events/sensor_module_event.h</label>
        <link refid="sensor__module__event_8h"/>
      </node>
      <node id="12">
        <label>applications/asset_tracker_v2/src/events/ui_module_event.h</label>
        <link refid="ui__module__event_8h"/>
      </node>
      <node id="13">
        <label>applications/asset_tracker_v2/src/events/util_module_event.h</label>
        <link refid="util__module__event_8h"/>
      </node>
      <node id="14">
        <label>applications/connectivity_bridge/src/events/ble_ctrl_event.h</label>
        <link refid="ble__ctrl__event_8h"/>
      </node>
      <node id="15">
        <label>applications/connectivity_bridge/src/events/ble_data_event.h</label>
        <link refid="ble__data__event_8h"/>
      </node>
      <node id="16">
        <label>applications/connectivity_bridge/src/events/cdc_data_event.h</label>
        <link refid="cdc__data__event_8h"/>
      </node>
      <node id="17">
        <label>applications/connectivity_bridge/src/events/fs_event.h</label>
        <link refid="fs__event_8h"/>
      </node>
      <node id="18">
        <label>applications/connectivity_bridge/src/events/peer_conn_event.h</label>
        <link refid="peer__conn__event_8h"/>
      </node>
      <node id="19">
        <label>applications/connectivity_bridge/src/events/power_event.h</label>
        <link refid="applications_2connectivity__bridge_2src_2events_2power__event_8h"/>
      </node>
      <node id="20">
        <label>applications/connectivity_bridge/src/events/uart_data_event.h</label>
        <link refid="uart__data__event_8h"/>
      </node>
      <node id="22">
        <label>applications/machine_learning/configuration/nrf52840dk_nrf52840/led_state_def.h</label>
        <link refid="machine__learning_2configuration_2nrf52840dk__nrf52840_2led__state__def_8h"/>
      </node>
      <node id="23">
        <label>applications/machine_learning/configuration/nrf5340dk_nrf5340_cpuapp/led_state_def.h</label>
        <link refid="machine__learning_2configuration_2nrf5340dk__nrf5340__cpuapp_2led__state__def_8h"/>
      </node>
      <node id="24">
        <label>applications/machine_learning/configuration/thingy52_nrf52832/led_state_def.h</label>
        <link refid="machine__learning_2configuration_2thingy52__nrf52832_2led__state__def_8h"/>
      </node>
      <node id="25">
        <label>applications/machine_learning/configuration/thingy53_nrf5340_cpuapp/led_state_def.h</label>
        <link refid="machine__learning_2configuration_2thingy53__nrf5340__cpuapp_2led__state__def_8h"/>
      </node>
      <node id="26">
        <label>applications/machine_learning/configuration/thingy53_nrf5340_cpuapp_ns/led_state_def.h</label>
        <link refid="machine__learning_2configuration_2thingy53__nrf5340__cpuapp__ns_2led__state__def_8h"/>
      </node>
      <node id="21">
        <label>applications/machine_learning/src/events/ei_data_forwarder_event.h</label>
        <link refid="ei__data__forwarder__event_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>applications/machine_learning/src/events/ml_result_event.h</label>
        <link refid="ml__result__event_8h"/>
      </node>
      <node id="28">
        <label>applications/machine_learning/src/events/ml_state_event.h</label>
        <link refid="ml__state__event_8h"/>
      </node>
      <node id="29">
        <label>applications/machine_learning/src/events/sensor_sim_event.h</label>
        <link refid="sensor__sim__event_8h"/>
      </node>
      <node id="67">
        <label>applications/nrf_desktop/configuration/common/led_state.h</label>
        <link refid="nrf__desktop_2configuration_2common_2led__state_8h"/>
      </node>
      <node id="32">
        <label>applications/nrf_desktop/configuration/nrf52820dongle_nrf52820/ble_discovery_def.h</label>
        <link refid="nrf52820dongle__nrf52820_2ble__discovery__def_8h"/>
      </node>
      <node id="33">
        <label>applications/nrf_desktop/configuration/nrf52820dongle_nrf52820/ble_scan_def.h</label>
        <link refid="nrf52820dongle__nrf52820_2ble__scan__def_8h"/>
      </node>
      <node id="34">
        <label>applications/nrf_desktop/configuration/nrf52833dk_nrf52833/ble_discovery_def.h</label>
        <link refid="nrf52833dk__nrf52833_2ble__discovery__def_8h"/>
      </node>
      <node id="35">
        <label>applications/nrf_desktop/configuration/nrf52833dk_nrf52833/ble_scan_def.h</label>
        <link refid="nrf52833dk__nrf52833_2ble__scan__def_8h"/>
      </node>
      <node id="36">
        <label>applications/nrf_desktop/configuration/nrf52833dongle_nrf52833/ble_discovery_def.h</label>
        <link refid="nrf52833dongle__nrf52833_2ble__discovery__def_8h"/>
      </node>
      <node id="37">
        <label>applications/nrf_desktop/configuration/nrf52833dongle_nrf52833/ble_scan_def.h</label>
        <link refid="nrf52833dongle__nrf52833_2ble__scan__def_8h"/>
      </node>
      <node id="38">
        <label>applications/nrf_desktop/configuration/nrf52840dk_nrf52840/ble_discovery_def.h</label>
        <link refid="nrf52840dk__nrf52840_2ble__discovery__def_8h"/>
      </node>
      <node id="39">
        <label>applications/nrf_desktop/configuration/nrf52840dk_nrf52840/ble_scan_def.h</label>
        <link refid="nrf52840dk__nrf52840_2ble__scan__def_8h"/>
      </node>
      <node id="40">
        <label>applications/nrf_desktop/configuration/nrf52840dongle_nrf52840/ble_discovery_def.h</label>
        <link refid="nrf52840dongle__nrf52840_2ble__discovery__def_8h"/>
      </node>
      <node id="41">
        <label>applications/nrf_desktop/configuration/nrf52840dongle_nrf52840/ble_scan_def.h</label>
        <link refid="nrf52840dongle__nrf52840_2ble__scan__def_8h"/>
      </node>
      <node id="42">
        <label>applications/nrf_desktop/configuration/nrf5340dk_nrf5340_cpuapp/ble_discovery_def.h</label>
        <link refid="nrf5340dk__nrf5340__cpuapp_2ble__discovery__def_8h"/>
      </node>
      <node id="43">
        <label>applications/nrf_desktop/configuration/nrf5340dk_nrf5340_cpuapp/ble_scan_def.h</label>
        <link refid="nrf5340dk__nrf5340__cpuapp_2ble__scan__def_8h"/>
      </node>
      <node id="30">
        <label>applications/nrf_desktop/src/events/battery_event.h</label>
        <link refid="battery__event_8h"/>
      </node>
      <node id="31">
        <label>applications/nrf_desktop/src/events/ble_event.h</label>
        <link refid="ble__event_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>applications/nrf_desktop/src/events/config_event.h</label>
        <link refid="config__event_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>applications/nrf_desktop/src/events/cpu_load_event.h</label>
        <link refid="cpu__load__event_8h"/>
      </node>
      <node id="47">
        <label>applications/nrf_desktop/src/events/hid_event.h</label>
        <link refid="hid__event_8h"/>
      </node>
      <node id="48">
        <label>applications/nrf_desktop/src/events/hids_event.h</label>
        <link refid="hids__event_8h"/>
      </node>
      <node id="49">
        <label>applications/nrf_desktop/src/events/motion_event.h</label>
        <link refid="motion__event_8h"/>
      </node>
      <node id="50">
        <label>applications/nrf_desktop/src/events/passkey_event.h</label>
        <link refid="passkey__event_8h"/>
      </node>
      <node id="51">
        <label>applications/nrf_desktop/src/events/selector_event.h</label>
        <link refid="selector__event_8h"/>
      </node>
      <node id="52">
        <label>applications/nrf_desktop/src/events/usb_event.h</label>
        <link refid="usb__event_8h"/>
      </node>
      <node id="53">
        <label>applications/nrf_desktop/src/events/wheel_event.h</label>
        <link refid="wheel__event_8h"/>
      </node>
      <node id="45">
        <label>applications/nrf_desktop/src/util/config_channel_transport.h</label>
        <link refid="config__channel__transport_8h"/>
      </node>
      <node id="55">
        <label>applications/pelion_client/configuration/nrf52840dk_nrf52840/led_state_def.h</label>
        <link refid="pelion__client_2configuration_2nrf52840dk__nrf52840_2led__state__def_8h"/>
      </node>
      <node id="56">
        <label>applications/pelion_client/configuration/nrf5340dk_nrf5340_cpuapp/led_state_def.h</label>
        <link refid="pelion__client_2configuration_2nrf5340dk__nrf5340__cpuapp_2led__state__def_8h"/>
      </node>
      <node id="57">
        <label>applications/pelion_client/configuration/nrf5340dk_nrf5340_cpuapp_ns/led_state_def.h</label>
        <link refid="pelion__client_2configuration_2nrf5340dk__nrf5340__cpuapp__ns_2led__state__def_8h"/>
      </node>
      <node id="58">
        <label>applications/pelion_client/configuration/nrf9160dk_nrf9160_ns/led_state_def.h</label>
        <link refid="pelion__client_2configuration_2nrf9160dk__nrf9160__ns_2led__state__def_8h"/>
      </node>
      <node id="54">
        <label>applications/pelion_client/src/events/pelion_event.h</label>
        <link refid="pelion__event_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>include/caf/events/ble_common_event.h</label>
        <link refid="ble__common__event_8h"/>
      </node>
      <node id="60">
        <label>include/caf/events/ble_smp_event.h</label>
        <link refid="ble__smp__event_8h"/>
      </node>
      <node id="61">
        <label>include/caf/events/button_event.h</label>
        <link refid="button__event_8h"/>
      </node>
      <node id="62">
        <label>include/caf/events/click_event.h</label>
        <link refid="click__event_8h"/>
      </node>
      <node id="63">
        <label>include/caf/events/factory_reset_event.h</label>
        <link refid="factory__reset__event_8h"/>
      </node>
      <node id="64">
        <label>include/caf/events/force_power_down_event.h</label>
        <link refid="force__power__down__event_8h"/>
      </node>
      <node id="65">
        <label>include/caf/events/keep_alive_event.h</label>
        <link refid="keep__alive__event_8h"/>
      </node>
      <node id="66">
        <label>include/caf/events/led_event.h</label>
        <link refid="led__event_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>include/caf/events/module_state_event.h</label>
        <link refid="module__state__event_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>include/caf/events/net_state_event.h</label>
        <link refid="net__state__event_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>include/caf/events/power_event.h</label>
        <link refid="include_2caf_2events_2power__event_8h"/>
      </node>
      <node id="71">
        <label>include/caf/events/power_manager_event.h</label>
        <link refid="power__manager__event_8h"/>
      </node>
      <node id="72">
        <label>include/caf/events/sensor_event.h</label>
        <link refid="sensor__event_8h"/>
      </node>
      <node id="1">
        <label>include/event_manager.h</label>
        <link refid="event__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structevent__header" prot="public">event_header</innerclass>
    <innerclass refid="structevent__dyndata" prot="public">event_dyndata</innerclass>
    <innerclass refid="structevent__listener" prot="public">event_listener</innerclass>
    <innerclass refid="structevent__subscriber" prot="public">event_subscriber</innerclass>
    <innerclass refid="structevent__type" prot="public">event_type</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__event__manager_ga96c7ab295dbe0ce8942a0b8d79c582a5_1ga96c7ab295dbe0ce8942a0b8d79c582a5" prot="public" static="no">
        <name>SUBS_PRIO_MIN</name>
        <initializer>_SUBS_PRIO_FIRST</initializer>
        <briefdescription>
<para>Index of the highest subscriber priority level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="40" column="9" bodyfile="include/event_manager.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_gae8a5357eb01f3075e30af2bc301b5ec2_1gae8a5357eb01f3075e30af2bc301b5ec2" prot="public" static="no">
        <name>SUBS_PRIO_MAX</name>
        <initializer>_SUBS_PRIO_FINAL</initializer>
        <briefdescription>
<para>Index of the lowest subscriber priority level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="47" column="9" bodyfile="include/event_manager.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_ga444591066723c2427db7eb61ee7c3c1f_1ga444591066723c2427db7eb61ee7c3c1f" prot="public" static="no">
        <name>SUBS_PRIO_COUNT</name>
        <initializer>(<ref refid="group__event__manager_gae8a5357eb01f3075e30af2bc301b5ec2_1gae8a5357eb01f3075e30af2bc301b5ec2" kindref="member">SUBS_PRIO_MAX</ref> - <ref refid="group__event__manager_ga96c7ab295dbe0ce8942a0b8d79c582a5_1ga96c7ab295dbe0ce8942a0b8d79c582a5" kindref="member">SUBS_PRIO_MIN</ref> + 1)</initializer>
        <briefdescription>
<para>Number of subscriber priority levels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="54" column="9" bodyfile="include/event_manager.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_ga490c892c4aced8be6dfbd9b2c3981a14_1ga490c892c4aced8be6dfbd9b2c3981a14" prot="public" static="no">
        <name>EVENT_LISTENER</name>
        <param><defname>lname</defname></param>
        <param><defname>cb_fn</defname></param>
        <initializer>_EVENT_LISTENER(lname, cb_fn)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an event listener object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lname</parametername>
</parameternamelist>
<parameterdescription>
<para>Module name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the event handler function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="144" column="9" bodyfile="include/event_manager.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_ga8b189ec06cd4b0f110318468ada2b156_1ga8b189ec06cd4b0f110318468ada2b156" prot="public" static="no">
        <name>EVENT_SUBSCRIBE_EARLY</name>
        <param><defname>lname</defname></param>
        <param><defname>ename</defname></param>
        <initializer>	_EVENT_SUBSCRIBE(lname, ename, _SUBS_PRIO_ID(_SUBS_PRIO_FIRST))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subscribe a listener to the early notification list for an event type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lname</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the listener. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="153" column="9" bodyfile="include/event_manager.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_gaebf66fb07cb3f6ae2a536ce0bf5ae52d_1gaebf66fb07cb3f6ae2a536ce0bf5ae52d" prot="public" static="no">
        <name>EVENT_SUBSCRIBE</name>
        <param><defname>lname</defname></param>
        <param><defname>ename</defname></param>
        <initializer>	_EVENT_SUBSCRIBE(lname, ename, _SUBS_PRIO_ID(_SUBS_PRIO_NORMAL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subscribe a listener to the normal notification list for an event type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lname</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the listener. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="163" column="9" bodyfile="include/event_manager.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_ga5df81526cfcfcf51c6042038f7117b1f_1ga5df81526cfcfcf51c6042038f7117b1f" prot="public" static="no">
        <name>EVENT_SUBSCRIBE_FINAL</name>
        <param><defname>lname</defname></param>
        <param><defname>ename</defname></param>
        <initializer>	_EVENT_SUBSCRIBE(lname, ename, _SUBS_PRIO_ID(_SUBS_PRIO_FINAL));			\
	const struct {} _CONCAT(_CONCAT(__event_subscriber_, ename), final_sub_redefined) = {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subscribe a listener to an event type as final module that is being notified.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lname</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the listener. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="173" column="9" bodyfile="include/event_manager.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_gade0652b21cddf1a6b4d58e668b402caa_1gade0652b21cddf1a6b4d58e668b402caa" prot="public" static="no">
        <name>EVENT_TYPE_DECLARE</name>
        <param><defname>ename</defname></param>
        <initializer>_EVENT_TYPE_DECLARE(ename)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declare an event type.</para>
<para>This macro provides declarations required for an event to be used by other modules.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="185" column="9" bodyfile="include/event_manager.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_ga557f549af5f03066299fbae982899c7f_1ga557f549af5f03066299fbae982899c7f" prot="public" static="no">
        <name>EVENT_TYPE_DYNDATA_DECLARE</name>
        <param><defname>ename</defname></param>
        <initializer>_EVENT_TYPE_DYNDATA_DECLARE(ename)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declare an event type with dynamic data size.</para>
<para>This macro provides declarations required for an event to be used by other modules. Declared event will use dynamic data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="196" column="9" bodyfile="include/event_manager.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_gad3f0814a48a4023a3cb6f87bd6f7beaf_1gad3f0814a48a4023a3cb6f87bd6f7beaf" prot="public" static="no">
        <name>EVENT_TYPE_DEFINE</name>
        <param><defname>ename</defname></param>
        <param><defname>init_log_en</defname></param>
        <param><defname>log_fn</defname></param>
        <param><defname>ev_info_struct</defname></param>
        <initializer>	_EVENT_TYPE_DEFINE(ename, init_log_en, log_fn, ev_info_struct)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define an event type.</para>
<para>This macro defines an event type. In addition, it defines functions specific to the event type and the event type structure.</para>
<para>For every defined event, the following functions are created, where <emphasis>event_type</emphasis> is replaced with the given event type name <computeroutput>ename</computeroutput> (for example, <ref refid="structbutton__event" kindref="compound">button_event</ref>):<itemizedlist>
<listitem><para>new_<emphasis>event_type</emphasis> - Allocates an event of a given type.</para>
</listitem><listitem><para>is_<emphasis>event_type</emphasis> - Checks if the event header that is provided as argument represents the given event type.</para>
</listitem><listitem><para>cast_<emphasis>event_type</emphasis> - Casts the event header that is provided as argument to an event of the given type.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init_log_en</parametername>
</parameternamelist>
<parameterdescription>
<para>Bool indicating if the event is logged by default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log_fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to stringify an event of this type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ev_info_struct</parametername>
</parameternamelist>
<parameterdescription>
<para>Data structure describing the event type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="219" column="9" bodyfile="include/event_manager.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_ga0a8c0d6c739e186520447ec8c935106d_1ga0a8c0d6c739e186520447ec8c935106d" prot="public" static="no">
        <name>ASSERT_EVENT_ID</name>
        <param><defname>id</defname></param>
        <initializer>	__ASSERT_NO_MSG((id &gt;= __start_event_types) &amp;&amp; (id &lt; __stop_event_types))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify if an event ID is valid.</para>
<para>The pointer to an event type structure is used as its ID. This macro validates that the provided pointer is within the range where event type structures are defined.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="231" column="9" bodyfile="include/event_manager.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__event__manager_ga5fb4d859ba408c80abc899d18bb626e4_1ga5fb4d859ba408c80abc899d18bb626e4" prot="public" static="no">
        <name>EVENT_SUBMIT</name>
        <param><defname>event</defname></param>
        <initializer>_event_submit(&amp;event-&gt;header)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submit an event.</para>
<para>This helper macro simplifies the event submission.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the event object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="248" column="9" bodyfile="include/event_manager.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__event__manager_ga0c9e3d6e6b436d63d061f0e40ecaffd1_1ga0c9e3d6e6b436d63d061f0e40ecaffd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int event_manager_init</definition>
        <argsstring>(void)</argsstring>
        <name>event_manager_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the Event Manager.</para>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="255" column="5" declfile="include/event_manager.h" declline="255" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__event__manager_gafe39c37822a04ae2c39c160b4fd0c852_1gafe39c37822a04ae2c39c160b4fd0c852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void event_manager_trace_event_execution</definition>
        <argsstring>(const struct event_header *eh, bool is_start)</argsstring>
        <name>event_manager_trace_event_execution</name>
        <param>
          <type>const struct <ref refid="structevent__header" kindref="compound">event_header</ref> *</type>
          <declname>eh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Trace event execution. The behavior of this function depends on the actual implementation. The default implementation of this function is no-operation. It is annotated as weak and is meant to be overridden by layer adding support for profiling mechanism. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="264" column="6" declfile="include/event_manager.h" declline="264" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__event__manager_ga27f401786c70ded5b2390e8deabc21e5_1ga27f401786c70ded5b2390e8deabc21e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void event_manager_trace_event_submission</definition>
        <argsstring>(const struct event_header *eh, const void *trace_info)</argsstring>
        <name>event_manager_trace_event_submission</name>
        <param>
          <type>const struct <ref refid="structevent__header" kindref="compound">event_header</ref> *</type>
          <declname>eh</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>trace_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Trace event submission. The behavior of this function depends on the actual implementation. The default implementation of this function is no-operation. It is annotated as weak and is meant to be overridden by layer adding support for profiling mechanism. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="274" column="6" declfile="include/event_manager.h" declline="274" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__event__manager_gadf3cd5fecf83da0c40942c6db1cda488_1gadf3cd5fecf83da0c40942c6db1cda488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int event_manager_trace_event_init</definition>
        <argsstring>(void)</argsstring>
        <name>event_manager_trace_event_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize tracing in the Event Manager. The behavior of this function depends on the actual implementation. The default implementation of this function is no-operation. It is annotated as weak and is meant to be overridden by layer adding support for profiling mechanism. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="284" column="5" declfile="include/event_manager.h" declline="284" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__event__manager_ga162e79cf772042d5b5952085484f6527_1ga162e79cf772042d5b5952085484f6527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * event_manager_alloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>event_manager_alloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate event. The behavior of this function depends on the actual implementation. The default implementation of this function is same as k_malloc. It is annotated as weak and can be overridden by user.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of memory requested (in bytes). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Address</parametername>
</parameternamelist>
<parameterdescription>
<para>of the allocated memory if successful, otherwise NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="294" column="6" declfile="include/event_manager.h" declline="294" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__event__manager_ga1b09d8c208df9307158a8b619ddbba1b_1ga1b09d8c208df9307158a8b619ddbba1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void event_manager_free</definition>
        <argsstring>(void *addr)</argsstring>
        <name>event_manager_free</name>
        <param>
          <type>void *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free memory occupied by the event. The behavior of this function depends on the actual implementation. The default implementation of this function is same as k_free. It is annotated as weak and can be overridden by user.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to previously allocated memory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/event_manager.h" line="304" column="6" declfile="include/event_manager.h" declline="304" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Event manager header. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_EVENT_MANAGER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_EVENT_MANAGER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/reboot.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/__assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;logging/log_ctrl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;event_manager_priv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="profiler_8h" kindref="compound">profiler.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__event__manager_ga96c7ab295dbe0ce8942a0b8d79c582a5_1ga96c7ab295dbe0ce8942a0b8d79c582a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBS_PRIO_MIN<sp/><sp/><sp/><sp/>_SUBS_PRIO_FIRST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__event__manager_gae8a5357eb01f3075e30af2bc301b5ec2_1gae8a5357eb01f3075e30af2bc301b5ec2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBS_PRIO_MAX<sp/><sp/><sp/><sp/>_SUBS_PRIO_FINAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="group__event__manager_ga444591066723c2427db7eb61ee7c3c1f_1ga444591066723c2427db7eb61ee7c3c1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBS_PRIO_COUNT<sp/>(SUBS_PRIO_MAX<sp/>-<sp/>SUBS_PRIO_MIN<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structevent__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__header" kindref="compound">event_header</ref><sp/>{</highlight></codeline>
<codeline lineno="64" refid="structevent__header_ac3961b76a92d2124d1f3ccf1fb0b5f3e_1ac3961b76a92d2124d1f3ccf1fb0b5f3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_snode_t<sp/><ref refid="structevent__header_ac3961b76a92d2124d1f3ccf1fb0b5f3e_1ac3961b76a92d2124d1f3ccf1fb0b5f3e" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structevent__header_ad65952165c3b3f89b417c1f90cd61782_1ad65952165c3b3f89b417c1f90cd61782" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__type" kindref="compound">event_type</ref><sp/>*<ref refid="structevent__header_ad65952165c3b3f89b417c1f90cd61782_1ad65952165c3b3f89b417c1f90cd61782" kindref="member">type_id</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structevent__dyndata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__dyndata" kindref="compound">event_dyndata</ref><sp/>{</highlight></codeline>
<codeline lineno="78" refid="structevent__dyndata_a554c78e4d3964df414018072fe32fb0f_1a554c78e4d3964df414018072fe32fb0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structevent__dyndata_a554c78e4d3964df414018072fe32fb0f_1a554c78e4d3964df414018072fe32fb0f" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structevent__dyndata_af145369673da714cd680144f4d38cc4a_1af145369673da714cd680144f4d38cc4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structevent__dyndata_af145369673da714cd680144f4d38cc4a_1af145369673da714cd680144f4d38cc4a" kindref="member">data</ref>[0];</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="structevent__listener" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__listener" kindref="compound">event_listener</ref><sp/>{</highlight></codeline>
<codeline lineno="91" refid="structevent__listener_af7d1d57a94b1073478731b0894067d01_1af7d1d57a94b1073478731b0894067d01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structevent__listener_af7d1d57a94b1073478731b0894067d01_1af7d1d57a94b1073478731b0894067d01" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structevent__listener_ad4a9f282e8769a2a228df070f42fc5c0_1ad4a9f282e8769a2a228df070f42fc5c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>(*<ref refid="structevent__listener_ad4a9f282e8769a2a228df070f42fc5c0_1ad4a9f282e8769a2a228df070f42fc5c0" kindref="member">notification</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__header" kindref="compound">event_header</ref><sp/>*eh);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structevent__subscriber" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__subscriber" kindref="compound">event_subscriber</ref><sp/>{</highlight></codeline>
<codeline lineno="103" refid="structevent__subscriber_a3020f6e11ac539832e8961cfe1960ab4_1a3020f6e11ac539832e8961cfe1960ab4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__listener" kindref="compound">event_listener</ref><sp/>*<ref refid="structevent__subscriber_a3020f6e11ac539832e8961cfe1960ab4_1a3020f6e11ac539832e8961cfe1960ab4" kindref="member">listener</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structevent__type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__type" kindref="compound">event_type</ref><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structevent__type_a2948710edb41ebda00a49d0b63411fda_1a2948710edb41ebda00a49d0b63411fda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structevent__type_a2948710edb41ebda00a49d0b63411fda_1a2948710edb41ebda00a49d0b63411fda" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structevent__type_aef2442966c62fef3f3c946ac99b4247b_1aef2442966c62fef3f3c946ac99b4247b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__subscriber" kindref="compound">event_subscriber</ref><sp/><sp/><sp/>*<ref refid="structevent__type_aef2442966c62fef3f3c946ac99b4247b_1aef2442966c62fef3f3c946ac99b4247b" kindref="member">subs_start</ref>[<ref refid="group__event__manager_ga444591066723c2427db7eb61ee7c3c1f_1ga444591066723c2427db7eb61ee7c3c1f" kindref="member">SUBS_PRIO_COUNT</ref>];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structevent__type_a5c9bf36e8b95bc1c8c877de772ab118d_1a5c9bf36e8b95bc1c8c877de772ab118d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__subscriber" kindref="compound">event_subscriber</ref><sp/><sp/><sp/>*<ref refid="structevent__type_a5c9bf36e8b95bc1c8c877de772ab118d_1a5c9bf36e8b95bc1c8c877de772ab118d" kindref="member">subs_stop</ref>[<ref refid="group__event__manager_ga444591066723c2427db7eb61ee7c3c1f_1ga444591066723c2427db7eb61ee7c3c1f" kindref="member">SUBS_PRIO_COUNT</ref>];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structevent__type_a02923fceb1348c2d42d8cdce1633adf5_1a02923fceb1348c2d42d8cdce1633adf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structevent__type_a02923fceb1348c2d42d8cdce1633adf5_1a02923fceb1348c2d42d8cdce1633adf5" kindref="member">init_log_enable</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structevent__type_a51eff00293c5020f1d65126d3ade6910_1a51eff00293c5020f1d65126d3ade6910" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structevent__type_a51eff00293c5020f1d65126d3ade6910_1a51eff00293c5020f1d65126d3ade6910" kindref="member">log_event</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__header" kindref="compound">event_header</ref><sp/>*eh,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_len);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="structevent__type_ab599e3aa5deb44b4c18930762d793b19_1ab599e3aa5deb44b4c18930762d793b19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structevent__type_ab599e3aa5deb44b4c18930762d793b19_1ab599e3aa5deb44b4c18930762d793b19" kindref="member">trace_data</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__listener" kindref="compound">event_listener</ref><sp/>__start_event_listeners[];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__listener" kindref="compound">event_listener</ref><sp/>__stop_event_listeners[];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__type" kindref="compound">event_type</ref><sp/>__start_event_types[];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structevent__type" kindref="compound">event_type</ref><sp/>__stop_event_types[];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group__event__manager_ga490c892c4aced8be6dfbd9b2c3981a14_1ga490c892c4aced8be6dfbd9b2c3981a14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_LISTENER(lname,<sp/>cb_fn)<sp/>_EVENT_LISTENER(lname,<sp/>cb_fn)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="group__event__manager_ga8b189ec06cd4b0f110318468ada2b156_1ga8b189ec06cd4b0f110318468ada2b156" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_SUBSCRIBE_EARLY(lname,<sp/>ename)<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_EVENT_SUBSCRIBE(lname,<sp/>ename,<sp/>_SUBS_PRIO_ID(_SUBS_PRIO_FIRST))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="group__event__manager_gaebf66fb07cb3f6ae2a536ce0bf5ae52d_1gaebf66fb07cb3f6ae2a536ce0bf5ae52d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_SUBSCRIBE(lname,<sp/>ename)<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_EVENT_SUBSCRIBE(lname,<sp/>ename,<sp/>_SUBS_PRIO_ID(_SUBS_PRIO_NORMAL))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="group__event__manager_ga5df81526cfcfcf51c6042038f7117b1f_1ga5df81526cfcfcf51c6042038f7117b1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_SUBSCRIBE_FINAL(lname,<sp/>ename)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_EVENT_SUBSCRIBE(lname,<sp/>ename,<sp/>_SUBS_PRIO_ID(_SUBS_PRIO_FINAL));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>struct<sp/>{}<sp/>_CONCAT(_CONCAT(__event_subscriber_,<sp/>ename),<sp/>final_sub_redefined)<sp/>=<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__event__manager_gade0652b21cddf1a6b4d58e668b402caa_1gade0652b21cddf1a6b4d58e668b402caa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_TYPE_DECLARE(ename)<sp/>_EVENT_TYPE_DECLARE(ename)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="group__event__manager_ga557f549af5f03066299fbae982899c7f_1ga557f549af5f03066299fbae982899c7f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_TYPE_DYNDATA_DECLARE(ename)<sp/>_EVENT_TYPE_DYNDATA_DECLARE(ename)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="group__event__manager_gad3f0814a48a4023a3cb6f87bd6f7beaf_1gad3f0814a48a4023a3cb6f87bd6f7beaf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_TYPE_DEFINE(ename,<sp/>init_log_en,<sp/>log_fn,<sp/>ev_info_struct)<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_EVENT_TYPE_DEFINE(ename,<sp/>init_log_en,<sp/>log_fn,<sp/>ev_info_struct)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="group__event__manager_ga0a8c0d6c739e186520447ec8c935106d_1ga0a8c0d6c739e186520447ec8c935106d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_EVENT_ID(id)<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT_NO_MSG((id<sp/>&gt;=<sp/>__start_event_types)<sp/>&amp;&amp;<sp/>(id<sp/>&lt;<sp/>__stop_event_types))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_event_submit(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structevent__header" kindref="compound">event_header</ref><sp/>*eh);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group__event__manager_ga5fb4d859ba408c80abc899d18bb626e4_1ga5fb4d859ba408c80abc899d18bb626e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EVENT_SUBMIT(event)<sp/>_event_submit(&amp;event-&gt;header)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="group__event__manager_ga0c9e3d6e6b436d63d061f0e40ecaffd1_1ga0c9e3d6e6b436d63d061f0e40ecaffd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__event__manager_ga0c9e3d6e6b436d63d061f0e40ecaffd1_1ga0c9e3d6e6b436d63d061f0e40ecaffd1" kindref="member">event_manager_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="group__event__manager_gafe39c37822a04ae2c39c160b4fd0c852_1gafe39c37822a04ae2c39c160b4fd0c852" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__event__manager_gafe39c37822a04ae2c39c160b4fd0c852_1gafe39c37822a04ae2c39c160b4fd0c852" kindref="member">event_manager_trace_event_execution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structevent__header" kindref="compound">event_header</ref><sp/>*eh,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_start);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="group__event__manager_ga27f401786c70ded5b2390e8deabc21e5_1ga27f401786c70ded5b2390e8deabc21e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__event__manager_ga27f401786c70ded5b2390e8deabc21e5_1ga27f401786c70ded5b2390e8deabc21e5" kindref="member">event_manager_trace_event_submission</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structevent__header" kindref="compound">event_header</ref><sp/>*eh,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*trace_info);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="group__event__manager_gadf3cd5fecf83da0c40942c6db1cda488_1gadf3cd5fecf83da0c40942c6db1cda488" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__event__manager_gadf3cd5fecf83da0c40942c6db1cda488_1gadf3cd5fecf83da0c40942c6db1cda488" kindref="member">event_manager_trace_event_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="group__event__manager_ga162e79cf772042d5b5952085484f6527_1ga162e79cf772042d5b5952085484f6527" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__event__manager_ga162e79cf772042d5b5952085484f6527_1ga162e79cf772042d5b5952085484f6527" kindref="member">event_manager_alloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="group__event__manager_ga1b09d8c208df9307158a8b619ddbba1b_1ga1b09d8c208df9307158a8b619ddbba1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__event__manager_ga1b09d8c208df9307158a8b619ddbba1b_1ga1b09d8c208df9307158a8b619ddbba1b" kindref="member">event_manager_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*addr);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_EVENT_MANAGER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/event_manager.h"/>
  </compounddef>
</doxygen>
