<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="dfu__target__stream_8h" kind="file" language="C++">
    <compoundname>dfu_target_stream.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">storage/stream_flash.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/dfu/dfu_target_stream.h</label>
        <link refid="dfu__target__stream_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>storage/stream_flash.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structdfu__target__stream__init" prot="public">dfu_target_stream_init</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dfu__target__stream_ga6631bd2616dfd21a4dc2ae641bf6d47e_1ga6631bd2616dfd21a4dc2ae641bf6d47e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct stream_flash_ctx *</type>
        <definition>struct stream_flash_ctx * dfu_target_stream_get_stream</definition>
        <argsstring>(void)</argsstring>
        <name>dfu_target_stream_get_stream</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_stream.h" line="25" column="23" declfile="include/dfu/dfu_target_stream.h" declline="25" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__stream_ga36c2e3bb84f5c5ea85e902878e75b845_1ga36c2e3bb84f5c5ea85e902878e75b845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_stream_init</definition>
        <argsstring>(const struct dfu_target_stream_init *init)</argsstring>
        <name>dfu_target_stream_init</name>
        <param>
          <type>const struct <ref refid="structdfu__target__stream__init" kindref="compound">dfu_target_stream_init</ref> *</type>
          <declname>init</declname>
        </param>
        <briefdescription>
<para>Initialize dfu target. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">init</parametername>
</parameternamelist>
<parameterdescription>
<para>Init parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Non-negative</parametername>
</parameternamelist>
<parameterdescription>
<para>value if successful, negative errno otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_stream.h" line="65" column="5" declfile="include/dfu/dfu_target_stream.h" declline="65" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__stream_ga9ef66e2fa3cb4c299d7b8b7e2dfc6cc1_1ga9ef66e2fa3cb4c299d7b8b7e2dfc6cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_stream_offset_get</definition>
        <argsstring>(size_t *offset)</argsstring>
        <name>dfu_target_stream_offset_get</name>
        <param>
          <type>size_t *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get the offset within the payload of the next byte to download. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used to pick up an aborted download. If for instance 0x1000 bytes of the payload has been downloaded and stored to flash, this would return 0x1000. For this function to work across reboots, the option <computeroutput>CONFIG_DFU_TARGET_STREAM_SAVE_PROGRESS</computeroutput> must be set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the offset of the firmware upgrade.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-negative value if success, otherwise negative value if unable to get the offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_stream.h" line="80" column="5" declfile="include/dfu/dfu_target_stream.h" declline="80" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__stream_ga7cc4f64083176bc9bed00f739b20e2f2_1ga7cc4f64083176bc9bed00f739b20e2f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_stream_write</definition>
        <argsstring>(const uint8_t *buf, size_t len)</argsstring>
        <name>dfu_target_stream_write</name>
        <param>
          <type>const uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write a chunk of firmware data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data that should be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data to write.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-negative value on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_stream.h" line="90" column="5" declfile="include/dfu/dfu_target_stream.h" declline="90" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__stream_ga0cfa5fd9c5b5f132f88a434f0317bd2d_1ga0cfa5fd9c5b5f132f88a434f0317bd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_stream_done</definition>
        <argsstring>(bool successful)</argsstring>
        <name>dfu_target_stream_done</name>
        <param>
          <type>bool</type>
          <declname>successful</declname>
        </param>
        <briefdescription>
<para>De-initialize resources and finalize stream flash write if successful. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">successful</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicate whether the firmware was successfully received.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non-negative value on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_stream.h" line="100" column="5" declfile="include/dfu/dfu_target_stream.h" declline="100" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DFU_TARGET_STREAM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DFU_TARGET_STREAM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;storage/stream_flash.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__dfu__target__stream_ga6631bd2616dfd21a4dc2ae641bf6d47e_1ga6631bd2616dfd21a4dc2ae641bf6d47e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stream_flash_ctx<sp/>*<ref refid="group__dfu__target__stream_ga6631bd2616dfd21a4dc2ae641bf6d47e_1ga6631bd2616dfd21a4dc2ae641bf6d47e" kindref="member">dfu_target_stream_get_stream</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structdfu__target__stream__init" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdfu__target__stream__init" kindref="compound">dfu_target_stream_init</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>identifier<sp/>of<sp/>the<sp/>stream,<sp/>used<sp/>for<sp/>storing<sp/>settings.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structdfu__target__stream__init_aa526e1e234d34b8df610e7c6f6d07e67_1aa526e1e234d34b8df610e7c6f6d07e67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structdfu__target__stream__init_aa526e1e234d34b8df610e7c6f6d07e67_1aa526e1e234d34b8df610e7c6f6d07e67" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flash<sp/>device<sp/>that<sp/>the<sp/>stream<sp/>should<sp/>be<sp/>written<sp/>to.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structdfu__target__stream__init_a8a0fc43c553c14cd8d77e35ea00a20d8_1a8a0fc43c553c14cd8d77e35ea00a20d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*<ref refid="structdfu__target__stream__init_a8a0fc43c553c14cd8d77e35ea00a20d8_1a8a0fc43c553c14cd8d77e35ea00a20d8" kindref="member">fdev</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Buffer<sp/>used<sp/>for<sp/>stream<sp/>flash<sp/>writing.<sp/>The<sp/>length<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>buffer<sp/>must<sp/>be<sp/>smaller<sp/>than<sp/>a<sp/>page<sp/>size<sp/>of<sp/>`fdev`.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structdfu__target__stream__init_ae408caf52d779b5ba5e706478bfc867e_1ae408caf52d779b5ba5e706478bfc867e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="structdfu__target__stream__init_ae408caf52d779b5ba5e706478bfc867e_1ae408caf52d779b5ba5e706478bfc867e" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Length<sp/>of<sp/>`buf`<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structdfu__target__stream__init_adbf9d9cc2f81427ff2063b77fcf42071_1adbf9d9cc2f81427ff2063b77fcf42071" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structdfu__target__stream__init_adbf9d9cc2f81427ff2063b77fcf42071_1adbf9d9cc2f81427ff2063b77fcf42071" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>within<sp/>`fdev`<sp/>to<sp/>write<sp/>the<sp/>stream<sp/>to.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structdfu__target__stream__init_ac663ead823612517cb5eede6080be5b6_1ac663ead823612517cb5eede6080be5b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structdfu__target__stream__init_ac663ead823612517cb5eede6080be5b6_1ac663ead823612517cb5eede6080be5b6" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>within<sp/>fdev<sp/>to<sp/>use<sp/>for<sp/>the<sp/>stream.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Set<sp/>to<sp/>0<sp/>to<sp/>use<sp/>all<sp/>available<sp/>memory<sp/>in<sp/>the<sp/>device</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(starting<sp/>from<sp/>`offset`).</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structdfu__target__stream__init_ad2d50a0d0af29364715e37cc4ae215a0_1ad2d50a0d0af29364715e37cc4ae215a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structdfu__target__stream__init_ad2d50a0d0af29364715e37cc4ae215a0_1ad2d50a0d0af29364715e37cc4ae215a0" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Callback<sp/>invoked<sp/>upon<sp/>successful<sp/>flash<sp/>write<sp/>operations.<sp/>This</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>be<sp/>used<sp/>to<sp/>inspect<sp/>the<sp/>actual<sp/>written<sp/>data.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structdfu__target__stream__init_a532254c7e5f0c02dcce2a96ea5b7e1d5_1a532254c7e5f0c02dcce2a96ea5b7e1d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream_flash_callback_t<sp/><ref refid="structdfu__target__stream__init_a532254c7e5f0c02dcce2a96ea5b7e1d5_1a532254c7e5f0c02dcce2a96ea5b7e1d5" kindref="member">cb</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__dfu__target__stream_ga36c2e3bb84f5c5ea85e902878e75b845_1ga36c2e3bb84f5c5ea85e902878e75b845" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__stream_ga36c2e3bb84f5c5ea85e902878e75b845_1ga36c2e3bb84f5c5ea85e902878e75b845" kindref="member">dfu_target_stream_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdfu__target__stream__init" kindref="compound">dfu_target_stream_init</ref><sp/>*init);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="group__dfu__target__stream_ga9ef66e2fa3cb4c299d7b8b7e2dfc6cc1_1ga9ef66e2fa3cb4c299d7b8b7e2dfc6cc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__stream_ga9ef66e2fa3cb4c299d7b8b7e2dfc6cc1_1ga9ef66e2fa3cb4c299d7b8b7e2dfc6cc1" kindref="member">dfu_target_stream_offset_get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*offset);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__dfu__target__stream_ga7cc4f64083176bc9bed00f739b20e2f2_1ga7cc4f64083176bc9bed00f739b20e2f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__stream_ga7cc4f64083176bc9bed00f739b20e2f2_1ga7cc4f64083176bc9bed00f739b20e2f2" kindref="member">dfu_target_stream_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="group__dfu__target__stream_ga0cfa5fd9c5b5f132f88a434f0317bd2d_1ga0cfa5fd9c5b5f132f88a434f0317bd2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__stream_ga0cfa5fd9c5b5f132f88a434f0317bd2d_1ga0cfa5fd9c5b5f132f88a434f0317bd2d" kindref="member">dfu_target_stream_done</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>successful);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DFU_TARGET_STREAM_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/dfu/dfu_target_stream.h"/>
  </compounddef>
</doxygen>
