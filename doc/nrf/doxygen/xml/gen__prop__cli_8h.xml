<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="gen__prop__cli_8h" kind="file" language="C++">
    <compoundname>gen_prop_cli.h</compoundname>
    <includes refid="gen__prop_8h" local="no">bluetooth/mesh/gen_prop.h</includes>
    <includes refid="model__types_8h" local="no">bluetooth/mesh/model_types.h</includes>
    <includedby refid="models_8h" local="no">include/bluetooth/mesh/models.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>bluetooth/mesh/gen_prop.h</label>
        <link refid="gen__prop_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/bluetooth/mesh/gen_prop_cli.h</label>
        <link refid="gen__prop__cli_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>bluetooth/mesh/model_types.h</label>
        <link refid="model__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>bluetooth/mesh/properties.h</label>
        <link refid="properties_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bluetooth/mesh.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/bluetooth/mesh/gen_prop_cli.h</label>
        <link refid="gen__prop__cli_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/bluetooth/mesh/models.h</label>
        <link refid="models_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/bluetooth/mesh/vnd/silvair_enocean_srv.h</label>
        <link refid="silvair__enocean__srv_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbt__mesh__prop__list" prot="public">bt_mesh_prop_list</innerclass>
    <innerclass refid="structbt__mesh__prop__cli" prot="public">bt_mesh_prop_cli</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__bt__mesh__prop__cli_gaed3ad75eef1a586e792fc18ed5aaece8_1gaed3ad75eef1a586e792fc18ed5aaece8" prot="public" static="no">
        <name>BT_MESH_PROP_CLI_INIT</name>
        <param><defname>_prop_list_handler</defname></param>
        <param><defname>_prop_status_handler</defname></param>
        <initializer>	{                                                                      \
		.prop_list = _prop_list_handler,                               \
		.prop_status = _prop_status_handler,                           \
	}</initializer>
        <briefdescription>
<para>Initialization parameters for the <ref refid="group__bt__mesh__prop__cli" kindref="compound">Generic Property Client model</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_prop_list_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional status message handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="structbt__mesh__prop__cli_aa93a9183f0e4ddd86ea573f1fd2c0101_1aa93a9183f0e4ddd86ea573f1fd2c0101" kindref="member">bt_mesh_prop_cli::prop_list</ref> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_prop_status_handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional status message handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="structbt__mesh__prop__cli_ada06a1072207d702619e813200ccf6f0_1ada06a1072207d702619e813200ccf6f0" kindref="member">bt_mesh_prop_cli::prop_status</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="33" column="9" bodyfile="include/bluetooth/mesh/gen_prop_cli.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__bt__mesh__prop__cli_gac816113221df64dbcbb7d07180ef5ed1_1gac816113221df64dbcbb7d07180ef5ed1" prot="public" static="no">
        <name>BT_MESH_MODEL_PROP_CLI</name>
        <param><defname>_cli</defname></param>
        <initializer>	BT_MESH_MODEL_CB(BT_MESH_MODEL_ID_GEN_PROP_CLI, _bt_mesh_prop_cli_op,  \
			 &amp;(_cli)-&gt;pub,                                         \
			 BT_MESH_MODEL_USER_DATA(struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref>,      \
						 _cli),                        \
			 &amp;_bt_mesh_prop_cli_cb)</initializer>
        <briefdescription>
<para>Generic Property Client model composition data entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a <ref refid="group__bt__mesh__prop__cli" kindref="compound">Generic Property Client model</ref> instance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="45" column="9" bodyfile="include/bluetooth/mesh/gen_prop_cli.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bt__mesh__prop__cli_ga9a7efcd00ec6ddfe2d34979c48701b99_1ga9a7efcd00ec6ddfe2d34979c48701b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_client_props_get</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, uint16_t id, struct bt_mesh_prop_list *rsp)</argsstring>
        <name>bt_mesh_prop_cli_client_props_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__list" kindref="compound">bt_mesh_prop_list</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the list of Generic Client Properties of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>To get the list of other property states, use :ref:<computeroutput>bt_mesh_prop_cli_props_get</computeroutput>.</para>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return, and the response will be passed to the <ref refid="structbt__mesh__prop__cli_aa93a9183f0e4ddd86ea573f1fd2c0101_1aa93a9183f0e4ddd86ea573f1fd2c0101" kindref="member">bt_mesh_prop_cli::prop_list</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>A starting Client Property ID present within an element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>rsp::ids</computeroutput> list was NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>The client received a response, but the supplied response buffer was too small to hold all the properties. All property IDs that could fit in the response buffers were copied into it, and the <computeroutput>rsp::count</computeroutput> field was left unchanged. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOTSUP</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not supported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="131" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="131" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__prop__cli_ga1547e10de1417bf21869b6d2f5243e39_1ga1547e10de1417bf21869b6d2f5243e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_props_get</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, enum bt_mesh_prop_srv_kind kind, struct bt_mesh_prop_list *rsp)</argsstring>
        <name>bt_mesh_prop_cli_props_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>enum <ref refid="group__bt__mesh__prop_gac34d580cb712d2f85859e2108f1ccbbc_1gac34d580cb712d2f85859e2108f1ccbbc" kindref="member">bt_mesh_prop_srv_kind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__list" kindref="compound">bt_mesh_prop_list</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the list of properties of the bound server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return, and the response will be passed to the <ref refid="structbt__mesh__prop__cli_aa93a9183f0e4ddd86ea573f1fd2c0101_1aa93a9183f0e4ddd86ea573f1fd2c0101" kindref="member">bt_mesh_prop_cli::prop_list</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Kind of Property Server to query. Use with every property kind except for BT_MESH_PROP_SRV_KIND_CLIENT. To get the list of client property states, use :ref:<computeroutput>bt_mesh_prop_cli_client_props_get</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>rsp::ids</computeroutput> list was NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>The client received a response, but the supplied response buffer was too small to hold all the properties. All property IDs that could fit in the response buffers were copied into it, and the <computeroutput>rsp::count</computeroutput> field was left unchanged. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="161" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="161" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__prop__cli_ga5f37895e6709d65e92f1f24827718c2e_1ga5f37895e6709d65e92f1f24827718c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_prop_get</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, enum bt_mesh_prop_srv_kind kind, uint16_t id, struct bt_mesh_prop_val *rsp)</argsstring>
        <name>bt_mesh_prop_cli_prop_get</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>enum <ref refid="group__bt__mesh__prop_gac34d580cb712d2f85859e2108f1ccbbc_1gac34d580cb712d2f85859e2108f1ccbbc" kindref="member">bt_mesh_prop_srv_kind</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Get the value of a property in a server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return, and the response will be passed to the <ref refid="structbt__mesh__prop__cli_ada06a1072207d702619e813200ccf6f0_1ada06a1072207d702619e813200ccf6f0" kindref="member">bt_mesh_prop_cli::prop_status</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Kind of Property Server to query. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the property to get. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>rsp::ids</computeroutput> list was NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>The client received a response, but the supplied response buffer was too small to hold all the properties. All property IDs that could fit in the response buffers were copied into it, and the <computeroutput>rsp::count</computeroutput> field was left unchanged. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="191" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="191" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__prop__cli_gad0419414b7faa1d2d4965bcf46e0ad86_1gad0419414b7faa1d2d4965bcf46e0ad86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_user_prop_set</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_prop_val *val, struct bt_mesh_prop_val *rsp)</argsstring>
        <name>bt_mesh_prop_cli_user_prop_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set a property value in a User Property Server. </para>
        </briefdescription>
        <detaileddescription>
<para>The User Property may only be set if the server enabled user write access to it. If this is not the case, the server will only respond with the set user access mode for the given property.</para>
<para><simplesect kind="note"><para>The <computeroutput>val::meta::user_access</computeroutput> level will be ignored.</para>
</simplesect>
This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return, and the response will be passed to the <ref refid="structbt__mesh__prop__cli_ada06a1072207d702619e813200ccf6f0_1ada06a1072207d702619e813200ccf6f0" kindref="member">bt_mesh_prop_cli::prop_status</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New property value to set. Note that the user_access mode will be ignored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="222" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="222" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__prop__cli_gaa86228eff673642de08083fa452c8770_1gaa86228eff673642de08083fa452c8770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_user_prop_set_unack</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_prop_val *val)</argsstring>
        <name>bt_mesh_prop_cli_user_prop_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set a property value in a User Property Server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para>The User Property may only be set if the server enabled user write access to it. If this is not the case, the server will only respond with the set user access mode for the given property.</para>
<para><simplesect kind="note"><para>The <computeroutput>val::meta::user_access</computeroutput> level will be ignored.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New property value to set. Note that the user_access mode will be ignored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="247" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="247" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__prop__cli_ga34a79cb9e5310fde7afdc7fb7e409ea9_1ga34a79cb9e5310fde7afdc7fb7e409ea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_admin_prop_set</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_prop_val *val, struct bt_mesh_prop_val *rsp)</argsstring>
        <name>bt_mesh_prop_cli_admin_prop_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set a property value in an Admin Property server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return, and the response will be passed to the <ref refid="structbt__mesh__prop__cli_ada06a1072207d702619e813200ccf6f0_1ada06a1072207d702619e813200ccf6f0" kindref="member">bt_mesh_prop_cli::prop_status</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New property value to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="270" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="270" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__prop__cli_ga787ed95e26db94b8fd89bfecd0991506_1ga787ed95e26db94b8fd89bfecd0991506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_admin_prop_set_unack</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_prop_val *val)</argsstring>
        <name>bt_mesh_prop_cli_admin_prop_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set a property value in an Admin Property server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>New property value to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="288" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="288" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__prop__cli_gadf7b6f7e045d2093bdc015667d387543_1gadf7b6f7e045d2093bdc015667d387543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_mfr_prop_set</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_prop *prop, struct bt_mesh_prop_val *rsp)</argsstring>
        <name>bt_mesh_prop_cli_mfr_prop_set</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__prop" kindref="compound">bt_mesh_prop</ref> *</type>
          <declname>prop</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref> *</type>
          <declname>rsp</declname>
        </param>
        <briefdescription>
<para>Set the user access of a property in a Manufacturer Property server. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is blocking if the <computeroutput>rsp</computeroutput> buffer is non-NULL. Otherwise, this function will return, and the response will be passed to the <ref refid="structbt__mesh__prop__cli_ada06a1072207d702619e813200ccf6f0_1ada06a1072207d702619e813200ccf6f0" kindref="member">bt_mesh_prop_cli::prop_status</ref> callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prop</parametername>
</parameternamelist>
<parameterdescription>
<para>New property value to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response status buffer, or NULL to keep from blocking.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message and populated the <computeroutput>rsp</computeroutput> buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EALREADY</parametername>
</parameternamelist>
<parameterdescription>
<para>A blocking request is already in progress. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ETIMEDOUT</parametername>
</parameternamelist>
<parameterdescription>
<para>The request timed out without a response. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="311" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="311" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__bt__mesh__prop__cli_gac43ed8e0d0292b92502461e05fa93ee9_1gac43ed8e0d0292b92502461e05fa93ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_mesh_prop_cli_mfr_prop_set_unack</definition>
        <argsstring>(struct bt_mesh_prop_cli *cli, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_prop *prop)</argsstring>
        <name>bt_mesh_prop_cli_mfr_prop_set_unack</name>
        <param>
          <type>struct <ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref> *</type>
          <declname>cli</declname>
        </param>
        <param>
          <type>struct bt_mesh_msg_ctx *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbt__mesh__prop" kindref="compound">bt_mesh_prop</ref> *</type>
          <declname>prop</declname>
        </param>
        <briefdescription>
<para>Set the user access of a property in a Manufacturer Property server without requesting a response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cli</parametername>
</parameternamelist>
<parameterdescription>
<para>Client model to send on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context, or NULL to use the configured publish parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prop</parametername>
</parameternamelist>
<parameterdescription>
<para>New property value to set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Successfully sent the message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EADDRNOTAVAIL</parametername>
</parameternamelist>
<parameterdescription>
<para>A message context was not provided and publishing is not configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>The device has not been provisioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/gen_prop_cli.h" line="329" column="5" declfile="include/bluetooth/mesh/gen_prop_cli.h" declline="329" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BT_MESH_GEN_PROP_CLI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_GEN_PROP_CLI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gen__prop_8h" kindref="compound">bluetooth/mesh/gen_prop.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="model__types_8h" kindref="compound">bluetooth/mesh/model_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group__bt__mesh__prop__cli_gaed3ad75eef1a586e792fc18ed5aaece8_1gaed3ad75eef1a586e792fc18ed5aaece8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_PROP_CLI_INIT(_prop_list_handler,<sp/>_prop_status_handler)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.prop_list<sp/>=<sp/>_prop_list_handler,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.prop_status<sp/>=<sp/>_prop_status_handler,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__bt__mesh__prop__cli_gac816113221df64dbcbb7d07180ef5ed1_1gac816113221df64dbcbb7d07180ef5ed1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_MESH_MODEL_PROP_CLI(_cli)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_MODEL_CB(BT_MESH_MODEL_ID_GEN_PROP_CLI,<sp/>_bt_mesh_prop_cli_op,<sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(_cli)-&gt;pub,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_MODEL_USER_DATA(struct<sp/>bt_mesh_prop_cli,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cli),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_bt_mesh_prop_cli_cb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structbt__mesh__prop__list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__prop__list" kindref="compound">bt_mesh_prop_list</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="structbt__mesh__prop__list_a755acab95da5db1a76e65852ce53e544_1a755acab95da5db1a76e65852ce53e544" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__mesh__prop__list_a755acab95da5db1a76e65852ce53e544_1a755acab95da5db1a76e65852ce53e544" kindref="member">count</ref>;<sp/></highlight></codeline>
<codeline lineno="55" refid="structbt__mesh__prop__list_a0bb665ff146338466a602c327a7e7f7a_1a0bb665ff146338466a602c327a7e7f7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="structbt__mesh__prop__list_a0bb665ff146338466a602c327a7e7f7a_1a0bb665ff146338466a602c327a7e7f7a" kindref="member">ids</ref>;<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structbt__mesh__prop__cli" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>{</highlight></codeline>
<codeline lineno="64" refid="structbt__mesh__prop__cli_acdd677b89e9638094b64656ffa941a91_1acdd677b89e9638094b64656ffa941a91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_model<sp/>*<ref refid="structbt__mesh__prop__cli_acdd677b89e9638094b64656ffa941a91_1acdd677b89e9638094b64656ffa941a91" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="66" refid="structbt__mesh__prop__cli_a097190a78707c822efa7f6a68f0b3c16_1a097190a78707c822efa7f6a68f0b3c16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_model_pub<sp/><ref refid="structbt__mesh__prop__cli_a097190a78707c822efa7f6a68f0b3c16_1a097190a78707c822efa7f6a68f0b3c16" kindref="member">pub</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Publication<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structbt__mesh__prop__cli_a6f9dbc49874908f8b8728d4c9340a8f5_1a6f9dbc49874908f8b8728d4c9340a8f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">net_buf_simple<sp/><ref refid="structbt__mesh__prop__cli_a6f9dbc49874908f8b8728d4c9340a8f5_1a6f9dbc49874908f8b8728d4c9340a8f5" kindref="member">pub_buf</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Publication<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structbt__mesh__prop__cli_a9fef24d8b6b8a1f2c07a12628881da26_1a9fef24d8b6b8a1f2c07a12628881da26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structbt__mesh__prop__cli_a9fef24d8b6b8a1f2c07a12628881da26_1a9fef24d8b6b8a1f2c07a12628881da26" kindref="member">pub_data</ref>[BT_MESH_MODEL_BUF_LEN(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_PROP_OP_ADMIN_PROP_SET,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BT_MESH_PROP_MSG_MAXLEN_ADMIN_PROP_SET)];</highlight></codeline>
<codeline lineno="74" refid="structbt__mesh__prop__cli_a54bd1177c7c3283feec2df0748929b27_1a54bd1177c7c3283feec2df0748929b27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ack_ctx<sp/><ref refid="structbt__mesh__prop__cli_a54bd1177c7c3283feec2df0748929b27_1a54bd1177c7c3283feec2df0748929b27" kindref="member">ack_ctx</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structbt__mesh__prop__cli_aa93a9183f0e4ddd86ea573f1fd2c0101_1aa93a9183f0e4ddd86ea573f1fd2c0101" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli_aa93a9183f0e4ddd86ea573f1fd2c0101_1aa93a9183f0e4ddd86ea573f1fd2c0101" kindref="member">prop_list</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop_gac34d580cb712d2f85859e2108f1ccbbc_1gac34d580cb712d2f85859e2108f1ccbbc" kindref="member">bt_mesh_prop_srv_kind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__prop__list" kindref="compound">bt_mesh_prop_list</ref><sp/>*list);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structbt__mesh__prop__cli_ada06a1072207d702619e813200ccf6f0_1ada06a1072207d702619e813200ccf6f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli_ada06a1072207d702619e813200ccf6f0_1ada06a1072207d702619e813200ccf6f0" kindref="member">prop_status</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop_gac34d580cb712d2f85859e2108f1ccbbc_1gac34d580cb712d2f85859e2108f1ccbbc" kindref="member">bt_mesh_prop_srv_kind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*prop);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="group__bt__mesh__prop__cli_ga9a7efcd00ec6ddfe2d34979c48701b99_1ga9a7efcd00ec6ddfe2d34979c48701b99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_ga9a7efcd00ec6ddfe2d34979c48701b99_1ga9a7efcd00ec6ddfe2d34979c48701b99" kindref="member">bt_mesh_prop_cli_client_props_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,<sp/>uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__list" kindref="compound">bt_mesh_prop_list</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="group__bt__mesh__prop__cli_ga1547e10de1417bf21869b6d2f5243e39_1ga1547e10de1417bf21869b6d2f5243e39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_ga1547e10de1417bf21869b6d2f5243e39_1ga1547e10de1417bf21869b6d2f5243e39" kindref="member">bt_mesh_prop_cli_props_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop_gac34d580cb712d2f85859e2108f1ccbbc_1gac34d580cb712d2f85859e2108f1ccbbc" kindref="member">bt_mesh_prop_srv_kind</ref><sp/>kind,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__list" kindref="compound">bt_mesh_prop_list</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="group__bt__mesh__prop__cli_ga5f37895e6709d65e92f1f24827718c2e_1ga5f37895e6709d65e92f1f24827718c2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_ga5f37895e6709d65e92f1f24827718c2e_1ga5f37895e6709d65e92f1f24827718c2e" kindref="member">bt_mesh_prop_cli_prop_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop_gac34d580cb712d2f85859e2108f1ccbbc_1gac34d580cb712d2f85859e2108f1ccbbc" kindref="member">bt_mesh_prop_srv_kind</ref><sp/>kind,<sp/>uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="group__bt__mesh__prop__cli_gad0419414b7faa1d2d4965bcf46e0ad86_1gad0419414b7faa1d2d4965bcf46e0ad86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_gad0419414b7faa1d2d4965bcf46e0ad86_1gad0419414b7faa1d2d4965bcf46e0ad86" kindref="member">bt_mesh_prop_cli_user_prop_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*val,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="group__bt__mesh__prop__cli_gaa86228eff673642de08083fa452c8770_1gaa86228eff673642de08083fa452c8770" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_gaa86228eff673642de08083fa452c8770_1gaa86228eff673642de08083fa452c8770" kindref="member">bt_mesh_prop_cli_user_prop_set_unack</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*val);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="group__bt__mesh__prop__cli_ga34a79cb9e5310fde7afdc7fb7e409ea9_1ga34a79cb9e5310fde7afdc7fb7e409ea9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_ga34a79cb9e5310fde7afdc7fb7e409ea9_1ga34a79cb9e5310fde7afdc7fb7e409ea9" kindref="member">bt_mesh_prop_cli_admin_prop_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*val,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group__bt__mesh__prop__cli_ga787ed95e26db94b8fd89bfecd0991506_1ga787ed95e26db94b8fd89bfecd0991506" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_ga787ed95e26db94b8fd89bfecd0991506_1ga787ed95e26db94b8fd89bfecd0991506" kindref="member">bt_mesh_prop_cli_admin_prop_set_unack</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*val);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="group__bt__mesh__prop__cli_gadf7b6f7e045d2093bdc015667d387543_1gadf7b6f7e045d2093bdc015667d387543" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_gadf7b6f7e045d2093bdc015667d387543_1gadf7b6f7e045d2093bdc015667d387543" kindref="member">bt_mesh_prop_cli_mfr_prop_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop" kindref="compound">bt_mesh_prop</ref><sp/>*prop,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__val" kindref="compound">bt_mesh_prop_val</ref><sp/>*rsp);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="group__bt__mesh__prop__cli_gac43ed8e0d0292b92502461e05fa93ee9_1gac43ed8e0d0292b92502461e05fa93ee9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__bt__mesh__prop__cli_gac43ed8e0d0292b92502461e05fa93ee9_1gac43ed8e0d0292b92502461e05fa93ee9" kindref="member">bt_mesh_prop_cli_mfr_prop_set_unack</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop__cli" kindref="compound">bt_mesh_prop_cli</ref><sp/>*cli,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_mesh_msg_ctx<sp/>*ctx,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__mesh__prop" kindref="compound">bt_mesh_prop</ref><sp/>*prop);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_model_op<sp/>_bt_mesh_prop_cli_op[];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_mesh_model_cb<sp/>_bt_mesh_prop_cli_cb;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BT_MESH_GEN_PROP_CLI_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/mesh/gen_prop_cli.h"/>
  </compounddef>
</doxygen>
