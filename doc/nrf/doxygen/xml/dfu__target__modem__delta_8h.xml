<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="dfu__target__modem__delta_8h" kind="file" language="C++">
    <compoundname>dfu_target_modem_delta.h</compoundname>
    <includes local="no">zephyr/types.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/dfu/dfu_target_modem_delta.h</label>
        <link refid="dfu__target__modem__delta_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dfu__target__modem__delta_gabf0e9bea3f51760d386855257711a36a_1gabf0e9bea3f51760d386855257711a36a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dfu_target_modem_delta_identify</definition>
        <argsstring>(const void *const buf)</argsstring>
        <name>dfu_target_modem_delta_identify</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>See if data in buf indicates modem delta upgrade. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if data matches, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_modem_delta.h" line="28" column="6" declfile="include/dfu/dfu_target_modem_delta.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__modem__delta_gae88bb23075b17b787f9bfe08c7cf6342_1gae88bb23075b17b787f9bfe08c7cf6342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_modem_delta_init</definition>
        <argsstring>(size_t file_size, dfu_target_callback_t callback)</argsstring>
        <name>dfu_target_modem_delta_init</name>
        <param>
          <type>size_t</type>
          <declname>file_size</declname>
        </param>
        <param>
          <type><ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Initialize dfu target, perform steps necessary to receive firmware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the current file being downloaded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for signaling if the modem is not able to service the erase request.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If successful, negative errno otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_modem_delta.h" line="39" column="5" declfile="include/dfu/dfu_target_modem_delta.h" declline="39" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__modem__delta_gabe3bb98a108a2d2e58d73f936c4fc497_1gabe3bb98a108a2d2e58d73f936c4fc497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_modem_delta_offset_get</definition>
        <argsstring>(size_t *offset)</argsstring>
        <name>dfu_target_modem_delta_offset_get</name>
        <param>
          <type>size_t *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Get offset of firmware. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the offset of the firmware upgrade.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if success, otherwise negative value if unable to get the offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_modem_delta.h" line="49" column="5" declfile="include/dfu/dfu_target_modem_delta.h" declline="49" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__modem__delta_ga2bdc7ebce55ccb7ec81e0c1768123901_1ga2bdc7ebce55ccb7ec81e0c1768123901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_modem_delta_write</definition>
        <argsstring>(const void *const buf, size_t len)</argsstring>
        <name>dfu_target_modem_delta_write</name>
        <param>
          <type>const void *const</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write firmware data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data that should be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data to write.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_modem_delta.h" line="59" column="5" declfile="include/dfu/dfu_target_modem_delta.h" declline="59" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__dfu__target__modem__delta_ga8d6e5e059ec7d6cd9c882a6f09f936ba_1ga8d6e5e059ec7d6cd9c882a6f09f936ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dfu_target_modem_delta_done</definition>
        <argsstring>(bool successful)</argsstring>
        <name>dfu_target_modem_delta_done</name>
        <param>
          <type>bool</type>
          <declname>successful</declname>
        </param>
        <briefdescription>
<para>Deinitialize resources and finalize firmware upgrade if successful. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">successful</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicate whether the firmware was successfully recived.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/dfu/dfu_target_modem_delta.h" line="68" column="5" declfile="include/dfu/dfu_target_modem_delta.h" declline="68" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DFU_TARGET_MODEM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DFU_TARGET_MODEM_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__dfu__target__modem__delta_gabf0e9bea3f51760d386855257711a36a_1gabf0e9bea3f51760d386855257711a36a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__modem__delta_gabf0e9bea3f51760d386855257711a36a_1gabf0e9bea3f51760d386855257711a36a" kindref="member">dfu_target_modem_delta_identify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__dfu__target__modem__delta_gae88bb23075b17b787f9bfe08c7cf6342_1gae88bb23075b17b787f9bfe08c7cf6342" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__modem__delta_gae88bb23075b17b787f9bfe08c7cf6342_1gae88bb23075b17b787f9bfe08c7cf6342" kindref="member">dfu_target_modem_delta_init</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_size,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dfu__target_gaa44ceb54189d4c0dba08f4e8044a5981_1gaa44ceb54189d4c0dba08f4e8044a5981" kindref="member">dfu_target_callback_t</ref><sp/>callback);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__dfu__target__modem__delta_gabe3bb98a108a2d2e58d73f936c4fc497_1gabe3bb98a108a2d2e58d73f936c4fc497" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__modem__delta_gabe3bb98a108a2d2e58d73f936c4fc497_1gabe3bb98a108a2d2e58d73f936c4fc497" kindref="member">dfu_target_modem_delta_offset_get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*offset);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__dfu__target__modem__delta_ga2bdc7ebce55ccb7ec81e0c1768123901_1ga2bdc7ebce55ccb7ec81e0c1768123901" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__modem__delta_ga2bdc7ebce55ccb7ec81e0c1768123901_1ga2bdc7ebce55ccb7ec81e0c1768123901" kindref="member">dfu_target_modem_delta_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__dfu__target__modem__delta_ga8d6e5e059ec7d6cd9c882a6f09f936ba_1ga8d6e5e059ec7d6cd9c882a6f09f936ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__dfu__target__modem__delta_ga8d6e5e059ec7d6cd9c882a6f09f936ba_1ga8d6e5e059ec7d6cd9c882a6f09f936ba" kindref="member">dfu_target_modem_delta_done</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>successful);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DFU_TARGET_MODEM_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/dfu/dfu_target_modem_delta.h"/>
  </compounddef>
</doxygen>
