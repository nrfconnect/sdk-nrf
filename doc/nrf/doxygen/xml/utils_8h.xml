<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="utils_8h" kind="file" language="C++">
    <compoundname>utils.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="utils_8h_a6bf7c9a99be20ead14513ba4f9425efd_1a6bf7c9a99be20ead14513ba4f9425efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hexstr2hex</definition>
        <argsstring>(const char *in, size_t in_len, unsigned char *out, size_t out_len)</argsstring>
        <name>hexstr2hex</name>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>in_len</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>out_len</declname>
        </param>
        <briefdescription>
<para>Convert hex string into hex Example: in = {&apos;D&apos;, &apos;E&apos;, &apos;A&apos;, &apos;D&apos;} -&gt; out = {0xDE, 0xAD}. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex string buffer to convert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex buffer for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Hex buffer length, shall be at least (in_len / 2)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hex output length on success -1 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/supl/include/utils.h" line="22" column="5" declfile="lib/supl/include/utils.h" declline="22" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="utils_8h_a585a0ded94c7f58617ef0c70bc81cf21_1a585a0ded94c7f58617ef0c70bc81cf21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_line_len</definition>
        <argsstring>(const char *buf, size_t buf_len)</argsstring>
        <name>get_line_len</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_len</declname>
        </param>
        <briefdescription>
<para>Get length of a string (or a line). String shall be &apos;\0&apos; terminated. Newline characters are not included in the count. Example: &quot;+CEREG: 1&quot; -&gt; 9 &quot;+CEREG: 1\\r\\n&quot; -&gt; 9. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>String buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Input buffer length</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of the string -1 if the string is not &apos;\0&apos; terminated </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/supl/include/utils.h" line="40" column="5" declfile="lib/supl/include/utils.h" declline="40" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SUPL_UTILS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUPL_UTILS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="utils_8h_a6bf7c9a99be20ead14513ba4f9425efd_1a6bf7c9a99be20ead14513ba4f9425efd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="utils_8h_a6bf7c9a99be20ead14513ba4f9425efd_1a6bf7c9a99be20ead14513ba4f9425efd" kindref="member">hexstr2hex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>in_len,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>out_len);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="utils_8h_a585a0ded94c7f58617ef0c70bc81cf21_1a585a0ded94c7f58617ef0c70bc81cf21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="utils_8h_a585a0ded94c7f58617ef0c70bc81cf21_1a585a0ded94c7f58617ef0c70bc81cf21" kindref="member">get_line_len</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_len);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SUPL_UTILS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="lib/supl/include/utils.h"/>
  </compounddef>
</doxygen>
