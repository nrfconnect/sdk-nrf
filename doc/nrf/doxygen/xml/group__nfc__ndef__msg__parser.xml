<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__nfc__ndef__msg__parser" kind="group">
    <compoundname>nfc_ndef_msg_parser</compoundname>
    <title>Parser for NDEF messages</title>
    <innerclass refid="structnfc__ndef__msg__parser__msg__1" prot="public">nfc_ndef_msg_parser_msg_1</innerclass>
    <innerclass refid="structnfc__ndef__msg__parser__msg__2" prot="public">nfc_ndef_msg_parser_msg_2</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nfc__ndef__msg__parser_1gabc14ad45e4ab3f57fe23d77aae8a0c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nfc_ndef_msg_parse</definition>
        <argsstring>(const uint8_t *result_buf, uint32_t *result_buf_len, const uint8_t *raw_data, uint32_t *raw_data_len)</argsstring>
        <name>nfc_ndef_msg_parse</name>
        <param>
          <type>const uint8_t *</type>
          <declname>result_buf</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>result_buf_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>raw_data</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>raw_data_len</declname>
        </param>
        <briefdescription>
<para>Parse NFC NDEF messages. </para>
        </briefdescription>
        <detaileddescription>
<para>This function parses NDEF messages using NDEF binary record descriptors.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">result_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer that will be used to hold the NDEF message descriptor. After parsing is completed successfully, the first address in the buffer is filled by the NDEF message descriptor (<ref refid="structnfc__ndef__msg__desc" kindref="compound">nfc_ndef_msg_desc</ref>), which provides a full description of the parsed NDEF message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">result_buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>As input: size of the buffer specified by <computeroutput>result_buf</computeroutput>. As output: size of the reserved (used) part of the buffer specified by <computeroutput>result_buf</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">raw_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be parsed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">raw_data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>As input: size of the NFC data in the <computeroutput>nfc_data</computeroutput> buffer. As output: size of the parsed message.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the operation was successful. Otherwise, a (negative) error code is returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/msg_parser.h" line="82" column="5" declfile="include/nfc/ndef/msg_parser.h" declline="82" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nfc__ndef__msg__parser_1ga6de3124ad82afdb85b499e09e00f3554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nfc_ndef_msg_printout</definition>
        <argsstring>(const struct nfc_ndef_msg_desc *msg_desc)</argsstring>
        <name>nfc_ndef_msg_printout</name>
        <param>
          <type>const struct <ref refid="structnfc__ndef__msg__desc" kindref="compound">nfc_ndef_msg_desc</ref> *</type>
          <declname>msg_desc</declname>
        </param>
        <briefdescription>
<para>Print the parsed contents of an NDEF message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_desc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the descriptor of the message that should be printed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/msg_parser.h" line="92" column="6" declfile="include/nfc/ndef/msg_parser.h" declline="92" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nfc__ndef__msg__parser_1gaf03475fd854b536952ba5fe536d828ca" prot="public" static="no">
        <name>NFC_NDEF_MSG_PARSER_DELTA</name>
        <initializer>				   (sizeof(struct <ref refid="structnfc__ndef__msg__parser__msg__2" kindref="compound">nfc_ndef_msg_parser_msg_2</ref>) - \
				   sizeof(struct <ref refid="structnfc__ndef__msg__parser__msg__1" kindref="compound">nfc_ndef_msg_parser_msg_1</ref>))</initializer>
        <briefdescription>
<para>Amount of memory that is required per record in addition to the memory allocated for the message descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/msg_parser.h" line="47" column="9" bodyfile="include/nfc/ndef/msg_parser.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nfc__ndef__msg__parser_1gaa8a00355585f90aac785605be72b0106" prot="public" static="no">
        <name>NFC_NDEF_PARSER_REQIRED_MEMO_SIZE_CALC</name>
        <param><defname>max_count_of_records</defname></param>
        <initializer>	(sizeof(struct <ref refid="structnfc__ndef__msg__parser__msg__1" kindref="compound">nfc_ndef_msg_parser_msg_1</ref>) +                           \
	 ((<ref refid="group__nfc__ndef__msg__parser_gaf03475fd854b536952ba5fe536d828ca_1gaf03475fd854b536952ba5fe536d828ca" kindref="member">NFC_NDEF_MSG_PARSER_DELTA</ref>) * ((uint32_t)(max_count_of_records) - 1)))</initializer>
        <briefdescription>
<para>Calculate the memory size required for holding the description of a message that consists of a certain number of NDEF records. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">max_count_of_records</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of records to hold. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/nfc/ndef/msg_parser.h" line="56" column="9" bodyfile="include/nfc/ndef/msg_parser.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parser for NFC NDEF messages and records. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
