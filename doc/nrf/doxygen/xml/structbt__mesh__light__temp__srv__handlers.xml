<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structbt__mesh__light__temp__srv__handlers" kind="struct" language="C++" prot="public">
    <compoundname>bt_mesh_light_temp_srv_handlers</compoundname>
    <includes refid="light__temp__srv_8h" local="no">light_temp_srv.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structbt__mesh__light__temp__srv__handlers_adf2c331a52154629719de5a945f625a8_1adf2c331a52154629719de5a945f625a8" prot="public" static="no" mutable="no">
        <type>void(*const</type>
        <definition>void(*const bt_mesh_light_temp_srv_handlers::set) (struct bt_mesh_light_temp_srv *srv, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp_set *set, struct bt_mesh_light_temp_status *rsp)</definition>
        <argsstring>)(struct bt_mesh_light_temp_srv *srv, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp_set *set, struct bt_mesh_light_temp_status *rsp)</argsstring>
        <name>set</name>
        <briefdescription>
<para>Set the Light Temperature state. </para>
        </briefdescription>
        <detaileddescription>
<para>When a set message is received, the model publishes a status message, with the response set to <computeroutput>rsp</computeroutput>. When an acknowledged set message is received, the model also sends a response back to a client. If a state change is non-instantaneous, for example when <ref refid="group__bt__mesh__model__types_gaa845685eb265d1294b17bb80fbde4996_1gaa845685eb265d1294b17bb80fbde4996" kindref="member">bt_mesh_model_transition_time</ref> returns a nonzero value, the application is responsible for publishing a value of the Light Temperature state at the end of the transition.</para>
<para><simplesect kind="note"><para>This handler is mandatory.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">srv</parametername>
</parameternamelist>
<parameterdescription>
<para>Server to set the CTL Temperature state of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters of the state change. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response structure to be filled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_temp_srv.h" line="76" column="1" bodyfile="include/bluetooth/mesh/light_temp_srv.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__light__temp__srv__handlers_a76fdbee11ddd0cc7b3565838dac1ef6a_1a76fdbee11ddd0cc7b3565838dac1ef6a" prot="public" static="no" mutable="no">
        <type>void(*const</type>
        <definition>void(*const bt_mesh_light_temp_srv_handlers::get) (struct bt_mesh_light_temp_srv *srv, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_temp_status *rsp)</definition>
        <argsstring>)(struct bt_mesh_light_temp_srv *srv, struct bt_mesh_msg_ctx *ctx, struct bt_mesh_light_temp_status *rsp)</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get the CTL Temperature state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This handler is mandatory.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">srv</parametername>
</parameternamelist>
<parameterdescription>
<para>Server to get the CTL state of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rsp</parametername>
</parameternamelist>
<parameterdescription>
<para>Response structure to be filled. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_temp_srv.h" line="89" column="1" bodyfile="include/bluetooth/mesh/light_temp_srv.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__light__temp__srv__handlers_a37305b3e406fb661bdd7bf71c0541d47_1a37305b3e406fb661bdd7bf71c0541d47" prot="public" static="no" mutable="no">
        <type>void(*const</type>
        <definition>void(*const bt_mesh_light_temp_srv_handlers::range_update) (struct bt_mesh_light_temp_srv *srv, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp_range *old_range, const struct bt_mesh_light_temp_range *new_range)</definition>
        <argsstring>)(struct bt_mesh_light_temp_srv *srv, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp_range *old_range, const struct bt_mesh_light_temp_range *new_range)</argsstring>
        <name>range_update</name>
        <briefdescription>
<para>The Temperature Range state has changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">srv</parametername>
</parameternamelist>
<parameterdescription>
<para>Server the Temperature Range state was changed on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of the set message that triggered the update. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">old_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The old Temperature Range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_range</parametername>
</parameternamelist>
<parameterdescription>
<para>The new Temperature Range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_temp_srv.h" line="100" column="1" bodyfile="include/bluetooth/mesh/light_temp_srv.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structbt__mesh__light__temp__srv__handlers_a919608e2594f5951de1cbaa834d966eb_1a919608e2594f5951de1cbaa834d966eb" prot="public" static="no" mutable="no">
        <type>void(*const</type>
        <definition>void(*const bt_mesh_light_temp_srv_handlers::default_update) (struct bt_mesh_light_temp_srv *srv, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp *old_default, const struct bt_mesh_light_temp *new_default)</definition>
        <argsstring>)(struct bt_mesh_light_temp_srv *srv, struct bt_mesh_msg_ctx *ctx, const struct bt_mesh_light_temp *old_default, const struct bt_mesh_light_temp *new_default)</argsstring>
        <name>default_update</name>
        <briefdescription>
<para>The Default Light Temperature has changed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">srv</parametername>
</parameternamelist>
<parameterdescription>
<para>Server the Default Light Temperature state was changed on. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Context of the set message that triggered the update. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">old_default</parametername>
</parameternamelist>
<parameterdescription>
<para>The old Default Light Temperature. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_default</parametername>
</parameternamelist>
<parameterdescription>
<para>The new Default Light Temperature. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/mesh/light_temp_srv.h" line="113" column="1" bodyfile="include/bluetooth/mesh/light_temp_srv.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Light CTL Temperature Server state access handlers. </para>
    </detaileddescription>
    <location file="include/bluetooth/mesh/light_temp_srv.h" line="59" column="1" bodyfile="include/bluetooth/mesh/light_temp_srv.h" bodystart="59" bodyend="117"/>
    <listofallmembers>
      <member refid="structbt__mesh__light__temp__srv__handlers_a919608e2594f5951de1cbaa834d966eb_1a919608e2594f5951de1cbaa834d966eb" prot="public" virt="non-virtual"><scope>bt_mesh_light_temp_srv_handlers</scope><name>default_update</name></member>
      <member refid="structbt__mesh__light__temp__srv__handlers_a76fdbee11ddd0cc7b3565838dac1ef6a_1a76fdbee11ddd0cc7b3565838dac1ef6a" prot="public" virt="non-virtual"><scope>bt_mesh_light_temp_srv_handlers</scope><name>get</name></member>
      <member refid="structbt__mesh__light__temp__srv__handlers_a37305b3e406fb661bdd7bf71c0541d47_1a37305b3e406fb661bdd7bf71c0541d47" prot="public" virt="non-virtual"><scope>bt_mesh_light_temp_srv_handlers</scope><name>range_update</name></member>
      <member refid="structbt__mesh__light__temp__srv__handlers_adf2c331a52154629719de5a945f625a8_1adf2c331a52154629719de5a945f625a8" prot="public" virt="non-virtual"><scope>bt_mesh_light_temp_srv_handlers</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
