<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__hw__unique__key" kind="group">
    <compoundname>hw_unique_key</compoundname>
    <title>Hardware Unique Key (HUK) loading</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__hw__unique__key_1ga382d8696f6adec5f05569a95bb2d8201" prot="public" static="no" strong="no">
        <type></type>
        <name>hw_unique_key_slot</name>
        <enumvalue id="group__hw__unique__key_ga382d8696f6adec5f05569a95bb2d8201_1gga382d8696f6adec5f05569a95bb2d8201af73932bb322cb5223dd27a969463b523" prot="public">
          <name>HUK_KEYSLOT_MKEK</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hw__unique__key_ga382d8696f6adec5f05569a95bb2d8201_1gga382d8696f6adec5f05569a95bb2d8201aaf9eb3006e676cdb35cb8b29640835df" prot="public">
          <name>HUK_KEYSLOT_MEXT</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="64" column="1" bodyfile="include/hw_unique_key.h" bodystart="64" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__hw__unique__key_1gaafebed6474b6904d4cfd09498d28d4e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hw_unique_key_write</definition>
        <argsstring>(enum hw_unique_key_slot kmu_slot, const uint8_t *key)</argsstring>
        <name>hw_unique_key_write</name>
        <param>
          <type>enum <ref refid="group__hw__unique__key_ga382d8696f6adec5f05569a95bb2d8201_1ga382d8696f6adec5f05569a95bb2d8201" kindref="member">hw_unique_key_slot</ref></type>
          <declname>kmu_slot</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Write a Hardware Unique Key to the KMU. </para>
        </briefdescription>
        <detaileddescription>
<para>This can only be done once (until a mass erase happens). This function waits for the flash operation to finish before returning. Panic on failure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">kmu_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyslot to write to, see HUK_KEYSLOT_*. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to write. Must be <ref refid="group__hw__unique__key_ga7044769049e13ecfaca657fd6e882854_1ga7044769049e13ecfaca657fd6e882854" kindref="member">HUK_SIZE_BYTES</ref> bytes long. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="85" column="6" declfile="include/hw_unique_key.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hw__unique__key_1gac46a9be0a4a78a51a33b05a97082c81f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hw_unique_key_is_written</definition>
        <argsstring>(enum hw_unique_key_slot kmu_slot)</argsstring>
        <name>hw_unique_key_is_written</name>
        <param>
          <type>enum <ref refid="group__hw__unique__key_ga382d8696f6adec5f05569a95bb2d8201_1ga382d8696f6adec5f05569a95bb2d8201" kindref="member">hw_unique_key_slot</ref></type>
          <declname>kmu_slot</declname>
        </param>
        <briefdescription>
<para>Check whether a Hardware Unique Key has been written to the KMU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">kmu_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyslot to check, see HUK_KEYSLOT_*.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if a HUK has been written to the specified keyslot, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="104" column="6" declfile="include/hw_unique_key.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hw__unique__key_1ga759799320ff7f7e46adbb7b0e7937146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hw_unique_key_are_any_written</definition>
        <argsstring>(void)</argsstring>
        <name>hw_unique_key_are_any_written</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check whether any Hardware Unique Keys are written to the KMU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if one or more HUKs are written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if all HUKs are unwritten. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="112" column="6" declfile="include/hw_unique_key.h" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hw__unique__key_1ga6bd665a33bfe79f5ddcc3cb58fac2e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hw_unique_key_derive_key</definition>
        <argsstring>(enum hw_unique_key_slot kmu_slot, const uint8_t *context, size_t context_size, uint8_t const *label, size_t label_size, uint8_t *output, uint32_t output_size)</argsstring>
        <name>hw_unique_key_derive_key</name>
        <param>
          <type>enum <ref refid="group__hw__unique__key_ga382d8696f6adec5f05569a95bb2d8201_1ga382d8696f6adec5f05569a95bb2d8201" kindref="member">hw_unique_key_slot</ref></type>
          <declname>kmu_slot</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>context_size</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>label_size</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
<para>Derive a key from the specified HUK, using the nrf_cc3xx_platform API. </para>
        </briefdescription>
        <detaileddescription>
<para>See nrf_cc3xx_platform_kmu_shadow_key_derive() for more info.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">kmu_slot</parametername>
</parameternamelist>
<parameterdescription>
<para>Keyslot to derive from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context for key derivation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">label</parametername>
</parameternamelist>
<parameterdescription>
<para>Label for key derivation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">label_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of label. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>The derived key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ERR_HUK_MISSING</parametername>
</parameternamelist>
<parameterdescription>
<para>if the slot has not been written. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>otherwise, an error from nrf_cc3xx_platform_kmu_shadow_key_derive() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="143" column="5" declfile="include/hw_unique_key.h" declline="143" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__hw__unique__key_1ga3106b1c7cf6f42f7e9175d8d3da9d6b7" prot="public" static="no">
        <name>HUK_HAS_KMU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="38" column="9" bodyfile="include/hw_unique_key.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hw__unique__key_1ga7044769049e13ecfaca657fd6e882854" prot="public" static="no">
        <name>HUK_SIZE_BYTES</name>
        <initializer>(HUK_SIZE_WORDS * 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="55" column="9" bodyfile="include/hw_unique_key.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hw__unique__key_1ga73bd9af92716c6eafcd65b42f4e8b064" prot="public" static="no">
        <name>ERR_HUK_MISSING</name>
        <initializer>0x15500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="56" column="9" bodyfile="include/hw_unique_key.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hw__unique__key_1ga57608247781e03c7e2c58d8a9963ba46" prot="public" static="no">
        <name>KMU_SELECT_SLOT</name>
        <param><defname>KEYSLOT</defname></param>
        <initializer>(uint32_t)((KEYSLOT) + 1) /* NRF_KMU KEYSLOT are 1-indexed. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/hw_unique_key.h" line="73" column="9" bodyfile="include/hw_unique_key.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>API for loading the Hardware Unique Key (HUK) in the CryptoCell KDR registers. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
