<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="group__nrf__cloud__pgps" kind="group">
    <compoundname>nrf_cloud_pgps</compoundname>
    <title>nRF Cloud P-GPS</title>
    <innerclass refid="structnrf__cloud__pgps__system__time" prot="public">nrf_cloud_pgps_system_time</innerclass>
    <innerclass refid="structnrf__cloud__pgps__prediction" prot="public">nrf_cloud_pgps_prediction</innerclass>
    <innerclass refid="structgps__pgps__request" prot="public">gps_pgps_request</innerclass>
    <innerclass refid="structnrf__cloud__pgps__result" prot="public">nrf_cloud_pgps_result</innerclass>
    <innerclass refid="structnrf__cloud__pgps__event" prot="public">nrf_cloud_pgps_event</innerclass>
    <innerclass refid="structnrf__cloud__pgps__init__param" prot="public">nrf_cloud_pgps_init_param</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__nrf__cloud__pgps_1ga9067506754060c359049f5fb95be68a2" prot="public" static="no" strong="no">
        <type></type>
        <name>nrf_cloud_pgps_event_type</name>
        <enumvalue id="group__nrf__cloud__pgps_ga9067506754060c359049f5fb95be68a2_1gga9067506754060c359049f5fb95be68a2a8da5f6663b11a4e60e1d37cd84cff0ca" prot="public">
          <name>PGPS_EVT_INIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>P-GPS initialization beginning. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__cloud__pgps_ga9067506754060c359049f5fb95be68a2_1gga9067506754060c359049f5fb95be68a2a569377c066858fe774ce7c770d315135" prot="public">
          <name>PGPS_EVT_UNAVAILABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>There are currently no P-GPS predictions available. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__cloud__pgps_ga9067506754060c359049f5fb95be68a2_1gga9067506754060c359049f5fb95be68a2a4eee3c1d21a948a8a9a33a78c3d60d9a" prot="public">
          <name>PGPS_EVT_LOADING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>P-GPS predictions are being loaded from the cloud. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__cloud__pgps_ga9067506754060c359049f5fb95be68a2_1gga9067506754060c359049f5fb95be68a2a9a25706f4a77764993a550412ac53900" prot="public">
          <name>PGPS_EVT_AVAILABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A P-GPS prediction is available now for the current date and time. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__cloud__pgps_ga9067506754060c359049f5fb95be68a2_1gga9067506754060c359049f5fb95be68a2ac22427df240c95724e97ac43b18fc629" prot="public">
          <name>PGPS_EVT_READY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>All P-GPS predictions are available. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__nrf__cloud__pgps_ga9067506754060c359049f5fb95be68a2_1gga9067506754060c359049f5fb95be68a2a58c0adf808d09dc1a0f562607c8676da" prot="public">
          <name>PGPS_EVT_REQUEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A P-GPS request has been created for missing predictions. The event has payload in the form of <ref refid="structgps__pgps__request" kindref="compound">gps_pgps_request</ref>. The event is intended to be used when CONFIG_NRF_CLOUD_PGPS_TRANSPORT_MQTT is disabled to let the application decide when and how to use the request information. This event type is not received if CONFIG_NRF_CLOUD_PGPS_TRANSPORT_MQTT is enabled. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>P-GPS event passed to the registered pgps_event_handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="112" column="1" bodyfile="include/net/nrf_cloud_pgps.h" bodystart="112" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__nrf__cloud__pgps_1ga7ad2ea3e7e17c17ed3aad15ec722e8c1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* pgps_event_handler_t) (struct nrf_cloud_pgps_event *event)</definition>
        <argsstring>)(struct nrf_cloud_pgps_event *event)</argsstring>
        <name>pgps_event_handler_t</name>
        <briefdescription>
<para>Event handler registered with the module to handle asynchronous events from the module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event that just occurred. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="148" column="9" bodyfile="include/net/nrf_cloud_pgps.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__nrf__cloud__pgps_1gadb8f13aa83fa6f92854a8a0a216a3098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_cloud_pgps_set_location_normalized</definition>
        <argsstring>(int32_t latitude, int32_t longitude)</argsstring>
        <name>nrf_cloud_pgps_set_location_normalized</name>
        <param>
          <type>int32_t</type>
          <declname>latitude</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>longitude</declname>
        </param>
        <briefdescription>
<para>Update storage of the most recent known location, in modem-specific normalized format (int32_t). Current time is also stored. Normalization: (latitude / 90.0) * (1 &lt;&lt; 23) (longitude / 360.0) * (1 &lt;&lt; 24) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Current latitude normalized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Current longitude in normalized. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="170" column="6" declfile="include/net/nrf_cloud_pgps.h" declline="170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1gaf29a7a0c52d92927f4a013e40e41fc83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_cloud_pgps_set_location</definition>
        <argsstring>(double latitude, double longitude)</argsstring>
        <name>nrf_cloud_pgps_set_location</name>
        <param>
          <type>double</type>
          <declname>latitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>longitude</declname>
        </param>
        <briefdescription>
<para>Update the storage of the most recent known location in degrees. This will be injected along with the current time and relevant predicted ephemerides to the GPS unit in order to get the fastest possible fix, when the P-GPS subsystem is built with A-GPS disabled, or when A-GPS data is unavailable due to lack of a cloud connection. Current time is also stored. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>latitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Current latitude in degrees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>longitude</parametername>
</parameternamelist>
<parameterdescription>
<para>Current longitude in degrees. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="182" column="6" declfile="include/net/nrf_cloud_pgps.h" declline="182" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1ga78813e5fd14bdcc2520c490698d95b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_cloud_pgps_clear_location</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_cloud_pgps_clear_location</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>If location has previously been set, clear it. The application should do this if significant distances might have been travelled since the previous location was saved. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="188" column="6" declfile="include/net/nrf_cloud_pgps.h" declline="188" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1ga603581ced037947814377e093d5e80df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nrf_cloud_pgps_set_leap_seconds</definition>
        <argsstring>(int leap_seconds)</argsstring>
        <name>nrf_cloud_pgps_set_leap_seconds</name>
        <param>
          <type>int</type>
          <declname>leap_seconds</declname>
        </param>
        <briefdescription>
<para>Update the storage of the leap second offset between GPS time and UTC. This called automatically by the A-GPS subsystem (if enabled) when it receives a UTC assistance element, setting leap_seconds to the delta_tls field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leap_seconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset in seconds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="196" column="6" declfile="include/net/nrf_cloud_pgps.h" declline="196" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1ga84ecdc347d93b591c8723f43f7d422ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_pgps_notify_prediction</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_cloud_pgps_notify_prediction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Schedule a callback when prediction for current time is available. Callback could be immediate, if data already stored in Flash, or later, after loading from the cloud. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if scheduled successfully, or negative error code if could not send request to cloud. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="205" column="5" declfile="include/net/nrf_cloud_pgps.h" declline="205" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1gac2a7ea3c51d520a4254a03e6831e6c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_pgps_find_prediction</definition>
        <argsstring>(struct nrf_cloud_pgps_prediction **prediction)</argsstring>
        <name>nrf_cloud_pgps_find_prediction</name>
        <param>
          <type>struct <ref refid="structnrf__cloud__pgps__prediction" kindref="compound">nrf_cloud_pgps_prediction</ref> **</type>
          <declname>prediction</declname>
        </param>
        <briefdescription>
<para>Tries to find an appropriate GPS prediction for the current time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prediction</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a pointer to a prediction; the pointer at this pointer will be modified to point to the prediction if the return value is 0. Will be set to NULL on failure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0..NumPredictions-1 if successful; -ETIMEUNKNOWN if current date and time not known; -ETIMEDOUT if all predictions stored are expired; -EINVAL if prediction for the current time is invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="217" column="5" declfile="include/net/nrf_cloud_pgps.h" declline="217" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1gae5554df8baf4bb437a59a4d0a4d86b56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_pgps_process</definition>
        <argsstring>(const char *buf, size_t buf_len)</argsstring>
        <name>nrf_cloud_pgps_process</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_len</declname>
        </param>
        <briefdescription>
<para>Processes binary P-GPS data received from nRF Cloud over MQTT or REST. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data received from nRF Cloud. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer size of data to be processed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, otherwise a (negative) error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="258" column="5" declfile="include/net/nrf_cloud_pgps.h" declline="258" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1ga791c41d96c969f31e76fd98d8bcd04ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_pgps_inject</definition>
        <argsstring>(struct nrf_cloud_pgps_prediction *p, const struct nrf_modem_gnss_agps_data_frame *request)</argsstring>
        <name>nrf_cloud_pgps_inject</name>
        <param>
          <type>struct <ref refid="structnrf__cloud__pgps__prediction" kindref="compound">nrf_cloud_pgps_prediction</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const struct nrf_modem_gnss_agps_data_frame *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Injects binary P-GPS data to the modem. If request is NULL, it is assumed that only ephemerides assistance should be injected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a prediction. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Which assistance elements the modem needs. May be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, otherwise a (negative) error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="268" column="5" declfile="include/net/nrf_cloud_pgps.h" declline="268" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1ga47c0ae7499f9295c074105cb49caa075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nrf_cloud_pgps_loading</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_cloud_pgps_loading</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Find out if P-GPS update is in progress. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if request sent but loading not yet completed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="275" column="6" declfile="include/net/nrf_cloud_pgps.h" declline="275" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1ga967df3ae450fc68a1d3d645206f921f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_pgps_preemptive_updates</definition>
        <argsstring>(void)</argsstring>
        <name>nrf_cloud_pgps_preemptive_updates</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Download more predictions if less than CONFIG_NRF_CLOUD_PGPS_REPLACEMENT_THRESHOLD predictions remain which are still valid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if successful, otherwise a (negative) error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="282" column="5" declfile="include/net/nrf_cloud_pgps.h" declline="282" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__nrf__cloud__pgps_1gaa3760641b9c349f8331a57a03c6f714e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nrf_cloud_pgps_init</definition>
        <argsstring>(struct nrf_cloud_pgps_init_param *param)</argsstring>
        <name>nrf_cloud_pgps_init</name>
        <param>
          <type>struct <ref refid="structnrf__cloud__pgps__init__param" kindref="compound">nrf_cloud_pgps_init_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Initialize P-GPS subsystem. Validates what is stored, then requests any missing predictions, or full set if expired or missing. When successful, it is ready to provide valid ephemeris predictions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>It must return successfully before using P-GPS services.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization parameters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if valid or request begun; nonzero on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="294" column="5" declfile="include/net/nrf_cloud_pgps.h" declline="294" declcolumn="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__nrf__cloud__pgps_1ga3fe5498c156d44668fadc1840f34a220" prot="public" static="no">
        <name>NRF_CLOUD_PGPS_NUM_SV</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="26" column="9" bodyfile="include/net/nrf_cloud_pgps.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__pgps_1ga4cabaf0e111e6c8c3ff00890ce66a435" prot="public" static="no">
        <name>ETIMEUNKNOWN</name>
        <initializer>8000</initializer>
        <briefdescription>
<para>P-GPS error code: current time unknown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="102" column="9" bodyfile="include/net/nrf_cloud_pgps.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__pgps_1gaa47c8eb7d17845871eeb8ffbefaa078a" prot="public" static="no">
        <name>ELOADING</name>
        <initializer>8001</initializer>
        <briefdescription>
<para>P-GPS error code: not found but loading in progress. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="104" column="9" bodyfile="include/net/nrf_cloud_pgps.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__nrf__cloud__pgps_1ga083f6e019e6d7de58678c9640ed99908" prot="public" static="no">
        <name>NRF_CLOUD_PGPS_EMPTY_EPHEM_HEALTH</name>
        <initializer>(0xff)</initializer>
        <briefdescription>
<para>Value to mark the ephemeris as unavailable for satellites for which no predictions are available from the cloud. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/net/nrf_cloud_pgps.h" line="109" column="9" bodyfile="include/net/nrf_cloud_pgps.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
