<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="lwm2m__os_8h" kind="file" language="C++">
    <compoundname>lwm2m_os.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <incdepgraph>
      <node id="1">
        <label>lib/bin/lwm2m_carrier/include/lwm2m_os.h</label>
        <link refid="lwm2m__os_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structlwm2m__os__sms__deliver__address" prot="public">lwm2m_os_sms_deliver_address</innerclass>
    <innerclass refid="structlwm2m__os__sms__udh__app__port" prot="public">lwm2m_os_sms_udh_app_port</innerclass>
    <innerclass refid="structlwm2m__os__sms__deliver__header" prot="public">lwm2m_os_sms_deliver_header</innerclass>
    <innerclass refid="unionlwm2m__os__sms__header" prot="public">lwm2m_os_sms_header</innerclass>
    <innerclass refid="structlwm2m__os__sms__data" prot="public">lwm2m_os_sms_data</innerclass>
    <innerclass refid="structlwm2m__os__at__param__list" prot="public">lwm2m_os_at_param_list</innerclass>
    <innerclass refid="structlwm2m__os__download__evt" prot="public">lwm2m_os_download_evt</innerclass>
    <innerclass refid="structlwm2m__os__download__cfg" prot="public">lwm2m_os_download_cfg</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga7389b4034b228f264fbb166e5d976bc3_1ga7389b4034b228f264fbb166e5d976bc3" prot="public" static="no">
        <name>LWM2M_OS_MAX_WORK_QS</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Maximum number of work queues that the system must support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="23" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga31a183e2f8a60106bea52d3a7ce8d019_1ga31a183e2f8a60106bea52d3a7ce8d019" prot="public" static="no">
        <name>LWM2M_OS_MAX_TIMER_COUNT</name>
        <initializer>(6 + (<ref refid="group__lwm2m__carrier__os_ga7389b4034b228f264fbb166e5d976bc3_1ga7389b4034b228f264fbb166e5d976bc3" kindref="member">LWM2M_OS_MAX_WORK_QS</ref> * 2))</initializer>
        <briefdescription>
<para>Maximum number of timers that the system must support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="28" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_gad02f59f74cf392d91b77c764d797e9f2_1gad02f59f74cf392d91b77c764d797e9f2" prot="public" static="no">
        <name>LWM2M_OS_MAX_SEM_COUNT</name>
        <initializer>(5 + (<ref refid="group__lwm2m__carrier__os_ga7389b4034b228f264fbb166e5d976bc3_1ga7389b4034b228f264fbb166e5d976bc3" kindref="member">LWM2M_OS_MAX_WORK_QS</ref> * 3))</initializer>
        <briefdescription>
<para>Maximum number of semaphores that the system must support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="36" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_gacde9ce1a500647cbcf3f71799711c24c_1gacde9ce1a500647cbcf3f71799711c24c" prot="public" static="no">
        <name>LWM2M_LOG_LEVEL_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="41" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_gaa132e2789d1cf2eb95dc02b73e08fe0c_1gaa132e2789d1cf2eb95dc02b73e08fe0c" prot="public" static="no">
        <name>LWM2M_LOG_LEVEL_ERR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="42" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga6b4bdbeaa2171cdcbe99f641f2fc14ff_1ga6b4bdbeaa2171cdcbe99f641f2fc14ff" prot="public" static="no">
        <name>LWM2M_LOG_LEVEL_WRN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="43" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga4bf7f713c55ead85f5180c960525e7fa_1ga4bf7f713c55ead85f5180c960525e7fa" prot="public" static="no">
        <name>LWM2M_LOG_LEVEL_INF</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="44" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga46429a9436c26a8c16eeedb7561068d6_1ga46429a9436c26a8c16eeedb7561068d6" prot="public" static="no">
        <name>LWM2M_LOG_LEVEL_TRC</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="45" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga15a565289566c52a173855b882718921_1ga15a565289566c52a173855b882718921" prot="public" static="no">
        <name>LWM2M_OS_LTE_MODE_NONE</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="47" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga844dee1fd1d1de347853a361c4cbfc5d_1ga844dee1fd1d1de347853a361c4cbfc5d" prot="public" static="no">
        <name>LWM2M_OS_LTE_MODE_CAT_M1</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="48" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_gaf7c30e87088c8dad05406f38feb6d376_1gaf7c30e87088c8dad05406f38feb6d376" prot="public" static="no">
        <name>LWM2M_OS_LTE_MODE_CAT_NB1</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="49" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_ga90475cdcc2d05117c7cd61cd5bd46087_1ga90475cdcc2d05117c7cd61cd5bd46087" prot="public" static="no">
        <name>LWM2M_OS_STORAGE_BASE</name>
        <initializer>0xCA00</initializer>
        <briefdescription>
<para>Range of the non-volatile storage identifiers used by the library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The application MUST NOT use the values within this range for its own non-volatile storage management as it could potentially delete or overwrite entries used by the library. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="58" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__carrier__os_gae023ade9b167e4cb1a930d782de1aea5_1gae023ade9b167e4cb1a930d782de1aea5" prot="public" static="no">
        <name>LWM2M_OS_STORAGE_END</name>
        <initializer>0xCAFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="59" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__os__download__evt__id_gad1e334a9ae446b40801f07444357140b_1gad1e334a9ae446b40801f07444357140b" prot="public" static="no">
        <name>LWM2M_OS_DOWNLOAD_EVT_FRAGMENT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="118" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__os__download__evt__id_ga3453d087b5fed79fabb5a1332cfa1087_1ga3453d087b5fed79fabb5a1332cfa1087" prot="public" static="no">
        <name>LWM2M_OS_DOWNLOAD_EVT_ERROR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="119" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lwm2m__os__download__evt__id_gac0fd78b88e3d0f3dd23bec9b118121bc_1gac0fd78b88e3d0f3dd23bec9b118121bc" prot="public" static="no">
        <name>LWM2M_OS_DOWNLOAD_EVT_DONE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="120" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" prot="public" static="no" strong="no">
        <type></type>
        <name>lwm2m_os_pdn_fam</name>
        <enumvalue id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa0d07e7eab5baf6ef1378fdcc787e257f" prot="public">
          <name>LWM2M_OS_PDN_FAM_IPV4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaf285a6a5eb147b63976d72f4c9f4cf98" prot="public">
          <name>LWM2M_OS_PDN_FAM_IPV6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaaa0a70b2dc99c228601e7a20ca039104" prot="public">
          <name>LWM2M_OS_PDN_FAM_IPV4V6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDN family. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="155" column="1" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="enum" id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1gaa1a59d5aab1c9892a25f9dfd6360aa32" prot="public" static="no" strong="no">
        <type></type>
        <name>lwm2m_os_pdn_event</name>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32acfa57da1a182d3ad767a2b9be897579c" prot="public">
          <name>LWM2M_OS_PDN_EVENT_CNEC_ESM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a2358a25b7707c57561c03061adb64e4b" prot="public">
          <name>LWM2M_OS_PDN_EVENT_ACTIVATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32ac3e730b1491c4b9044a28e5dd125b06c" prot="public">
          <name>LWM2M_OS_PDN_EVENT_DEACTIVATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a69d2cb69cbcf6b887e6c757cb4b5dde3" prot="public">
          <name>LWM2M_OS_PDN_EVENT_IPV6_UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a34d98721d72ce73472ffb686669a7e0f" prot="public">
          <name>LWM2M_OS_PDN_EVENT_IPV6_DOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDN event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="162" column="1" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="162" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_gabe7b85446831f46d780ec985e35ebdf0_1gabe7b85446831f46d780ec985e35ebdf0" prot="public" static="no">
        <type>void</type>
        <definition>typedef void lwm2m_os_work_q_t</definition>
        <argsstring></argsstring>
        <name>lwm2m_os_work_q_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="30" column="14" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" prot="public" static="no">
        <type>void</type>
        <definition>typedef void lwm2m_os_timer_t</definition>
        <argsstring></argsstring>
        <name>lwm2m_os_timer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="31" column="14" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" prot="public" static="no">
        <type>void</type>
        <definition>typedef void lwm2m_os_sem_t</definition>
        <argsstring></argsstring>
        <name>lwm2m_os_sem_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="39" column="14" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga074927311da051b50fe70ff4ddacc031_1ga074927311da051b50fe70ff4ddacc031" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_timer_handler_t) (void *timer)</definition>
        <argsstring>)(void *timer)</argsstring>
        <name>lwm2m_os_timer_handler_t</name>
        <briefdescription>
<para>Timer callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="64" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_sms_callback_t) (struct lwm2m_os_sms_data *const data, void *context)</definition>
        <argsstring>)(struct lwm2m_os_sms_data *const data, void *context)</argsstring>
        <name>lwm2m_os_sms_callback_t</name>
        <briefdescription>
<para>SMS subscriber callback function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="99" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga3dd8952d70841ee0697c3634be038600_1ga3dd8952d70841ee0697c3634be038600" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_at_cmd_handler_t) (void *ctx, const char *response)</definition>
        <argsstring>)(void *ctx, const char *response)</argsstring>
        <name>lwm2m_os_at_cmd_handler_t</name>
        <briefdescription>
<para>AT Command handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="112" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* lwm2m_os_download_callback_t) (const struct lwm2m_os_download_evt *event)</definition>
        <argsstring>)(const struct lwm2m_os_download_evt *event)</argsstring>
        <name>lwm2m_os_download_callback_t</name>
        <briefdescription>
<para>Download client asynchronous event handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="152" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* lwm2m_os_pdn_event_handler_t) (uint8_t cid, enum lwm2m_os_pdn_event event, int reason)</definition>
        <argsstring>)(uint8_t cid, enum lwm2m_os_pdn_event event, int reason)</argsstring>
        <name>lwm2m_os_pdn_event_handler_t</name>
        <briefdescription>
<para>PDN event handler. </para>
        </briefdescription>
        <detaileddescription>
<para>If assigned during PDP context creation, the event handler will receive status information relative to the Packet Data Network connection, as reported by the AT notifications CNEC and GGEV.</para>
<para>This handler is executed by the same context that dispatches AT notifications. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="179" column="9" bodyfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga0f2f4aa9c3fdb4388be60ef0b146b8ab_1ga0f2f4aa9c3fdb4388be60ef0b146b8ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_pdn_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the PDN functionality. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int Zero on success or an errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="186" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="186" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga727acaf4307ab3637a95a214efb842f1_1ga727acaf4307ab3637a95a214efb842f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_ctx_create</definition>
        <argsstring>(uint8_t *cid, lwm2m_os_pdn_event_handler_t cb)</argsstring>
        <name>lwm2m_os_pdn_ctx_create</name>
        <param>
          <type>uint8_t *</type>
          <declname>cid</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Create a Packet Data Protocol (PDP) context. </para>
        </briefdescription>
        <detaileddescription>
<para>If a callback is provided via the <computeroutput>cb</computeroutput> parameter, generate events from the CNEC and GGEV AT notifications to report state of the Packet Data Network (PDN) connection.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the new PDP context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional event handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Zero on success or an errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="199" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="199" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga686f7f4ff871b42ac0007044c7939d63_1ga686f7f4ff871b42ac0007044c7939d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_ctx_configure</definition>
        <argsstring>(uint8_t cid, const char *apn, enum lwm2m_os_pdn_fam family)</argsstring>
        <name>lwm2m_os_pdn_ctx_configure</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>apn</declname>
        </param>
        <param>
          <type>enum <ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" kindref="member">lwm2m_os_pdn_fam</ref></type>
          <declname>family</declname>
        </param>
        <briefdescription>
<para>Configure a Packet Data Protocol context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDP context to configure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apn</parametername>
</parameternamelist>
<parameterdescription>
<para>The Access Point Name to configure the PDP context with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>The family to configure the PDN context for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Zero on success or an errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="209" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="209" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac60560d18f8975330293c6b7241464ad_1gac60560d18f8975330293c6b7241464ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_ctx_destroy</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>lwm2m_os_pdn_ctx_destroy</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Destroy a Packet Data Protocol context. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDP context to destroy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Zero on success or an errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="217" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="217" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaceff3198bc1643a3a7ea5b7dbc878f3c_1gaceff3198bc1643a3a7ea5b7dbc878f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_activate</definition>
        <argsstring>(uint8_t cid, int *esm)</argsstring>
        <name>lwm2m_os_pdn_activate</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>esm</declname>
        </param>
        <briefdescription>
<para>Activate a Packet Data Network (PDN) connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDP context ID to activate a connection for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">esm</parametername>
</parameternamelist>
<parameterdescription>
<para>If provided, the function will block to return the ESM error reason. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Zero on success or an errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="227" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="227" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac01c58f563f7e0ccb1902f8a263134e5_1gac01c58f563f7e0ccb1902f8a263134e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_deactivate</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>lwm2m_os_pdn_deactivate</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Deactivate a Packet Data Network (PDN) connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDP context ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Zero on success or an errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="235" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="235" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaf0d7b4623494f5a22101e52037ce7d7b_1gaf0d7b4623494f5a22101e52037ce7d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_id_get</definition>
        <argsstring>(uint8_t cid)</argsstring>
        <name>lwm2m_os_pdn_id_get</name>
        <param>
          <type>uint8_t</type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>Retrieve the PDN ID for a given PDP Context. </para>
        </briefdescription>
        <detaileddescription>
<para>The PDN ID can be used to route traffic through a Packet Data Network.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cid</parametername>
</parameternamelist>
<parameterdescription>
<para>The context ID of the PDN connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Zero on success or an errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="245" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="245" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac89d2526a261b508e3e0ef0152e43659_1gac89d2526a261b508e3e0ef0152e43659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_default_apn_get</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>lwm2m_os_pdn_default_apn_get</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Retrieve the default Access Point Name (APN). </para>
        </briefdescription>
        <detaileddescription>
<para>The default APN is the APN of the default PDP context (zero).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to copy the APN into. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the output buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Zero on success or an errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="256" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="256" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga69f2391d56917bfa77c24db5f918f75e_1ga69f2391d56917bfa77c24db5f918f75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_pdn_default_callback_set</definition>
        <argsstring>(lwm2m_os_pdn_event_handler_t cb)</argsstring>
        <name>lwm2m_os_pdn_default_callback_set</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set a callback for events pertaining to the default PDP context (zero). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The PDN event handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="263" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="263" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaadaa431d494e9938a5c3bbf3d10f4097_1gaadaa431d494e9938a5c3bbf3d10f4097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the LWM2M OS layer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="268" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="268" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gab3cfa36dd7fff32515a48d737b188c66_1gab3cfa36dd7fff32515a48d737b188c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * lwm2m_os_malloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>lwm2m_os_malloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="273" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="273" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga7308d0779b48057eb3bfe5fd2eada78a_1ga7308d0779b48057eb3bfe5fd2eada78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_free</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>lwm2m_os_free</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Free memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="278" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="278" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga30a7b4196a0eebcaa6b5032898d9c5d5_1ga30a7b4196a0eebcaa6b5032898d9c5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sem_init</definition>
        <argsstring>(lwm2m_os_sem_t **sem, unsigned int initial_count, unsigned int limit)</argsstring>
        <name>lwm2m_os_sem_init</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref> **</type>
          <declname>sem</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>initial_count</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Initialize a semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the pointer to the semaphore. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial semaphore count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum permitted semaphore count.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore created successfully </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="290" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="290" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gad81ab2634ac6a54de6e3bf5f8a297e14_1gad81ab2634ac6a54de6e3bf5f8a297e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sem_take</definition>
        <argsstring>(lwm2m_os_sem_t *sem, int timeout)</argsstring>
        <name>lwm2m_os_sem_take</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref> *</type>
          <declname>sem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Take a semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the semaphore. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in ms or -1 for forever.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore taken. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EBUSY</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned without waiting. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EAGAIN</parametername>
</parameternamelist>
<parameterdescription>
<para>Waiting period timed out. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="302" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="302" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaac5341cc4e34dbf6b81eb7fd429b382c_1gaac5341cc4e34dbf6b81eb7fd429b382c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sem_give</definition>
        <argsstring>(lwm2m_os_sem_t *sem)</argsstring>
        <name>lwm2m_os_sem_give</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref> *</type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Give a semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the semaphore. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="309" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="309" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaf466af20f186ed4fcab0c639c5ee01b8_1gaf466af20f186ed4fcab0c639c5ee01b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sem_reset</definition>
        <argsstring>(lwm2m_os_sem_t *sem)</argsstring>
        <name>lwm2m_os_sem_reset</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref> *</type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Reset a semaphore. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sem</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the semaphore. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="316" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="316" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga5ffbdc3890a73d9c846d656458f95dbe_1ga5ffbdc3890a73d9c846d656458f95dbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t lwm2m_os_uptime_get</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_uptime_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get uptime, in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="321" column="9" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="321" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gad855aae63628a3ac50824f6f6da5b7dc_1gad855aae63628a3ac50824f6f6da5b7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t lwm2m_os_uptime_delta</definition>
        <argsstring>(int64_t *ref)</argsstring>
        <name>lwm2m_os_uptime_delta</name>
        <param>
          <type>int64_t *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Get uptime delta, in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="326" column="9" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="326" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga9d4e75826fd7441b2169e945b6ea5739_1ga9d4e75826fd7441b2169e945b6ea5739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sleep</definition>
        <argsstring>(int ms)</argsstring>
        <name>lwm2m_os_sleep</name>
        <param>
          <type>int</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Put a thread to a sleep. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="331" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="331" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gadb5f36e8344e38e144f4ff25468ed5cc_1gadb5f36e8344e38e144f4ff25468ed5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sys_reset</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_sys_reset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reboot system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="336" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="336" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f_1ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t lwm2m_os_rand_get</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_rand_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a random value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="341" column="10" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="341" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga32b1d5419650b26a0e2cd6b1a82d33e2_1ga32b1d5419650b26a0e2cd6b1a82d33e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_storage_delete</definition>
        <argsstring>(uint16_t id)</argsstring>
        <name>lwm2m_os_storage_delete</name>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Delete a non-volatile storage entry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="346" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="346" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga5bf845be59bbab85be2a8ffcfc38398f_1ga5bf845be59bbab85be2a8ffcfc38398f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_storage_read</definition>
        <argsstring>(uint16_t id, void *data, size_t len)</argsstring>
        <name>lwm2m_os_storage_read</name>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Read an entry from non-volatile storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="351" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="351" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gab5e1e5d30c6797a0c08f54c0eecbaa45_1gab5e1e5d30c6797a0c08f54c0eecbaa45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_storage_write</definition>
        <argsstring>(uint16_t id, const void *data, size_t len)</argsstring>
        <name>lwm2m_os_storage_write</name>
        <param>
          <type>uint16_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Write an entry to non-volatile storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="356" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="356" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac6f17eace64830f44c730b84bfe3b3db_1gac6f17eace64830f44c730b84bfe3b3db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__lwm2m__carrier__os_gabe7b85446831f46d780ec985e35ebdf0_1gabe7b85446831f46d780ec985e35ebdf0" kindref="member">lwm2m_os_work_q_t</ref> *</type>
        <definition>lwm2m_os_work_q_t * lwm2m_os_work_q_start</definition>
        <argsstring>(int index, const char *name)</argsstring>
        <name>lwm2m_os_work_q_start</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Start a workqueue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the queue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the queue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Workqueue.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="366" column="19" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="366" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga3ae8a92a6bd9bd2b0c8a021248c09c5b_1ga3ae8a92a6bd9bd2b0c8a021248c09c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref> *</type>
        <definition>lwm2m_os_timer_t * lwm2m_os_timer_get</definition>
        <argsstring>(lwm2m_os_timer_handler_t handler)</argsstring>
        <name>lwm2m_os_timer_get</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga074927311da051b50fe70ff4ddacc031_1ga074927311da051b50fe70ff4ddacc031" kindref="member">lwm2m_os_timer_handler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Reserve a timer task from the OS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to run for this task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Timer</parametername>
</parameternamelist>
<parameterdescription>
<para>task. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="375" column="18" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="375" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaebb3870782152d5ecf4a776f8217cea6_1gaebb3870782152d5ecf4a776f8217cea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_timer_release</definition>
        <argsstring>(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_release</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Release a timer task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="380" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="380" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga14d946bffca00b7a17e3935876feaff1_1ga14d946bffca00b7a17e3935876feaff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_timer_start</definition>
        <argsstring>(lwm2m_os_timer_t *timer, int64_t timeout)</argsstring>
        <name>lwm2m_os_timer_start</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Start a timer on system work queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay before submitting the task in ms.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If timeout is <computeroutput>NO_WAIT</computeroutput> and work was already on a queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>If timeout is <computeroutput>NO_WAIT</computeroutput> and work was not submitted but has now been queued to workqueue; or timeout is not <computeroutput>NO_WAIT</computeroutput> and work has been scheduled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>2</parametername>
</parameternamelist>
<parameterdescription>
<para>If delay is <computeroutput>NO_WAIT</computeroutput> and work was running and has been queued to the queue that was running it </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>timer not found. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="395" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="395" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac6a4603c6703529f21f675efa4b242a6_1gac6a4603c6703529f21f675efa4b242a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_timer_start_on_q</definition>
        <argsstring>(lwm2m_os_work_q_t *work_q, lwm2m_os_timer_t *timer, int64_t msec)</argsstring>
        <name>lwm2m_os_timer_start_on_q</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gabe7b85446831f46d780ec985e35ebdf0_1gabe7b85446831f46d780ec985e35ebdf0" kindref="member">lwm2m_os_work_q_t</ref> *</type>
          <declname>work_q</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>msec</declname>
        </param>
        <briefdescription>
<para>Start a timer on a specific queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>work_q</parametername>
</parameternamelist>
<parameterdescription>
<para>Workqueue. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msec</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay before submitting the task in ms.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If timeout is <computeroutput>NO_WAIT</computeroutput> and work was already on a queue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>If timeout is <computeroutput>NO_WAIT</computeroutput> and work was not submitted but has now been queued to <computeroutput>work_q</computeroutput>; or timeout is not <computeroutput>NO_WAIT</computeroutput> and work has been scheduled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>2</parametername>
</parameternamelist>
<parameterdescription>
<para>If delay is <computeroutput>NO_WAIT</computeroutput> and work was running and has been queued to the queue that was running it </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer or work_q not found. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="411" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="411" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga1fc14c403bf83413825e9af4e6e54ffb_1ga1fc14c403bf83413825e9af4e6e54ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_timer_cancel</definition>
        <argsstring>(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_cancel</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Cancel a timer run. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="418" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="418" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga98d632b2afe800efae8ab688b2d417df_1ga98d632b2afe800efae8ab688b2d417df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t lwm2m_os_timer_remaining</definition>
        <argsstring>(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_remaining</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Obtain the time remaining on a timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Time</parametername>
</parameternamelist>
<parameterdescription>
<para>remaining in ms. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="427" column="9" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="427" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga3dd682a5e0c05a651b02c1d03df9999e_1ga3dd682a5e0c05a651b02c1d03df9999e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lwm2m_os_timer_is_pending</definition>
        <argsstring>(lwm2m_os_timer_t *timer)</argsstring>
        <name>lwm2m_os_timer_is_pending</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref> *</type>
          <declname>timer</declname>
        </param>
        <briefdescription>
<para>Check if a timer task is pending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer task.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if a timer task is pending. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="436" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="436" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga3924eb7ce3754751b48bdb23a1af0cdf_1ga3924eb7ce3754751b48bdb23a1af0cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * lwm2m_os_log_strdup</definition>
        <argsstring>(const char *str)</argsstring>
        <name>lwm2m_os_log_strdup</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Create a string copy for a logger subsystem. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="441" column="12" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="441" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gab12cb98999e7cef89bc794e321a3ef2b_1gab12cb98999e7cef89bc794e321a3ef2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_log</definition>
        <argsstring>(int level, const char *fmt,...)</argsstring>
        <name>lwm2m_os_log</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Log a message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="446" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="446" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga35afa4ffc3ce3712b1d8612446a9dcda_1ga35afa4ffc3ce3712b1d8612446a9dcda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_logdump</definition>
        <argsstring>(int level, const char *msg, const void *data, size_t len)</argsstring>
        <name>lwm2m_os_logdump</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Print a data dump via logger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Level. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Log message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to dump. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="456" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="456" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga906559bd52924b1f2177af3d7d5b026b_1ga906559bd52924b1f2177af3d7d5b026b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_nrf_modem_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_nrf_modem_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize modem library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-1 on error </para>
</simplesect>
<simplesect kind="return"><para>an error from <emphasis>nrf_modem_dfu</emphasis> in case of modem DFU. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="465" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="465" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac6768293489ec0693d40bf8d637b36e0_1gac6768293489ec0693d40bf8d637b36e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_nrf_modem_shutdown</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_nrf_modem_shutdown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Shutdown the Modem library. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 on success, -1 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="472" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="472" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gafac39f1866a7db73a93417c186a8c40f_1gafac39f1866a7db73a93417c186a8c40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_at_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize AT command driver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="477" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="477" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac0d0d6912eada8c225a0060dafcf7994_1gac0d0d6912eada8c225a0060dafcf7994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sms_init</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_sms_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize SMS subscriber library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="482" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="482" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga43078a697410d31d4fe0371cf0407409_1ga43078a697410d31d4fe0371cf0407409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sms_uninit</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_sms_uninit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Uninitialize SMS subscriber library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="487" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="487" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga952e7c057316b59852bcf01e57f7a887_1ga952e7c057316b59852bcf01e57f7a887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_notif_register_handler</definition>
        <argsstring>(void *context, lwm2m_os_at_cmd_handler_t handler)</argsstring>
        <name>lwm2m_os_at_notif_register_handler</name>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga3dd8952d70841ee0697c3634be038600_1ga3dd8952d70841ee0697c3634be038600" kindref="member">lwm2m_os_at_cmd_handler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set AT command global notification handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="492" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="492" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga8a1122d7d84ca6157f6d38edaa6a8c09_1ga8a1122d7d84ca6157f6d38edaa6a8c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sms_client_register</definition>
        <argsstring>(lwm2m_os_sms_callback_t lib_callback, void *context)</argsstring>
        <name>lwm2m_os_sms_client_register</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" kindref="member">lwm2m_os_sms_callback_t</ref></type>
          <declname>lib_callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Register as an SMS client/listener. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="497" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="497" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga40da2a9673ad233ca00f6a76bbb5697f_1ga40da2a9673ad233ca00f6a76bbb5697f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_sms_client_deregister</definition>
        <argsstring>(int handle)</argsstring>
        <name>lwm2m_os_sms_client_deregister</name>
        <param>
          <type>int</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>degister as an SMS client/listener. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="502" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="502" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga4176b761e2f2912246d504e766370e10_1ga4176b761e2f2912246d504e766370e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_cmd_write</definition>
        <argsstring>(const char *const cmd, char *buf, size_t buf_len)</argsstring>
        <name>lwm2m_os_at_cmd_write</name>
        <param>
          <type>const char *const</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_len</declname>
        </param>
        <briefdescription>
<para>Send an AT command and receive response immediately. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="507" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="507" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga96c92176a6db83a5cad096fd95e2e437_1ga96c92176a6db83a5cad096fd95e2e437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lwm2m_os_at_params_list_free</definition>
        <argsstring>(struct lwm2m_os_at_param_list *list)</argsstring>
        <name>lwm2m_os_at_params_list_free</name>
        <param>
          <type>struct <ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Free a list of AT parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="512" column="6" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="512" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gada436069545511303ba19fcac9191fb4_1gada436069545511303ba19fcac9191fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_params_list_init</definition>
        <argsstring>(struct lwm2m_os_at_param_list *list, size_t max_params_count)</argsstring>
        <name>lwm2m_os_at_params_list_init</name>
        <param>
          <type>struct <ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_params_count</declname>
        </param>
        <briefdescription>
<para>Create a list of AT parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="517" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="517" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaacd9dacc35990fa29f5b07789b9a17dc_1gaacd9dacc35990fa29f5b07789b9a17dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_params_int_get</definition>
        <argsstring>(struct lwm2m_os_at_param_list *list, size_t index, uint32_t *value)</argsstring>
        <name>lwm2m_os_at_params_int_get</name>
        <param>
          <type>struct <ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get a parameter value as an integer number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="522" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="522" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga13f65fc273ed8f591a9eb89f2ceb994c_1ga13f65fc273ed8f591a9eb89f2ceb994c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_params_short_get</definition>
        <argsstring>(struct lwm2m_os_at_param_list *list, size_t index, uint16_t *value)</argsstring>
        <name>lwm2m_os_at_params_short_get</name>
        <param>
          <type>struct <ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get a parameter value as a short number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="527" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="527" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gab529c11290a723960dd0fd6548ae8eaf_1gab529c11290a723960dd0fd6548ae8eaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_params_string_get</definition>
        <argsstring>(struct lwm2m_os_at_param_list *list, size_t index, char *value, size_t *len)</argsstring>
        <name>lwm2m_os_at_params_string_get</name>
        <param>
          <type>struct <ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Get a parameter value as a string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="533" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="533" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga494994d58a1d2b8a3d99632163dc4cac_1ga494994d58a1d2b8a3d99632163dc4cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_params_list_clear</definition>
        <argsstring>(struct lwm2m_os_at_param_list *list)</argsstring>
        <name>lwm2m_os_at_params_list_clear</name>
        <param>
          <type>struct <ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Clear/reset all parameter types and values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="539" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="539" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaaf0307459da9289077aa8fc062f81b54_1gaaf0307459da9289077aa8fc062f81b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_parser_params_from_str</definition>
        <argsstring>(const char *at_params_str, char **next_param_str, struct lwm2m_os_at_param_list *const list)</argsstring>
        <name>lwm2m_os_at_parser_params_from_str</name>
        <param>
          <type>const char *</type>
          <declname>at_params_str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>next_param_str</declname>
        </param>
        <param>
          <type>struct <ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref> *const</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Parse AT command or response parameters from a string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="544" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="544" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gac8d15d8b64b360f0052e85a579148a69_1gac8d15d8b64b360f0052e85a579148a69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_at_params_valid_count_get</definition>
        <argsstring>(struct lwm2m_os_at_param_list *list)</argsstring>
        <name>lwm2m_os_at_params_valid_count_get</name>
        <param>
          <type>struct <ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Get the number of valid parameters in the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="550" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="550" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gae67bd1e0df1eed86f87000a9fd8377cf_1gae67bd1e0df1eed86f87000a9fd8377cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_connect</definition>
        <argsstring>(const char *host, const struct lwm2m_os_download_cfg *cfg)</argsstring>
        <name>lwm2m_os_download_connect</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const struct <ref refid="structlwm2m__os__download__cfg" kindref="compound">lwm2m_os_download_cfg</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Establish a connection with the server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="555" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="555" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga1de48f82b7412fcc920b536534eaab12_1ga1de48f82b7412fcc920b536534eaab12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_disconnect</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_download_disconnect</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disconnect from the server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="560" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="560" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gafed4f8a8736f9be9194806cd52b466fe_1gafed4f8a8736f9be9194806cd52b466fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_init</definition>
        <argsstring>(lwm2m_os_download_callback_t lib_callback)</argsstring>
        <name>lwm2m_os_download_init</name>
        <param>
          <type><ref refid="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" kindref="member">lwm2m_os_download_callback_t</ref></type>
          <declname>lib_callback</declname>
        </param>
        <briefdescription>
<para>Initialize the download client. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="565" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="565" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga63300ca5532c98e6f29a13a3669495c0_1ga63300ca5532c98e6f29a13a3669495c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_start</definition>
        <argsstring>(const char *file, size_t from)</argsstring>
        <name>lwm2m_os_download_start</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Download a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="570" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="570" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga1c1c2ad7a1eee14f446e4efd1ca715c0_1ga1c1c2ad7a1eee14f446e4efd1ca715c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_download_file_size_get</definition>
        <argsstring>(size_t *size)</argsstring>
        <name>lwm2m_os_download_file_size_get</name>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Retrieve size of file being downloaded. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the file being downloaded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="577" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="577" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga71fb702606ed2f3069db894bb7239c0b_1ga71fb702606ed2f3069db894bb7239c0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_lte_link_up</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_lte_link_up</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="582" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="582" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga2401d1a3f739b4649cf0f16a492ca106_1ga2401d1a3f739b4649cf0f16a492ca106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_lte_link_down</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_lte_link_down</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="587" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="587" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gacf8246350b2cca3e51abef034825755d_1gacf8246350b2cca3e51abef034825755d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_lte_power_down</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_lte_power_down</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="592" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="592" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gae23db103dfbb04b1e6c52e2b59f4602b_1gae23db103dfbb04b1e6c52e2b59f4602b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t lwm2m_os_lte_mode_get</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_lte_mode_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="601" column="9" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="601" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga593b0b0de3665c56edb1410efdd6c94f_1ga593b0b0de3665c56edb1410efdd6c94f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_errno</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_errno</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Translate the error number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="606" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="606" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga50dee025136a315000aa04ae7122a1d6_1ga50dee025136a315000aa04ae7122a1d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * lwm2m_os_strerror</definition>
        <argsstring>(void)</argsstring>
        <name>lwm2m_os_strerror</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a textual description for the current error. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="611" column="12" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="611" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga932adbf5417a1b115aed09bedbc12f53_1ga932adbf5417a1b115aed09bedbc12f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_ca_chain_exists</definition>
        <argsstring>(uint32_t sec_tag, bool *exists, uint8_t *perm)</argsstring>
        <name>lwm2m_os_sec_ca_chain_exists</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>exists</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>perm</declname>
        </param>
        <briefdescription>
<para>Check if a certificate chain credential exists in persistent storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The tag to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">exists</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the credential exists. Only valid if the operation is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">perm</parametername>
</parameternamelist>
<parameterdescription>
<para>The permission flags of the credential. Not yet implemented.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient permissions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="626" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="626" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga338d878bec09ab144c8627a081fb6d95_1ga338d878bec09ab144c8627a081fb6d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_ca_chain_cmp</definition>
        <argsstring>(uint32_t sec_tag, const void *buf, size_t len)</argsstring>
        <name>lwm2m_os_sec_ca_chain_cmp</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Compare a certificate chain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Security tag associated with the certificate chain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to compare the certificate chain to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the certificate chain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>If the certificate chain match. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>If the certificate chain do not match. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 On error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="639" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="639" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga682bf57f919f66116a93d1ed889349ac_1ga682bf57f919f66116a93d1ed889349ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_ca_chain_write</definition>
        <argsstring>(uint32_t sec_tag, const void *buf, size_t len)</argsstring>
        <name>lwm2m_os_sec_ca_chain_write</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Provision a certificate chain or update an existing one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If used when the LTE link is active, the function will return an error and the key will not be written.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Security tag for this credential. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing the credential data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal buffer is too small. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed because the LTE link is active. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>Not enough memory to store the credential. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>The security tag could not be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient permissions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="659" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="659" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga487bbb0c5addb99dac5732ec296828e8_1ga487bbb0c5addb99dac5732ec296828e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_psk_exists</definition>
        <argsstring>(uint32_t sec_tag, bool *exists, uint8_t *perm_flags)</argsstring>
        <name>lwm2m_os_sec_psk_exists</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>exists</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>perm_flags</declname>
        </param>
        <briefdescription>
<para>Check if a pre-shared key exists in persistent storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The tag to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">exists</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the credential exists. Only valid if the operation is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">perm_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The permission flags of the credential. Only valid if the operation is successful and <computeroutput>exists</computeroutput> is <computeroutput>true</computeroutput>. Not yet implemented.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal buffer is too small. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="677" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="677" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gafa573db6b580de7782e68aa0e6400ae5_1gafa573db6b580de7782e68aa0e6400ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_psk_write</definition>
        <argsstring>(uint32_t sec_tag, const void *buf, uint16_t len)</argsstring>
        <name>lwm2m_os_sec_psk_write</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Provision a new pre-shared key or update an existing one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If used when the LTE link is active, the function will return an error and the key will not be written.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Security tag for this credential. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing the credential data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal buffer is too small. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>Not enough memory to store the credential. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed because the LTE link is active. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>The security tag could not be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="698" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="698" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gaf1ae409a73b99d65890f6712149f63f4_1gaf1ae409a73b99d65890f6712149f63f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_psk_delete</definition>
        <argsstring>(uint32_t sec_tag)</argsstring>
        <name>lwm2m_os_sec_psk_delete</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <briefdescription>
<para>Delete pre-shared key. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If used when the LTE link is active, the function will return an error and the key will not be deleted.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Security tag for this credential.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal buffer is too small. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed because the LTE link is active. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>No credential associated with the given <computeroutput>sec_tag</computeroutput> and <computeroutput>cred_type</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient permissions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="715" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="715" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga9b8f78375b66d035ddd4bd8c30f44f81_1ga9b8f78375b66d035ddd4bd8c30f44f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_identity_exists</definition>
        <argsstring>(uint32_t sec_tag, bool *exists, uint8_t *perm_flags)</argsstring>
        <name>lwm2m_os_sec_identity_exists</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>exists</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>perm_flags</declname>
        </param>
        <briefdescription>
<para>Check if an identity credential exists in persistent storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The tag to search for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">exists</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the credential exists. Only valid if the operation is successful. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">perm_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The permission flags of the credential. Only valid if the operation is successful and <computeroutput>exists</computeroutput> is <computeroutput>true</computeroutput>. Not yet implemented.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal buffer is too small. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="733" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="733" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_gafaabad2cf16a626ae12d82b1e1e3ca37_1gafaabad2cf16a626ae12d82b1e1e3ca37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_identity_write</definition>
        <argsstring>(uint32_t sec_tag, const void *buf, uint16_t len)</argsstring>
        <name>lwm2m_os_sec_identity_write</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Provision a new identity credential or update an existing one. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If used when the LTE link is active, the function will return an error and the key will not be written.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Security tag for this credential. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer containing the credential data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EINVAL</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal buffer is too small. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOMEM</parametername>
</parameternamelist>
<parameterdescription>
<para>Not enough memory to store the credential. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed because the LTE link is active. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>The security tag could not be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient permissions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EIO</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="754" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="754" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__lwm2m__carrier__os_ga1ba78acba3f58c009dffe5219fa56a87_1ga1ba78acba3f58c009dffe5219fa56a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lwm2m_os_sec_identity_delete</definition>
        <argsstring>(uint32_t sec_tag)</argsstring>
        <name>lwm2m_os_sec_identity_delete</name>
        <param>
          <type>uint32_t</type>
          <declname>sec_tag</declname>
        </param>
        <briefdescription>
<para>Delete identity credential. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If used when the LTE link is active, the function will return an error and the key will not be deleted.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Security tag for this credential.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>On success. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOBUFS</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal buffer is too small. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EACCES</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed because the LTE link is active. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ENOENT</parametername>
</parameternamelist>
<parameterdescription>
<para>No credential associated with the given <computeroutput>sec_tag</computeroutput> and <computeroutput>cred_type</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPERM</parametername>
</parameternamelist>
<parameterdescription>
<para>Insufficient permissions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h" line="771" column="5" declfile="lib/bin/lwm2m_carrier/include/lwm2m_os.h" declline="771" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nordic<sp/>Semiconductor<sp/>ASA</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>LicenseRef-Nordic-5-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LWM2M_OS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="group__lwm2m__carrier__os_ga7389b4034b228f264fbb166e5d976bc3_1ga7389b4034b228f264fbb166e5d976bc3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_MAX_WORK_QS<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__lwm2m__carrier__os_ga31a183e2f8a60106bea52d3a7ce8d019_1ga31a183e2f8a60106bea52d3a7ce8d019" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_MAX_TIMER_COUNT<sp/>(6<sp/>+<sp/>(LWM2M_OS_MAX_WORK_QS<sp/>*<sp/>2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__lwm2m__carrier__os_gabe7b85446831f46d780ec985e35ebdf0_1gabe7b85446831f46d780ec985e35ebdf0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gabe7b85446831f46d780ec985e35ebdf0_1gabe7b85446831f46d780ec985e35ebdf0" kindref="member">lwm2m_os_work_q_t</ref>;</highlight></codeline>
<codeline lineno="31" refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__lwm2m__carrier__os_gad02f59f74cf392d91b77c764d797e9f2_1gad02f59f74cf392d91b77c764d797e9f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_MAX_SEM_COUNT<sp/>(5<sp/>+<sp/>(LWM2M_OS_MAX_WORK_QS<sp/>*<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>semaphore<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__lwm2m__carrier__os_gacde9ce1a500647cbcf3f71799711c24c_1gacde9ce1a500647cbcf3f71799711c24c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_LOG_LEVEL_NONE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__lwm2m__carrier__os_gaa132e2789d1cf2eb95dc02b73e08fe0c_1gaa132e2789d1cf2eb95dc02b73e08fe0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_LOG_LEVEL_ERR<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__lwm2m__carrier__os_ga6b4bdbeaa2171cdcbe99f641f2fc14ff_1ga6b4bdbeaa2171cdcbe99f641f2fc14ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_LOG_LEVEL_WRN<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="group__lwm2m__carrier__os_ga4bf7f713c55ead85f5180c960525e7fa_1ga4bf7f713c55ead85f5180c960525e7fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_LOG_LEVEL_INF<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="group__lwm2m__carrier__os_ga46429a9436c26a8c16eeedb7561068d6_1ga46429a9436c26a8c16eeedb7561068d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_LOG_LEVEL_TRC<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__lwm2m__carrier__os_ga15a565289566c52a173855b882718921_1ga15a565289566c52a173855b882718921" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_LTE_MODE_NONE<sp/><sp/><sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__lwm2m__carrier__os_ga844dee1fd1d1de347853a361c4cbfc5d_1ga844dee1fd1d1de347853a361c4cbfc5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_LTE_MODE_CAT_M1<sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__lwm2m__carrier__os_gaf7c30e87088c8dad05406f38feb6d376_1gaf7c30e87088c8dad05406f38feb6d376" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_LTE_MODE_CAT_NB1<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__lwm2m__carrier__os_ga90475cdcc2d05117c7cd61cd5bd46087_1ga90475cdcc2d05117c7cd61cd5bd46087" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_STORAGE_BASE<sp/>0xCA00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__lwm2m__carrier__os_gae023ade9b167e4cb1a930d782de1aea5_1gae023ade9b167e4cb1a930d782de1aea5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_STORAGE_END<sp/><sp/>0xCAFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group__lwm2m__carrier__os_ga074927311da051b50fe70ff4ddacc031_1ga074927311da051b50fe70ff4ddacc031" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_ga074927311da051b50fe70ff4ddacc031_1ga074927311da051b50fe70ff4ddacc031" kindref="member">lwm2m_os_timer_handler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*timer);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structlwm2m__os__sms__deliver__address" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__deliver__address" kindref="compound">lwm2m_os_sms_deliver_address</ref><sp/>{</highlight></codeline>
<codeline lineno="67" refid="structlwm2m__os__sms__deliver__address_a279861aa1f8e9ef8bcbcc6ca38246b9d_1a279861aa1f8e9ef8bcbcc6ca38246b9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*<ref refid="structlwm2m__os__sms__deliver__address_a279861aa1f8e9ef8bcbcc6ca38246b9d_1a279861aa1f8e9ef8bcbcc6ca38246b9d" kindref="member">address_str</ref>;</highlight></codeline>
<codeline lineno="68" refid="structlwm2m__os__sms__deliver__address_a6bef89d88fe5b9b49c5c3fef6dd41875_1a6bef89d88fe5b9b49c5c3fef6dd41875" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structlwm2m__os__sms__deliver__address_a6bef89d88fe5b9b49c5c3fef6dd41875_1a6bef89d88fe5b9b49c5c3fef6dd41875" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structlwm2m__os__sms__udh__app__port" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__udh__app__port" kindref="compound">lwm2m_os_sms_udh_app_port</ref><sp/>{</highlight></codeline>
<codeline lineno="72" refid="structlwm2m__os__sms__udh__app__port_a2aa1f94dc0999a842b81ed7543e19155_1a2aa1f94dc0999a842b81ed7543e19155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__sms__udh__app__port_a2aa1f94dc0999a842b81ed7543e19155_1a2aa1f94dc0999a842b81ed7543e19155" kindref="member">present</ref>;</highlight></codeline>
<codeline lineno="73" refid="structlwm2m__os__sms__udh__app__port_a36bb43a42e6d2c58b0c1d650e4e3bd0a_1a36bb43a42e6d2c58b0c1d650e4e3bd0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlwm2m__os__sms__udh__app__port_a36bb43a42e6d2c58b0c1d650e4e3bd0a_1a36bb43a42e6d2c58b0c1d650e4e3bd0a" kindref="member">dest_port</ref>;</highlight></codeline>
<codeline lineno="74" refid="structlwm2m__os__sms__udh__app__port_a2af1aa629735db20e73a393304528bd1_1a2af1aa629735db20e73a393304528bd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structlwm2m__os__sms__udh__app__port_a2af1aa629735db20e73a393304528bd1_1a2af1aa629735db20e73a393304528bd1" kindref="member">src_port</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structlwm2m__os__sms__deliver__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__deliver__header" kindref="compound">lwm2m_os_sms_deliver_header</ref><sp/>{</highlight></codeline>
<codeline lineno="78" refid="structlwm2m__os__sms__deliver__header_a71c74673d08d593d85f020801db6ee04_1a71c74673d08d593d85f020801db6ee04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__deliver__address" kindref="compound">lwm2m_os_sms_deliver_address</ref><sp/><ref refid="structlwm2m__os__sms__deliver__header_a71c74673d08d593d85f020801db6ee04_1a71c74673d08d593d85f020801db6ee04" kindref="member">originating_address</ref>;</highlight></codeline>
<codeline lineno="79" refid="structlwm2m__os__sms__deliver__header_a887ad4c4f89934f3a18f89485faaef3a_1a887ad4c4f89934f3a18f89485faaef3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__udh__app__port" kindref="compound">lwm2m_os_sms_udh_app_port</ref><sp/><sp/><sp/><sp/><ref refid="structlwm2m__os__sms__deliver__header_a887ad4c4f89934f3a18f89485faaef3a_1a887ad4c4f89934f3a18f89485faaef3a" kindref="member">app_port</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="unionlwm2m__os__sms__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlwm2m__os__sms__header" kindref="compound">lwm2m_os_sms_header</ref><sp/>{</highlight></codeline>
<codeline lineno="83" refid="unionlwm2m__os__sms__header_a844be90bfe04efe1b01c1d4dd2584fd6_1a844be90bfe04efe1b01c1d4dd2584fd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__deliver__header" kindref="compound">lwm2m_os_sms_deliver_header</ref><sp/><ref refid="unionlwm2m__os__sms__header_a844be90bfe04efe1b01c1d4dd2584fd6_1a844be90bfe04efe1b01c1d4dd2584fd6" kindref="member">deliver</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structlwm2m__os__sms__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__data" kindref="compound">lwm2m_os_sms_data</ref><sp/>{</highlight></codeline>
<codeline lineno="89" refid="structlwm2m__os__sms__data_a4c4fccaa8324a9e698b31af993e9b174_1a4c4fccaa8324a9e698b31af993e9b174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionlwm2m__os__sms__header" kindref="compound">lwm2m_os_sms_header</ref><sp/><ref refid="structlwm2m__os__sms__data_a4c4fccaa8324a9e698b31af993e9b174_1a4c4fccaa8324a9e698b31af993e9b174" kindref="member">header</ref>;</highlight></codeline>
<codeline lineno="91" refid="structlwm2m__os__sms__data_aae87de711b13be175ec1152f46ab3d26_1aae87de711b13be175ec1152f46ab3d26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__sms__data_aae87de711b13be175ec1152f46ab3d26_1aae87de711b13be175ec1152f46ab3d26" kindref="member">payload_len</ref>;</highlight></codeline>
<codeline lineno="93" refid="structlwm2m__os__sms__data_ac7d4f4c566c7b84e89a1ca84ddf9b9d8_1ac7d4f4c566c7b84e89a1ca84ddf9b9d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__sms__data_ac7d4f4c566c7b84e89a1ca84ddf9b9d8_1ac7d4f4c566c7b84e89a1ca84ddf9b9d8" kindref="member">payload</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" kindref="member">lwm2m_os_sms_callback_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__sms__data" kindref="compound">lwm2m_os_sms_data</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="structlwm2m__os__at__param__list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>{</highlight></codeline>
<codeline lineno="105" refid="structlwm2m__os__at__param__list_a3c8f593c32a728ea067efa7268d97162_1a3c8f593c32a728ea067efa7268d97162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list_a3c8f593c32a728ea067efa7268d97162_1a3c8f593c32a728ea067efa7268d97162" kindref="member">param_count</ref>;</highlight></codeline>
<codeline lineno="106" refid="structlwm2m__os__at__param__list_a91212d9442f60116a749047b1833580f_1a91212d9442f60116a749047b1833580f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__at__param__list_a91212d9442f60116a749047b1833580f_1a91212d9442f60116a749047b1833580f" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="group__lwm2m__carrier__os_ga3dd8952d70841ee0697c3634be038600_1ga3dd8952d70841ee0697c3634be038600" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_ga3dd8952d70841ee0697c3634be038600_1ga3dd8952d70841ee0697c3634be038600" kindref="member">lwm2m_os_at_cmd_handler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*response);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="group__lwm2m__os__download__evt__id_gad1e334a9ae446b40801f07444357140b_1gad1e334a9ae446b40801f07444357140b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_DOWNLOAD_EVT_FRAGMENT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__lwm2m__os__download__evt__id_ga3453d087b5fed79fabb5a1332cfa1087_1ga3453d087b5fed79fabb5a1332cfa1087" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_DOWNLOAD_EVT_ERROR<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="group__lwm2m__os__download__evt__id_gac0fd78b88e3d0f3dd23bec9b118121bc_1gac0fd78b88e3d0f3dd23bec9b118121bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_OS_DOWNLOAD_EVT_DONE<sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structlwm2m__os__download__evt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__download__evt" kindref="compound">lwm2m_os_download_evt</ref><sp/>{</highlight></codeline>
<codeline lineno="128" refid="structlwm2m__os__download__evt_a032f8fafadeb31835e4a4eec588b1fae_1a032f8fafadeb31835e4a4eec588b1fae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_a032f8fafadeb31835e4a4eec588b1fae_1a032f8fafadeb31835e4a4eec588b1fae" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131" refid="structlwm2m__os__download__evt_a5f594f7c733a3e1a34af6cd46d254f1e_1a5f594f7c733a3e1a34af6cd46d254f1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_a5f594f7c733a3e1a34af6cd46d254f1e_1a5f594f7c733a3e1a34af6cd46d254f1e" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lwm2m_os_fragment<sp/>{</highlight></codeline>
<codeline lineno="134" refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="135" refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="136" refid="structlwm2m__os__download__evt_a95fbae7ceaa41f39c847c9c04647ccdb_1a95fbae7ceaa41f39c847c9c04647ccdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structlwm2m__os__download__evt_a95fbae7ceaa41f39c847c9c04647ccdb_1a95fbae7ceaa41f39c847c9c04647ccdb" kindref="member">fragment</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="structlwm2m__os__download__cfg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__download__cfg" kindref="compound">lwm2m_os_download_cfg</ref><sp/>{</highlight></codeline>
<codeline lineno="144" refid="structlwm2m__os__download__cfg_a755ea9bd366e3d771db8e66b584ac903_1a755ea9bd366e3d771db8e66b584ac903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__cfg_a755ea9bd366e3d771db8e66b584ac903_1a755ea9bd366e3d771db8e66b584ac903" kindref="member">sec_tag</ref>;</highlight></codeline>
<codeline lineno="145" refid="structlwm2m__os__download__cfg_a58b79183b959dcb7e0d6e175c4f7dab7_1a58b79183b959dcb7e0d6e175c4f7dab7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__cfg_a58b79183b959dcb7e0d6e175c4f7dab7_1a58b79183b959dcb7e0d6e175c4f7dab7" kindref="member">port</ref>;</highlight></codeline>
<codeline lineno="146" refid="structlwm2m__os__download__cfg_aa50e8dd59547dc8baff44b7265431f97_1aa50e8dd59547dc8baff44b7265431f97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__cfg_aa50e8dd59547dc8baff44b7265431f97_1aa50e8dd59547dc8baff44b7265431f97" kindref="member">pdn_id</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" kindref="member">lwm2m_os_download_callback_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlwm2m__os__download__evt" kindref="compound">lwm2m_os_download_evt</ref><sp/>*event);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" kindref="member">lwm2m_os_pdn_fam</ref><sp/>{</highlight></codeline>
<codeline lineno="156" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa0d07e7eab5baf6ef1378fdcc787e257f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faa0d07e7eab5baf6ef1378fdcc787e257f" kindref="member">LWM2M_OS_PDN_FAM_IPV4</ref>,</highlight></codeline>
<codeline lineno="157" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaf285a6a5eb147b63976d72f4c9f4cf98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaf285a6a5eb147b63976d72f4c9f4cf98" kindref="member">LWM2M_OS_PDN_FAM_IPV6</ref>,</highlight></codeline>
<codeline lineno="158" refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaaa0a70b2dc99c228601e7a20ca039104" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1ggac986a3c2f649da6d6fa7957b25e9c6faaaa0a70b2dc99c228601e7a20ca039104" kindref="member">LWM2M_OS_PDN_FAM_IPV4V6</ref>,</highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1gaa1a59d5aab1c9892a25f9dfd6360aa32" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1gaa1a59d5aab1c9892a25f9dfd6360aa32" kindref="member">lwm2m_os_pdn_event</ref><sp/>{</highlight></codeline>
<codeline lineno="163" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32acfa57da1a182d3ad767a2b9be897579c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32acfa57da1a182d3ad767a2b9be897579c" kindref="member">LWM2M_OS_PDN_EVENT_CNEC_ESM</ref>,</highlight></codeline>
<codeline lineno="164" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a2358a25b7707c57561c03061adb64e4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a2358a25b7707c57561c03061adb64e4b" kindref="member">LWM2M_OS_PDN_EVENT_ACTIVATED</ref>,</highlight></codeline>
<codeline lineno="165" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32ac3e730b1491c4b9044a28e5dd125b06c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32ac3e730b1491c4b9044a28e5dd125b06c" kindref="member">LWM2M_OS_PDN_EVENT_DEACTIVATED</ref>,</highlight></codeline>
<codeline lineno="166" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a69d2cb69cbcf6b887e6c757cb4b5dde3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a69d2cb69cbcf6b887e6c757cb4b5dde3" kindref="member">LWM2M_OS_PDN_EVENT_IPV6_UP</ref>,</highlight></codeline>
<codeline lineno="167" refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a34d98721d72ce73472ffb686669a7e0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1ggaa1a59d5aab1c9892a25f9dfd6360aa32a34d98721d72ce73472ffb686669a7e0f" kindref="member">LWM2M_OS_PDN_EVENT_IPV6_DOWN</ref>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t<sp/>cid,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaa1a59d5aab1c9892a25f9dfd6360aa32_1gaa1a59d5aab1c9892a25f9dfd6360aa32" kindref="member">lwm2m_os_pdn_event</ref><sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reason);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="group__lwm2m__carrier__os_ga0f2f4aa9c3fdb4388be60ef0b146b8ab_1ga0f2f4aa9c3fdb4388be60ef0b146b8ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga0f2f4aa9c3fdb4388be60ef0b146b8ab_1ga0f2f4aa9c3fdb4388be60ef0b146b8ab" kindref="member">lwm2m_os_pdn_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="group__lwm2m__carrier__os_ga727acaf4307ab3637a95a214efb842f1_1ga727acaf4307ab3637a95a214efb842f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga727acaf4307ab3637a95a214efb842f1_1ga727acaf4307ab3637a95a214efb842f1" kindref="member">lwm2m_os_pdn_ctx_create</ref>(uint8_t<sp/>*cid,<sp/><ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="group__lwm2m__carrier__os_ga686f7f4ff871b42ac0007044c7939d63_1ga686f7f4ff871b42ac0007044c7939d63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga686f7f4ff871b42ac0007044c7939d63_1ga686f7f4ff871b42ac0007044c7939d63" kindref="member">lwm2m_os_pdn_ctx_configure</ref>(uint8_t<sp/>cid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*apn,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac986a3c2f649da6d6fa7957b25e9c6fa_1gac986a3c2f649da6d6fa7957b25e9c6fa" kindref="member">lwm2m_os_pdn_fam</ref><sp/>family);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="group__lwm2m__carrier__os_gac60560d18f8975330293c6b7241464ad_1gac60560d18f8975330293c6b7241464ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac60560d18f8975330293c6b7241464ad_1gac60560d18f8975330293c6b7241464ad" kindref="member">lwm2m_os_pdn_ctx_destroy</ref>(uint8_t<sp/>cid);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="group__lwm2m__carrier__os_gaceff3198bc1643a3a7ea5b7dbc878f3c_1gaceff3198bc1643a3a7ea5b7dbc878f3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaceff3198bc1643a3a7ea5b7dbc878f3c_1gaceff3198bc1643a3a7ea5b7dbc878f3c" kindref="member">lwm2m_os_pdn_activate</ref>(uint8_t<sp/>cid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*esm);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="group__lwm2m__carrier__os_gac01c58f563f7e0ccb1902f8a263134e5_1gac01c58f563f7e0ccb1902f8a263134e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac01c58f563f7e0ccb1902f8a263134e5_1gac01c58f563f7e0ccb1902f8a263134e5" kindref="member">lwm2m_os_pdn_deactivate</ref>(uint8_t<sp/>cid);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="group__lwm2m__carrier__os_gaf0d7b4623494f5a22101e52037ce7d7b_1gaf0d7b4623494f5a22101e52037ce7d7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaf0d7b4623494f5a22101e52037ce7d7b_1gaf0d7b4623494f5a22101e52037ce7d7b" kindref="member">lwm2m_os_pdn_id_get</ref>(uint8_t<sp/>cid);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="group__lwm2m__carrier__os_gac89d2526a261b508e3e0ef0152e43659_1gac89d2526a261b508e3e0ef0152e43659" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac89d2526a261b508e3e0ef0152e43659_1gac89d2526a261b508e3e0ef0152e43659" kindref="member">lwm2m_os_pdn_default_apn_get</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="group__lwm2m__carrier__os_ga69f2391d56917bfa77c24db5f918f75e_1ga69f2391d56917bfa77c24db5f918f75e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga69f2391d56917bfa77c24db5f918f75e_1ga69f2391d56917bfa77c24db5f918f75e" kindref="member">lwm2m_os_pdn_default_callback_set</ref>(<ref refid="group__lwm2m__carrier__os_ga99a53c787508857c350f68f4389ddd0d_1ga99a53c787508857c350f68f4389ddd0d" kindref="member">lwm2m_os_pdn_event_handler_t</ref><sp/>cb);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="group__lwm2m__carrier__os_gaadaa431d494e9938a5c3bbf3d10f4097_1gaadaa431d494e9938a5c3bbf3d10f4097" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaadaa431d494e9938a5c3bbf3d10f4097_1gaadaa431d494e9938a5c3bbf3d10f4097" kindref="member">lwm2m_os_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="group__lwm2m__carrier__os_gab3cfa36dd7fff32515a48d737b188c66_1gab3cfa36dd7fff32515a48d737b188c66" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__lwm2m__carrier__os_gab3cfa36dd7fff32515a48d737b188c66_1gab3cfa36dd7fff32515a48d737b188c66" kindref="member">lwm2m_os_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="group__lwm2m__carrier__os_ga7308d0779b48057eb3bfe5fd2eada78a_1ga7308d0779b48057eb3bfe5fd2eada78a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga7308d0779b48057eb3bfe5fd2eada78a_1ga7308d0779b48057eb3bfe5fd2eada78a" kindref="member">lwm2m_os_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="group__lwm2m__carrier__os_ga30a7b4196a0eebcaa6b5032898d9c5d5_1ga30a7b4196a0eebcaa6b5032898d9c5d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga30a7b4196a0eebcaa6b5032898d9c5d5_1ga30a7b4196a0eebcaa6b5032898d9c5d5" kindref="member">lwm2m_os_sem_init</ref>(<ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref><sp/>**sem,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_count,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="group__lwm2m__carrier__os_gad81ab2634ac6a54de6e3bf5f8a297e14_1gad81ab2634ac6a54de6e3bf5f8a297e14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gad81ab2634ac6a54de6e3bf5f8a297e14_1gad81ab2634ac6a54de6e3bf5f8a297e14" kindref="member">lwm2m_os_sem_take</ref>(<ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref><sp/>*sem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="group__lwm2m__carrier__os_gaac5341cc4e34dbf6b81eb7fd429b382c_1gaac5341cc4e34dbf6b81eb7fd429b382c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaac5341cc4e34dbf6b81eb7fd429b382c_1gaac5341cc4e34dbf6b81eb7fd429b382c" kindref="member">lwm2m_os_sem_give</ref>(<ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref><sp/>*sem);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="group__lwm2m__carrier__os_gaf466af20f186ed4fcab0c639c5ee01b8_1gaf466af20f186ed4fcab0c639c5ee01b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaf466af20f186ed4fcab0c639c5ee01b8_1gaf466af20f186ed4fcab0c639c5ee01b8" kindref="member">lwm2m_os_sem_reset</ref>(<ref refid="group__lwm2m__carrier__os_gaa41a53c5b36bf0de6ea731b3567df85d_1gaa41a53c5b36bf0de6ea731b3567df85d" kindref="member">lwm2m_os_sem_t</ref><sp/>*sem);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="group__lwm2m__carrier__os_ga5ffbdc3890a73d9c846d656458f95dbe_1ga5ffbdc3890a73d9c846d656458f95dbe" refkind="member"><highlight class="normal">int64_t<sp/><ref refid="group__lwm2m__carrier__os_ga5ffbdc3890a73d9c846d656458f95dbe_1ga5ffbdc3890a73d9c846d656458f95dbe" kindref="member">lwm2m_os_uptime_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="group__lwm2m__carrier__os_gad855aae63628a3ac50824f6f6da5b7dc_1gad855aae63628a3ac50824f6f6da5b7dc" refkind="member"><highlight class="normal">int64_t<sp/><ref refid="group__lwm2m__carrier__os_gad855aae63628a3ac50824f6f6da5b7dc_1gad855aae63628a3ac50824f6f6da5b7dc" kindref="member">lwm2m_os_uptime_delta</ref>(int64_t<sp/>*ref);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="group__lwm2m__carrier__os_ga9d4e75826fd7441b2169e945b6ea5739_1ga9d4e75826fd7441b2169e945b6ea5739" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga9d4e75826fd7441b2169e945b6ea5739_1ga9d4e75826fd7441b2169e945b6ea5739" kindref="member">lwm2m_os_sleep</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group__lwm2m__carrier__os_gadb5f36e8344e38e144f4ff25468ed5cc_1gadb5f36e8344e38e144f4ff25468ed5cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gadb5f36e8344e38e144f4ff25468ed5cc_1gadb5f36e8344e38e144f4ff25468ed5cc" kindref="member">lwm2m_os_sys_reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="group__lwm2m__carrier__os_ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f_1ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__lwm2m__carrier__os_ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f_1ga9c3bcabdfd99a6cb1f94c0ef4bf9e01f" kindref="member">lwm2m_os_rand_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group__lwm2m__carrier__os_ga32b1d5419650b26a0e2cd6b1a82d33e2_1ga32b1d5419650b26a0e2cd6b1a82d33e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga32b1d5419650b26a0e2cd6b1a82d33e2_1ga32b1d5419650b26a0e2cd6b1a82d33e2" kindref="member">lwm2m_os_storage_delete</ref>(uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__lwm2m__carrier__os_ga5bf845be59bbab85be2a8ffcfc38398f_1ga5bf845be59bbab85be2a8ffcfc38398f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga5bf845be59bbab85be2a8ffcfc38398f_1ga5bf845be59bbab85be2a8ffcfc38398f" kindref="member">lwm2m_os_storage_read</ref>(uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="group__lwm2m__carrier__os_gab5e1e5d30c6797a0c08f54c0eecbaa45_1gab5e1e5d30c6797a0c08f54c0eecbaa45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gab5e1e5d30c6797a0c08f54c0eecbaa45_1gab5e1e5d30c6797a0c08f54c0eecbaa45" kindref="member">lwm2m_os_storage_write</ref>(uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="group__lwm2m__carrier__os_gac6f17eace64830f44c730b84bfe3b3db_1gac6f17eace64830f44c730b84bfe3b3db" refkind="member"><highlight class="normal"><ref refid="group__lwm2m__carrier__os_gabe7b85446831f46d780ec985e35ebdf0_1gabe7b85446831f46d780ec985e35ebdf0" kindref="member">lwm2m_os_work_q_t</ref><sp/>*<ref refid="group__lwm2m__carrier__os_gac6f17eace64830f44c730b84bfe3b3db_1gac6f17eace64830f44c730b84bfe3b3db" kindref="member">lwm2m_os_work_q_start</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="group__lwm2m__carrier__os_ga3ae8a92a6bd9bd2b0c8a021248c09c5b_1ga3ae8a92a6bd9bd2b0c8a021248c09c5b" refkind="member"><highlight class="normal"><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref><sp/>*<ref refid="group__lwm2m__carrier__os_ga3ae8a92a6bd9bd2b0c8a021248c09c5b_1ga3ae8a92a6bd9bd2b0c8a021248c09c5b" kindref="member">lwm2m_os_timer_get</ref>(<ref refid="group__lwm2m__carrier__os_ga074927311da051b50fe70ff4ddacc031_1ga074927311da051b50fe70ff4ddacc031" kindref="member">lwm2m_os_timer_handler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="group__lwm2m__carrier__os_gaebb3870782152d5ecf4a776f8217cea6_1gaebb3870782152d5ecf4a776f8217cea6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaebb3870782152d5ecf4a776f8217cea6_1gaebb3870782152d5ecf4a776f8217cea6" kindref="member">lwm2m_os_timer_release</ref>(<ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="group__lwm2m__carrier__os_ga14d946bffca00b7a17e3935876feaff1_1ga14d946bffca00b7a17e3935876feaff1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga14d946bffca00b7a17e3935876feaff1_1ga14d946bffca00b7a17e3935876feaff1" kindref="member">lwm2m_os_timer_start</ref>(<ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer,<sp/>int64_t<sp/>timeout);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="group__lwm2m__carrier__os_gac6a4603c6703529f21f675efa4b242a6_1gac6a4603c6703529f21f675efa4b242a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac6a4603c6703529f21f675efa4b242a6_1gac6a4603c6703529f21f675efa4b242a6" kindref="member">lwm2m_os_timer_start_on_q</ref>(<ref refid="group__lwm2m__carrier__os_gabe7b85446831f46d780ec985e35ebdf0_1gabe7b85446831f46d780ec985e35ebdf0" kindref="member">lwm2m_os_work_q_t</ref><sp/>*work_q,<sp/><ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer,<sp/>int64_t<sp/>msec);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="group__lwm2m__carrier__os_ga1fc14c403bf83413825e9af4e6e54ffb_1ga1fc14c403bf83413825e9af4e6e54ffb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga1fc14c403bf83413825e9af4e6e54ffb_1ga1fc14c403bf83413825e9af4e6e54ffb" kindref="member">lwm2m_os_timer_cancel</ref>(<ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="group__lwm2m__carrier__os_ga98d632b2afe800efae8ab688b2d417df_1ga98d632b2afe800efae8ab688b2d417df" refkind="member"><highlight class="normal">int64_t<sp/><ref refid="group__lwm2m__carrier__os_ga98d632b2afe800efae8ab688b2d417df_1ga98d632b2afe800efae8ab688b2d417df" kindref="member">lwm2m_os_timer_remaining</ref>(<ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="group__lwm2m__carrier__os_ga3dd682a5e0c05a651b02c1d03df9999e_1ga3dd682a5e0c05a651b02c1d03df9999e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga3dd682a5e0c05a651b02c1d03df9999e_1ga3dd682a5e0c05a651b02c1d03df9999e" kindref="member">lwm2m_os_timer_is_pending</ref>(<ref refid="group__lwm2m__carrier__os_ga00fdad1408f6b9f97d83c8022119f07c_1ga00fdad1408f6b9f97d83c8022119f07c" kindref="member">lwm2m_os_timer_t</ref><sp/>*timer);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="group__lwm2m__carrier__os_ga3924eb7ce3754751b48bdb23a1af0cdf_1ga3924eb7ce3754751b48bdb23a1af0cdf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__lwm2m__carrier__os_ga3924eb7ce3754751b48bdb23a1af0cdf_1ga3924eb7ce3754751b48bdb23a1af0cdf" kindref="member">lwm2m_os_log_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="group__lwm2m__carrier__os_gab12cb98999e7cef89bc794e321a3ef2b_1gab12cb98999e7cef89bc794e321a3ef2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gab12cb98999e7cef89bc794e321a3ef2b_1gab12cb98999e7cef89bc794e321a3ef2b" kindref="member">lwm2m_os_log</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="group__lwm2m__carrier__os_ga35afa4ffc3ce3712b1d8612446a9dcda_1ga35afa4ffc3ce3712b1d8612446a9dcda" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga35afa4ffc3ce3712b1d8612446a9dcda_1ga35afa4ffc3ce3712b1d8612446a9dcda" kindref="member">lwm2m_os_logdump</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="group__lwm2m__carrier__os_ga906559bd52924b1f2177af3d7d5b026b_1ga906559bd52924b1f2177af3d7d5b026b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga906559bd52924b1f2177af3d7d5b026b_1ga906559bd52924b1f2177af3d7d5b026b" kindref="member">lwm2m_os_nrf_modem_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="group__lwm2m__carrier__os_gac6768293489ec0693d40bf8d637b36e0_1gac6768293489ec0693d40bf8d637b36e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac6768293489ec0693d40bf8d637b36e0_1gac6768293489ec0693d40bf8d637b36e0" kindref="member">lwm2m_os_nrf_modem_shutdown</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="group__lwm2m__carrier__os_gafac39f1866a7db73a93417c186a8c40f_1gafac39f1866a7db73a93417c186a8c40f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gafac39f1866a7db73a93417c186a8c40f_1gafac39f1866a7db73a93417c186a8c40f" kindref="member">lwm2m_os_at_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="group__lwm2m__carrier__os_gac0d0d6912eada8c225a0060dafcf7994_1gac0d0d6912eada8c225a0060dafcf7994" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac0d0d6912eada8c225a0060dafcf7994_1gac0d0d6912eada8c225a0060dafcf7994" kindref="member">lwm2m_os_sms_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="group__lwm2m__carrier__os_ga43078a697410d31d4fe0371cf0407409_1ga43078a697410d31d4fe0371cf0407409" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga43078a697410d31d4fe0371cf0407409_1ga43078a697410d31d4fe0371cf0407409" kindref="member">lwm2m_os_sms_uninit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="group__lwm2m__carrier__os_ga952e7c057316b59852bcf01e57f7a887_1ga952e7c057316b59852bcf01e57f7a887" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga952e7c057316b59852bcf01e57f7a887_1ga952e7c057316b59852bcf01e57f7a887" kindref="member">lwm2m_os_at_notif_register_handler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context,<sp/><ref refid="group__lwm2m__carrier__os_ga3dd8952d70841ee0697c3634be038600_1ga3dd8952d70841ee0697c3634be038600" kindref="member">lwm2m_os_at_cmd_handler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="group__lwm2m__carrier__os_ga8a1122d7d84ca6157f6d38edaa6a8c09_1ga8a1122d7d84ca6157f6d38edaa6a8c09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga8a1122d7d84ca6157f6d38edaa6a8c09_1ga8a1122d7d84ca6157f6d38edaa6a8c09" kindref="member">lwm2m_os_sms_client_register</ref>(<ref refid="group__lwm2m__carrier__os_gaf5885fbccdadee37616a4df782bcb3a4_1gaf5885fbccdadee37616a4df782bcb3a4" kindref="member">lwm2m_os_sms_callback_t</ref><sp/>lib_callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*context);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="group__lwm2m__carrier__os_ga40da2a9673ad233ca00f6a76bbb5697f_1ga40da2a9673ad233ca00f6a76bbb5697f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga40da2a9673ad233ca00f6a76bbb5697f_1ga40da2a9673ad233ca00f6a76bbb5697f" kindref="member">lwm2m_os_sms_client_deregister</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>handle);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="group__lwm2m__carrier__os_ga4176b761e2f2912246d504e766370e10_1ga4176b761e2f2912246d504e766370e10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga4176b761e2f2912246d504e766370e10_1ga4176b761e2f2912246d504e766370e10" kindref="member">lwm2m_os_at_cmd_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_len);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="group__lwm2m__carrier__os_ga96c92176a6db83a5cad096fd95e2e437_1ga96c92176a6db83a5cad096fd95e2e437" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga96c92176a6db83a5cad096fd95e2e437_1ga96c92176a6db83a5cad096fd95e2e437" kindref="member">lwm2m_os_at_params_list_free</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>*list);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="group__lwm2m__carrier__os_gada436069545511303ba19fcac9191fb4_1gada436069545511303ba19fcac9191fb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gada436069545511303ba19fcac9191fb4_1gada436069545511303ba19fcac9191fb4" kindref="member">lwm2m_os_at_params_list_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>*list,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_params_count);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="group__lwm2m__carrier__os_gaacd9dacc35990fa29f5b07789b9a17dc_1gaacd9dacc35990fa29f5b07789b9a17dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaacd9dacc35990fa29f5b07789b9a17dc_1gaacd9dacc35990fa29f5b07789b9a17dc" kindref="member">lwm2m_os_at_params_int_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>*list,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/>uint32_t<sp/>*value);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="group__lwm2m__carrier__os_ga13f65fc273ed8f591a9eb89f2ceb994c_1ga13f65fc273ed8f591a9eb89f2ceb994c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga13f65fc273ed8f591a9eb89f2ceb994c_1ga13f65fc273ed8f591a9eb89f2ceb994c" kindref="member">lwm2m_os_at_params_short_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>*list,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*value);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="group__lwm2m__carrier__os_gab529c11290a723960dd0fd6548ae8eaf_1gab529c11290a723960dd0fd6548ae8eaf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gab529c11290a723960dd0fd6548ae8eaf_1gab529c11290a723960dd0fd6548ae8eaf" kindref="member">lwm2m_os_at_params_string_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>*list,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="group__lwm2m__carrier__os_ga494994d58a1d2b8a3d99632163dc4cac_1ga494994d58a1d2b8a3d99632163dc4cac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga494994d58a1d2b8a3d99632163dc4cac_1ga494994d58a1d2b8a3d99632163dc4cac" kindref="member">lwm2m_os_at_params_list_clear</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>*list);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="group__lwm2m__carrier__os_gaaf0307459da9289077aa8fc062f81b54_1gaaf0307459da9289077aa8fc062f81b54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaaf0307459da9289077aa8fc062f81b54_1gaaf0307459da9289077aa8fc062f81b54" kindref="member">lwm2m_os_at_parser_params_from_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*at_params_str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**next_param_str,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>list);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="group__lwm2m__carrier__os_gac8d15d8b64b360f0052e85a579148a69_1gac8d15d8b64b360f0052e85a579148a69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gac8d15d8b64b360f0052e85a579148a69_1gac8d15d8b64b360f0052e85a579148a69" kindref="member">lwm2m_os_at_params_valid_count_get</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__at__param__list" kindref="compound">lwm2m_os_at_param_list</ref><sp/>*list);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="group__lwm2m__carrier__os_gae67bd1e0df1eed86f87000a9fd8377cf_1gae67bd1e0df1eed86f87000a9fd8377cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gae67bd1e0df1eed86f87000a9fd8377cf_1gae67bd1e0df1eed86f87000a9fd8377cf" kindref="member">lwm2m_os_download_connect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__cfg" kindref="compound">lwm2m_os_download_cfg</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="group__lwm2m__carrier__os_ga1de48f82b7412fcc920b536534eaab12_1ga1de48f82b7412fcc920b536534eaab12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga1de48f82b7412fcc920b536534eaab12_1ga1de48f82b7412fcc920b536534eaab12" kindref="member">lwm2m_os_download_disconnect</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="group__lwm2m__carrier__os_gafed4f8a8736f9be9194806cd52b466fe_1gafed4f8a8736f9be9194806cd52b466fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gafed4f8a8736f9be9194806cd52b466fe_1gafed4f8a8736f9be9194806cd52b466fe" kindref="member">lwm2m_os_download_init</ref>(<ref refid="group__lwm2m__carrier__os_ga5a6d2a9d170df65e24c97b5ec12e9e02_1ga5a6d2a9d170df65e24c97b5ec12e9e02" kindref="member">lwm2m_os_download_callback_t</ref><sp/>lib_callback);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="group__lwm2m__carrier__os_ga63300ca5532c98e6f29a13a3669495c0_1ga63300ca5532c98e6f29a13a3669495c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga63300ca5532c98e6f29a13a3669495c0_1ga63300ca5532c98e6f29a13a3669495c0" kindref="member">lwm2m_os_download_start</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>from);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="group__lwm2m__carrier__os_ga1c1c2ad7a1eee14f446e4efd1ca715c0_1ga1c1c2ad7a1eee14f446e4efd1ca715c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga1c1c2ad7a1eee14f446e4efd1ca715c0_1ga1c1c2ad7a1eee14f446e4efd1ca715c0" kindref="member">lwm2m_os_download_file_size_get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*size);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Initialize<sp/>and<sp/>make<sp/>a<sp/>connection<sp/>with<sp/>the<sp/>modem.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="group__lwm2m__carrier__os_ga71fb702606ed2f3069db894bb7239c0b_1ga71fb702606ed2f3069db894bb7239c0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga71fb702606ed2f3069db894bb7239c0b_1ga71fb702606ed2f3069db894bb7239c0b" kindref="member">lwm2m_os_lte_link_up</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Set<sp/>the<sp/>modem<sp/>to<sp/>offline<sp/>mode.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="group__lwm2m__carrier__os_ga2401d1a3f739b4649cf0f16a492ca106_1ga2401d1a3f739b4649cf0f16a492ca106" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga2401d1a3f739b4649cf0f16a492ca106_1ga2401d1a3f739b4649cf0f16a492ca106" kindref="member">lwm2m_os_lte_link_down</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Set<sp/>the<sp/>modem<sp/>to<sp/>power<sp/>off<sp/>mode.</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="group__lwm2m__carrier__os_gacf8246350b2cca3e51abef034825755d_1gacf8246350b2cca3e51abef034825755d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gacf8246350b2cca3e51abef034825755d_1gacf8246350b2cca3e51abef034825755d" kindref="member">lwm2m_os_lte_power_down</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*<sp/>@brief<sp/>get<sp/>system<sp/>mode<sp/>from<sp/>modem.</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/>@retval<sp/>LWM2M_OS_LTE_MODE_NONE<sp/><sp/><sp/><sp/>Not<sp/>connected</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>@retval<sp/>LWM2M_OS_LTE_MODE_CAT_M1<sp/><sp/>Cat-M1<sp/>(LTE-FDD)</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>@retval<sp/>LWM2M_OS_LTE_MODE_CAT_NB1<sp/>Cat-NB1<sp/>(NB-IOT)</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="group__lwm2m__carrier__os_gae23db103dfbb04b1e6c52e2b59f4602b_1gae23db103dfbb04b1e6c52e2b59f4602b" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group__lwm2m__carrier__os_gae23db103dfbb04b1e6c52e2b59f4602b_1gae23db103dfbb04b1e6c52e2b59f4602b" kindref="member">lwm2m_os_lte_mode_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="group__lwm2m__carrier__os_ga593b0b0de3665c56edb1410efdd6c94f_1ga593b0b0de3665c56edb1410efdd6c94f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga593b0b0de3665c56edb1410efdd6c94f_1ga593b0b0de3665c56edb1410efdd6c94f" kindref="member">lwm2m_os_errno</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="group__lwm2m__carrier__os_ga50dee025136a315000aa04ae7122a1d6_1ga50dee025136a315000aa04ae7122a1d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__lwm2m__carrier__os_ga50dee025136a315000aa04ae7122a1d6_1ga50dee025136a315000aa04ae7122a1d6" kindref="member">lwm2m_os_strerror</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="group__lwm2m__carrier__os_ga932adbf5417a1b115aed09bedbc12f53_1ga932adbf5417a1b115aed09bedbc12f53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga932adbf5417a1b115aed09bedbc12f53_1ga932adbf5417a1b115aed09bedbc12f53" kindref="member">lwm2m_os_sec_ca_chain_exists</ref>(uint32_t<sp/>sec_tag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*exists,<sp/>uint8_t<sp/>*perm);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="group__lwm2m__carrier__os_ga338d878bec09ab144c8627a081fb6d95_1ga338d878bec09ab144c8627a081fb6d95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga338d878bec09ab144c8627a081fb6d95_1ga338d878bec09ab144c8627a081fb6d95" kindref="member">lwm2m_os_sec_ca_chain_cmp</ref>(uint32_t<sp/>sec_tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="group__lwm2m__carrier__os_ga682bf57f919f66116a93d1ed889349ac_1ga682bf57f919f66116a93d1ed889349ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga682bf57f919f66116a93d1ed889349ac_1ga682bf57f919f66116a93d1ed889349ac" kindref="member">lwm2m_os_sec_ca_chain_write</ref>(uint32_t<sp/>sec_tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="group__lwm2m__carrier__os_ga487bbb0c5addb99dac5732ec296828e8_1ga487bbb0c5addb99dac5732ec296828e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga487bbb0c5addb99dac5732ec296828e8_1ga487bbb0c5addb99dac5732ec296828e8" kindref="member">lwm2m_os_sec_psk_exists</ref>(uint32_t<sp/>sec_tag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*exists,<sp/>uint8_t<sp/>*perm_flags);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="group__lwm2m__carrier__os_gafa573db6b580de7782e68aa0e6400ae5_1gafa573db6b580de7782e68aa0e6400ae5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gafa573db6b580de7782e68aa0e6400ae5_1gafa573db6b580de7782e68aa0e6400ae5" kindref="member">lwm2m_os_sec_psk_write</ref>(uint32_t<sp/>sec_tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>,<sp/>uint16_t<sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="group__lwm2m__carrier__os_gaf1ae409a73b99d65890f6712149f63f4_1gaf1ae409a73b99d65890f6712149f63f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gaf1ae409a73b99d65890f6712149f63f4_1gaf1ae409a73b99d65890f6712149f63f4" kindref="member">lwm2m_os_sec_psk_delete</ref>(uint32_t<sp/>sec_tag);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="group__lwm2m__carrier__os_ga9b8f78375b66d035ddd4bd8c30f44f81_1ga9b8f78375b66d035ddd4bd8c30f44f81" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga9b8f78375b66d035ddd4bd8c30f44f81_1ga9b8f78375b66d035ddd4bd8c30f44f81" kindref="member">lwm2m_os_sec_identity_exists</ref>(uint32_t<sp/>sec_tag,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*exists,<sp/>uint8_t<sp/>*perm_flags);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="group__lwm2m__carrier__os_gafaabad2cf16a626ae12d82b1e1e3ca37_1gafaabad2cf16a626ae12d82b1e1e3ca37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_gafaabad2cf16a626ae12d82b1e1e3ca37_1gafaabad2cf16a626ae12d82b1e1e3ca37" kindref="member">lwm2m_os_sec_identity_write</ref>(uint32_t<sp/>sec_tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structlwm2m__os__download__evt_ac5bcc2b62e3a0dc1da83258186963d86_1ac5bcc2b62e3a0dc1da83258186963d86" kindref="member">buf</ref>,<sp/>uint16_t<sp/><ref refid="structlwm2m__os__download__evt_ac9df448fab0f448f0a517db5d48ffd58_1ac9df448fab0f448f0a517db5d48ffd58" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="group__lwm2m__carrier__os_ga1ba78acba3f58c009dffe5219fa56a87_1ga1ba78acba3f58c009dffe5219fa56a87" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lwm2m__carrier__os_ga1ba78acba3f58c009dffe5219fa56a87_1ga1ba78acba3f58c009dffe5219fa56a87" kindref="member">lwm2m_os_sec_identity_delete</ref>(uint32_t<sp/>sec_tag);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWM2M_OS_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="lib/bin/lwm2m_carrier/include/lwm2m_os.h"/>
  </compounddef>
</doxygen>
