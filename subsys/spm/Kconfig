#
# Copyright (c) 2019 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: LicenseRef-BSD-5-Clause-Nordic
#

menu "SPM"

config SPM
	bool "Use Secure Partition Manager"
	default y if TRUSTED_EXECUTION_NONSECURE
	imply ARM_FIRMWARE_USES_SECURE_ENTRY_FUNCS

if SPM
module=SPM
source "${ZEPHYR_BASE}/../nrf/subsys/partition_manager/Kconfig.template.build_strategy"
endif


menuconfig IS_SPM
	bool "Current app is SPM"
	default n
	select TRUSTED_EXECUTION_SECURE

if IS_SPM
# Define used by partition_manager.py to deduce size of partition.
# Unable to use the size template due to non-trivial defaults.
config PM_PARTITION_SIZE_SPM
	hex "Flash space reserved for SPM"
	default 0xc000 if SPM_SERVICE_RNG # To build correctly with MCUboot.
	default 0x8000
	help
	  Flash space set aside for the SPM. Note, the name
	  of this configuration needs to match the requirements set by the
	  script 'partition_manager.py'. See pm.yml.

menuconfig SPM_SECURE_SERVICES
	bool "Enable secure services"
	default y
	select ARM_FIRMWARE_HAS_SECURE_ENTRY_FUNCS
	help
	  Secure services can be invoked from the Non-Secure Firmware via
	  secure entry functions.

if SPM_SECURE_SERVICES
config SPM_SERVICE_REBOOT
	bool "Request a reboot"
	default y
	select REBOOT
	help
	  The Non-Secure Firmware is not allowed to reboot the chip. This
	  service allows it to request a reboot from the SPM.

config SPM_SERVICE_RNG
	bool "Request random numbers"
	default y
	select NORDIC_SECURITY_BACKEND
	select FLOAT
	help
	  The Non-Secure Firmware is not allowed to use the crypto hardware.
	  This service allows it to request random numbers from the SPM.
endif

config SPM_BOOT_SILENTLY
	bool "Boot silently"
	default n

config SPM_NRF_CLOCK_NS
	bool "Clock control is Non-Secure"
	default y

config SPM_NRF_RTC1_NS
	bool "RTC1 is Non-Secure"
	default y

config SPM_NRF_IPC_NS
	bool "IPC is Non-Secure"
	default y

config SPM_NRF_NVMC_NS
	bool "NVMC is Non-Secure"
	default y

config SPM_NRF_VMC_NS
	bool "VMC is Non-Secure"
	default y

config SPM_NRF_P0_NS
	bool "GPIO is Non-Secure"
	default y

config SPM_NRF_GPIOTE1_NS
	bool "GPIOTE1 IRQ available in Non-Secure domain"
	default y

config SPM_NRF_UARTE1_NS
	bool "UARTE1 is Non-Secure"
	default y

config SPM_NRF_UARTE2_NS
	bool "UARTE2 is Non-Secure"
	default n

config SPM_NRF_EGU1_NS
	bool "EGU1 is Non-Secure"
	default y

config SPM_NRF_EGU2_NS
	bool "EGU2 is Non-Secure"
	default y

config SPM_NRF_FPU_NS
	bool "FPU is Non-Secure"
	default y

config SPM_NRF_TWIM2_NS
	bool "TWIM2 is Non-Secure"
	default y

config SPM_NRF_SPIM3_NS
	bool "SPIM3 is Non-Secure"
	default y

config SPM_NRF_TIMER0_NS
	bool "TIMER0 is Non-Secure"
	default y

config SPM_NRF_TIMER1_NS
	bool "TIMER1 is Non-Secure"
	default y

config SPM_NRF_TIMER2_NS
	bool "TIMER2 is Non-Secure"
	default y

config SPM_NRF_SAADC_NS
	bool "SAADC is Non-Secure"
	default y

config SPM_NRF_PWM0_NS
	bool "PWM0 is Non-Secure"
	default y

config SPM_NRF_PWM1_NS
	bool "PWM1 is Non-Secure"
	default y

config SPM_NRF_PWM2_NS
	bool "PWM2 is Non-Secure"
	default y

config SPM_NRF_PWM3_NS
	bool "PWM3 is Non-Secure"
	default y

config SPM_NRF_REGULATORS_NS
	bool "Regulators is Non-Secure"
	default n

endif # IS_SPM

endmenu

if SPM || IS_SPM
# Set new default name for the veneers file. To avoid file name collisions if
# someone has multiple secure firmwares with secure entry functions.
config ARM_ENTRY_VENEERS_LIB_NAME
	string
	default "libspmsecureentries.a"
endif
