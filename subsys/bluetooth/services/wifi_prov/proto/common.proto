/*
 * Copyright (c) 2022 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 */
syntax = "proto2";

option java_multiple_files = true;
option java_package = "no.nordicsemi.android.wifi.provisioning";

enum OpCode {
  RESERVED      = 0;
  GET_STATUS    = 1;
  START_SCAN    = 2;
  STOP_SCAN     = 3;
  SET_CONFIG    = 4;
  FORGET_CONFIG = 5;
}

enum Status {
  SUCCESS                 = 0;
  INVALID_ARGUMENT        = 1;
  INVALID_PROTO           = 2;
  INTERNAL_ERROR          = 3;
}

enum ConnectionState {
  DISCONNECTED            = 0;
  AUTHENTICATION          = 1;
  ASSOCIATION             = 2;
  OBTAINING_IP            = 3;
  CONNECTED               = 4;
  CONNECTION_FAILED       = 5;
}

enum ConnectionFailureReason {
  AUTH_ERROR              = 0;
  NETWORK_NOT_FOUND       = 1;
  TIMEOUT                 = 2;
  FAIL_IP                 = 3;
  FAIL_CONN               = 4;
}

enum Band {
  BAND_ANY    = 0;
  BAND_2_4_GH = 1;
  BAND_5_GH   = 2;
}

enum AuthMode {
  OPEN                    = 0;
  WEP                     = 1;
  WPA_PSK                 = 2;
  WPA2_PSK                = 3;
  WPA_WPA2_PSK            = 4;
  WPA2_ENTERPRISE         = 5;
  WPA3_PSK                = 6;
  // New Zephyr WiFi security types (backward compatible)
  NONE                    = 7;
  PSK                     = 8;
  PSK_SHA256              = 9;
  SAE                     = 10;
  WAPI                    = 11;
  EAP                     = 12;
  WPA_AUTO_PERSONAL       = 13;
  DPP                     = 14;
  EAP_PEAP_MSCHAPV2       = 15;
  EAP_PEAP_GTC            = 16;
  EAP_TTLS_MSCHAPV2       = 17;
  EAP_PEAP_TLS            = 18;
  FT_PSK                  = 19;
  FT_SAE                  = 20;
  FT_EAP                  = 21;
  FT_EAP_SHA384           = 22;
  SAE_EXT_KEY             = 23;
}

message ScanParams {
  optional Band band              = 1 [default = BAND_ANY];
  optional bool passive           = 2 [default = false];
  optional uint32 period_ms       = 3 [default = 0];
  optional uint32 group_channels  = 4;
}

message WifiInfo {
  required bytes ssid     = 1;
  required bytes bssid    = 2;
  optional Band band      = 3;
  required uint32 channel = 4;
  optional AuthMode auth  = 5;
}
