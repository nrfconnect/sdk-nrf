# Copyright (c) 2023 Nordic Semiconductor
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
#

config NRF_CLOUD_LOG_DIRECT
	bool "nRF Cloud direct logging"
	default y
	depends on NRF_CLOUD_MQTT || NRF_CLOUD_REST || NRF_CLOUD_COAP
	select CBPRINTF_LIBC_SUBSTS if !NRF_CLOUD_LOG_BACKEND
	help
	  Enable direct log message transfer to the cloud. If
	  NRF_CLOUD_LOG_BACKEND is enabled, these messages will be
	  routed there, where buffering will occur. Otherwise, they will
	  be sent directly to the cloud, with the assumption that a valid
	  network connection is available.

menuconfig NRF_CLOUD_LOG_BACKEND
	bool "nRF Cloud logging system"
	depends on NRF_CLOUD_MQTT || NRF_CLOUD_REST
	depends on LOG_MODE_DEFERRED
	depends on !LOG_MODE_MINIMAL
	select RING_BUFFER
	help
	  If set, send Zephyr logging messages to the cloud. Log level
	  can be controlled from the cloud via the AWS shadow.

if NRF_CLOUD_LOG_BACKEND

config NRF_CLOUD_LOG_SEQ_ALWAYS
	bool "Always include the sequence number in log messages"
	default y
	help
	  If set, send the seq field regardless of whether the ts field
	  is set.  If not set, only send the seq field when ts is not
	  available.

config NRF_CLOUD_LOG_RING_BUF_SIZE
	int "Size of buffer for log output before network transfer"
	default 2048
	help
	  Set size in bytes for buffer for log output system to combine log
	  messages before it uploads to nRF Cloud.

backend = NRF_CLOUD
backend-str = nrf_cloud
source "subsys/logging/Kconfig.template.log_format_config"

endif # NRF_CLOUD_LOG_BACKEND

config NRF_CLOUD_LOG_OUTPUT_LEVEL
	int "Only log entries less than or equal to this will be sent"
	range 0 4
	default 1
	help
	  Set overall log level for nRF Cloud logging. Set to 0 to
	  disable. Applies to both NRF_CLOUD_LOG_BACKEND and NRF_CLOUD_LOG_DIRECT.
	  Log messages with a log level larger than this will be ignored.
	  Can be overridden at runtime from the cloud.

config NRF_CLOUD_LOG_BUF_SIZE
	int "Number of bytes to buffer in RAM before flushing"
	default 256
	help
	  Set size in bytes for buffer for log output system before it flushes.

module = NRF_CLOUD_LOG
module-str = nRF Cloud Log
source "subsys/logging/Kconfig.template.log_config"
