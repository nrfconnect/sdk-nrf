# nRF9160 GPS driver
#
# Copyright (c) 2019 Nordic Semiconductor
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
#

menuconfig NRF9160_GPS
	bool "nRF9160 GPS driver [experimental]"
	depends on NRF_MODEM_LIB
	# FPU_SHARING needs to be enabled if FPU is enabled, as other contexts
	# might also use the FPU.
	select FPU_SHARING if FPU
	help
	  Enable nRF9160 GPS driver.

if NRF9160_GPS

config NRF9160_GPS_DEV_NAME
	string "nRF9160 GPS device name"
	default "NRF9160_GPS"

config NRF9160_GPS_FIX_CHECK_INTERVAL
	int "Interval in seconds to check for GPS fix"
	default 1

config NRF9160_GPS_HANDLE_MODEM_CONFIGURATION
	bool "The GPS driver will handle modem configuration directly"
	depends on !LWM2M_CARRIER
	depends on AT_CMD
	depends on AT_CMD_PARSER
	default y
	help
	  Disabling this will cause the GPS driver to do no modem
	  configuration.  This is useful if you need to remove the
	  dependency on the at_cmd_host library from the GPS driver,
	  but it will require that some other part of the
	  application send the AT commands to configure the GPS
	  properly.

config NRF9160_GPS_PRIORITY_WINDOW_TIMEOUT_SEC
	int "Enable GPS priority window if the GPS is blocked for this duration"
	default 10
	help
	  This configuration sets the amount of time the GPS must be blocked by
	  LTE before requesting GPS priority. For GPS priority to be requested
	  after this timeout, the GPS must also be configured with the priority
	  flag enabled when starting it. When GPS priority is enabled, the
	  modem grants the GPS prioritized access to the radio at the cost of
	  LTE activity. If the value of this option is kept low, GPS priority is
	  requested at an earlier point of time after the GPS is actively
	  blocked by LTE activity. This means that data traffic scheduled during
	  a GPS search is more likely to be blocked by the GPS. Increasing the
	  value of this option will favor data traffic since the GPS will be
	  blocked for a longer duration before GPS priority is requested.
	  Note that GPS priority might not be granted by the modem, even though
	  it is requested by the driver.

if NRF9160_GPS_HANDLE_MODEM_CONFIGURATION

choice NRF9160_GPS_ANTENNA
	prompt "GPS antenna selection"
	default NRF9160_GPS_ANTENNA_ONBOARD

config NRF9160_GPS_ANTENNA_ONBOARD
	bool "Onboard antenna"

config NRF9160_GPS_ANTENNA_EXTERNAL
	bool "External antenna"

endchoice

config NRF9160_GPS_SET_MAGPIO
	bool "Let the driver set MAGPIO configuration"
	default y if BOARD_NRF9160DK_NRF9160NS || BOARD_THINGY91_NRF9160NS

if NRF9160_GPS_SET_MAGPIO

config NRF9160_GPS_MAGPIO_STRING
	string "MAGPIO string"
	default "AT\%XMAGPIO=1,0,0,1,1,1565,1586" if BOARD_NRF9160DK_NRF9160NS
	default "AT\%XMAGPIO=1,1,1,7,1,746,803,2,698,748,2,1710,2200,3,824,894,4,880,960,5,791,849,7,1565,1586" if BOARD_THINGY91_NRF9160NS

endif # NRF9160_GPS_SET_MAGPIO

config NRF9160_GPS_SET_COEX0
	bool "Let the driver set COEX0 configuration"
	default y if BOARD_NRF9160DK_NRF9160NS || BOARD_THINGY91_NRF9160NS

if NRF9160_GPS_SET_COEX0

config NRF9160_GPS_COEX0_STRING
	string "COEX0 string"
	default "AT\%XCOEX0=1,1,1565,1586" if (BOARD_NRF9160DK_NRF9160NS || BOARD_THINGY91_NRF9160NS) && NRF9160_GPS_ANTENNA_ONBOARD
	default "AT\%XCOEX0" if (BOARD_NRF9160DK_NRF9160NS || BOARD_THINGY91_NRF9160NS) && NRF9160_GPS_ANTENNA_EXTERNAL

endif # NRF9160_GPS_SET_COEX0

endif # NRF9160_GPS_HANDLE_MODEM_CONFIGURATION

menu "NMEA strings"
config NRF9160_GPS_NMEA_GSV
	bool "Enable GSV strings"

config NRF9160_GPS_NMEA_GSA
	bool "Enable GSA strings"

config NRF9160_GPS_NMEA_GLL
	bool "Enable GLL strings"

config NRF9160_GPS_NMEA_GGA
	bool "Enable GGA strings"
	default y

config NRF9160_GPS_NMEA_RMC
	bool "Enable RMC strings"
endmenu

config NRF9160_GPS_INIT_PRIO
	int "Initialization priority"
	default 90

config NRF9160_GPS_THREAD_PRIORITY
	int "Thread (preemtible) priority"
	default 10

config NRF9160_GPS_THREAD_STACK_SIZE
	int "Thread stack size"
	default 2048

module = NRF9160_GPS
module-str = nRF9160 GPS driver
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

endif #NRF9160_GPS
