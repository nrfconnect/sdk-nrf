# Copyright (c) 2022 Nordic Semiconductor
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
#

# Redefine this symbol here and give it a non-zero default value
# so that the Zephyr system heap is enabled, the offloading layer
# depends on it
config HEAP_MEM_POOL_SIZE
	int
	default 512

config NRF_MODEM_LIB_SYS_INIT
	bool "Initialize during SYS_INIT"
	default y
	help
	  Initialize the Modem library automatically during the SYS_INIT sequence.
	  Please note that initialization is synchronous and can take up to one
	  minute in case the modem firmware is updated.

menuconfig NRF_MODEM_LIB_TRACE
	bool "Tracing" if !NRF_MODEM_LIB_TRACE_ENABLED
	default y if NRF_MODEM_LIB_TRACE_ENABLED
	help
	  When enabled, a portion of RAM (called Trace region) will be shared with the modem to receive modem's trace data.
	  The size of the Trace region is defined by the NRF_MODEM_LIB_SHMEM_TRACE_SIZE option.
	  Trace data is output on the chosen trace backend.

if NRF_MODEM_LIB_TRACE

# Add trace backends
rsource "trace_backends/Kconfig"

config NRF_MODEM_LIB_TRACE_STACK_SIZE
	int "Modem trace thread stack size"
	default 768 if SIZE_OPTIMIZATIONS
	default 1024

config NRF_MODEM_LIB_TRACE_LEVEL_OVERRIDE
	bool "Override trace level"
	default y

if NRF_MODEM_LIB_TRACE_LEVEL_OVERRIDE

choice NRF_MODEM_LIB_TRACE_LEVEL_CHOICE
	prompt "Trace level"

config NRF_MODEM_LIB_TRACE_LEVEL_FULL
	bool "Full"
config NRF_MODEM_LIB_TRACE_LEVEL_LTE_AND_IP
	bool "IP and LTE"
config NRF_MODEM_LIB_TRACE_LEVEL_IP_ONLY
	bool "IP only"
config NRF_MODEM_LIB_TRACE_LEVEL_COREDUMP_ONLY
	bool "Coredump only"
config NRF_MODEM_LIB_TRACE_LEVEL_OFF
	bool "Off"

endchoice

config NRF_MODEM_LIB_TRACE_LEVEL
	int
	default 0 if NRF_MODEM_LIB_TRACE_LEVEL_OFF
	default 1 if NRF_MODEM_LIB_TRACE_LEVEL_COREDUMP_ONLY
	default 2 if NRF_MODEM_LIB_TRACE_LEVEL_FULL
	default 4 if NRF_MODEM_LIB_TRACE_LEVEL_IP_ONLY
	default 5 if NRF_MODEM_LIB_TRACE_LEVEL_LTE_AND_IP

endif # NRF_MODEM_LIB_TRACE_LEVEL_OVERRIDE

config NRF_MODEM_LIB_TRACE_THREAD_PRIO_OVERRIDE
	bool "Override trace thread priority"

config NRF_MODEM_LIB_TRACE_THREAD_PRIO
	int "Priority of the trace processing thread"
	depends on NRF_MODEM_LIB_TRACE_THREAD_PRIO_OVERRIDE
	default 0

config NRF_MODEM_LIB_TRACE_BACKEND_BITRATE
	bool "Measure trace backend bitrate"

if NRF_MODEM_LIB_TRACE_BACKEND_BITRATE

config NRF_MODEM_LIB_TRACE_BACKEND_BITRATE_PERIOD_MS
	int "Rolling interval where the bitrate is measured (millisec)"
	default 1000

config NRF_MODEM_LIB_TRACE_BACKEND_BITRATE_LOG
	depends on LOG
	bool "Log trace backend bitrate"

if NRF_MODEM_LIB_TRACE_BACKEND_BITRATE_LOG

config NRF_MODEM_LIB_TRACE_BACKEND_BITRATE_LOG_PERIOD_MS
	int "Bitrate log interval (millisec)"
	default 5000

endif # NRF_MODEM_LIB_TRACE_BACKEND_BITRATE_LOG

endif # NRF_MODEM_LIB_TRACE_BACKEND_BITRATE

config NRF_MODEM_LIB_TRACE_BITRATE_LOG
	depends on NRF_MODEM_LIB_LOG_LEVEL_INF || NRF_MODEM_LIB_LOG_LEVEL_DBG
	bool "Log trace bitrate"

if NRF_MODEM_LIB_TRACE_BITRATE_LOG

config NRF_MODEM_LIB_TRACE_BITRATE_LOG_PERIOD_MS
	int "Bitrate log interval (millisec)"
	default 1000

endif # NRF_MODEM_LIB_TRACE_BITRATE_LOG

endif # NRF_MODEM_LIB_TRACE

menu "Interrupt priorities"

DT_IPC := $(dt_nodelabel_path,ipc)

config NRF_MODEM_LIB_IPC_IRQ_PRIO_OVERRIDE
	bool "Override IPC IRQ priority"
	help
	  Override the IPC IRQ priority set in device tree

config NRF_MODEM_LIB_IPC_IRQ_PRIO
	int "IPC IRQ priority" if NRF_MODEM_LIB_IPC_IRQ_PRIO_OVERRIDE
	default $(dt_node_array_prop_int,$(DT_IPC),interrupts,1) if !NRF_MODEM_LIB_IPC_IRQ_PRIO_OVERRIDE
endmenu

choice NRF_MODEM_LIB_ON_FAULT
	prompt "Action on modem fault"
	default NRF_MODEM_LIB_ON_FAULT_DO_NOTHING

config NRF_MODEM_LIB_ON_FAULT_DO_NOTHING
	bool "Do nothing"
	help
	  Let the fault handler log the fault and return.

config NRF_MODEM_LIB_ON_FAULT_RESET_MODEM
	bool "Reset modem"
	help
	  Let the fault handler reset the modem.

config NRF_MODEM_LIB_ON_FAULT_APPLICATION_SPECIFIC
	bool "Application defined"
	help
	  Let the application define the fault handler function.

endchoice # NRF_MODEM_LIB_ON_FAULT

comment "Heap and buffers"

config NRF_MODEM_LIB_HEAP_SIZE
	int "Library heap size"
	default 1024
	range 512 4096
	help
	  Size of the library heap.
	  This heap is allocated from the application's RAM region.

config NRF_MODEM_LIB_SHMEM_CTRL_SIZE
	hex
	default NRF_MODEM_SHMEM_CTRL_SIZE
	help
	  Size of the shared memory area used for control structures.
	  This is a constant for a given library build, and is exported
	  by the library via NRF_MODEM_SHMEM_CTRL_SIZE.

config NRF_MODEM_LIB_SHMEM_TX_SIZE
	int "TX region size"
	range 1024 32768
	# Set default to 8k plus Zephyr heap overhead (128 bytes)
	default 8320
	help
	  Size of the shared memory region owned by the application. This area holds all outgoing
	  data from the application to the modem, e.g. buffers passed to `send()`, AT commands.
	  The size must be a multiple of four to keep the memory partitions word-aligned.

config NRF_MODEM_LIB_SHMEM_RX_SIZE
	int "RX region size"
	range 2488 32768
	default 8192
	help
	  Size of the shared memory region owned by the modem.
	  This area holds all incoming data from the modem, plus the modem's own control structures.
	  The size must be a multiple of four to keep the memory partitions word-aligned.

config NRF_MODEM_LIB_SHMEM_TRACE_SIZE_OVERRIDE
	bool "Custom trace region size"
	depends on NRF_MODEM_LIB_TRACE
	help
	  Override the default size of the Trace region (16384 bytes).

config NRF_MODEM_LIB_SHMEM_TRACE_SIZE
	int "Trace region size" if NRF_MODEM_LIB_SHMEM_TRACE_SIZE_OVERRIDE
	default 16384 if NRF_MODEM_LIB_TRACE
	default 0
	help
	  Size of the shared memory region used to receive modem traces.

config NRF_MODEM_LIB_SENDMSG_BUF_SIZE
	int "Size of the sendmsg intermediate buffer"
	default 128
	help
	  Size of an intermediate buffer used by `sendmsg` to repack data and
	  therefore limit the number of `sendto` calls. The buffer is created
	  in a static memory, so it does not impact stack/heap usage. In case
	  the repacked message would not fit into the buffer, `sendmsg` sends
	  each message part separately.

menuconfig NRF_MODEM_LIB_MEM_DIAG
	bool "Memory diagnostic"
	select SYS_HEAP_LISTENER
	select SYS_HEAP_RUNTIME_STATS
	help
	  Keep track of the library and shared memory heap usage.

if (NRF_MODEM_LIB_MEM_DIAG && LOG)

config NRF_MODEM_LIB_MEM_DIAG_ALLOC
	bool "Log all memory allocations"
	help
	   Log all nrf_modem_os_alloc(), nrf_modem_os_free()
	   nrf_modem_os_shm_tx_alloc() and nrf_modem_os_shm_tx_free() calls.

config NRF_MODEM_LIB_MEM_DIAG_DUMP
	bool "Periodically log shared memory and heap statistics"
	help
	  Schedule a periodic system workqueue task to print
	  the library and shared memory heap runtime statistics.

config NRF_MODEM_LIB_MEM_DIAG_DUMP_PERIOD_MS
	depends on NRF_MODEM_LIB_MEM_DIAG_DUMP
	int "Period (millisec)"
	default 20000

endif

comment "Logging"

config NRF_MODEM_LIB_LOG_FW_VERSION_UUID
	depends on LOG
	bool "Log FW version and UUID during initialization"

module = NRF_MODEM_LIB
module-str = Modem library
source "subsys/logging/Kconfig.template.log_config"

comment "Deprecated"

config NRF_MODEM_LIB_TRACE_ENABLED
	bool "Enable proprietary traces (DEPRECATED)"
	help
	  Deprecated, use NRF_MODEM_LIB_TRACE instead.
	  When enabled, a portion of RAM (called Trace region) will be shared with the modem to receive modem's trace data.
	  The size of the Trace region is defined by the NRF_MODEM_LIB_SHMEM_TRACE_SIZE option.
	  Trace data is output on the chosen trace backend.
